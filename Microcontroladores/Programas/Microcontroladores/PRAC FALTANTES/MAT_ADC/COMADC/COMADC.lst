

HI-TECH Software PIC PRO Macro Assembler V9.82 build 9453 
                                                                                               Tue Jun 07 00:07:30 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 9453
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,delta=2
    11                           	psect	text332,local,class=CODE,delta=2
    12                           	psect	text337,local,class=CODE,delta=2
    13                           	psect	text342,local,class=CODE,delta=2
    14                           	psect	text343,local,class=CODE,delta=2
    15                           	psect	text345,local,class=CODE,delta=2
    16                           	psect	pa_nodes,global,class=CODE,delta=2
    17                           	dabs	1,0x7E,2
    18  000A                     	;#
    19                           
    20                           	psect	config
    21  2007  E0F4               	dw	57588	;#
    22  2008  FFFF               	dw	65535	;#
    23                           
    24                           	psect	strings
    25  0003                     __pstrings:	
    26  0003                     stringtab:	
    27                           ;	global	stringdir,stringtab,__stringbase
    28                           
    29  0003                     stringcode:	
    30                           ;	String table - string pointers are 1 byte each
    31                           
    32  0003                     stringdir:	
    33  0003  3000               	movlw	high stringdir
    34  0004  008A               	movwf	10
    35  0005  0804               	movf	4,w
    36  0006  0A84               	incf	4,f
    37  0007  0782               	addwf	2,f
    38  0008                     __stringbase:	
    39  0008  3400               	retlw	0
    40  0009                     _dpowers:	
    41  0009  3401               	retlw	1
    42  000A  3400               	retlw	0
    43  000B  340A               	retlw	10
    44  000C  3400               	retlw	0
    45  000D  3464               	retlw	100
    46  000E  3400               	retlw	0
    47  000F  34E8               	retlw	232
    48  0010  3403               	retlw	3
    49  0011  3410               	retlw	16
    50  0012  3427               	retlw	39
    51  001F                     _ADCON0	set	31
    52  001E                     _ADRESH	set	30
    53  0017                     _CCP1CON	set	23
    54  001D                     _CCP2CON	set	29
    55  0015                     _CCPR1L	set	21
    56  001B                     _CCPR2L	set	27
    57  0008                     _PORTD	set	8
    58  001A                     _RCREG	set	26
    59  0018                     _RCSTA	set	24
    60  0012                     _T2CON	set	18
    61  0001                     _TMR0	set	1
    62  0019                     _TXREG	set	25
    63  00F9                     _GO_DONE	set	249
    64  0038                     _RC0	set	56
    65  003B                     _RC3	set	59
    66  003C                     _RC4	set	60
    67  0065                     _RCIF	set	101
    68  005A                     _T0IF	set	90
    69  0064                     _TXIF	set	100
    70  0081                     _OPTION_REG	set	129
    71  0092                     _PR2	set	146
    72  0099                     _SPBRG	set	153
    73  0085                     _TRISA	set	133
    74  0086                     _TRISB	set	134
    75  0087                     _TRISC	set	135
    76  0088                     _TRISD	set	136
    77  0089                     _TRISE	set	137
    78  0098                     _TXSTA	set	152
    79  04FF                     _ADFM	set	1279
    80  043E                     _TRISC6	set	1086
    81  043F                     _TRISC7	set	1087
    82  0188                     _ANSEL	set	392
    83  0189                     _ANSELH	set	393
    84  0187                     _BAUDCTL	set	391
    85  009E                     _ADRESL	set	158
    86  0013                     STR_1:	
    87  0013  3425               	retlw	37	;'%'
    88  0014  3464               	retlw	100	;'d'
    89  0015  3420               	retlw	32	;' '
    90  0016  3400               	retlw	0
    91  0013                     
    92                           	psect	cinit
    93  046A                     start_initialization:	
    94                           
    95                           ; Clear objects allocated to BANK0
    96  046A  01A0               	clrf	__pbssBANK0& (0+127)
    97  046B  01A1               	clrf	(__pbssBANK0+1)& (0+127)
    98  046C  01A2               	clrf	(__pbssBANK0+2)& (0+127)
    99  046D  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   100  046E  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   101  046F  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   102  0470  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   103  0471  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   104  0472  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   105  0473  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   106  0474  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   107  0475  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   108  0476  01AC               	clrf	(__pbssBANK0+12)& (0+127)
   109  0477  01AD               	clrf	(__pbssBANK0+13)& (0+127)
   110  0478  01AE               	clrf	(__pbssBANK0+14)& (0+127)
   111  0479                     end_of_initialization:	
   112                           ;End of C runtime variable initialization code
   113                           
   114  0479  0183               	clrf	3
   115  047A  120A  118A  2C7D   	ljmp	_main	;jump to C main() function
   116                           
   117                           	psect	bssBANK0
   118  0020                     __pbssBANK0:	
   119  0020                     _pwm1:	
   120  0020                     	ds	3
   121  0023                     _pwm2:	
   122  0023                     	ds	3
   123  0026                     _pwm3:	
   124  0026                     	ds	3
   125  0029                     _vadc1:	
   126  0029                     	ds	2
   127  002B                     _vadc2:	
   128  002B                     	ds	2
   129  002D                     _vadc3:	
   130  002D                     	ds	2
   131                           
   132                           	psect	cstackCOMMON
   133  0070                     __pcstackCOMMON:	
   134  0070                     ?_lcd_init:	
   135  0070                     ?_ADC:	
   136                           ; 0 bytes @ 0x0
   137                           
   138  0070                     ?_pause:	
   139                           ; 0 bytes @ 0x0
   140                           
   141  0070                     ?_PWM:	
   142                           ; 0 bytes @ 0x0
   143                           
   144  0070                     ?_msecbase:	
   145                           ; 0 bytes @ 0x0
   146                           
   147  0070                     ??_msecbase:	
   148                           ; 0 bytes @ 0x0
   149                           
   150  0070                     ?_putch:	
   151                           ; 0 bytes @ 0x0
   152                           
   153  0070                     ??_putch:	
   154                           ; 0 bytes @ 0x0
   155                           
   156  0070                     ??_getch:	
   157                           ; 0 bytes @ 0x0
   158                           
   159  0070                     ?_init_comms:	
   160                           ; 0 bytes @ 0x0
   161                           
   162  0070                     ??_init_comms:	
   163                           ; 0 bytes @ 0x0
   164                           
   165  0070                     ?_main:	
   166                           ; 0 bytes @ 0x0
   167                           
   168  0070                     ?_lcd_write:	
   169                           ; 0 bytes @ 0x0
   170                           
   171  0070                     ?_lcd_clear:	
   172                           ; 0 bytes @ 0x0
   173                           
   174  0070                     ?_getch:	
   175                           ; 0 bytes @ 0x0
   176                           
   177  0070                     ?___lwdiv:	
   178                           ; 1 bytes @ 0x0
   179                           
   180  0070                     ?___ftpack:	
   181                           ; 2 bytes @ 0x0
   182                           
   183  0070                     putch@byte:	
   184                           ; 3 bytes @ 0x0
   185                           
   186  0070                     pause@usvalue:	
   187                           ; 1 bytes @ 0x0
   188                           
   189  0070                     ___lwdiv@divisor:	
   190                           ; 2 bytes @ 0x0
   191                           
   192  0070                     ___ftpack@arg:	
   193                           ; 2 bytes @ 0x0
   194                           
   195                           
   196                           ; 3 bytes @ 0x0
   197  0070                     	ds	2
   198  0072                     ??_pause:	
   199  0072                     pause@x:	
   200                           ; 0 bytes @ 0x2
   201                           
   202  0072                     ___lwdiv@dividend:	
   203                           ; 2 bytes @ 0x2
   204                           
   205                           
   206                           ; 2 bytes @ 0x2
   207  0072                     	ds	1
   208  0073                     ___ftpack@exp:	
   209                           
   210                           ; 1 bytes @ 0x3
   211  0073                     	ds	1
   212  0074                     ??_PWM:	
   213  0074                     ??_lcd_write:	
   214                           ; 0 bytes @ 0x4
   215                           
   216  0074                     ??___lwdiv:	
   217                           ; 0 bytes @ 0x4
   218                           
   219  0074                     lcd_write@c:	
   220                           ; 0 bytes @ 0x4
   221                           
   222  0074                     ___ftpack@sign:	
   223                           ; 1 bytes @ 0x4
   224                           
   225  0074                     ___lwdiv@quotient:	
   226                           ; 1 bytes @ 0x4
   227                           
   228                           
   229                           ; 2 bytes @ 0x4
   230  0074                     	ds	1
   231  0075                     ??_lcd_init:	
   232  0075                     ??___ftpack:	
   233                           ; 0 bytes @ 0x5
   234                           
   235  0075                     ??_lcd_clear:	
   236                           ; 0 bytes @ 0x5
   237                           
   238                           
   239                           ; 0 bytes @ 0x5
   240  0075                     	ds	1
   241  0076                     ___lwdiv@counter:	
   242                           
   243                           ; 1 bytes @ 0x6
   244  0076                     	ds	1
   245  0077                     ?___lwmod:	
   246  0077                     ___lwmod@divisor:	
   247                           ; 2 bytes @ 0x7
   248                           
   249                           
   250                           ; 2 bytes @ 0x7
   251  0077                     	ds	1
   252  0078                     ?___ftmul:	
   253  0078                     ?___lwtoft:	
   254                           ; 3 bytes @ 0x8
   255                           
   256  0078                     ___lwtoft@c:	
   257                           ; 3 bytes @ 0x8
   258                           
   259  0078                     ___ftmul@f1:	
   260                           ; 2 bytes @ 0x8
   261                           
   262                           
   263                           ; 3 bytes @ 0x8
   264  0078                     	ds	1
   265  0079                     ___lwmod@dividend:	
   266                           
   267                           ; 2 bytes @ 0x9
   268  0079                     	ds	2
   269  007B                     ??___lwmod:	
   270  007B                     ??___lwtoft:	
   271                           ; 0 bytes @ 0xB
   272                           
   273  007B                     ___lwmod@counter:	
   274                           ; 0 bytes @ 0xB
   275                           
   276  007B                     ___ftmul@f2:	
   277                           ; 1 bytes @ 0xB
   278                           
   279                           
   280                           ; 3 bytes @ 0xB
   281  007B                     	ds	1
   282  007C                     ?_printf:	
   283                           
   284                           ; 2 bytes @ 0xC
   285  007C                     	ds	2
   286  007E                     ??_main:	
   287                           
   288                           	psect	cstackBANK0
   289  002F                     __pcstackBANK0:	
   290                           ; 0 bytes @ 0xE
   291                           
   292  002F                     ??_printf:	
   293  002F                     ??___ftmul:	
   294                           ; 0 bytes @ 0x0
   295                           
   296                           
   297                           ; 0 bytes @ 0x0
   298  002F                     	ds	2
   299  0031                     printf@ap:	
   300                           
   301                           ; 1 bytes @ 0x2
   302  0031                     	ds	1
   303  0032                     printf@flag:	
   304  0032                     ___ftmul@exp:	
   305                           ; 1 bytes @ 0x3
   306                           
   307                           
   308                           ; 1 bytes @ 0x3
   309  0032                     	ds	1
   310  0033                     printf@f:	
   311  0033                     ___ftmul@f3_as_product:	
   312                           ; 1 bytes @ 0x4
   313                           
   314                           
   315                           ; 3 bytes @ 0x4
   316  0033                     	ds	1
   317  0034                     printf@prec:	
   318                           
   319                           ; 1 bytes @ 0x5
   320  0034                     	ds	1
   321  0035                     printf@_val:	
   322                           
   323                           ; 4 bytes @ 0x6
   324  0035                     	ds	1
   325  0036                     ___ftmul@cntr:	
   326                           
   327                           ; 1 bytes @ 0x7
   328  0036                     	ds	1
   329  0037                     ___ftmul@sign:	
   330                           
   331                           ; 1 bytes @ 0x8
   332  0037                     	ds	1
   333  0038                     ??_ADC:	
   334                           
   335                           ; 0 bytes @ 0x9
   336  0038                     	ds	1
   337  0039                     printf@c:	
   338                           
   339                           ; 1 bytes @ 0xA
   340  0039                     	ds	1
   341                           
   342                           	psect	maintext
   343  047D                     __pmaintext:	
   344 ;;Data sizes: Strings 4, constant 10, data 0, bss 15, persistent 0 stack 0
   345 ;;Auto spaces:   Size  Autos    Used
   346 ;; COMMON          14     14      14
   347 ;; BANK0           80     11      26
   348 ;; BANK1           80      0       0
   349 ;; BANK3           96      0       0
   350 ;; BANK2           96      0       0
   351 ;;
   352 ;; Pointer list with targets:
   353 ;; ?___ftpack	float  size(1) Largest target is 0
   354 ;;
   355 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   356 ;;
   357 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   358 ;;
   359 ;; ?___ftmul	float  size(1) Largest target is 0
   360 ;;
   361 ;; ?___lwtoft	float  size(1) Largest target is 0
   362 ;;
   363 ;; printf@f	PTR const unsigned char  size(1) Largest target is 4
   364 ;;		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 
   365 ;;
   366 ;; ?_printf	int  size(1) Largest target is 0
   367 ;;
   368 ;; printf@ap	PTR void [1] size(1) Largest target is 2
   369 ;;		 -> ?_printf(COMMON[2]), 
   370 ;;
   371 ;; S1852$_cp	PTR const unsigned char  size(1) Largest target is 0
   372 ;;
   373 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   374 ;;
   375 ;;
   376 ;; Critical Paths under _main in COMMON
   377 ;;
   378 ;;   _main->_printf
   379 ;;   _lcd_init->_lcd_write
   380 ;;   _lcd_clear->_lcd_write
   381 ;;   _lcd_write->_pause
   382 ;;   _PWM->_pause
   383 ;;   _ADC->___ftmul
   384 ;;   ___lwtoft->___ftpack
   385 ;;   ___ftmul->___ftpack
   386 ;;   _printf->___lwmod
   387 ;;   ___lwmod->___lwdiv
   388 ;;
   389 ;; Critical Paths under _main in BANK0
   390 ;;
   391 ;;   _main->_printf
   392 ;;   _ADC->___ftmul
   393 ;;
   394 ;; Critical Paths under _main in BANK1
   395 ;;
   396 ;;   None.
   397 ;;
   398 ;; Critical Paths under _main in BANK3
   399 ;;
   400 ;;   None.
   401 ;;
   402 ;; Critical Paths under _main in BANK2
   403 ;;
   404 ;;   None.
   405 ;;
   406 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   407 ;;
   408 ;;
   409 ;;Call Graph Tables:
   410 ;;
   411 ;; ---------------------------------------------------------------------------------
   412 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   413 ;; ---------------------------------------------------------------------------------
   414 ;; (0) _main                                                 0     0      0    1928
   415 ;;                           _lcd_init
   416 ;;                         _init_comms
   417 ;;                              _getch
   418 ;;                                _ADC
   419 ;;                             _printf
   420 ;;                              _pause
   421 ;;                                _PWM
   422 ;; ---------------------------------------------------------------------------------
   423 ;; (1) _lcd_init                                             1     1      0     295
   424 ;;                                              5 COMMON     1     1      0
   425 ;;                              _pause
   426 ;;                          _lcd_write
   427 ;;                          _lcd_clear
   428 ;; ---------------------------------------------------------------------------------
   429 ;; (2) _lcd_clear                                            0     0      0     136
   430 ;;                          _lcd_write
   431 ;;                              _pause
   432 ;; ---------------------------------------------------------------------------------
   433 ;; (3) _lcd_write                                            1     1      0      90
   434 ;;                                              4 COMMON     1     1      0
   435 ;;                              _pause
   436 ;; ---------------------------------------------------------------------------------
   437 ;; (1) _PWM                                                  2     2      0      46
   438 ;;                                              4 COMMON     2     2      0
   439 ;;                              _pause
   440 ;; ---------------------------------------------------------------------------------
   441 ;; (1) _ADC                                                  1     1      0     812
   442 ;;                                              9 BANK0      1     1      0
   443 ;;                           ___lwtoft
   444 ;;                            ___ftmul
   445 ;;                              _pause
   446 ;; ---------------------------------------------------------------------------------
   447 ;; (2) ___lwtoft                                             3     0      3     231
   448 ;;                                              8 COMMON     3     0      3
   449 ;;                           ___ftpack
   450 ;; ---------------------------------------------------------------------------------
   451 ;; (2) ___ftmul                                             15     9      6     535
   452 ;;                                              8 COMMON     6     0      6
   453 ;;                                              0 BANK0      9     9      0
   454 ;;                           ___ftpack
   455 ;; ---------------------------------------------------------------------------------
   456 ;; (2) _pause                                                4     2      2      46
   457 ;;                                              0 COMMON     4     2      2
   458 ;;                           _msecbase
   459 ;; ---------------------------------------------------------------------------------
   460 ;; (1) _printf                                              13    11      2     729
   461 ;;                                             12 COMMON     2     0      2
   462 ;;                                              0 BANK0     11    11      0
   463 ;;                              _putch
   464 ;;                            ___lwdiv
   465 ;;                            ___lwmod
   466 ;; ---------------------------------------------------------------------------------
   467 ;; (3) ___ftpack                                             8     3      5     209
   468 ;;                                              0 COMMON     8     3      5
   469 ;; ---------------------------------------------------------------------------------
   470 ;; (2) ___lwmod                                              5     1      4     159
   471 ;;                                              7 COMMON     5     1      4
   472 ;;                            ___lwdiv (ARG)
   473 ;; ---------------------------------------------------------------------------------
   474 ;; (2) ___lwdiv                                              7     3      4     162
   475 ;;                                              0 COMMON     7     3      4
   476 ;; ---------------------------------------------------------------------------------
   477 ;; (3) _msecbase                                             0     0      0       0
   478 ;; ---------------------------------------------------------------------------------
   479 ;; (1) _init_comms                                           0     0      0       0
   480 ;; ---------------------------------------------------------------------------------
   481 ;; (1) _getch                                                0     0      0       0
   482 ;; ---------------------------------------------------------------------------------
   483 ;; (2) _putch                                                1     1      0      22
   484 ;;                                              0 COMMON     1     1      0
   485 ;; ---------------------------------------------------------------------------------
   486 ;; Estimated maximum stack depth 3
   487 ;; ---------------------------------------------------------------------------------
   488 ;; Call Graph Graphs:
   489 ;; _main (ROOT)
   490 ;;   _lcd_init
   491 ;;     _pause
   492 ;;       _msecbase
   493 ;;     _lcd_write
   494 ;;       _pause
   495 ;;         _msecbase
   496 ;;     _lcd_clear
   497 ;;       _lcd_write
   498 ;;         _pause
   499 ;;           _msecbase
   500 ;;       _pause
   501 ;;         _msecbase
   502 ;;   _init_comms
   503 ;;   _getch
   504 ;;   _ADC
   505 ;;     ___lwtoft
   506 ;;       ___ftpack
   507 ;;     ___ftmul
   508 ;;       ___ftpack
   509 ;;     _pause
   510 ;;       _msecbase
   511 ;;   _printf
   512 ;;     _putch
   513 ;;     ___lwdiv
   514 ;;     ___lwmod
   515 ;;       ___lwdiv (ARG)
   516 ;;   _pause
   517 ;;     _msecbase
   518 ;;   _PWM
   519 ;;     _pause
   520 ;;       _msecbase
   521 ;;
   522 ;; Address spaces:
   523 ;;Name               Size   Autos  Total    Cost      Usage
   524 ;;BITCOMMON            E      0       0       0        0.0%
   525 ;;EEDATA             100      0       0       0        0.0%
   526 ;;NULL                 0      0       0       0        0.0%
   527 ;;CODE                 0      0       0       0        0.0%
   528 ;;COMMON               E      E       E       1      100.0%
   529 ;;BITSFR0              0      0       0       1        0.0%
   530 ;;SFR0                 0      0       0       1        0.0%
   531 ;;BITSFR1              0      0       0       2        0.0%
   532 ;;SFR1                 0      0       0       2        0.0%
   533 ;;STACK                0      0       5       2        0.0%
   534 ;;ABS                  0      0      28       3        0.0%
   535 ;;BITBANK0            50      0       0       4        0.0%
   536 ;;BITSFR3              0      0       0       4        0.0%
   537 ;;SFR3                 0      0       0       4        0.0%
   538 ;;BANK0               50      B      1A       5       32.5%
   539 ;;BITSFR2              0      0       0       5        0.0%
   540 ;;SFR2                 0      0       0       5        0.0%
   541 ;;BITBANK1            50      0       0       6        0.0%
   542 ;;BANK1               50      0       0       7        0.0%
   543 ;;BITBANK3            60      0       0       8        0.0%
   544 ;;BANK3               60      0       0       9        0.0%
   545 ;;BITBANK2            60      0       0      10        0.0%
   546 ;;BANK2               60      0       0      11        0.0%
   547 ;;DATA                 0      0      2D      12        0.0%
   548                           
   549                           
   550 ;; *************** function _main *****************
   551 ;; Defined at:
   552 ;;		line 71 in file "C:\Users\Jorge\OneDrive\Escritorio\Entregar\MAT_ADC\COMADC\COMADC.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;		None
   555 ;; Auto vars:     Size  Location     Type
   556 ;;		None
   557 ;; Return value:  Size  Location     Type
   558 ;;		None               void
   559 ;; Registers used:
   560 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   561 ;; Tracked objects:
   562 ;;		On entry : 17F/0
   563 ;;		On exit  : 11F/0
   564 ;;		Unchanged: FFE80/0
   565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   566 ;;      Params:         0       0       0       0       0
   567 ;;      Locals:         0       0       0       0       0
   568 ;;      Temps:          0       0       0       0       0
   569 ;;      Totals:         0       0       0       0       0
   570 ;;Total ram usage:        0 bytes
   571 ;; Hardware stack levels required when called:    5
   572 ;; This function calls:
   573 ;;		_lcd_init
   574 ;;		_init_comms
   575 ;;		_getch
   576 ;;		_ADC
   577 ;;		_printf
   578 ;;		_pause
   579 ;;		_PWM
   580 ;; This function is called by:
   581 ;;		Startup code after reset
   582 ;; This function uses a non-reentrant model
   583 ;;
   584  047D                     _main:	
   585                           
   586                           ;COMADC.c: 73: ANSEL = 0x60;
   587                           
   588                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   589  047D  3060               	movlw	96
   590  047E  1683               	bsf	3,5	;RP0=1, select bank3
   591  047F  1703               	bsf	3,6	;RP1=1, select bank3
   592  0480  0088               	movwf	8	;volatile
   593                           
   594                           ;COMADC.c: 74: ANSELH = 0x00;
   595  0481  0189               	clrf	9	;volatile
   596                           
   597                           ;COMADC.c: 75: TRISB = 0xFF;
   598  0482  30FF               	movlw	255
   599  0483  1303               	bcf	3,6	;RP1=0, select bank1
   600  0484  0086               	movwf	6	;volatile
   601                           
   602                           ;COMADC.c: 76: TRISA = 0x00;
   603  0485  0185               	clrf	5	;volatile
   604                           
   605                           ;COMADC.c: 78: TRISD = 0x00;
   606  0486  0188               	clrf	8	;volatile
   607                           
   608                           ;COMADC.c: 79: TRISC = 0x00;
   609  0487  0187               	clrf	7	;volatile
   610                           
   611                           ;COMADC.c: 80: TRISE = 0x07;
   612  0488  3007               	movlw	7
   613  0489  0089               	movwf	9	;volatile
   614                           
   615                           ;COMADC.c: 81: T2CON = 0x07;
   616  048A  1283               	bcf	3,5	;RP0=0, select bank0
   617  048B  0092               	movwf	18	;volatile
   618                           
   619                           ;COMADC.c: 82: PR2 = 0xFF;
   620  048C  30FF               	movlw	255
   621  048D  1683               	bsf	3,5	;RP0=1, select bank1
   622  048E  0092               	movwf	18	;volatile
   623                           
   624                           ;COMADC.c: 84: CCPR1L = 0x80;
   625  048F  3080               	movlw	128
   626  0490  1283               	bcf	3,5	;RP0=0, select bank0
   627  0491  0095               	movwf	21	;volatile
   628                           
   629                           ;COMADC.c: 85: CCP1CON = 0x0C;
   630  0492  300C               	movlw	12
   631  0493  0097               	movwf	23	;volatile
   632                           
   633                           ;COMADC.c: 87: lcd_init();
   634  0494  120A  118A  271D   	fcall	_lcd_init
      +       120A  118A         
   635                           
   636                           ;COMADC.c: 89: init_comms();
   637  0499  120A  118A  245C   	fcall	_init_comms
      +       120A  118A         
   638                           
   639                           ;COMADC.c: 91: ADFM = 0;
   640  049E  1303               	bcf	3,6	;RP1=0, select bank1
   641  049F  139F               	bcf	31,7
   642  04A0                     l3336:	
   643                           
   644                           ;COMADC.c: 95: getch();
   645  04A0  120A  118A  2456   	fcall	_getch
      +       120A  118A         
   646                           
   647                           ;COMADC.c: 96: ADC();
   648  04A5  120A  118A  25E1   	fcall	_ADC
      +       120A  118A         
   649                           
   650                           ;COMADC.c: 97: printf("%d ",vadc1);
   651  04AA  1283               	bcf	3,5	;RP0=0, select bank0
   652  04AB  1303               	bcf	3,6	;RP1=0, select bank0
   653  04AC  082A               	movf	_vadc1+1,w
   654  04AD  00FD               	movwf	?_printf+1
   655  04AE  0829               	movf	_vadc1,w
   656  04AF  00FC               	movwf	?_printf
   657  04B0  300B               	movlw	(STR_1-__stringbase)& (0+255)
   658  04B1  120A  118A  24D8   	fcall	_printf
      +       120A  118A         
   659                           
   660                           ;COMADC.c: 98: printf("%d ",vadc2);
   661  04B6  082C               	movf	_vadc2+1,w
   662  04B7  00FD               	movwf	?_printf+1
   663  04B8  082B               	movf	_vadc2,w
   664  04B9  00FC               	movwf	?_printf
   665  04BA  300B               	movlw	(STR_1-__stringbase)& (0+255)
   666  04BB  120A  118A  24D8   	fcall	_printf
      +       120A  118A         
   667                           
   668                           ;COMADC.c: 99: printf("%d ",vadc3);
   669  04C0  082E               	movf	_vadc3+1,w
   670  04C1  00FD               	movwf	?_printf+1
   671  04C2  082D               	movf	_vadc3,w
   672  04C3  00FC               	movwf	?_printf
   673  04C4  300B               	movlw	(STR_1-__stringbase)& (0+255)
   674  04C5  120A  118A  24D8   	fcall	_printf
      +       120A  118A         
   675                           
   676                           ;COMADC.c: 100: pause(10);
   677  04CA  300A               	movlw	10
   678  04CB  00F0               	movwf	?_pause
   679  04CC  01F1               	clrf	?_pause+1
   680  04CD  120A  118A  2753   	fcall	_pause
      +       120A  118A         
   681                           
   682                           ;COMADC.c: 105: PWM();
   683  04D2  120A  118A  25BF   	fcall	_PWM
      +       120A  118A         
   684  04D7  2CA0               	goto	l3336
   685  04D8                     __end_of_main:	
   686                           
   687                           	psect	text332
   688  05BF                     __ptext332:	
   689 ;; =============== function _lcd_write ends ============
   690                           
   691                           
   692 ;; *************** function _PWM *****************
   693 ;; Defined at:
   694 ;;		line 136 in file "C:\Users\Jorge\OneDrive\Escritorio\Entregar\MAT_ADC\COMADC\COMADC.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;		None
   697 ;; Auto vars:     Size  Location     Type
   698 ;;		None
   699 ;; Return value:  Size  Location     Type
   700 ;;		None               void
   701 ;; Registers used:
   702 ;;		wreg, status,2, status,0, pclath, cstack
   703 ;; Tracked objects:
   704 ;;		On entry : 11F/0
   705 ;;		On exit  : 11F/0
   706 ;;		Unchanged: FFE80/0
   707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   708 ;;      Params:         0       0       0       0       0
   709 ;;      Locals:         0       0       0       0       0
   710 ;;      Temps:          2       0       0       0       0
   711 ;;      Totals:         2       0       0       0       0
   712 ;;Total ram usage:        2 bytes
   713 ;; Hardware stack levels used:    1
   714 ;; Hardware stack levels required when called:    2
   715 ;; This function calls:
   716 ;;		_pause
   717 ;; This function is called by:
   718 ;;		_main
   719 ;; This function uses a non-reentrant model
   720 ;;
   721  05BF                     _PWM:	
   722  05BF  27FD               	call	PL7	;select bank 0
   723                           
   724                           ;COMADC.c: 137: ADRESH=vadc1>>2;
   725                           
   726                           ; Regs used in _PWM: [wreg+status,2+status,0+pclath+cstack]
   727  05C0  082A               	movf	_vadc1+1,w
   728  05C1  00F5               	movwf	??_PWM+1
   729  05C2  0829               	movf	_vadc1,w
   730                           
   731                           ;COMADC.c: 138: ADRESL=vadc1<<8;
   732                           
   733                           ;COMADC.c: 139: CCPR1L=ADRESH;
   734  05C3  27CB  120A  118A   	fcall	PL2	;call to abstracted procedure
   735  05C6  0095               	movwf	21	;volatile
   736                           
   737                           ;COMADC.c: 140: CCP1CON=0X0C|(ADRESL>>2);
   738  05C7  27D9  120A  118A   	fcall	PL3	;call to abstracted procedure
   739  05CA  0097               	movwf	23	;volatile
   740                           
   741                           ;COMADC.c: 141: pause(1);
   742  05CB  01F0               	clrf	?_pause
   743  05CC  0AF0               	incf	?_pause,f
   744  05CD  01F1               	clrf	?_pause+1
   745  05CE  2753  120A  118A   	fcall	_pause
   746  05D1  27FD               	call	PL7	;select bank 0
   747                           
   748                           ;COMADC.c: 143: ADRESH=vadc2>>2;
   749  05D2  082C               	movf	_vadc2+1,w
   750  05D3  00F5               	movwf	??_PWM+1
   751  05D4  082B               	movf	_vadc2,w
   752                           
   753                           ;COMADC.c: 144: ADRESL=vadc2<<8;
   754                           
   755                           ;COMADC.c: 145: CCPR2L=ADRESH;
   756  05D5  27CB  120A  118A   	fcall	PL2	;call to abstracted procedure
   757  05D8  009B               	movwf	27	;volatile
   758                           
   759                           ;COMADC.c: 146: CCP2CON=0X0C|(ADRESL>>2);
   760  05D9  27D9  120A  118A   	fcall	PL3	;call to abstracted procedure
   761  05DC  009D               	movwf	29	;volatile
   762                           
   763                           ;COMADC.c: 147: pause(1);
   764  05DD  01F0               	clrf	?_pause
   765  05DE  0AF0               	incf	?_pause,f
   766  05DF  01F1               	clrf	?_pause+1
   767  05E0  2F53               	ljmp	l3128
   768  05E1                     __end_of_PWM:	
   769  05E1                     __ptext333:	
   770 ;; =============== function _PWM ends ============
   771                           
   772                           
   773 ;; *************** function _ADC *****************
   774 ;; Defined at:
   775 ;;		line 110 in file "C:\Users\Jorge\OneDrive\Escritorio\Entregar\MAT_ADC\COMADC\COMADC.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;		None
   778 ;; Auto vars:     Size  Location     Type
   779 ;;		None
   780 ;; Return value:  Size  Location     Type
   781 ;;		None               void
   782 ;; Registers used:
   783 ;;		wreg, status,2, status,0, pclath, cstack
   784 ;; Tracked objects:
   785 ;;		On entry : 17F/0
   786 ;;		On exit  : 11F/0
   787 ;;		Unchanged: FFE80/0
   788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   789 ;;      Params:         0       0       0       0       0
   790 ;;      Locals:         0       0       0       0       0
   791 ;;      Temps:          0       1       0       0       0
   792 ;;      Totals:         0       1       0       0       0
   793 ;;Total ram usage:        1 bytes
   794 ;; Hardware stack levels used:    1
   795 ;; Hardware stack levels required when called:    2
   796 ;; This function calls:
   797 ;;		___lwtoft
   798 ;;		___ftmul
   799 ;;		_pause
   800 ;; This function is called by:
   801 ;;		_main
   802 ;; This function uses a non-reentrant model
   803 ;;
   804  05E1                     _ADC:	
   805                           
   806                           ;COMADC.c: 111: ADCON0=0xD5;
   807                           
   808                           ; Regs used in _ADC: [wreg+status,2+status,0+pclath+cstack]
   809  05E1  30D5               	movlw	213
   810  05E2  009F               	movwf	31	;volatile
   811                           
   812                           ;COMADC.c: 112: GO_DONE=1;
   813  05E3  149F               	bsf	31,1
   814  05E4                     l1070:	
   815                           ;COMADC.c: 113: while(GO_DONE);
   816                           
   817  05E4  189F               	btfsc	31,1
   818  05E5  2DE4               	goto	l1070
   819                           
   820                           ;COMADC.c: 114: vadc1=(ADRESH<<2)|(ADRESL>>6);
   821  05E6  081E               	movf	30,w	;volatile
   822  05E7  00A9               	movwf	_vadc1
   823  05E8  01AA               	clrf	_vadc1+1
   824  05E9  1003               	clrc
   825  05EA  0DA9               	rlf	_vadc1,f
   826  05EB  0DAA               	rlf	_vadc1+1,f
   827  05EC  1003               	clrc
   828  05ED  0DA9               	rlf	_vadc1,f
   829  05EE  0DAA               	rlf	_vadc1+1,f
   830  05EF  1683               	bsf	3,5	;RP0=1, select bank1
   831  05F0  081E               	movf	30,w	;volatile
   832  05F1  1283               	bcf	3,5	;RP0=0, select bank0
   833  05F2  00B8               	movwf	??_ADC
   834  05F3  3006               	movlw	6
   835  05F4                     u765:	
   836  05F4  1003               	clrc
   837  05F5  0CB8               	rrf	??_ADC,f
   838  05F6  3EFF               	addlw	-1
   839  05F7  1D03               	skipz
   840  05F8  2DF4               	goto	u765
   841  05F9  0838               	movf	??_ADC,w
   842  05FA  04A9               	iorwf	_vadc1,f
   843                           
   844                           ;COMADC.c: 115: pwm1=vadc1;
   845  05FB  082A               	movf	_vadc1+1,w
   846  05FC  00F9               	movwf	?___lwtoft+1
   847  05FD  0829               	movf	_vadc1,w
   848  05FE  00F8               	movwf	?___lwtoft
   849  05FF  269E  120A  118A   	fcall	___lwtoft
   850  0602  0878               	movf	?___lwtoft,w
   851  0603  00A0               	movwf	_pwm1
   852  0604  0879               	movf	?___lwtoft+1,w
   853  0605  00A1               	movwf	_pwm1+1
   854  0606  087A               	movf	?___lwtoft+2,w
   855  0607  00A2               	movwf	_pwm1+2
   856                           
   857                           ;COMADC.c: 116: pwm1 = pwm1*0.0048875855327468;
   858  0608  27EE  120A  118A   	fcall	PL5	;call to abstracted procedure
   859  060B  0820               	movf	_pwm1,w
   860  060C  00FB               	movwf	?___ftmul+3
   861  060D  0821               	movf	_pwm1+1,w
   862  060E  00FC               	movwf	?___ftmul+4
   863  060F  0822               	movf	_pwm1+2,w
   864  0610  00FD               	movwf	?___ftmul+5
   865  0611  26AE  120A  118A   	fcall	___ftmul
   866  0614  0878               	movf	?___ftmul,w
   867  0615  00A0               	movwf	_pwm1
   868  0616  0879               	movf	?___ftmul+1,w
   869  0617  00A1               	movwf	_pwm1+1
   870  0618  087A               	movf	?___ftmul+2,w
   871  0619  00A2               	movwf	_pwm1+2
   872                           
   873                           ;COMADC.c: 117: pause(1);
   874  061A  01F0               	clrf	?_pause
   875  061B  0AF0               	incf	?_pause,f
   876  061C  01F1               	clrf	?_pause+1
   877  061D  2753  120A  118A   	fcall	_pause
   878                           
   879                           ;COMADC.c: 119: ADCON0=0xD9;
   880  0620  30D9               	movlw	217
   881  0621  27FD               	call	PL7	;select bank 0
   882  0622  009F               	movwf	31	;volatile
   883                           
   884                           ;COMADC.c: 120: GO_DONE=1;
   885  0623  149F               	bsf	31,1
   886  0624                     l1073:	
   887                           ;COMADC.c: 121: while(GO_DONE);
   888                           
   889  0624  189F               	btfsc	31,1
   890  0625  2E24               	goto	l1073
   891                           
   892                           ;COMADC.c: 122: vadc2=(ADRESH<<2)|(ADRESL>>6);
   893  0626  081E               	movf	30,w	;volatile
   894  0627  00AB               	movwf	_vadc2
   895  0628  01AC               	clrf	_vadc2+1
   896  0629  1003               	clrc
   897  062A  0DAB               	rlf	_vadc2,f
   898  062B  0DAC               	rlf	_vadc2+1,f
   899  062C  1003               	clrc
   900  062D  0DAB               	rlf	_vadc2,f
   901  062E  0DAC               	rlf	_vadc2+1,f
   902  062F  1683               	bsf	3,5	;RP0=1, select bank1
   903  0630  081E               	movf	30,w	;volatile
   904  0631  1283               	bcf	3,5	;RP0=0, select bank0
   905  0632  00B8               	movwf	??_ADC
   906  0633  3006               	movlw	6
   907  0634                     u785:	
   908  0634  1003               	clrc
   909  0635  0CB8               	rrf	??_ADC,f
   910  0636  3EFF               	addlw	-1
   911  0637  1D03               	skipz
   912  0638  2E34               	goto	u785
   913  0639  0838               	movf	??_ADC,w
   914  063A  04AB               	iorwf	_vadc2,f
   915                           
   916                           ;COMADC.c: 123: pwm2=vadc2;
   917  063B  082C               	movf	_vadc2+1,w
   918  063C  00F9               	movwf	?___lwtoft+1
   919  063D  082B               	movf	_vadc2,w
   920  063E  00F8               	movwf	?___lwtoft
   921  063F  269E  120A  118A   	fcall	___lwtoft
   922  0642  0878               	movf	?___lwtoft,w
   923  0643  00A3               	movwf	_pwm2
   924  0644  0879               	movf	?___lwtoft+1,w
   925  0645  00A4               	movwf	_pwm2+1
   926  0646  087A               	movf	?___lwtoft+2,w
   927  0647  00A5               	movwf	_pwm2+2
   928                           
   929                           ;COMADC.c: 124: pwm2 = pwm2*0.0048875855327468;
   930  0648  27EE  120A  118A   	fcall	PL5	;call to abstracted procedure
   931  064B  0823               	movf	_pwm2,w
   932  064C  00FB               	movwf	?___ftmul+3
   933  064D  0824               	movf	_pwm2+1,w
   934  064E  00FC               	movwf	?___ftmul+4
   935  064F  0825               	movf	_pwm2+2,w
   936  0650  00FD               	movwf	?___ftmul+5
   937  0651  26AE  120A  118A   	fcall	___ftmul
   938  0654  0878               	movf	?___ftmul,w
   939  0655  00A3               	movwf	_pwm2
   940  0656  0879               	movf	?___ftmul+1,w
   941  0657  00A4               	movwf	_pwm2+1
   942  0658  087A               	movf	?___ftmul+2,w
   943  0659  00A5               	movwf	_pwm2+2
   944                           
   945                           ;COMADC.c: 125: pause(1);
   946  065A  01F0               	clrf	?_pause
   947  065B  0AF0               	incf	?_pause,f
   948  065C  01F1               	clrf	?_pause+1
   949  065D  2753  120A  118A   	fcall	_pause
   950                           
   951                           ;COMADC.c: 127: ADCON0 = 0xDD;
   952  0660  30DD               	movlw	221
   953  0661  27FD               	call	PL7	;select bank 0
   954  0662  009F               	movwf	31	;volatile
   955                           
   956                           ;COMADC.c: 128: GO_DONE = 1;
   957  0663  149F               	bsf	31,1
   958  0664                     l1076:	
   959                           ;COMADC.c: 129: while(GO_DONE);
   960                           
   961  0664  189F               	btfsc	31,1
   962  0665  2E64               	goto	l1076
   963                           
   964                           ;COMADC.c: 130: vadc3 = (ADRESH<<2)|(ADRESL>>6);
   965  0666  081E               	movf	30,w	;volatile
   966  0667  00AD               	movwf	_vadc3
   967  0668  01AE               	clrf	_vadc3+1
   968  0669  1003               	clrc
   969  066A  0DAD               	rlf	_vadc3,f
   970  066B  0DAE               	rlf	_vadc3+1,f
   971  066C  1003               	clrc
   972  066D  0DAD               	rlf	_vadc3,f
   973  066E  0DAE               	rlf	_vadc3+1,f
   974  066F  1683               	bsf	3,5	;RP0=1, select bank1
   975  0670  081E               	movf	30,w	;volatile
   976  0671  1283               	bcf	3,5	;RP0=0, select bank0
   977  0672  00B8               	movwf	??_ADC
   978  0673  3006               	movlw	6
   979  0674                     u805:	
   980  0674  1003               	clrc
   981  0675  0CB8               	rrf	??_ADC,f
   982  0676  3EFF               	addlw	-1
   983  0677  1D03               	skipz
   984  0678  2E74               	goto	u805
   985  0679  0838               	movf	??_ADC,w
   986  067A  04AD               	iorwf	_vadc3,f
   987                           
   988                           ;COMADC.c: 131: pwm3=vadc3;
   989  067B  082E               	movf	_vadc3+1,w
   990  067C  00F9               	movwf	?___lwtoft+1
   991  067D  082D               	movf	_vadc3,w
   992  067E  00F8               	movwf	?___lwtoft
   993  067F  269E  120A  118A   	fcall	___lwtoft
   994  0682  0878               	movf	?___lwtoft,w
   995  0683  00A6               	movwf	_pwm3
   996  0684  0879               	movf	?___lwtoft+1,w
   997  0685  00A7               	movwf	_pwm3+1
   998  0686  087A               	movf	?___lwtoft+2,w
   999  0687  00A8               	movwf	_pwm3+2
  1000                           
  1001                           ;COMADC.c: 132: pwm3 = pwm3*0.0048875855327468;
  1002  0688  27EE  120A  118A   	fcall	PL5	;call to abstracted procedure
  1003  068B  0826               	movf	_pwm3,w
  1004  068C  00FB               	movwf	?___ftmul+3
  1005  068D  0827               	movf	_pwm3+1,w
  1006  068E  00FC               	movwf	?___ftmul+4
  1007  068F  0828               	movf	_pwm3+2,w
  1008  0690  00FD               	movwf	?___ftmul+5
  1009  0691  26AE  120A  118A   	fcall	___ftmul
  1010  0694  0878               	movf	?___ftmul,w
  1011  0695  00A6               	movwf	_pwm3
  1012  0696  0879               	movf	?___ftmul+1,w
  1013  0697  00A7               	movwf	_pwm3+1
  1014  0698  087A               	movf	?___ftmul+2,w
  1015  0699  00A8               	movwf	_pwm3+2
  1016                           
  1017                           ;COMADC.c: 133: pause(1);
  1018  069A  01F0               	clrf	?_pause
  1019  069B  0AF0               	incf	?_pause,f
  1020  069C  01F1               	clrf	?_pause+1
  1021  069D  2F53               	ljmp	l3128
  1022  069E                     __end_of_ADC:	
  1023  069E                     __ptext334:	
  1024 ;; =============== function _ADC ends ============
  1025                           
  1026                           
  1027 ;; *************** function ___lwtoft *****************
  1028 ;; Defined at:
  1029 ;;		line 29 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwtoft.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;  c               2    8[COMMON] unsigned int 
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;		None
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  3    8[COMMON] float 
  1036 ;; Registers used:
  1037 ;;		wreg, status,2, status,0, pclath, cstack
  1038 ;; Tracked objects:
  1039 ;;		On entry : 17F/0
  1040 ;;		On exit  : 17F/0
  1041 ;;		Unchanged: FFE80/0
  1042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1043 ;;      Params:         3       0       0       0       0
  1044 ;;      Locals:         0       0       0       0       0
  1045 ;;      Temps:          0       0       0       0       0
  1046 ;;      Totals:         3       0       0       0       0
  1047 ;;Total ram usage:        3 bytes
  1048 ;; Hardware stack levels used:    1
  1049 ;; Hardware stack levels required when called:    1
  1050 ;; This function calls:
  1051 ;;		___ftpack
  1052 ;; This function is called by:
  1053 ;;		_ADC
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056  069E                     ___lwtoft:	
  1057                           
  1058                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  1059  069E  0878               	movf	___lwtoft@c,w
  1060  069F  00F0               	movwf	?___ftpack
  1061  06A0  0879               	movf	___lwtoft@c+1,w
  1062  06A1  00F1               	movwf	?___ftpack+1
  1063  06A2  308E               	movlw	142
  1064  06A3  01F2               	clrf	?___ftpack+2
  1065  06A4  00F3               	movwf	?___ftpack+3
  1066  06A5  01F4               	clrf	?___ftpack+4
  1067  06A6  2784               	fcall	___ftpack
  1068  06A7  0870               	movf	?___ftpack,w
  1069  06A8  00F8               	movwf	?___lwtoft
  1070  06A9  0871               	movf	?___ftpack+1,w
  1071  06AA  00F9               	movwf	?___lwtoft+1
  1072  06AB  0872               	movf	?___ftpack+2,w
  1073  06AC  00FA               	movwf	?___lwtoft+2
  1074  06AD  0008               	return
  1075  06AE                     __end_of___lwtoft:	
  1076  06AE                     __ptext335:	
  1077 ;; =============== function ___lwtoft ends ============
  1078                           
  1079                           
  1080 ;; *************** function ___ftmul *****************
  1081 ;; Defined at:
  1082 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftmul.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;  f1              3    8[COMMON] float 
  1085 ;;  f2              3   11[COMMON] float 
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;  f3_as_produc    3    4[BANK0 ] unsigned um
  1088 ;;  sign            1    8[BANK0 ] unsigned char 
  1089 ;;  cntr            1    7[BANK0 ] unsigned char 
  1090 ;;  exp             1    3[BANK0 ] unsigned char 
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  3    8[COMMON] float 
  1093 ;; Registers used:
  1094 ;;		wreg, status,2, status,0, pclath, cstack
  1095 ;; Tracked objects:
  1096 ;;		On entry : 17F/0
  1097 ;;		On exit  : 17F/0
  1098 ;;		Unchanged: FFE80/0
  1099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1100 ;;      Params:         6       0       0       0       0
  1101 ;;      Locals:         0       6       0       0       0
  1102 ;;      Temps:          0       3       0       0       0
  1103 ;;      Totals:         6       9       0       0       0
  1104 ;;Total ram usage:       15 bytes
  1105 ;; Hardware stack levels used:    1
  1106 ;; Hardware stack levels required when called:    1
  1107 ;; This function calls:
  1108 ;;		___ftpack
  1109 ;; This function is called by:
  1110 ;;		_ADC
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113  06AE                     ___ftmul:	
  1114                           
  1115                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1116  06AE  0878               	movf	___ftmul@f1,w
  1117  06AF  00AF               	movwf	??___ftmul
  1118  06B0  0879               	movf	___ftmul@f1+1,w
  1119  06B1  00B0               	movwf	??___ftmul+1
  1120  06B2  087A               	movf	___ftmul@f1+2,w
  1121  06B3  00B1               	movwf	??___ftmul+2
  1122  06B4  1003               	clrc
  1123  06B5  0D30               	rlf	??___ftmul+1,w
  1124  06B6  0D31               	rlf	??___ftmul+2,w
  1125  06B7  00B2               	movwf	___ftmul@exp
  1126  06B8  08B2               	movf	___ftmul@exp,f
  1127  06B9  1D03               	skipz
  1128  06BA  2EBF               	goto	l3142
  1129  06BB  01F8               	clrf	?___ftmul
  1130  06BC  01F9               	clrf	?___ftmul+1
  1131  06BD  01FA               	clrf	?___ftmul+2
  1132  06BE  0008               	return
  1133  06BF                     l3142:	
  1134  06BF  087B               	movf	___ftmul@f2,w
  1135  06C0  00AF               	movwf	??___ftmul
  1136  06C1  087C               	movf	___ftmul@f2+1,w
  1137  06C2  00B0               	movwf	??___ftmul+1
  1138  06C3  087D               	movf	___ftmul@f2+2,w
  1139  06C4  00B1               	movwf	??___ftmul+2
  1140  06C5  1003               	clrc
  1141  06C6  0D30               	rlf	??___ftmul+1,w
  1142  06C7  0D31               	rlf	??___ftmul+2,w
  1143  06C8  00B7               	movwf	___ftmul@sign
  1144  06C9  08B7               	movf	___ftmul@sign,f
  1145  06CA  1D03               	skipz
  1146  06CB  2ED0               	goto	l3148
  1147  06CC  01F8               	clrf	?___ftmul
  1148  06CD  01F9               	clrf	?___ftmul+1
  1149  06CE  01FA               	clrf	?___ftmul+2
  1150  06CF  0008               	return
  1151  06D0                     l3148:	
  1152  06D0  0837               	movf	___ftmul@sign,w
  1153  06D1  3E7B               	addlw	123
  1154  06D2  07B2               	addwf	___ftmul@exp,f
  1155  06D3  087A               	movf	___ftmul@f1+2,w
  1156  06D4  00B7               	movwf	___ftmul@sign
  1157  06D5  087D               	movf	___ftmul@f2+2,w
  1158  06D6  06B7               	xorwf	___ftmul@sign,f
  1159  06D7  3080               	movlw	128
  1160  06D8  05B7               	andwf	___ftmul@sign,f
  1161  06D9  3007               	movlw	7
  1162  06DA  17F9               	bsf	___ftmul@f1+1,7
  1163  06DB  17FC               	bsf	___ftmul@f2+1,7
  1164  06DC  01FD               	clrf	___ftmul@f2+2
  1165  06DD  01B3               	clrf	___ftmul@f3_as_product
  1166  06DE  01B4               	clrf	___ftmul@f3_as_product+1
  1167  06DF  01B5               	clrf	___ftmul@f3_as_product+2
  1168  06E0  00B6               	movwf	___ftmul@cntr
  1169  06E1                     l3166:	
  1170  06E1  1C78               	btfss	___ftmul@f1,0
  1171  06E2  2EEB               	goto	l3170
  1172  06E3  087B               	movf	___ftmul@f2,w
  1173  06E4  27E4  120A  118A   	fcall	PL4	;call to abstracted procedure
  1174  06E7  1803               	skipnc
  1175  06E8  0A7D               	incf	___ftmul@f2+2,w
  1176  06E9  1D03               	btfss	3,2
  1177  06EA  07B5               	addwf	___ftmul@f3_as_product+2,f
  1178  06EB                     l3170:	
  1179  06EB  1003               	clrc
  1180  06EC  0CFA               	rrf	___ftmul@f1+2,f
  1181  06ED  0CF9               	rrf	___ftmul@f1+1,f
  1182  06EE  0CF8               	rrf	___ftmul@f1,f
  1183  06EF  1003               	clrc
  1184  06F0  0DFB               	rlf	___ftmul@f2,f
  1185  06F1  0DFC               	rlf	___ftmul@f2+1,f
  1186  06F2  0DFD               	rlf	___ftmul@f2+2,f
  1187  06F3  0BB6               	decfsz	___ftmul@cntr,f
  1188  06F4  2EE1               	goto	l3166
  1189  06F5  3009               	movlw	9
  1190  06F6  00B6               	movwf	___ftmul@cntr
  1191  06F7                     l3178:	
  1192  06F7  1C78               	btfss	___ftmul@f1,0
  1193  06F8  2F01               	goto	l3182
  1194  06F9  087B               	movf	___ftmul@f2,w
  1195  06FA  27E4  120A  118A   	fcall	PL4	;call to abstracted procedure
  1196  06FD  1803               	skipnc
  1197  06FE  0A7D               	incf	___ftmul@f2+2,w
  1198  06FF  1D03               	btfss	3,2
  1199  0700  07B5               	addwf	___ftmul@f3_as_product+2,f
  1200  0701                     l3182:	
  1201  0701  1003               	clrc
  1202  0702  0CFA               	rrf	___ftmul@f1+2,f
  1203  0703  0CF9               	rrf	___ftmul@f1+1,f
  1204  0704  0CF8               	rrf	___ftmul@f1,f
  1205  0705  1003               	clrc
  1206  0706  0CB5               	rrf	___ftmul@f3_as_product+2,f
  1207  0707  0CB4               	rrf	___ftmul@f3_as_product+1,f
  1208  0708  0CB3               	rrf	___ftmul@f3_as_product,f
  1209  0709  0BB6               	decfsz	___ftmul@cntr,f
  1210  070A  2EF7               	goto	l3178
  1211  070B  0833               	movf	___ftmul@f3_as_product,w
  1212  070C  00F0               	movwf	?___ftpack
  1213  070D  0834               	movf	___ftmul@f3_as_product+1,w
  1214  070E  00F1               	movwf	?___ftpack+1
  1215  070F  0835               	movf	___ftmul@f3_as_product+2,w
  1216  0710  00F2               	movwf	?___ftpack+2
  1217  0711  0832               	movf	___ftmul@exp,w
  1218  0712  00F3               	movwf	?___ftpack+3
  1219  0713  0837               	movf	___ftmul@sign,w
  1220  0714  00F4               	movwf	?___ftpack+4
  1221  0715  2784               	fcall	___ftpack
  1222  0716  0870               	movf	?___ftpack,w
  1223  0717  00F8               	movwf	?___ftmul
  1224  0718  0871               	movf	?___ftpack+1,w
  1225  0719  00F9               	movwf	?___ftmul+1
  1226  071A  0872               	movf	?___ftpack+2,w
  1227  071B  00FA               	movwf	?___ftmul+2
  1228  071C  0008               	return
  1229  071D                     __end_of___ftmul:	
  1230  071D                     __ptext329:	
  1231 ;; =============== function _main ends ============
  1232                           
  1233                           
  1234 ;; *************** function _lcd_init *****************
  1235 ;; Defined at:
  1236 ;;		line 182 in file "C:\Users\Jorge\OneDrive\Escritorio\Entregar\MAT_ADC\COMADC\COMADC.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;		None
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;  init_value      1    0        unsigned char 
  1241 ;; Return value:  Size  Location     Type
  1242 ;;		None               void
  1243 ;; Registers used:
  1244 ;;		wreg, status,2, status,0, pclath, cstack
  1245 ;; Tracked objects:
  1246 ;;		On entry : 17F/0
  1247 ;;		On exit  : 17F/0
  1248 ;;		Unchanged: FFE80/0
  1249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1250 ;;      Params:         0       0       0       0       0
  1251 ;;      Locals:         1       0       0       0       0
  1252 ;;      Temps:          0       0       0       0       0
  1253 ;;      Totals:         1       0       0       0       0
  1254 ;;Total ram usage:        1 bytes
  1255 ;; Hardware stack levels used:    1
  1256 ;; Hardware stack levels required when called:    4
  1257 ;; This function calls:
  1258 ;;		_pause
  1259 ;;		_lcd_write
  1260 ;;		_lcd_clear
  1261 ;; This function is called by:
  1262 ;;		_main
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265  071D                     _lcd_init:	
  1266  071D  300F               	movlw	15
  1267                           
  1268                           ;COMADC.c: 187: RC3 = 0;
  1269                           
  1270                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1271  071E  1187               	bcf	7,3
  1272                           
  1273                           ;COMADC.c: 188: RC0 = 0;
  1274  071F  1007               	bcf	7,0
  1275                           
  1276                           ;COMADC.c: 189: RC4 = 0;
  1277  0720  1207               	bcf	7,4
  1278                           
  1279                           ;COMADC.c: 191: pause(15);
  1280  0721  00F0               	movwf	?_pause
  1281  0722  01F1               	clrf	?_pause+1
  1282  0723  2753  120A  118A   	fcall	_pause
  1283                           
  1284                           ;COMADC.c: 192: PORTD = init_value;
  1285  0726  3003               	movlw	3
  1286  0727  27FD               	call	PL7	;select bank 0
  1287  0728  0088               	movwf	8	;volatile
  1288  0729  300A               	movlw	10
  1289                           
  1290                           ;COMADC.c: 193: ((RC0 = 1),(RC0=0));
  1291  072A  1407               	bsf	7,0
  1292  072B  1007               	bcf	7,0
  1293                           
  1294                           ;COMADC.c: 194: pause(10);
  1295  072C  00F0               	movwf	?_pause
  1296  072D  01F1               	clrf	?_pause+1
  1297  072E  2753  120A  118A   	fcall	_pause
  1298                           
  1299                           ;COMADC.c: 195: ((RC0 = 1),(RC0=0));
  1300                           
  1301                           ;COMADC.c: 196: pause(10);
  1302  0731  27F5  120A  118A   	fcall	PL6	;call to abstracted procedure
  1303  0734  2753  120A  118A   	fcall	_pause
  1304                           
  1305                           ;COMADC.c: 197: ((RC0 = 1),(RC0=0));
  1306                           
  1307                           ;COMADC.c: 198: pause(10);
  1308  0737  27F5  120A  118A   	fcall	PL6	;call to abstracted procedure
  1309  073A  2753  120A  118A   	fcall	_pause
  1310                           
  1311                           ;COMADC.c: 199: PORTD= 2;
  1312  073D  3002               	movlw	2
  1313  073E  27FD               	call	PL7	;select bank 0
  1314  073F  0088               	movwf	8	;volatile
  1315  0740  3028               	movlw	40
  1316                           
  1317                           ;COMADC.c: 200: ((RC0 = 1),(RC0=0));
  1318  0741  1407               	bsf	7,0
  1319  0742  1007               	bcf	7,0
  1320                           
  1321                           ;COMADC.c: 202: lcd_write(0x28);
  1322  0743  2764  120A  118A   	fcall	_lcd_write
  1323                           
  1324                           ;COMADC.c: 203: lcd_write(0x0C);
  1325  0746  300C               	movlw	12
  1326  0747  2764  120A  118A   	fcall	_lcd_write
  1327                           
  1328                           ;COMADC.c: 204: lcd_write(0x0F);
  1329  074A  300F               	movlw	15
  1330  074B  2764  120A  118A   	fcall	_lcd_write
  1331                           
  1332                           ;COMADC.c: 205: lcd_clear();
  1333  074E  27C2  120A  118A   	fcall	_lcd_clear
  1334                           
  1335                           ;COMADC.c: 206: lcd_write(0x06);
  1336  0751  3006               	movlw	6
  1337  0752  2F64               	ljmp	_lcd_write
  1338  0753                     __end_of_lcd_init:	
  1339  0753                     __ptext336:	
  1340 ;; =============== function ___ftmul ends ============
  1341                           
  1342                           
  1343 ;; *************** function _pause *****************
  1344 ;; Defined at:
  1345 ;;		line 209 in file "C:\Users\Jorge\OneDrive\Escritorio\Entregar\MAT_ADC\COMADC\COMADC.c"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;  usvalue         2    0[COMMON] unsigned short 
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;  x               2    2[COMMON] unsigned short 
  1350 ;; Return value:  Size  Location     Type
  1351 ;;		None               void
  1352 ;; Registers used:
  1353 ;;		wreg, status,2, status,0, pclath, cstack
  1354 ;; Tracked objects:
  1355 ;;		On entry : 11F/0
  1356 ;;		On exit  : 11F/0
  1357 ;;		Unchanged: FFE80/0
  1358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1359 ;;      Params:         2       0       0       0       0
  1360 ;;      Locals:         2       0       0       0       0
  1361 ;;      Temps:          0       0       0       0       0
  1362 ;;      Totals:         4       0       0       0       0
  1363 ;;Total ram usage:        4 bytes
  1364 ;; Hardware stack levels used:    1
  1365 ;; Hardware stack levels required when called:    1
  1366 ;; This function calls:
  1367 ;;		_msecbase
  1368 ;; This function is called by:
  1369 ;;		_main
  1370 ;;		_ADC
  1371 ;;		_PWM
  1372 ;;		_lcd_write
  1373 ;;		_lcd_clear
  1374 ;;		_lcd_init
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377  0753                     _pause:	
  1378  0753                     l3128:	
  1379                           ; Regs used in _pause: [wreg+status,2+status,0+pclath+cstack]
  1380                           
  1381                           
  1382                           ;COMADC.c: 210: unsigned short x;
  1383                           ;COMADC.c: 211: for (x=0; x<=usvalue; x++)
  1384  0753  01F2               	clrf	pause@x
  1385  0754  01F3               	clrf	pause@x+1
  1386  0755                     l3134:	
  1387  0755  0873               	movf	pause@x+1,w
  1388  0756  0271               	subwf	pause@usvalue+1,w
  1389  0757  1D03               	skipz
  1390  0758  2F5B               	goto	u665
  1391  0759  0872               	movf	pause@x,w
  1392  075A  0270               	subwf	pause@usvalue,w
  1393  075B                     u665:	
  1394  075B  1C03               	btfss	3,0
  1395  075C  0008               	return
  1396                           
  1397                           ;COMADC.c: 212: {
  1398                           ;COMADC.c: 213: msecbase();
  1399  075D  2777  120A  118A   	fcall	_msecbase
  1400  0760  0AF2               	incf	pause@x,f
  1401  0761  1903               	skipnz
  1402  0762  0AF3               	incf	pause@x+1,f
  1403  0763  2F55               	goto	l3134
  1404  0764                     __end_of_pause:	
  1405  0764                     __ptext331:	
  1406 ;; =============== function _lcd_clear ends ============
  1407                           
  1408                           
  1409 ;; *************** function _lcd_write *****************
  1410 ;; Defined at:
  1411 ;;		line 152 in file "C:\Users\Jorge\OneDrive\Escritorio\Entregar\MAT_ADC\COMADC\COMADC.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;  c               1    wreg     unsigned char 
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;  c               1    4[COMMON] unsigned char 
  1416 ;; Return value:  Size  Location     Type
  1417 ;;		None               void
  1418 ;; Registers used:
  1419 ;;		wreg, status,2, status,0, pclath, cstack
  1420 ;; Tracked objects:
  1421 ;;		On entry : 11F/0
  1422 ;;		On exit  : 17F/0
  1423 ;;		Unchanged: FFE80/0
  1424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1425 ;;      Params:         0       0       0       0       0
  1426 ;;      Locals:         1       0       0       0       0
  1427 ;;      Temps:          0       0       0       0       0
  1428 ;;      Totals:         1       0       0       0       0
  1429 ;;Total ram usage:        1 bytes
  1430 ;; Hardware stack levels used:    1
  1431 ;; Hardware stack levels required when called:    2
  1432 ;; This function calls:
  1433 ;;		_pause
  1434 ;; This function is called by:
  1435 ;;		_lcd_clear
  1436 ;;		_lcd_init
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439  0764                     _lcd_write:	
  1440                           
  1441                           ; Regs used in _lcd_write: [wreg+status,2+status,0+pclath+cstack]
  1442                           ;lcd_write@c stored from wreg
  1443  0764  00F4               	movwf	lcd_write@c
  1444                           
  1445                           ;COMADC.c: 153: pause(1);
  1446  0765  01F0               	clrf	?_pause
  1447  0766  0AF0               	incf	?_pause,f
  1448  0767  01F1               	clrf	?_pause+1
  1449  0768  2753  120A  118A   	fcall	_pause
  1450                           
  1451                           ;COMADC.c: 154: PORTD = ( ( c >> 4) & 0x0F);
  1452  076B  0E74               	swapf	lcd_write@c,w
  1453  076C  390F               	andlw	15
  1454  076D  27FD               	call	PL7	;select bank 0
  1455  076E  0088               	movwf	8	;volatile
  1456                           
  1457                           ;COMADC.c: 155: ((RC0 = 1),(RC0=0));
  1458  076F  1407               	bsf	7,0
  1459  0770  1007               	bcf	7,0
  1460                           
  1461                           ;COMADC.c: 156: PORTD = (c & 0x0F);
  1462  0771  0874               	movf	lcd_write@c,w
  1463  0772  390F               	andlw	15
  1464  0773  0088               	movwf	8	;volatile
  1465                           
  1466                           ;COMADC.c: 157: ((RC0 = 1),(RC0=0));
  1467  0774  1407               	bsf	7,0
  1468  0775  1007               	bcf	7,0
  1469  0776  0008               	return
  1470  0777                     __end_of_lcd_write:	
  1471  0777                     __ptext341:	
  1472 ;; =============== function ___lwdiv ends ============
  1473                           
  1474                           
  1475 ;; *************** function _msecbase *****************
  1476 ;; Defined at:
  1477 ;;		line 217 in file "C:\Users\Jorge\OneDrive\Escritorio\Entregar\MAT_ADC\COMADC\COMADC.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;		None
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;		None
  1482 ;; Return value:  Size  Location     Type
  1483 ;;		None               void
  1484 ;; Registers used:
  1485 ;;		wreg
  1486 ;; Tracked objects:
  1487 ;;		On entry : 11F/0
  1488 ;;		On exit  : 11F/0
  1489 ;;		Unchanged: FFE80/0
  1490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1491 ;;      Params:         0       0       0       0       0
  1492 ;;      Locals:         0       0       0       0       0
  1493 ;;      Temps:          0       0       0       0       0
  1494 ;;      Totals:         0       0       0       0       0
  1495 ;;Total ram usage:        0 bytes
  1496 ;; Hardware stack levels used:    1
  1497 ;; This function calls:
  1498 ;;		Nothing
  1499 ;; This function is called by:
  1500 ;;		_pause
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503  0777                     _msecbase:	
  1504                           
  1505                           ;COMADC.c: 218: OPTION_REG = 0b11010001;
  1506                           
  1507                           ; Regs used in _msecbase: [wreg]
  1508  0777  30D1               	movlw	209
  1509  0778  1683               	bsf	3,5	;RP0=1, select bank1
  1510  0779  1303               	bcf	3,6	;RP1=0, select bank1
  1511  077A  0081               	movwf	1	;volatile
  1512                           
  1513                           ;COMADC.c: 219: TMR0 = 0x0E;
  1514  077B  300E               	movlw	14
  1515  077C  1283               	bcf	3,5	;RP0=0, select bank0
  1516  077D  0081               	movwf	1	;volatile
  1517                           
  1518                           ;COMADC.c: 220: TMR0 = 0x8E;
  1519  077E  308E               	movlw	142
  1520  077F  0081               	movwf	1	;volatile
  1521  0780                     l1112:	
  1522                           ;COMADC.c: 221: while(!T0IF);
  1523                           
  1524  0780  1D0B               	btfss	11,2
  1525  0781  2F80               	goto	l1112
  1526                           
  1527                           ;COMADC.c: 222: T0IF = 0;
  1528  0782  110B               	bcf	11,2
  1529  0783  0008               	return
  1530  0784                     __end_of_msecbase:	
  1531  0784                     __ptext338:	
  1532 ;; =============== function _printf ends ============
  1533                           
  1534                           
  1535 ;; *************** function ___ftpack *****************
  1536 ;; Defined at:
  1537 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\float.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;  arg             3    0[COMMON] unsigned um
  1540 ;;  exp             1    3[COMMON] unsigned char 
  1541 ;;  sign            1    4[COMMON] unsigned char 
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;		None
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  3    0[COMMON] float 
  1546 ;; Registers used:
  1547 ;;		wreg, status,2, status,0
  1548 ;; Tracked objects:
  1549 ;;		On entry : 17F/0
  1550 ;;		On exit  : 17F/0
  1551 ;;		Unchanged: FFE80/0
  1552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1553 ;;      Params:         5       0       0       0       0
  1554 ;;      Locals:         0       0       0       0       0
  1555 ;;      Temps:          3       0       0       0       0
  1556 ;;      Totals:         8       0       0       0       0
  1557 ;;Total ram usage:        8 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; This function calls:
  1560 ;;		Nothing
  1561 ;; This function is called by:
  1562 ;;		___ftmul
  1563 ;;		___lwtoft
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566  0784                     ___ftpack:	
  1567                           
  1568                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  1569  0784  0873               	movf	___ftpack@exp,w
  1570  0785  1903               	btfsc	3,2
  1571  0786  2F8C               	goto	l3056
  1572  0787  0872               	movf	___ftpack@arg+2,w
  1573  0788  0471               	iorwf	___ftpack@arg+1,w
  1574  0789  0470               	iorwf	___ftpack@arg,w
  1575  078A  1D03               	skipz
  1576  078B  2F95               	goto	l3062
  1577  078C                     l3056:	
  1578  078C  01F0               	clrf	?___ftpack
  1579  078D  01F1               	clrf	?___ftpack+1
  1580  078E  01F2               	clrf	?___ftpack+2
  1581  078F  0008               	return
  1582  0790                     l3060:	
  1583  0790  0AF3               	incf	___ftpack@exp,f
  1584  0791  1003               	clrc
  1585  0792  0CF2               	rrf	___ftpack@arg+2,f
  1586  0793  0CF1               	rrf	___ftpack@arg+1,f
  1587  0794  0CF0               	rrf	___ftpack@arg,f
  1588  0795                     l3062:	
  1589  0795  30FE               	movlw	254
  1590  0796  0572               	andwf	___ftpack@arg+2,w
  1591  0797  1903               	btfsc	3,2
  1592  0798  2FA4               	goto	l3066
  1593  0799  2F90               	goto	l3060
  1594  079A                     l3064:	
  1595  079A  0AF3               	incf	___ftpack@exp,f
  1596  079B  0AF0               	incf	___ftpack@arg,f
  1597  079C  1903               	skipnz
  1598  079D  0AF1               	incf	___ftpack@arg+1,f
  1599  079E  1903               	skipnz
  1600  079F  0AF2               	incf	___ftpack@arg+2,f
  1601  07A0  1003               	clrc
  1602  07A1  0CF2               	rrf	___ftpack@arg+2,f
  1603  07A2  0CF1               	rrf	___ftpack@arg+1,f
  1604  07A3  0CF0               	rrf	___ftpack@arg,f
  1605  07A4                     l3066:	
  1606  07A4  30FF               	movlw	255
  1607  07A5  0572               	andwf	___ftpack@arg+2,w
  1608  07A6  1903               	btfsc	3,2
  1609  07A7  2FAE               	goto	l3070
  1610  07A8  2F9A               	goto	l3064
  1611  07A9                     l3068:	
  1612  07A9  03F3               	decf	___ftpack@exp,f
  1613  07AA  1003               	clrc
  1614  07AB  0DF0               	rlf	___ftpack@arg,f
  1615  07AC  0DF1               	rlf	___ftpack@arg+1,f
  1616  07AD  0DF2               	rlf	___ftpack@arg+2,f
  1617  07AE                     l3070:	
  1618  07AE  1FF1               	btfss	___ftpack@arg+1,7
  1619  07AF  2FA9               	goto	l3068
  1620  07B0  1C73               	btfss	___ftpack@exp,0
  1621  07B1  13F1               	bcf	___ftpack@arg+1,7
  1622  07B2  1003               	clrc
  1623  07B3  0CF3               	rrf	___ftpack@exp,f
  1624  07B4  0873               	movf	___ftpack@exp,w
  1625  07B5  00F7               	movwf	??___ftpack+2
  1626  07B6  01F6               	clrf	??___ftpack+1
  1627  07B7  01F5               	clrf	??___ftpack
  1628  07B8  0875               	movf	??___ftpack,w
  1629  07B9  04F0               	iorwf	___ftpack@arg,f
  1630  07BA  0876               	movf	??___ftpack+1,w
  1631  07BB  04F1               	iorwf	___ftpack@arg+1,f
  1632  07BC  0877               	movf	??___ftpack+2,w
  1633  07BD  04F2               	iorwf	___ftpack@arg+2,f
  1634  07BE  0874               	movf	___ftpack@sign,w
  1635  07BF  1D03               	skipz
  1636  07C0  17F2               	bsf	___ftpack@arg+2,7
  1637  07C1  0008               	return
  1638  07C2                     __end_of___ftpack:	
  1639  07C2                     __ptext330:	
  1640 ;; =============== function _lcd_init ends ============
  1641                           
  1642                           
  1643 ;; *************** function _lcd_clear *****************
  1644 ;; Defined at:
  1645 ;;		line 160 in file "C:\Users\Jorge\OneDrive\Escritorio\Entregar\MAT_ADC\COMADC\COMADC.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;		None
  1648 ;; Auto vars:     Size  Location     Type
  1649 ;;		None
  1650 ;; Return value:  Size  Location     Type
  1651 ;;		None               void
  1652 ;; Registers used:
  1653 ;;		wreg, status,2, status,0, pclath, cstack
  1654 ;; Tracked objects:
  1655 ;;		On entry : 17F/0
  1656 ;;		On exit  : 11F/0
  1657 ;;		Unchanged: FFE80/0
  1658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1659 ;;      Params:         0       0       0       0       0
  1660 ;;      Locals:         0       0       0       0       0
  1661 ;;      Temps:          0       0       0       0       0
  1662 ;;      Totals:         0       0       0       0       0
  1663 ;;Total ram usage:        0 bytes
  1664 ;; Hardware stack levels used:    1
  1665 ;; Hardware stack levels required when called:    3
  1666 ;; This function calls:
  1667 ;;		_lcd_write
  1668 ;;		_pause
  1669 ;; This function is called by:
  1670 ;;		_lcd_init
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673  07C2                     _lcd_clear:	
  1674  07C2  3001               	movlw	1
  1675                           
  1676                           ;COMADC.c: 161: RC3 = 0;
  1677                           
  1678                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1679  07C3  1187               	bcf	7,3
  1680                           
  1681                           ;COMADC.c: 162: lcd_write(0x01);
  1682  07C4  2764  120A  118A   	fcall	_lcd_write
  1683                           
  1684                           ;COMADC.c: 163: pause (2);
  1685  07C7  3002               	movlw	2
  1686  07C8  00F0               	movwf	?_pause
  1687  07C9  01F1               	clrf	?_pause+1
  1688  07CA  2F53               	ljmp	l3128
  1689  07CB                     __end_of_lcd_clear:	
  1690  07CB                     PL2:	
  1691  07CB  00F4               	movwf	??_PWM
  1692  07CC  1003               	clrc
  1693  07CD  0CF5               	rrf	??_PWM+1,f
  1694  07CE  0CF4               	rrf	??_PWM,f
  1695  07CF  1003               	clrc
  1696  07D0  0CF5               	rrf	??_PWM+1,f
  1697  07D1  0CF4               	rrf	??_PWM,f
  1698  07D2  0874               	movf	??_PWM,w
  1699  07D3  009E               	movwf	30	;volatile
  1700  07D4  1683               	bsf	3,5	;RP0=1, select bank1
  1701  07D5  019E               	clrf	30	;volatile
  1702  07D6  1283               	bcf	3,5	;RP0=0, select bank0
  1703  07D7  081E               	movf	30,w	;volatile
  1704  07D8  0008               	return
  1705  07D9                     PL3:	
  1706  07D9  1683               	bsf	3,5	;RP0=1, select bank1
  1707  07DA  081E               	movf	30,w	;volatile
  1708  07DB  00F4               	movwf	??_PWM
  1709  07DC  1003               	clrc
  1710  07DD  0CF4               	rrf	??_PWM,f
  1711  07DE  1003               	clrc
  1712  07DF  0CF4               	rrf	??_PWM,f
  1713  07E0  0874               	movf	??_PWM,w
  1714  07E1  380C               	iorlw	12
  1715  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  1716  07E3  0008               	return
  1717  07E4                     PL4:	
  1718  07E4  07B3               	addwf	___ftmul@f3_as_product,f
  1719  07E5  087C               	movf	___ftmul@f2+1,w
  1720  07E6  1103               	clrz
  1721  07E7  1803               	skipnc
  1722  07E8  0A7C               	incf	___ftmul@f2+1,w
  1723  07E9  1D03               	btfss	3,2
  1724  07EA  07B4               	addwf	___ftmul@f3_as_product+1,f
  1725  07EB  087D               	movf	___ftmul@f2+2,w
  1726  07EC  1103               	clrz
  1727  07ED  0008               	return
  1728  07EE                     PL5:	
  1729  07EE  3028               	movlw	40
  1730  07EF  00F8               	movwf	?___ftmul
  1731  07F0  30A0               	movlw	160
  1732  07F1  00F9               	movwf	?___ftmul+1
  1733  07F2  303B               	movlw	59
  1734  07F3  00FA               	movwf	?___ftmul+2
  1735  07F4  0008               	return
  1736  07F5                     PL6:	
  1737  07F5  1283               	bcf	3,5	;RP0=0, select bank0
  1738  07F6  1303               	bcf	3,6	;RP1=0, select bank0
  1739  07F7  300A               	movlw	10
  1740  07F8  1407               	bsf	7,0
  1741  07F9  1007               	bcf	7,0
  1742  07FA  00F0               	movwf	?_pause
  1743  07FB  01F1               	clrf	?_pause+1
  1744  07FC  0008               	return
  1745  07FD                     PL7:	
  1746  07FD  1283               	bcf	3,5	;RP0=0, select bank0
  1747  07FE  1303               	bcf	3,6	;RP1=0, select bank0
  1748  07FF  0008               	return
  1749                           
  1750                           	psect	text337
  1751  04D8                     __ptext337:	
  1752 ;; =============== function _pause ends ============
  1753                           
  1754                           
  1755 ;; *************** function _printf *****************
  1756 ;; Defined at:
  1757 ;;		line 461 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;  f               1    wreg     PTR const unsigned char 
  1760 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;  f               1    4[BANK0 ] PTR const unsigned char 
  1763 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
  1764 ;;  _val            4    6[BANK0 ] struct .
  1765 ;;  c               1   10[BANK0 ] char 
  1766 ;;  prec            1    5[BANK0 ] char 
  1767 ;;  flag            1    3[BANK0 ] unsigned char 
  1768 ;;  ap              1    2[BANK0 ] PTR void [1]
  1769 ;;		 -> ?_printf(2), 
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  2   12[COMMON] int 
  1772 ;; Registers used:
  1773 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1774 ;; Tracked objects:
  1775 ;;		On entry : 17F/0
  1776 ;;		On exit  : 17F/0
  1777 ;;		Unchanged: FFE80/0
  1778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1779 ;;      Params:         2       0       0       0       0
  1780 ;;      Locals:         0       9       0       0       0
  1781 ;;      Temps:          0       2       0       0       0
  1782 ;;      Totals:         2      11       0       0       0
  1783 ;;Total ram usage:       13 bytes
  1784 ;; Hardware stack levels used:    1
  1785 ;; Hardware stack levels required when called:    1
  1786 ;; This function calls:
  1787 ;;		_putch
  1788 ;;		___lwdiv
  1789 ;;		___lwmod
  1790 ;; This function is called by:
  1791 ;;		_main
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794  04D8                     _printf:	
  1795                           
  1796                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1797                           ;printf@f stored from wreg
  1798  04D8  00B3               	movwf	printf@f
  1799  04D9  307C               	movlw	?_printf& (0+255)
  1800  04DA  00B1               	movwf	printf@ap
  1801  04DB                     l3126:	
  1802  04DB  0833               	movf	printf@f,w
  1803  04DC  0AB3               	incf	printf@f,f
  1804  04DD  0084               	movwf	4
  1805  04DE  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  1806  04E3  00B9               	movwf	printf@c
  1807  04E4  08B9               	movf	printf@c,f
  1808  04E5  1903               	btfsc	3,2
  1809  04E6  0008               	return
  1810  04E7  3A25               	xorlw	37
  1811  04E8  1903               	skipnz
  1812  04E9  2CEF               	goto	l3086
  1813  04EA  0839               	movf	printf@c,w
  1814  04EB  256B  120A  118A   	fcall	_putch
  1815  04EE  2CDB               	goto	l3126
  1816  04EF                     l3086:	
  1817  04EF  01B2               	clrf	printf@flag
  1818  04F0  0833               	movf	printf@f,w
  1819  04F1  0AB3               	incf	printf@f,f
  1820  04F2  0084               	movwf	4
  1821  04F3  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  1822  04F8  00B9               	movwf	printf@c
  1823                           
  1824                           ; Switch size 1, requested type "space"
  1825                           ; Number of cases is 3, Range of values is 0 to 105
  1826                           ; switch strategies available:
  1827                           ; Name         Instructions Cycles
  1828                           ; simple_byte           10     6 (average)
  1829                           ; jumptable            260     6 (fixed)
  1830                           ; rangetable           110     6 (fixed)
  1831                           ; spacedrange          218     9 (fixed)
  1832                           ; locatedrange         106     3 (fixed)
  1833                           ;	Chosen strategy is simple_byte
  1834  04F9  3A00               	xorlw	0	; case 0
  1835  04FA  1903               	skipnz
  1836  04FB  2D6A               	goto	l1145
  1837  04FC  3A64               	xorlw	100	; case 100
  1838  04FD  1903               	skipnz
  1839  04FE  2D03               	goto	l3092
  1840  04FF  3A0D               	xorlw	13	; case 105
  1841  0500  1903               	skipnz
  1842  0501  2D03               	goto	l3092
  1843  0502  2CDB               	goto	l3126
  1844  0503                     l3092:	
  1845  0503  0831               	movf	printf@ap,w
  1846  0504  0084               	movwf	4
  1847  0505  0800               	movf	0,w
  1848  0506  00B5               	movwf	printf@_val
  1849  0507  0A84               	incf	4,f
  1850  0508  0800               	movf	0,w
  1851  0509  00B6               	movwf	printf@_val+1
  1852  050A  0AB1               	incf	printf@ap,f
  1853  050B  0AB1               	incf	printf@ap,f
  1854  050C  1FB6               	btfss	printf@_val+1,7
  1855  050D  2D15               	goto	l3102
  1856  050E  3003               	movlw	3
  1857  050F  04B2               	iorwf	printf@flag,f
  1858  0510  09B5               	comf	printf@_val,f
  1859  0511  09B6               	comf	printf@_val+1,f
  1860  0512  0AB5               	incf	printf@_val,f
  1861  0513  1903               	skipnz
  1862  0514  0AB6               	incf	printf@_val+1,f
  1863  0515                     l3102:	
  1864  0515  01B9               	clrf	printf@c
  1865  0516  0AB9               	incf	printf@c,f
  1866  0517                     l3106:	
  1867  0517  1003               	clrc
  1868  0518  0D39               	rlf	printf@c,w
  1869  0519  3E01               	addlw	low (_dpowers-__stringbase)
  1870  051A  0084               	movwf	4
  1871  051B  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  1872  0520  00AF               	movwf	??_printf
  1873  0521  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  1874  0526  00B0               	movwf	??_printf+1
  1875  0527  0236               	subwf	printf@_val+1,w
  1876  0528  1D03               	skipz
  1877  0529  2D2C               	goto	u615
  1878  052A  082F               	movf	??_printf,w
  1879  052B  0235               	subwf	printf@_val,w
  1880  052C                     u615:	
  1881  052C  1C03               	btfss	3,0
  1882  052D  2D33               	goto	l3114
  1883  052E  0AB9               	incf	printf@c,f
  1884  052F  0839               	movf	printf@c,w
  1885  0530  3A05               	xorlw	5
  1886  0531  1D03               	skipz
  1887  0532  2D17               	goto	l3106
  1888  0533                     l3114:	
  1889  0533  0832               	movf	printf@flag,w
  1890  0534  3903               	andlw	3
  1891  0535  1903               	btfsc	3,2
  1892  0536  2D3B               	goto	l3118
  1893  0537  302D               	movlw	45
  1894  0538  256B  120A  118A   	fcall	_putch
  1895  053B                     l3118:	
  1896  053B  0839               	movf	printf@c,w
  1897  053C  00B4               	movwf	printf@prec
  1898  053D  2D66               	goto	l3124
  1899  053E                     l3120:	
  1900  053E  300A               	movlw	10
  1901  053F  00F7               	movwf	?___lwmod
  1902  0540  01F8               	clrf	?___lwmod+1
  1903  0541  1003               	clrc
  1904  0542  0D34               	rlf	printf@prec,w
  1905  0543  3E01               	addlw	low (_dpowers-__stringbase)
  1906  0544  0084               	movwf	4
  1907  0545  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  1908  054A  00F0               	movwf	?___lwdiv
  1909  054B  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  1910  0550  00F1               	movwf	?___lwdiv+1
  1911  0551  0836               	movf	printf@_val+1,w
  1912  0552  00F3               	movwf	?___lwdiv+3
  1913  0553  0835               	movf	printf@_val,w
  1914  0554  00F2               	movwf	?___lwdiv+2
  1915  0555  2571  120A  118A   	fcall	___lwdiv
  1916  0558  0871               	movf	?___lwdiv+1,w
  1917  0559  00FA               	movwf	?___lwmod+3
  1918  055A  0870               	movf	?___lwdiv,w
  1919  055B  00F9               	movwf	?___lwmod+2
  1920  055C  259B  120A  118A   	fcall	___lwmod
  1921  055F  0877               	movf	?___lwmod,w
  1922  0560  3E30               	addlw	48
  1923  0561  00B9               	movwf	printf@c
  1924  0562  0839               	movf	printf@c,w
  1925  0563  256B  120A  118A   	fcall	_putch
  1926  0566                     l3124:	
  1927  0566  03B4               	decf	printf@prec,f
  1928  0567  0F34               	incfsz	printf@prec,w
  1929  0568  2D3E               	goto	l3120
  1930  0569  2CDB               	goto	l3126
  1931  056A                     l1145:	
  1932  056A  0008               	return
  1933  056B                     __end_of_printf:	
  1934  056B                     __ptext344:	
  1935 ;; =============== function _getch ends ============
  1936                           
  1937                           
  1938 ;; *************** function _putch *****************
  1939 ;; Defined at:
  1940 ;;		line 36 in file "C:\Users\Jorge\OneDrive\Escritorio\Entregar\MAT_ADC\COMADC\COMADC.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;  byte            1    wreg     unsigned char 
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;  byte            1    0[COMMON] unsigned char 
  1945 ;; Return value:  Size  Location     Type
  1946 ;;		None               void
  1947 ;; Registers used:
  1948 ;;		wreg
  1949 ;; Tracked objects:
  1950 ;;		On entry : 17F/0
  1951 ;;		On exit  : 17F/0
  1952 ;;		Unchanged: FFE80/0
  1953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1954 ;;      Params:         0       0       0       0       0
  1955 ;;      Locals:         1       0       0       0       0
  1956 ;;      Temps:          0       0       0       0       0
  1957 ;;      Totals:         1       0       0       0       0
  1958 ;;Total ram usage:        1 bytes
  1959 ;; Hardware stack levels used:    1
  1960 ;; This function calls:
  1961 ;;		Nothing
  1962 ;; This function is called by:
  1963 ;;		_printf
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966  056B                     _putch:	
  1967                           
  1968                           ; Regs used in _putch: [wreg]
  1969                           ;putch@byte stored from wreg
  1970  056B  00F0               	movwf	putch@byte
  1971  056C                     l1049:	
  1972                           ;COMADC.c: 38: while(!TXIF)
  1973                           
  1974  056C  1E0C               	btfss	12,4
  1975  056D  2D6C               	goto	l1049
  1976                           
  1977                           ;COMADC.c: 40: TXREG = byte;
  1978  056E  0870               	movf	putch@byte,w
  1979  056F  0099               	movwf	25	;volatile
  1980  0570  0008               	return
  1981  0571                     __end_of_putch:	
  1982  0571                     __ptext340:	
  1983 ;; =============== function ___lwmod ends ============
  1984                           
  1985                           
  1986 ;; *************** function ___lwdiv *****************
  1987 ;; Defined at:
  1988 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwdiv.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  divisor         2    0[COMMON] unsigned int 
  1991 ;;  dividend        2    2[COMMON] unsigned int 
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;  quotient        2    4[COMMON] unsigned int 
  1994 ;;  counter         1    6[COMMON] unsigned char 
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  2    0[COMMON] unsigned int 
  1997 ;; Registers used:
  1998 ;;		wreg, status,2, status,0
  1999 ;; Tracked objects:
  2000 ;;		On entry : 17F/0
  2001 ;;		On exit  : 17F/0
  2002 ;;		Unchanged: FFE80/0
  2003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2004 ;;      Params:         4       0       0       0       0
  2005 ;;      Locals:         3       0       0       0       0
  2006 ;;      Temps:          0       0       0       0       0
  2007 ;;      Totals:         7       0       0       0       0
  2008 ;;Total ram usage:        7 bytes
  2009 ;; Hardware stack levels used:    1
  2010 ;; This function calls:
  2011 ;;		Nothing
  2012 ;; This function is called by:
  2013 ;;		_printf
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016  0571                     ___lwdiv:	
  2017                           
  2018                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2019  0571  01F4               	clrf	___lwdiv@quotient
  2020  0572  01F5               	clrf	___lwdiv@quotient+1
  2021  0573  0871               	movf	___lwdiv@divisor+1,w
  2022  0574  0470               	iorwf	___lwdiv@divisor,w
  2023  0575  1903               	skipnz
  2024  0576  2D96               	goto	l3028
  2025  0577  01F6               	clrf	___lwdiv@counter
  2026  0578                     L3:	
  2027  0578  0AF6               	incf	___lwdiv@counter,f
  2028  0579  1BF1               	btfsc	___lwdiv@divisor+1,7
  2029  057A  2D7F               	goto	l3016
  2030  057B  1003               	clrc
  2031  057C  0DF0               	rlf	___lwdiv@divisor,f
  2032  057D  0DF1               	rlf	___lwdiv@divisor+1,f
  2033  057E  2D78               	goto	L3
  2034  057F                     l3016:	
  2035  057F  1003               	clrc
  2036  0580  0DF4               	rlf	___lwdiv@quotient,f
  2037  0581  0DF5               	rlf	___lwdiv@quotient+1,f
  2038  0582  0871               	movf	___lwdiv@divisor+1,w
  2039  0583  0273               	subwf	___lwdiv@dividend+1,w
  2040  0584  1D03               	skipz
  2041  0585  2D88               	goto	u465
  2042  0586  0870               	movf	___lwdiv@divisor,w
  2043  0587  0272               	subwf	___lwdiv@dividend,w
  2044  0588                     u465:	
  2045  0588  1C03               	skipc
  2046  0589  2D92               	goto	L4
  2047  058A  0870               	movf	___lwdiv@divisor,w
  2048  058B  02F2               	subwf	___lwdiv@dividend,f
  2049  058C  0871               	movf	___lwdiv@divisor+1,w
  2050  058D  1C03               	skipc
  2051  058E  03F3               	decf	___lwdiv@dividend+1,f
  2052  058F  02F3               	subwf	___lwdiv@dividend+1,f
  2053  0590  1474               	bsf	___lwdiv@quotient,0
  2054  0591  1003               	clrc
  2055  0592                     L4:	
  2056  0592  0CF1               	rrf	___lwdiv@divisor+1,f
  2057  0593  0CF0               	rrf	___lwdiv@divisor,f
  2058  0594  0BF6               	decfsz	___lwdiv@counter,f
  2059  0595  2D7F               	goto	l3016
  2060  0596                     l3028:	
  2061  0596  0875               	movf	___lwdiv@quotient+1,w
  2062  0597  00F1               	movwf	?___lwdiv+1
  2063  0598  0874               	movf	___lwdiv@quotient,w
  2064  0599  00F0               	movwf	?___lwdiv
  2065  059A  0008               	return
  2066  059B                     __end_of___lwdiv:	
  2067  059B                     __ptext339:	
  2068 ;; =============== function ___ftpack ends ============
  2069                           
  2070                           
  2071 ;; *************** function ___lwmod *****************
  2072 ;; Defined at:
  2073 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwmod.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;  divisor         2    7[COMMON] unsigned int 
  2076 ;;  dividend        2    9[COMMON] unsigned int 
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;  counter         1   11[COMMON] unsigned char 
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  2    7[COMMON] unsigned int 
  2081 ;; Registers used:
  2082 ;;		wreg, status,2, status,0
  2083 ;; Tracked objects:
  2084 ;;		On entry : 17F/0
  2085 ;;		On exit  : 17F/0
  2086 ;;		Unchanged: FFE80/0
  2087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2088 ;;      Params:         4       0       0       0       0
  2089 ;;      Locals:         1       0       0       0       0
  2090 ;;      Temps:          0       0       0       0       0
  2091 ;;      Totals:         5       0       0       0       0
  2092 ;;Total ram usage:        5 bytes
  2093 ;; Hardware stack levels used:    1
  2094 ;; This function calls:
  2095 ;;		Nothing
  2096 ;; This function is called by:
  2097 ;;		_printf
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100  059B                     ___lwmod:	
  2101                           
  2102                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2103  059B  0878               	movf	___lwmod@divisor+1,w
  2104  059C  0477               	iorwf	___lwmod@divisor,w
  2105  059D  1903               	skipnz
  2106  059E  2DBA               	goto	l3048
  2107  059F  01FB               	clrf	___lwmod@counter
  2108  05A0                     L1:	
  2109  05A0  0AFB               	incf	___lwmod@counter,f
  2110  05A1  1BF8               	btfsc	___lwmod@divisor+1,7
  2111  05A2  2DA7               	goto	l3040
  2112  05A3  1003               	clrc
  2113  05A4  0DF7               	rlf	___lwmod@divisor,f
  2114  05A5  0DF8               	rlf	___lwmod@divisor+1,f
  2115  05A6  2DA0               	goto	L1
  2116  05A7                     l3040:	
  2117  05A7  0878               	movf	___lwmod@divisor+1,w
  2118  05A8  027A               	subwf	___lwmod@dividend+1,w
  2119  05A9  1D03               	skipz
  2120  05AA  2DAD               	goto	u505
  2121  05AB  0877               	movf	___lwmod@divisor,w
  2122  05AC  0279               	subwf	___lwmod@dividend,w
  2123  05AD                     u505:	
  2124  05AD  1C03               	skipc
  2125  05AE  2DB6               	goto	L2
  2126  05AF  0877               	movf	___lwmod@divisor,w
  2127  05B0  02F9               	subwf	___lwmod@dividend,f
  2128  05B1  0878               	movf	___lwmod@divisor+1,w
  2129  05B2  1C03               	skipc
  2130  05B3  03FA               	decf	___lwmod@dividend+1,f
  2131  05B4  02FA               	subwf	___lwmod@dividend+1,f
  2132  05B5  1003               	clrc
  2133  05B6                     L2:	
  2134  05B6  0CF8               	rrf	___lwmod@divisor+1,f
  2135  05B7  0CF7               	rrf	___lwmod@divisor,f
  2136  05B8  0BFB               	decfsz	___lwmod@counter,f
  2137  05B9  2DA7               	goto	l3040
  2138  05BA                     l3048:	
  2139  05BA  087A               	movf	___lwmod@dividend+1,w
  2140  05BB  00F8               	movwf	?___lwmod+1
  2141  05BC  0879               	movf	___lwmod@dividend,w
  2142  05BD  00F7               	movwf	?___lwmod
  2143  05BE  0008               	return
  2144  05BF                     __end_of___lwmod:	
  2145                           
  2146                           	psect	text342
  2147  045C                     __ptext342:	
  2148 ;; =============== function _msecbase ends ============
  2149                           
  2150                           
  2151 ;; *************** function _init_comms *****************
  2152 ;; Defined at:
  2153 ;;		line 50 in file "C:\Users\Jorge\OneDrive\Escritorio\Entregar\MAT_ADC\COMADC\COMADC.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;		None
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;		None
  2158 ;; Return value:  Size  Location     Type
  2159 ;;		None               void
  2160 ;; Registers used:
  2161 ;;		wreg, status,2
  2162 ;; Tracked objects:
  2163 ;;		On entry : 17F/0
  2164 ;;		On exit  : 17F/60
  2165 ;;		Unchanged: FFE80/0
  2166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2167 ;;      Params:         0       0       0       0       0
  2168 ;;      Locals:         0       0       0       0       0
  2169 ;;      Temps:          0       0       0       0       0
  2170 ;;      Totals:         0       0       0       0       0
  2171 ;;Total ram usage:        0 bytes
  2172 ;; Hardware stack levels used:    1
  2173 ;; This function calls:
  2174 ;;		Nothing
  2175 ;; This function is called by:
  2176 ;;		_main
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179  045C                     _init_comms:	
  2180                           
  2181                           ;COMADC.c: 51: TRISC7 = 1;
  2182                           
  2183                           ; Regs used in _init_comms: [wreg+status,2]
  2184  045C  1683               	bsf	3,5	;RP0=1, select bank1
  2185  045D  3019               	movlw	25
  2186  045E  1787               	bsf	7,7
  2187                           
  2188                           ;COMADC.c: 52: TRISC6 = 0;
  2189  045F  1307               	bcf	7,6
  2190                           
  2191                           ;COMADC.c: 53: SPBRG = 0x19;
  2192  0460  0099               	movwf	25	;volatile
  2193                           
  2194                           ;COMADC.c: 55: RCSTA = 0x90;
  2195  0461  3090               	movlw	144
  2196  0462  1283               	bcf	3,5	;RP0=0, select bank0
  2197  0463  0098               	movwf	24	;volatile
  2198                           
  2199                           ;COMADC.c: 56: TXSTA = 0x26;
  2200  0464  3026               	movlw	38
  2201  0465  1683               	bsf	3,5	;RP0=1, select bank1
  2202  0466  0098               	movwf	24	;volatile
  2203                           
  2204                           ;COMADC.c: 57: BAUDCTL = 0;
  2205  0467  1703               	bsf	3,6	;RP1=1, select bank3
  2206  0468  0187               	clrf	7	;volatile
  2207  0469  0008               	return
  2208  046A                     __end_of_init_comms:	
  2209                           
  2210                           	psect	text343
  2211  0456                     __ptext343:	
  2212 ;; =============== function _init_comms ends ============
  2213                           
  2214                           
  2215 ;; *************** function _getch *****************
  2216 ;; Defined at:
  2217 ;;		line 43 in file "C:\Users\Jorge\OneDrive\Escritorio\Entregar\MAT_ADC\COMADC\COMADC.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;		None
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;		None
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      unsigned char 
  2224 ;; Registers used:
  2225 ;;		wreg
  2226 ;; Tracked objects:
  2227 ;;		On entry : 11F/20
  2228 ;;		On exit  : 17F/0
  2229 ;;		Unchanged: FFE80/0
  2230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2231 ;;      Params:         0       0       0       0       0
  2232 ;;      Locals:         0       0       0       0       0
  2233 ;;      Temps:          0       0       0       0       0
  2234 ;;      Totals:         0       0       0       0       0
  2235 ;;Total ram usage:        0 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; This function calls:
  2238 ;;		Nothing
  2239 ;; This function is called by:
  2240 ;;		_main
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243  0456                     _getch:	
  2244  0456                     l1055:	
  2245                           ;COMADC.c: 45: while(!RCIF)
  2246                           
  2247                           ; Regs used in _getch: [wreg]
  2248                           
  2249  0456  1283               	bcf	3,5	;RP0=0, select bank0
  2250  0457  1303               	bcf	3,6	;RP1=0, select bank0
  2251  0458  1E8C               	btfss	12,5
  2252  0459  2C56               	goto	l1055
  2253                           
  2254                           ;COMADC.c: 47: return RCREG;
  2255                           ;	Return value of _getch is never used
  2256  045A  081A               	movf	26,w	;volatile
  2257  045B  0008               	return
  2258  045C                     __end_of_getch:	
  2259                           
  2260                           	psect	text345
  2261  0000                     __ptext345:	
  2262 ;; =============== function _putch ends ============
  2263                           
  2264  007E                     btemp	set	126	;btemp
  2265  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Tue Jun 07 00:07:30 2022

                    pc 0002                     fsr 0004                    _ADC 05E1                    _RC0 0038  
                  _RC3 003B                    _RC4 003C                    _PR2 0092                    u505 05AD  
                  u615 052C                    u465 0588                    u805 0674                    u665 075B  
                  u765 05F4                    u785 0634                    _PWM 05BF                    fsr0 0004  
                  indf 0000                   ?_ADC 0070                   ?_PWM 0070                   l1103 0000  
                 l1112 0780                   l1115 0000                   l1052 0000                   l1061 0000  
                 l1109 0000                   l1070 05E4                   l1055 0456                   l3000 0000  
                 l1049 056C                   l1145 056A                   l1073 0624                   l1058 0000  
                 l3002 0000                   l1082 0000                   l3004 0000                   l3100 0000  
                 l1076 0664                   l1085 0000                   l3022 0000                   l3006 0000  
                 l3102 0515                   l1079 0000                   l3016 057F                   l3008 0000  
                 l3040 05A7                   l3032 0000                   l3120 053E                   l3112 0000  
                 l1088 0000                   l3026 0000                   l3018 0000                   l3122 0000  
                 l3114 0533                   l3106 0517                   l3210 0000                   l3202 0000  
                 l2147 0000                   l3028 0596                   l3060 0790                   l3052 0000  
                 l3124 0566                   l3132 0000                   l3220 0000                   l3212 0000  
                 l3204 0000                   l3300 0000                   l2157 0000                   l3046 0000  
                 l3070 07AE                   l3062 0795                   l3054 0000                   l3118 053B  
                 l3126 04DB                   l3134 0755                   l3150 0000                   l3142 06BF  
                 l3230 0000                   l3222 0000                   l3206 0000                   l3310 0000  
                 l3302 0000                   l3048 05BA                   l3064 079A                   l3056 078C  
                 l3080 0000                   l3128 0753                   l3160 0000                   l3152 0000  
                 l3136 0000                   l3232 0000                   l3224 0000                   l3216 0000  
                 l3208 0000                   l3240 0000                   l3312 0000                   l3304 0000  
                 l3320 0000                   l3074 0000                   l3066 07A4                   l3090 0000  
                 l3170 06EB                   l3162 0000                   l3154 0000                   l3234 0000  
                 l3226 0000                   l3218 0000                   l3250 0000                   l3242 0000  
                 l3306 0000                   l3330 0000                   l3322 0000                   l3314 0000  
                 l3076 0000                   l3068 07A9                   l3092 0503                   l3172 0000  
                 l3164 0000                   l3156 0000                   l3148 06D0                   l3236 0000  
                 l3252 0000                   l3244 0000                   l3260 0000                   l3308 0000  
                 l3340 0000                   l3332 0000                   l3324 0000                   l3316 0000  
                 l2357 0000                   l3078 0000                   l3094 0000                   l3086 04EF  
                 l3182 0701                   l3174 0000                   l3166 06E1                   l3158 0000  
                 l3254 0000                   l3246 0000                   l3238 0000                   l3262 0000  
                 l3270 0000                   l3342 0000                   l3334 0000                   l3326 0000  
                 l3318 0000                   l3096 0000                   l3184 0000                   l3176 0000  
                 l3192 0000                   l3248 0000                   l3264 0000                   l3256 0000  
                 l3272 0000                   l3280 0000                   l3344 0000                   l3336 04A0  
                 l3328 0000                   l3186 0000                   l3178 06F7                   l3266 0000  
                 l3258 0000                   l3290 0000                   l3282 0000                   l3274 0000  
                 l3346 0000                   l3338 0000                   l3188 0000                   l3196 0000  
                 l3268 0000                   l3292 0000                   l3284 0000                   l3276 0000  
                 l3348 0000                   l3198 0000                   l3294 0000                   l3286 0000  
                 l3278 0000                   l3296 0000                   l3288 0000                   l3298 0000  
                 l2992 0000                   l2988 0000                   l2998 0000                   _ADFM 04FF  
                 STR_1 0013                   STR_2 0013                   STR_3 0013                   _T0IF 005A  
                 _RCIF 0065                   _TMR0 0001                   _TXIF 0064                   _main 047D  
         ___ftpack@arg 0070                   _pwm1 0020                   _pwm2 0023                   _pwm3 0026  
         ___ftpack@exp 0073                   btemp 007E                   start 0000           ___ftmul@cntr 0036  
         ___ftmul@sign 0037                  ??_ADC 0038                  ??_PWM 0074                  ?_main 0070  
                _ANSEL 0188        __end_of___ftmul 071D                  _T2CON 0012        __end_of___lwdiv 059B  
      __end_of___lwmod 05BF                  _RCREG 001A                  _RCSTA 0018                  _SPBRG 0099  
                _PORTD 0008                  _TRISA 0085                  _TRISB 0086                  _TRISC 0087  
                _TRISD 0088                  _TRISE 0089                  _TXREG 0019                  _TXSTA 0098  
                _getch 0456                  _vadc1 0029                  _vadc2 002B                  _vadc3 002D  
                _pause 0753          ___ftpack@sign 0074                  _putch 056B                  pclath 000A  
                status 0003                  wtemp0 007E           __end_of_main 04D8                 ??_main 007E  
               ?_getch 0070                 _ADCON0 001F                 _ADRESH 001E                 _ADRESL 009E  
               _CCPR1L 0015                 ?_pause 0070                 _CCPR2L 001B                 ?_putch 0070  
     __end_of___ftpack 07C2                 _ANSELH 0189       __end_of___lwtoft 06AE                 _TRISC6 043E  
               _TRISC7 043F       __end_of_lcd_init 0753              ??___ftmul 002F              ??___lwdiv 0074  
            ??___lwmod 007B                 _printf 04D8       __end_of_msecbase 0784  ___ftmul@f3_as_product 0033  
               pause@x 0072             ___ftmul@f1 0078             ___ftmul@f2 007B         __pcstackCOMMON 0070  
        __end_of_getch 045C          __end_of_pause 0764          __end_of_putch 0571             ___lwtoft@c 0078  
   __size_of_lcd_clear 0009                ??_getch 0070     __size_of_lcd_write 0013                ??_pause 0072  
              ??_putch 0070             __pbssBANK0 0020             __pmaintext 047D                _CCP1CON 0017  
              _CCP2CON 001D                _BAUDCTL 0187              ?___ftpack 0070                ?_printf 007C  
            ?___lwtoft 0078                _GO_DONE 00F9              ?_lcd_init 0070              ?_msecbase 0070  
    __end_of_lcd_clear 07CB      __end_of_lcd_write 0777                ___ftmul 06AE                ___lwdiv 0571  
              ___lwmod 059B             _init_comms 045C             ??___ftpack 0075        __size_of_printf 0093  
           ??___lwtoft 007B           __size_of_ADC 00BD           __size_of_PWM 0022                _dpowers 0009  
           ??_lcd_init 0075   end_of_initialization 0479             ??_msecbase 0070                printf@c 0039  
              printf@f 0033             lcd_write@c 0074            ___ftmul@exp 0032            ?_init_comms 0070  
       __end_of_printf 056B    start_initialization 046A            __end_of_ADC 069E            __end_of_PWM 05E1  
             ??_printf 002F      __size_of___ftpack 003E           pause@usvalue 0070      __size_of___lwtoft 0010  
        __pcstackBANK0 002F    __size_of_init_comms 000E      __size_of_lcd_init 0036       ___lwdiv@dividend 0072  
    __size_of_msecbase 000D              __ptext330 07C2              __ptext331 0764              __ptext340 0571  
            __ptext332 05BF              __ptext341 0777              __ptext333 05E1              __ptext342 045C  
            __ptext334 069E              __ptext343 0456              __ptext335 06AE              __ptext344 056B  
            __ptext336 0753              __ptext345 0000              __ptext337 04D8              __ptext329 071D  
            __ptext338 0784              __ptext339 059B               ?___ftmul 0078               ?___lwdiv 0070  
             ?___lwmod 0077              _lcd_clear 07C2              __pstrings 0003              _lcd_write 0764  
     ___lwdiv@quotient 0074         __size_of_getch 0006         __size_of_pause 0011         __size_of_putch 0006  
           ?_lcd_clear 0070            __stringbase 0008             ?_lcd_write 0070             printf@_val 0035  
           printf@flag 0032             printf@prec 0034           ??_init_comms 0070       __size_of___ftmul 006F  
     __size_of___lwdiv 002A       __size_of___lwmod 0024               ___ftpack 0784               ___lwtoft 069E  
      ___lwdiv@divisor 0070        ___lwdiv@counter 0076               _lcd_init 071D          __size_of_main 005B  
   __end_of_init_comms 046A               _msecbase 0777            ??_lcd_clear 0075            ??_lcd_write 0074  
            putch@byte 0070       ___lwmod@dividend 0079              stringcode 0003               printf@ap 0031  
           _OPTION_REG 0081        ___lwmod@divisor 0077        ___lwmod@counter 007B               stringdir 0003  
             stringtab 0003  
