

HI-TECH Software PIC PRO Macro Assembler V9.82 build 9453 
                                                                                               Tue Jun 07 14:53:43 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 9453
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,delta=2
    14                           	psect	text560,local,class=CODE,delta=2
    15                           	psect	text562,local,class=CODE,delta=2
    16                           	psect	text564,local,class=CODE,delta=2
    17                           	psect	text566,local,class=CODE,delta=2
    18                           	psect	text584,local,class=CODE,delta=2
    19                           	psect	text588,local,class=CODE,delta=2
    20                           	psect	text589,local,class=CODE,delta=2
    21                           	psect	pa_nodes,global,class=CODE,delta=2
    22                           	dabs	1,0x7E,2
    23  000A                     	;#
    24                           
    25                           	psect	config
    26  2007  E0F4               	dw	57588	;#
    27  2008  FFFF               	dw	65535	;#
    28                           
    29                           	psect	strings
    30  0800                     __pstrings:	
    31  0800                     stringtab:	
    32                           ;	global	stringdir,stringtab,__stringbase
    33                           
    34                           
    35                           ;	String table - string pointers are 1 byte each
    36  0800  1BFF               	btfsc	btemp+1,7
    37  0801  280A               	ljmp	stringcode
    38  0802  1383               	bcf	3,7
    39  0803  187F               	btfsc	btemp+1,0
    40  0804  1783               	bsf	3,7
    41  0805  0800               	movf	0,w
    42  0806  0A84               	incf	4,f
    43  0807  1903               	skipnz
    44  0808  0AFF               	incf	btemp+1,f
    45  0809  0008               	return
    46  080A                     stringcode:	
    47  080A                     stringdir:	
    48  080A  3008               	movlw	high stringdir
    49  080B  008A               	movwf	10
    50  080C  0804               	movf	4,w
    51  080D  0A84               	incf	4,f
    52  080E  0782               	addwf	2,f
    53  080F                     __stringbase:	
    54  080F  3400               	retlw	0
    55  0810                     __npowers_:	
    56  0810  3400               	retlw	0
    57  0811  3480               	retlw	128
    58  0812  343F               	retlw	63
    59  0813  34CD               	retlw	205
    60  0814  34CC               	retlw	204
    61  0815  343D               	retlw	61
    62  0816  34D7               	retlw	215
    63  0817  3423               	retlw	35
    64  0818  343C               	retlw	60
    65  0819  3412               	retlw	18
    66  081A  3483               	retlw	131
    67  081B  343A               	retlw	58
    68  081C  34B7               	retlw	183
    69  081D  34D1               	retlw	209
    70  081E  3438               	retlw	56
    71  081F  34C6               	retlw	198
    72  0820  3427               	retlw	39
    73  0821  3437               	retlw	55
    74  0822  3438               	retlw	56
    75  0823  3486               	retlw	134
    76  0824  3435               	retlw	53
    77  0825  34C0               	retlw	192
    78  0826  34D6               	retlw	214
    79  0827  3433               	retlw	51
    80  0828  34CC               	retlw	204
    81  0829  342B               	retlw	43
    82  082A  3432               	retlw	50
    83  082B  3470               	retlw	112
    84  082C  3489               	retlw	137
    85  082D  3430               	retlw	48
    86  082E  34E7               	retlw	231
    87  082F  34DB               	retlw	219
    88  0830  342E               	retlw	46
    89  0831  34E5               	retlw	229
    90  0832  343C               	retlw	60
    91  0833  341E               	retlw	30
    92  0834  3442               	retlw	66
    93  0835  34A2               	retlw	162
    94  0836  340D               	retlw	13
    95  0837                     __powers_:	
    96  0837  3400               	retlw	0
    97  0838  3480               	retlw	128
    98  0839  343F               	retlw	63
    99  083A  3400               	retlw	0
   100  083B  3420               	retlw	32
   101  083C  3441               	retlw	65
   102  083D  3400               	retlw	0
   103  083E  34C8               	retlw	200
   104  083F  3442               	retlw	66
   105  0840  3400               	retlw	0
   106  0841  347A               	retlw	122
   107  0842  3444               	retlw	68
   108  0843  3440               	retlw	64
   109  0844  341C               	retlw	28
   110  0845  3446               	retlw	70
   111  0846  3450               	retlw	80
   112  0847  34C3               	retlw	195
   113  0848  3447               	retlw	71
   114  0849  3424               	retlw	36
   115  084A  3474               	retlw	116
   116  084B  3449               	retlw	73
   117  084C  3497               	retlw	151
   118  084D  3418               	retlw	24
   119  084E  344B               	retlw	75
   120  084F  34BC               	retlw	188
   121  0850  34BE               	retlw	190
   122  0851  344C               	retlw	76
   123  0852  346B               	retlw	107
   124  0853  346E               	retlw	110
   125  0854  344E               	retlw	78
   126  0855  3403               	retlw	3
   127  0856  3415               	retlw	21
   128  0857  3450               	retlw	80
   129  0858  3479               	retlw	121
   130  0859  34AD               	retlw	173
   131  085A  3460               	retlw	96
   132  085B  34F3               	retlw	243
   133  085C  3449               	retlw	73
   134  085D  3471               	retlw	113
   135  085E                     _dpowers:	
   136  085E  3401               	retlw	1
   137  085F  3400               	retlw	0
   138  0860  3400               	retlw	0
   139  0861  3400               	retlw	0
   140  0862  340A               	retlw	10
   141  0863  3400               	retlw	0
   142  0864  3400               	retlw	0
   143  0865  3400               	retlw	0
   144  0866  3464               	retlw	100
   145  0867  3400               	retlw	0
   146  0868  3400               	retlw	0
   147  0869  3400               	retlw	0
   148  086A  34E8               	retlw	232
   149  086B  3403               	retlw	3
   150  086C  3400               	retlw	0
   151  086D  3400               	retlw	0
   152  086E  3410               	retlw	16
   153  086F  3427               	retlw	39
   154  0870  3400               	retlw	0
   155  0871  3400               	retlw	0
   156  0872  34A0               	retlw	160
   157  0873  3486               	retlw	134
   158  0874  3401               	retlw	1
   159  0875  3400               	retlw	0
   160  0876  3440               	retlw	64
   161  0877  3442               	retlw	66
   162  0878  340F               	retlw	15
   163  0879  3400               	retlw	0
   164  087A  3480               	retlw	128
   165  087B  3496               	retlw	150
   166  087C  3498               	retlw	152
   167  087D  3400               	retlw	0
   168  087E  3400               	retlw	0
   169  087F  34E1               	retlw	225
   170  0880  34F5               	retlw	245
   171  0881  3405               	retlw	5
   172  0882  3400               	retlw	0
   173  0883  34CA               	retlw	202
   174  0884  349A               	retlw	154
   175  0885  343B               	retlw	59
   176  001F                     _ADCON0	set	31
   177  001E                     _ADRESH	set	30
   178  0017                     _CCP1CON	set	23
   179  001D                     _CCP2CON	set	29
   180  0015                     _CCPR1L	set	21
   181  001B                     _CCPR2L	set	27
   182  0008                     _PORTD	set	8
   183  0018                     _RCSTA	set	24
   184  0012                     _T2CON	set	18
   185  0001                     _TMR0	set	1
   186  00F9                     _GO_DONE	set	249
   187  0038                     _RC0	set	56
   188  003B                     _RC3	set	59
   189  003C                     _RC4	set	60
   190  005A                     _T0IF	set	90
   191  0081                     _OPTION_REG	set	129
   192  0092                     _PR2	set	146
   193  0099                     _SPBRG	set	153
   194  0085                     _TRISA	set	133
   195  0086                     _TRISB	set	134
   196  0087                     _TRISC	set	135
   197  0088                     _TRISD	set	136
   198  0089                     _TRISE	set	137
   199  0098                     _TXSTA	set	152
   200  04FF                     _ADFM	set	1279
   201  043E                     _TRISC6	set	1086
   202  043F                     _TRISC7	set	1087
   203  0188                     _ANSEL	set	392
   204  0189                     _ANSELH	set	393
   205  0187                     _BAUDCTL	set	391
   206  009E                     _ADRESL	set	158
   207  0886                     STR_2:	
   208  0886  3450               	retlw	80	;'P'
   209  0887  3457               	retlw	87	;'W'
   210  0888  344D               	retlw	77	;'M'
   211  0889  3431               	retlw	49	;'1'
   212  088A  343A               	retlw	58	;':'
   213  088B  3400               	retlw	0
   214  088C                     STR_6:	
   215  088C  3450               	retlw	80	;'P'
   216  088D  3457               	retlw	87	;'W'
   217  088E  344D               	retlw	77	;'M'
   218  088F  3432               	retlw	50	;'2'
   219  0890  343A               	retlw	58	;':'
   220  0891  3400               	retlw	0
   221  0892                     STR_3:	
   222  0892  3425               	retlw	37	;'%'
   223  0893  3431               	retlw	49	;'1'
   224  0894  342E               	retlw	46	;'.'
   225  0895  3433               	retlw	51	;'3'
   226  0896  3466               	retlw	102	;'f'
   227  0897  3400               	retlw	0
   228  0898                     STR_4:	
   229  0898  3435               	retlw	53	;'5'
   230  0899  343A               	retlw	58	;':'
   231  089A  3400               	retlw	0
   232  089B                     STR_8:	
   233  089B  3436               	retlw	54	;'6'
   234  089C  343A               	retlw	58	;':'
   235  089D  3400               	retlw	0
   236  089E                     STR_1:	
   237  089E  3425               	retlw	37	;'%'
   238  089F  3464               	retlw	100	;'d'
   239  08A0  3400               	retlw	0
   240  089E                     
   241                           	psect	cinit
   242  0006                     start_initialization:	
   243  0006  305E               	movlw	low __pbssBANK0
   244                           
   245                           ; Clear objects allocated to BANK0
   246  0007  1383               	bcf	3,7	;select IRP bank0
   247  0008  0084               	movwf	4
   248  0009  306D               	movlw	low (__pbssBANK0+15)
   249  000A  120A  158A  20A1   	fcall	clear_ram
      +       120A  118A         
   250                           
   251                           ; Clear objects allocated to BANK1
   252  000F  30B9               	movlw	low __pbssBANK1
   253  0010  0084               	movwf	4
   254  0011  30C8               	movlw	low (__pbssBANK1+15)
   255  0012  120A  158A  20A1   	fcall	clear_ram
   256  0015                     end_of_initialization:	
   257                           ;End of C runtime variable initialization code
   258                           
   259  0015  0183               	clrf	3
   260  0016  120A  118A  2819   	ljmp	_main	;jump to C main() function
   261                           
   262                           	psect	bssBANK0
   263  005E                     __pbssBANK0:	
   264  005E                     _vadc1:	
   265  005E                     	ds	3
   266  0061                     _vadc2:	
   267  0061                     	ds	3
   268  0064                     _pwm1:	
   269  0064                     	ds	2
   270  0066                     _pwm2:	
   271  0066                     	ds	2
   272  0068                     _carac1:	
   273  0068                     	ds	5
   274                           
   275                           	psect	bssBANK1
   276  00B9                     __pbssBANK1:	
   277  00B9                     _carac11:	
   278  00B9                     	ds	5
   279  00BE                     _carac2:	
   280  00BE                     	ds	5
   281  00C3                     _carac22:	
   282  00C3                     	ds	5
   283                           
   284                           	psect	clrtext
   285  08A1                     clear_ram:	
   286                           ;	Called with FSR containing the base address, and
   287                           ;	W with the last address+1
   288                           
   289  08A1  0064               	clrwdt	;clear the watchdog before getting into this loop
   290  08A2                     clrloop:	
   291  08A2  0180               	clrf	0	;clear RAM location pointed to by FSR
   292  08A3  0A84               	incf	4,f	;increment pointer
   293  08A4  0604               	xorwf	4,w	;XOR with final address
   294  08A5  1903               	btfsc	3,2	;have we reached the end yet?
   295  08A6  3400               	retlw	0	;all done for this memory range, return
   296  08A7  0604               	xorwf	4,w	;XOR again to restore value
   297  08A8  28A2               	goto	clrloop	;do the next byte
   298                           
   299                           	psect	cstackBANK1
   300  00A0                     __pcstackBANK1:	
   301  00A0                     _sprintf$1919:	
   302                           
   303                           ; 4 bytes @ 0x0
   304  00A0                     	ds	4
   305  00A4                     sprintf@ap:	
   306                           
   307                           ; 1 bytes @ 0x4
   308  00A4                     	ds	1
   309  00A5                     sprintf@integ:	
   310                           
   311                           ; 3 bytes @ 0x5
   312  00A5                     	ds	3
   313  00A8                     sprintf@flag:	
   314                           
   315                           ; 2 bytes @ 0x8
   316  00A8                     	ds	2
   317  00AA                     sprintf@width:	
   318                           
   319                           ; 2 bytes @ 0xA
   320  00AA                     	ds	2
   321  00AC                     sprintf@_val:	
   322                           
   323                           ; 4 bytes @ 0xC
   324  00AC                     	ds	4
   325  00B0                     sprintf@exp:	
   326                           
   327                           ; 2 bytes @ 0x10
   328  00B0                     	ds	2
   329  00B2                     sprintf@fval:	
   330                           
   331                           ; 3 bytes @ 0x12
   332  00B2                     	ds	3
   333  00B5                     sprintf@sp:	
   334                           
   335                           ; 1 bytes @ 0x15
   336  00B5                     	ds	1
   337  00B6                     sprintf@prec:	
   338                           
   339                           ; 2 bytes @ 0x16
   340  00B6                     	ds	2
   341  00B8                     sprintf@c:	
   342                           
   343                           ; 1 bytes @ 0x18
   344  00B8                     	ds	1
   345                           
   346                           	psect	cstackCOMMON
   347  0070                     __pcstackCOMMON:	
   348  0070                     ?_lcd_init:	
   349  0070                     ?_ADC:	
   350                           ; 0 bytes @ 0x0
   351                           
   352  0070                     ?_PWM:	
   353                           ; 0 bytes @ 0x0
   354                           
   355  0070                     ?_lcd_clear:	
   356                           ; 0 bytes @ 0x0
   357                           
   358  0070                     ?_lcd_goto:	
   359                           ; 0 bytes @ 0x0
   360                           
   361  0070                     ?_pause:	
   362                           ; 0 bytes @ 0x0
   363                           
   364  0070                     ?_msecbase:	
   365                           ; 0 bytes @ 0x0
   366                           
   367  0070                     ??_msecbase:	
   368                           ; 0 bytes @ 0x0
   369                           
   370  0070                     ?_isdigit:	
   371                           ; 0 bytes @ 0x0
   372                           
   373  0070                     ??_isdigit:	
   374                           ; 1 bit 
   375                           
   376  0070                     ?_init_comms:	
   377                           ; 0 bytes @ 0x0
   378                           
   379  0070                     ??_init_comms:	
   380                           ; 0 bytes @ 0x0
   381                           
   382  0070                     ?_main:	
   383                           ; 0 bytes @ 0x0
   384                           
   385  0070                     ?_lcd_write:	
   386                           ; 0 bytes @ 0x0
   387                           
   388  0070                     ?___ftge:	
   389                           ; 0 bytes @ 0x0
   390                           
   391  0070                     ?___lbmod:	
   392                           ; 1 bit 
   393                           
   394  0070                     ?___wmul:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ?___awmod:	
   398                           ; 2 bytes @ 0x0
   399                           
   400  0070                     ?___ftpack:	
   401                           ; 2 bytes @ 0x0
   402                           
   403  0070                     ?___ftneg:	
   404                           ; 3 bytes @ 0x0
   405                           
   406  0070                     ?__tdiv_to_l_:	
   407                           ; 3 bytes @ 0x0
   408                           
   409  0070                     ?__div_to_l_:	
   410                           ; 4 bytes @ 0x0
   411                           
   412  0070                     ?___lldiv:	
   413                           ; 4 bytes @ 0x0
   414                           
   415  0070                     _isdigit$2427:	
   416                           ; 4 bytes @ 0x0
   417                           
   418  0070                     ___lbmod@divisor:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     pause@usvalue:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ___wmul@multiplier:	
   425                           ; 2 bytes @ 0x0
   426                           
   427  0070                     ___awmod@divisor:	
   428                           ; 2 bytes @ 0x0
   429                           
   430  0070                     ___ftneg@f1:	
   431                           ; 2 bytes @ 0x0
   432                           
   433  0070                     ___ftge@ff1:	
   434                           ; 3 bytes @ 0x0
   435                           
   436  0070                     __tdiv_to_l_@f1:	
   437                           ; 3 bytes @ 0x0
   438                           
   439  0070                     __div_to_l_@f1:	
   440                           ; 3 bytes @ 0x0
   441                           
   442  0070                     ___ftpack@arg:	
   443                           ; 3 bytes @ 0x0
   444                           
   445  0070                     ___lldiv@divisor:	
   446                           ; 3 bytes @ 0x0
   447                           
   448                           
   449                           ; 4 bytes @ 0x0
   450  0070                     	ds	1
   451  0071                     ??___lbmod:	
   452  0071                     isdigit@c:	
   453                           ; 0 bytes @ 0x1
   454                           
   455                           
   456                           ; 1 bytes @ 0x1
   457  0071                     	ds	1
   458  0072                     ??_pause:	
   459  0072                     ___lbmod@dividend:	
   460                           ; 0 bytes @ 0x2
   461                           
   462  0072                     pause@x:	
   463                           ; 1 bytes @ 0x2
   464                           
   465  0072                     ___wmul@multiplicand:	
   466                           ; 2 bytes @ 0x2
   467                           
   468  0072                     ___awmod@dividend:	
   469                           ; 2 bytes @ 0x2
   470                           
   471                           
   472                           ; 2 bytes @ 0x2
   473  0072                     	ds	1
   474  0073                     ??___ftneg:	
   475  0073                     ___lbmod@counter:	
   476                           ; 0 bytes @ 0x3
   477                           
   478  0073                     ___ftpack@exp:	
   479                           ; 1 bytes @ 0x3
   480                           
   481  0073                     ___ftge@ff2:	
   482                           ; 1 bytes @ 0x3
   483                           
   484  0073                     __tdiv_to_l_@f2:	
   485                           ; 3 bytes @ 0x3
   486                           
   487  0073                     __div_to_l_@f2:	
   488                           ; 3 bytes @ 0x3
   489                           
   490                           
   491                           ; 3 bytes @ 0x3
   492  0073                     	ds	1
   493  0074                     ??_PWM:	
   494  0074                     ??_lcd_write:	
   495                           ; 0 bytes @ 0x4
   496                           
   497  0074                     ??___wmul:	
   498                           ; 0 bytes @ 0x4
   499                           
   500  0074                     ??___awmod:	
   501                           ; 0 bytes @ 0x4
   502                           
   503  0074                     lcd_write@c:	
   504                           ; 0 bytes @ 0x4
   505                           
   506  0074                     ___lbmod@rem:	
   507                           ; 1 bytes @ 0x4
   508                           
   509  0074                     ___awmod@counter:	
   510                           ; 1 bytes @ 0x4
   511                           
   512  0074                     ___ftpack@sign:	
   513                           ; 1 bytes @ 0x4
   514                           
   515  0074                     ___wmul@product:	
   516                           ; 1 bytes @ 0x4
   517                           
   518  0074                     ___lldiv@dividend:	
   519                           ; 2 bytes @ 0x4
   520                           
   521                           
   522                           ; 4 bytes @ 0x4
   523  0074                     	ds	1
   524  0075                     ??_lcd_init:	
   525  0075                     ??_lcd_clear:	
   526                           ; 0 bytes @ 0x5
   527                           
   528  0075                     ??_lcd_goto:	
   529                           ; 0 bytes @ 0x5
   530                           
   531  0075                     ?_lcd_puts:	
   532                           ; 0 bytes @ 0x5
   533                           
   534  0075                     ??___ftpack:	
   535                           ; 0 bytes @ 0x5
   536                           
   537  0075                     ?___lbdiv:	
   538                           ; 0 bytes @ 0x5
   539                           
   540  0075                     lcd_goto@pos:	
   541                           ; 1 bytes @ 0x5
   542                           
   543  0075                     ___lbdiv@divisor:	
   544                           ; 1 bytes @ 0x5
   545                           
   546  0075                     ___awmod@sign:	
   547                           ; 1 bytes @ 0x5
   548                           
   549  0075                     lcd_puts@s:	
   550                           ; 1 bytes @ 0x5
   551                           
   552                           
   553                           ; 2 bytes @ 0x5
   554  0075                     	ds	1
   555  0076                     ??__tdiv_to_l_:	
   556  0076                     ??__div_to_l_:	
   557                           ; 0 bytes @ 0x6
   558                           
   559  0076                     ??___lbdiv:	
   560                           ; 0 bytes @ 0x6
   561                           
   562  0076                     ??___ftge:	
   563                           ; 0 bytes @ 0x6
   564                           
   565  0076                     ?___awdiv:	
   566                           ; 0 bytes @ 0x6
   567                           
   568  0076                     ___lbdiv@dividend:	
   569                           ; 2 bytes @ 0x6
   570                           
   571  0076                     ___awdiv@divisor:	
   572                           ; 1 bytes @ 0x6
   573                           
   574                           
   575                           ; 2 bytes @ 0x6
   576  0076                     	ds	1
   577  0077                     ??_lcd_puts:	
   578  0077                     ___lbdiv@counter:	
   579                           ; 0 bytes @ 0x7
   580                           
   581                           
   582                           ; 1 bytes @ 0x7
   583  0077                     	ds	1
   584  0078                     ??___lldiv:	
   585  0078                     ?___awtoft:	
   586                           ; 0 bytes @ 0x8
   587                           
   588  0078                     ?___lltoft:	
   589                           ; 3 bytes @ 0x8
   590                           
   591  0078                     ___lbdiv@quotient:	
   592                           ; 3 bytes @ 0x8
   593                           
   594  0078                     ___awtoft@c:	
   595                           ; 1 bytes @ 0x8
   596                           
   597  0078                     ___awdiv@dividend:	
   598                           ; 2 bytes @ 0x8
   599                           
   600  0078                     ___lldiv@quotient:	
   601                           ; 2 bytes @ 0x8
   602                           
   603  0078                     ___lltoft@c:	
   604                           ; 4 bytes @ 0x8
   605                           
   606                           
   607                           ; 4 bytes @ 0x8
   608  0078                     	ds	1
   609  0079                     ?___bmul:	
   610  0079                     ___bmul@multiplicand:	
   611                           ; 1 bytes @ 0x9
   612                           
   613                           
   614                           ; 1 bytes @ 0x9
   615  0079                     	ds	1
   616  007A                     ??___bmul:	
   617  007A                     ??___awdiv:	
   618                           ; 0 bytes @ 0xA
   619                           
   620  007A                     ___bmul@product:	
   621                           ; 0 bytes @ 0xA
   622                           
   623  007A                     ___awdiv@counter:	
   624                           ; 1 bytes @ 0xA
   625                           
   626                           
   627                           ; 1 bytes @ 0xA
   628  007A                     	ds	1
   629  007B                     ??___awtoft:	
   630  007B                     ___bmul@multiplier:	
   631                           ; 0 bytes @ 0xB
   632                           
   633  007B                     ___awtoft@sign:	
   634                           ; 1 bytes @ 0xB
   635                           
   636  007B                     ___awdiv@sign:	
   637                           ; 1 bytes @ 0xB
   638                           
   639                           
   640                           ; 1 bytes @ 0xB
   641  007B                     	ds	1
   642  007C                     ??___lltoft:	
   643  007C                     ___lldiv@counter:	
   644                           ; 0 bytes @ 0xC
   645                           
   646  007C                     ___lltoft@exp:	
   647                           ; 1 bytes @ 0xC
   648                           
   649  007C                     ___awdiv@quotient:	
   650                           ; 1 bytes @ 0xC
   651                           
   652                           
   653                           ; 2 bytes @ 0xC
   654  007C                     	ds	1
   655  007D                     ??___llmod:	
   656  007D                     ___llmod@counter:	
   657                           ; 0 bytes @ 0xD
   658                           
   659                           
   660                           ; 1 bytes @ 0xD
   661  007D                     	ds	1
   662  007E                     ??_fround:	
   663  007E                     ??___ftsub:	
   664                           ; 0 bytes @ 0xE
   665                           
   666                           
   667                           	psect	cstackBANK0
   668  0020                     __pcstackBANK0:	
   669                           ; 0 bytes @ 0xE
   670                           
   671  0020                     ?___fttol:	
   672  0020                     ?___llmod:	
   673                           ; 4 bytes @ 0x0
   674                           
   675  0020                     ___fttol@f1:	
   676                           ; 4 bytes @ 0x0
   677                           
   678  0020                     ___llmod@divisor:	
   679                           ; 3 bytes @ 0x0
   680                           
   681  0020                     __tdiv_to_l_@quot:	
   682                           ; 4 bytes @ 0x0
   683                           
   684  0020                     __div_to_l_@quot:	
   685                           ; 4 bytes @ 0x0
   686                           
   687                           
   688                           ; 4 bytes @ 0x0
   689  0020                     	ds	4
   690  0024                     ??___fttol:	
   691  0024                     __tdiv_to_l_@cntr:	
   692                           ; 0 bytes @ 0x4
   693                           
   694  0024                     __div_to_l_@cntr:	
   695                           ; 1 bytes @ 0x4
   696                           
   697  0024                     ___llmod@dividend:	
   698                           ; 1 bytes @ 0x4
   699                           
   700                           
   701                           ; 4 bytes @ 0x4
   702  0024                     	ds	1
   703  0025                     __tdiv_to_l_@exp1:	
   704  0025                     __div_to_l_@exp1:	
   705                           ; 1 bytes @ 0x5
   706                           
   707                           
   708                           ; 1 bytes @ 0x5
   709  0025                     	ds	2
   710  0027                     ___fttol@sign1:	
   711                           
   712                           ; 1 bytes @ 0x7
   713  0027                     	ds	1
   714  0028                     ___fttol@lval:	
   715                           
   716                           ; 4 bytes @ 0x8
   717  0028                     	ds	4
   718  002C                     ___fttol@exp1:	
   719                           
   720                           ; 1 bytes @ 0xC
   721  002C                     	ds	1
   722  002D                     ?___ftmul:	
   723  002D                     ___ftmul@f1:	
   724                           ; 3 bytes @ 0xD
   725                           
   726                           
   727                           ; 3 bytes @ 0xD
   728  002D                     	ds	3
   729  0030                     ___ftmul@f2:	
   730                           
   731                           ; 3 bytes @ 0x10
   732  0030                     	ds	3
   733  0033                     ??___ftmul:	
   734                           
   735                           ; 0 bytes @ 0x13
   736  0033                     	ds	3
   737  0036                     ___ftmul@exp:	
   738                           
   739                           ; 1 bytes @ 0x16
   740  0036                     	ds	1
   741  0037                     ___ftmul@f3_as_product:	
   742                           
   743                           ; 3 bytes @ 0x17
   744  0037                     	ds	3
   745  003A                     ___ftmul@cntr:	
   746                           
   747                           ; 1 bytes @ 0x1A
   748  003A                     	ds	1
   749  003B                     ___ftmul@sign:	
   750                           
   751                           ; 1 bytes @ 0x1B
   752  003B                     	ds	1
   753  003C                     ?_scale:	
   754  003C                     ?___ftadd:	
   755                           ; 3 bytes @ 0x1C
   756                           
   757  003C                     ___ftadd@f1:	
   758                           ; 3 bytes @ 0x1C
   759                           
   760                           
   761                           ; 3 bytes @ 0x1C
   762  003C                     	ds	3
   763  003F                     ??_scale:	
   764  003F                     ___ftadd@f2:	
   765                           ; 0 bytes @ 0x1F
   766                           
   767                           
   768                           ; 3 bytes @ 0x1F
   769  003F                     	ds	3
   770  0042                     ??___ftadd:	
   771                           
   772                           ; 0 bytes @ 0x22
   773  0042                     	ds	1
   774  0043                     _scale$2868:	
   775                           
   776                           ; 3 bytes @ 0x23
   777  0043                     	ds	2
   778  0045                     ___ftadd@sign:	
   779                           
   780                           ; 1 bytes @ 0x25
   781  0045                     	ds	1
   782  0046                     scale@scl:	
   783  0046                     ___ftadd@exp2:	
   784                           ; 1 bytes @ 0x26
   785                           
   786                           
   787                           ; 1 bytes @ 0x26
   788  0046                     	ds	1
   789  0047                     ___ftadd@exp1:	
   790                           
   791                           ; 1 bytes @ 0x27
   792  0047                     	ds	1
   793  0048                     ?_fround:	
   794  0048                     ?___ftsub:	
   795                           ; 3 bytes @ 0x28
   796                           
   797  0048                     ___ftsub@f2:	
   798                           ; 3 bytes @ 0x28
   799                           
   800                           
   801                           ; 3 bytes @ 0x28
   802  0048                     	ds	3
   803  004B                     ___ftsub@f1:	
   804  004B                     _fround$2867:	
   805                           ; 3 bytes @ 0x2B
   806                           
   807                           
   808                           ; 3 bytes @ 0x2B
   809  004B                     	ds	3
   810  004E                     _fround$2866:	
   811                           
   812                           ; 3 bytes @ 0x2E
   813  004E                     	ds	3
   814  0051                     fround@prec:	
   815                           
   816                           ; 1 bytes @ 0x31
   817  0051                     	ds	1
   818  0052                     ?_sprintf:	
   819  0052                     sprintf@f:	
   820                           ; 2 bytes @ 0x32
   821                           
   822                           
   823                           ; 1 bytes @ 0x32
   824  0052                     	ds	4
   825  0056                     ??_sprintf:	
   826                           
   827                           ; 0 bytes @ 0x36
   828  0056                     	ds	5
   829  005B                     ??_ADC:	
   830                           
   831                           ; 0 bytes @ 0x3B
   832  005B                     	ds	1
   833  005C                     ??_main:	
   834                           
   835                           ; 0 bytes @ 0x3C
   836  005C                     	ds	2
   837                           
   838                           	psect	maintext
   839  0019                     __pmaintext:	
   840 ;;Data sizes: Strings 27, constant 118, data 0, bss 30, persistent 0 stack 0
   841 ;;Auto spaces:   Size  Autos    Used
   842 ;; COMMON          14     14      14
   843 ;; BANK0           80     62      77
   844 ;; BANK1           80     25      40
   845 ;; BANK3           96      0       0
   846 ;; BANK2           96      0       0
   847 ;;
   848 ;; Pointer list with targets:
   849 ;; ?___ftpack	float  size(1) Largest target is 0
   850 ;;
   851 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   852 ;;
   853 ;; ?___llmod	unsigned long  size(1) Largest target is 0
   854 ;;
   855 ;; ?___ftsub	float  size(1) Largest target is 0
   856 ;;
   857 ;; ?___lltoft	float  size(1) Largest target is 0
   858 ;;
   859 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
   860 ;;
   861 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
   862 ;;
   863 ;; ?___ftadd	float  size(1) Largest target is 0
   864 ;;
   865 ;; ?___ftneg	float  size(1) Largest target is 0
   866 ;;
   867 ;; ?___awmod	int  size(1) Largest target is 40
   868 ;;		 -> dpowers(CODE[40]), 
   869 ;;
   870 ;; ?___awdiv	int  size(1) Largest target is 0
   871 ;;
   872 ;; ?_scale	int  size(1) Largest target is 0
   873 ;;
   874 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   875 ;;
   876 ;; ?_fround	unsigned int  size(1) Largest target is 0
   877 ;;
   878 ;; ?___ftmul	float  size(1) Largest target is 0
   879 ;;
   880 ;; ?___fttol	long  size(1) Largest target is 0
   881 ;;
   882 ;; ?___awtoft	float  size(1) Largest target is 0
   883 ;;
   884 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 6
   885 ;;		 -> STR_7(CODE[6]), STR_5(CODE[3]), STR_3(CODE[6]), STR_1(CODE[3]), 
   886 ;;
   887 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 5
   888 ;;		 -> carac2(BANK1[5]), carac22(BANK1[5]), carac1(BANK0[5]), carac11(BANK1[5]), 
   889 ;;
   890 ;; ?_sprintf	int  size(1) Largest target is 0
   891 ;;
   892 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
   893 ;;		 -> ?_sprintf(BANK0[2]), 
   894 ;;
   895 ;; S1908$_cp	PTR const unsigned char  size(1) Largest target is 0
   896 ;;
   897 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   898 ;;
   899 ;; lcd_puts@s	PTR const unsigned char  size(2) Largest target is 6
   900 ;;		 -> STR_8(CODE[3]), carac2(BANK1[5]), STR_6(CODE[6]), carac22(BANK1[5]), 
   901 ;;		 -> STR_4(CODE[3]), carac1(BANK0[5]), STR_2(CODE[6]), carac11(BANK1[5]), 
   902 ;;
   903 ;;
   904 ;; Critical Paths under _main in COMMON
   905 ;;
   906 ;;   _lcd_init->_lcd_write
   907 ;;   _lcd_puts->_lcd_write
   908 ;;   _lcd_goto->_lcd_write
   909 ;;   _sprintf->___awdiv
   910 ;;   _sprintf->__div_to_l_
   911 ;;   _sprintf->___llmod
   912 ;;   _lcd_clear->_lcd_write
   913 ;;   _scale->___awdiv
   914 ;;   _lcd_write->_pause
   915 ;;   _PWM->_pause
   916 ;;   ___lltoft->___ftpack
   917 ;;   ___awtoft->___ftpack
   918 ;;   ___ftmul->___awdiv
   919 ;;   ___llmod->___lldiv
   920 ;;   ___awdiv->___awmod
   921 ;;   ___fttol->___awdiv
   922 ;;   ___lbdiv->___lbmod
   923 ;;   ___bmul->___lbdiv
   924 ;;
   925 ;; Critical Paths under _main in BANK0
   926 ;;
   927 ;;   _main->_ADC
   928 ;;   _ADC->_sprintf
   929 ;;   _sprintf->_fround
   930 ;;   ___ftsub->___ftadd
   931 ;;   _scale->___ftmul
   932 ;;   _fround->___ftadd
   933 ;;   ___ftmul->___fttol
   934 ;;   ___ftadd->___ftmul
   935 ;;
   936 ;; Critical Paths under _main in BANK1
   937 ;;
   938 ;;   _ADC->_sprintf
   939 ;;
   940 ;; Critical Paths under _main in BANK3
   941 ;;
   942 ;;   None.
   943 ;;
   944 ;; Critical Paths under _main in BANK2
   945 ;;
   946 ;;   None.
   947 ;;
   948 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   949 ;;
   950 ;;
   951 ;;Call Graph Tables:
   952 ;;
   953 ;; ---------------------------------------------------------------------------------
   954 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   955 ;; ---------------------------------------------------------------------------------
   956 ;; (0) _main                                                 2     2      0   12271
   957 ;;                                             60 BANK0      2     2      0
   958 ;;                           _lcd_init
   959 ;;                         _init_comms
   960 ;;                                _ADC
   961 ;;                                _PWM
   962 ;;                          _lcd_clear
   963 ;; ---------------------------------------------------------------------------------
   964 ;; (1) _ADC                                                  1     1      0   11794
   965 ;;                                             59 BANK0      1     1      0
   966 ;;                           ___awtoft
   967 ;;                            ___fttol
   968 ;;                            _sprintf
   969 ;;                           _lcd_goto
   970 ;;                           _lcd_puts
   971 ;;                            ___ftmul
   972 ;;                              _pause
   973 ;; ---------------------------------------------------------------------------------
   974 ;; (1) _lcd_init                                             1     1      0     295
   975 ;;                                              5 COMMON     1     1      0
   976 ;;                              _pause
   977 ;;                          _lcd_write
   978 ;;                          _lcd_clear
   979 ;; ---------------------------------------------------------------------------------
   980 ;; (2) _lcd_puts                                             2     0      2     135
   981 ;;                                              5 COMMON     2     0      2
   982 ;;                          _lcd_write
   983 ;; ---------------------------------------------------------------------------------
   984 ;; (2) _lcd_goto                                             1     1      0     112
   985 ;;                                              5 COMMON     1     1      0
   986 ;;                          _lcd_write
   987 ;; ---------------------------------------------------------------------------------
   988 ;; (2) _sprintf                                             38    34      4   10414
   989 ;;                                             50 BANK0      9     5      4
   990 ;;                                              0 BANK1     25    25      0
   991 ;;                            _isdigit
   992 ;;                             ___wmul
   993 ;;                             ___ftge
   994 ;;                            ___ftneg
   995 ;;                            ___awdiv
   996 ;;                              _scale
   997 ;;                            ___ftmul
   998 ;;                             _fround
   999 ;;                            ___ftadd
  1000 ;;                            ___fttol
  1001 ;;                         __div_to_l_
  1002 ;;                        __tdiv_to_l_
  1003 ;;                           ___lltoft
  1004 ;;                            ___ftsub
  1005 ;;                            ___lldiv
  1006 ;;                            ___llmod
  1007 ;; ---------------------------------------------------------------------------------
  1008 ;; (1) _lcd_clear                                            0     0      0     136
  1009 ;;                          _lcd_write
  1010 ;;                              _pause
  1011 ;; ---------------------------------------------------------------------------------
  1012 ;; (3) ___ftsub                                              6     0      6    1094
  1013 ;;                                             40 BANK0      6     0      6
  1014 ;;                            ___ftadd
  1015 ;;                           ___lltoft (ARG)
  1016 ;; ---------------------------------------------------------------------------------
  1017 ;; (3) _scale                                               14    11      3    1688
  1018 ;;                                             28 BANK0     11     8      3
  1019 ;;                            ___awmod
  1020 ;;                            ___awdiv
  1021 ;;                            ___ftmul
  1022 ;;                             ___bmul
  1023 ;;                            ___fttol (ARG)
  1024 ;; ---------------------------------------------------------------------------------
  1025 ;; (3) _fround                                              13    10      3    1215
  1026 ;;                                             40 BANK0     10     7      3
  1027 ;;                            ___lbmod
  1028 ;;                             ___bmul
  1029 ;;                            ___lbdiv
  1030 ;;                            ___ftmul
  1031 ;;                            ___ftadd (ARG)
  1032 ;; ---------------------------------------------------------------------------------
  1033 ;; (2) _lcd_write                                            1     1      0      90
  1034 ;;                                              4 COMMON     1     1      0
  1035 ;;                              _pause
  1036 ;; ---------------------------------------------------------------------------------
  1037 ;; (1) _PWM                                                  2     2      0      46
  1038 ;;                                              4 COMMON     2     2      0
  1039 ;;                              _pause
  1040 ;; ---------------------------------------------------------------------------------
  1041 ;; (3) ___lltoft                                             5     1      4     278
  1042 ;;                                              8 COMMON     5     1      4
  1043 ;;                           ___ftpack
  1044 ;; ---------------------------------------------------------------------------------
  1045 ;; (2) ___awtoft                                             4     1      3     300
  1046 ;;                                              8 COMMON     4     1      3
  1047 ;;                           ___ftpack
  1048 ;; ---------------------------------------------------------------------------------
  1049 ;; (2) ___ftmul                                             15     9      6     535
  1050 ;;                                             13 BANK0     15     9      6
  1051 ;;                           ___ftpack
  1052 ;;                            ___fttol (ARG)
  1053 ;;                            ___awdiv (ARG)
  1054 ;;                            ___awmod (ARG)
  1055 ;;                             ___bmul (ARG)
  1056 ;;                            ___lbdiv (ARG)
  1057 ;;                            ___lbmod (ARG)
  1058 ;; ---------------------------------------------------------------------------------
  1059 ;; (4) ___ftadd                                             12     6      6    1049
  1060 ;;                                             28 BANK0     12     6      6
  1061 ;;                           ___ftpack
  1062 ;;                            ___lbmod (ARG)
  1063 ;;                             ___bmul (ARG)
  1064 ;;                            ___lbdiv (ARG)
  1065 ;;                            ___ftmul (ARG)
  1066 ;; ---------------------------------------------------------------------------------
  1067 ;; (2) _pause                                                4     2      2      46
  1068 ;;                                              0 COMMON     4     2      2
  1069 ;;                           _msecbase
  1070 ;; ---------------------------------------------------------------------------------
  1071 ;; (4) ___awmod                                              6     2      4     296
  1072 ;;                                              0 COMMON     6     2      4
  1073 ;; ---------------------------------------------------------------------------------
  1074 ;; (3) ___lldiv                                             13     5      8     162
  1075 ;;                                              0 COMMON    13     5      8
  1076 ;; ---------------------------------------------------------------------------------
  1077 ;; (3) ___ftge                                               6     0      6     136
  1078 ;;                                              0 COMMON     6     0      6
  1079 ;; ---------------------------------------------------------------------------------
  1080 ;; (3) ___ftneg                                              3     0      3      45
  1081 ;;                                              0 COMMON     3     0      3
  1082 ;; ---------------------------------------------------------------------------------
  1083 ;; (3) ___llmod                                              9     1      8     159
  1084 ;;                                             13 COMMON     1     1      0
  1085 ;;                                              0 BANK0      8     0      8
  1086 ;;                            ___lldiv (ARG)
  1087 ;; ---------------------------------------------------------------------------------
  1088 ;; (4) ___awdiv                                              8     4      4     300
  1089 ;;                                              6 COMMON     8     4      4
  1090 ;;                            ___awmod (ARG)
  1091 ;; ---------------------------------------------------------------------------------
  1092 ;; (3) ___fttol                                             13     9      4     252
  1093 ;;                                              0 BANK0     13     9      4
  1094 ;;                           ___ftpack (ARG)
  1095 ;;                            ___awmod (ARG)
  1096 ;;                            ___awdiv (ARG)
  1097 ;;                             ___bmul (ARG)
  1098 ;; ---------------------------------------------------------------------------------
  1099 ;; (3) ___ftpack                                             8     3      5     209
  1100 ;;                                              0 COMMON     8     3      5
  1101 ;; ---------------------------------------------------------------------------------
  1102 ;; (4) ___lbmod                                              5     4      1     159
  1103 ;;                                              0 COMMON     5     4      1
  1104 ;; ---------------------------------------------------------------------------------
  1105 ;; (4) ___lbdiv                                              4     3      1     162
  1106 ;;                                              5 COMMON     4     3      1
  1107 ;;                            ___lbmod (ARG)
  1108 ;; ---------------------------------------------------------------------------------
  1109 ;; (3) ___wmul                                               6     2      4      92
  1110 ;;                                              0 COMMON     6     2      4
  1111 ;; ---------------------------------------------------------------------------------
  1112 ;; (4) ___bmul                                               3     2      1      68
  1113 ;;                                              9 COMMON     3     2      1
  1114 ;;                            ___lbmod (ARG)
  1115 ;;                            ___lbdiv (ARG)
  1116 ;; ---------------------------------------------------------------------------------
  1117 ;; (3) __div_to_l_                                          20    14      6     446
  1118 ;;                                              0 COMMON    14     8      6
  1119 ;;                                              0 BANK0      6     6      0
  1120 ;; ---------------------------------------------------------------------------------
  1121 ;; (3) __tdiv_to_l_                                         15     9      6     303
  1122 ;;                                              0 COMMON     9     3      6
  1123 ;;                                              0 BANK0      6     6      0
  1124 ;; ---------------------------------------------------------------------------------
  1125 ;; (3) _isdigit                                              2     2      0      68
  1126 ;;                                              0 COMMON     2     2      0
  1127 ;; ---------------------------------------------------------------------------------
  1128 ;; (3) _msecbase                                             0     0      0       0
  1129 ;; ---------------------------------------------------------------------------------
  1130 ;; (1) _init_comms                                           0     0      0       0
  1131 ;; ---------------------------------------------------------------------------------
  1132 ;; Estimated maximum stack depth 4
  1133 ;; ---------------------------------------------------------------------------------
  1134 ;; Call Graph Graphs:
  1135 ;; _main (ROOT)
  1136 ;;   _lcd_init
  1137 ;;     _pause
  1138 ;;       _msecbase
  1139 ;;     _lcd_write
  1140 ;;       _pause
  1141 ;;         _msecbase
  1142 ;;     _lcd_clear
  1143 ;;       _lcd_write
  1144 ;;         _pause
  1145 ;;           _msecbase
  1146 ;;       _pause
  1147 ;;         _msecbase
  1148 ;;   _init_comms
  1149 ;;   _ADC
  1150 ;;     ___awtoft
  1151 ;;       ___ftpack
  1152 ;;     ___fttol
  1153 ;;       ___ftpack (ARG)
  1154 ;;       ___awmod (ARG)
  1155 ;;       ___awdiv (ARG)
  1156 ;;         ___awmod (ARG)
  1157 ;;       ___bmul (ARG)
  1158 ;;         ___lbmod (ARG)
  1159 ;;         ___lbdiv (ARG)
  1160 ;;           ___lbmod (ARG)
  1161 ;;     _sprintf
  1162 ;;       _isdigit
  1163 ;;       ___wmul
  1164 ;;       ___ftge
  1165 ;;       ___ftneg
  1166 ;;       ___awdiv
  1167 ;;         ___awmod (ARG)
  1168 ;;       _scale
  1169 ;;         ___awmod
  1170 ;;         ___awdiv
  1171 ;;           ___awmod (ARG)
  1172 ;;         ___ftmul
  1173 ;;           ___ftpack
  1174 ;;           ___fttol (ARG)
  1175 ;;             ___ftpack (ARG)
  1176 ;;             ___awmod (ARG)
  1177 ;;             ___awdiv (ARG)
  1178 ;;               ___awmod (ARG)
  1179 ;;             ___bmul (ARG)
  1180 ;;               ___lbmod (ARG)
  1181 ;;               ___lbdiv (ARG)
  1182 ;;                 ___lbmod (ARG)
  1183 ;;           ___awdiv (ARG)
  1184 ;;             ___awmod (ARG)
  1185 ;;           ___awmod (ARG)
  1186 ;;           ___bmul (ARG)
  1187 ;;             ___lbmod (ARG)
  1188 ;;             ___lbdiv (ARG)
  1189 ;;               ___lbmod (ARG)
  1190 ;;           ___lbdiv (ARG)
  1191 ;;             ___lbmod (ARG)
  1192 ;;           ___lbmod (ARG)
  1193 ;;         ___bmul
  1194 ;;           ___lbmod (ARG)
  1195 ;;           ___lbdiv (ARG)
  1196 ;;             ___lbmod (ARG)
  1197 ;;         ___fttol (ARG)
  1198 ;;           ___ftpack (ARG)
  1199 ;;           ___awmod (ARG)
  1200 ;;           ___awdiv (ARG)
  1201 ;;             ___awmod (ARG)
  1202 ;;           ___bmul (ARG)
  1203 ;;             ___lbmod (ARG)
  1204 ;;             ___lbdiv (ARG)
  1205 ;;               ___lbmod (ARG)
  1206 ;;       ___ftmul
  1207 ;;         ___ftpack
  1208 ;;         ___fttol (ARG)
  1209 ;;           ___ftpack (ARG)
  1210 ;;           ___awmod (ARG)
  1211 ;;           ___awdiv (ARG)
  1212 ;;             ___awmod (ARG)
  1213 ;;           ___bmul (ARG)
  1214 ;;             ___lbmod (ARG)
  1215 ;;             ___lbdiv (ARG)
  1216 ;;               ___lbmod (ARG)
  1217 ;;         ___awdiv (ARG)
  1218 ;;           ___awmod (ARG)
  1219 ;;         ___awmod (ARG)
  1220 ;;         ___bmul (ARG)
  1221 ;;           ___lbmod (ARG)
  1222 ;;           ___lbdiv (ARG)
  1223 ;;             ___lbmod (ARG)
  1224 ;;         ___lbdiv (ARG)
  1225 ;;           ___lbmod (ARG)
  1226 ;;         ___lbmod (ARG)
  1227 ;;       _fround
  1228 ;;         ___lbmod
  1229 ;;         ___bmul
  1230 ;;           ___lbmod (ARG)
  1231 ;;           ___lbdiv (ARG)
  1232 ;;             ___lbmod (ARG)
  1233 ;;         ___lbdiv
  1234 ;;           ___lbmod (ARG)
  1235 ;;         ___ftmul
  1236 ;;           ___ftpack
  1237 ;;           ___fttol (ARG)
  1238 ;;             ___ftpack (ARG)
  1239 ;;             ___awmod (ARG)
  1240 ;;             ___awdiv (ARG)
  1241 ;;               ___awmod (ARG)
  1242 ;;             ___bmul (ARG)
  1243 ;;               ___lbmod (ARG)
  1244 ;;               ___lbdiv (ARG)
  1245 ;;                 ___lbmod (ARG)
  1246 ;;           ___awdiv (ARG)
  1247 ;;             ___awmod (ARG)
  1248 ;;           ___awmod (ARG)
  1249 ;;           ___bmul (ARG)
  1250 ;;             ___lbmod (ARG)
  1251 ;;             ___lbdiv (ARG)
  1252 ;;               ___lbmod (ARG)
  1253 ;;           ___lbdiv (ARG)
  1254 ;;             ___lbmod (ARG)
  1255 ;;           ___lbmod (ARG)
  1256 ;;         ___ftadd (ARG)
  1257 ;;           ___ftpack
  1258 ;;           ___lbmod (ARG)
  1259 ;;           ___bmul (ARG)
  1260 ;;             ___lbmod (ARG)
  1261 ;;             ___lbdiv (ARG)
  1262 ;;               ___lbmod (ARG)
  1263 ;;           ___lbdiv (ARG)
  1264 ;;             ___lbmod (ARG)
  1265 ;;           ___ftmul (ARG)
  1266 ;;             ___ftpack
  1267 ;;             ___fttol (ARG)
  1268 ;;               ___ftpack (ARG)
  1269 ;;               ___awmod (ARG)
  1270 ;;               ___awdiv (ARG)
  1271 ;;                 ___awmod (ARG)
  1272 ;;               ___bmul (ARG)
  1273 ;;                 ___lbmod (ARG)
  1274 ;;                 ___lbdiv (ARG)
  1275 ;;                   ___lbmod (ARG)
  1276 ;;             ___awdiv (ARG)
  1277 ;;               ___awmod (ARG)
  1278 ;;             ___awmod (ARG)
  1279 ;;             ___bmul (ARG)
  1280 ;;               ___lbmod (ARG)
  1281 ;;               ___lbdiv (ARG)
  1282 ;;                 ___lbmod (ARG)
  1283 ;;             ___lbdiv (ARG)
  1284 ;;               ___lbmod (ARG)
  1285 ;;             ___lbmod (ARG)
  1286 ;;       ___ftadd
  1287 ;;         ___ftpack
  1288 ;;         ___lbmod (ARG)
  1289 ;;         ___bmul (ARG)
  1290 ;;           ___lbmod (ARG)
  1291 ;;           ___lbdiv (ARG)
  1292 ;;             ___lbmod (ARG)
  1293 ;;         ___lbdiv (ARG)
  1294 ;;           ___lbmod (ARG)
  1295 ;;         ___ftmul (ARG)
  1296 ;;           ___ftpack
  1297 ;;           ___fttol (ARG)
  1298 ;;             ___ftpack (ARG)
  1299 ;;             ___awmod (ARG)
  1300 ;;             ___awdiv (ARG)
  1301 ;;               ___awmod (ARG)
  1302 ;;             ___bmul (ARG)
  1303 ;;               ___lbmod (ARG)
  1304 ;;               ___lbdiv (ARG)
  1305 ;;                 ___lbmod (ARG)
  1306 ;;           ___awdiv (ARG)
  1307 ;;             ___awmod (ARG)
  1308 ;;           ___awmod (ARG)
  1309 ;;           ___bmul (ARG)
  1310 ;;             ___lbmod (ARG)
  1311 ;;             ___lbdiv (ARG)
  1312 ;;               ___lbmod (ARG)
  1313 ;;           ___lbdiv (ARG)
  1314 ;;             ___lbmod (ARG)
  1315 ;;           ___lbmod (ARG)
  1316 ;;       ___fttol
  1317 ;;         ___ftpack (ARG)
  1318 ;;         ___awmod (ARG)
  1319 ;;         ___awdiv (ARG)
  1320 ;;           ___awmod (ARG)
  1321 ;;         ___bmul (ARG)
  1322 ;;           ___lbmod (ARG)
  1323 ;;           ___lbdiv (ARG)
  1324 ;;             ___lbmod (ARG)
  1325 ;;       __div_to_l_
  1326 ;;       __tdiv_to_l_
  1327 ;;       ___lltoft
  1328 ;;         ___ftpack
  1329 ;;       ___ftsub
  1330 ;;         ___ftadd
  1331 ;;           ___ftpack
  1332 ;;           ___lbmod (ARG)
  1333 ;;           ___bmul (ARG)
  1334 ;;             ___lbmod (ARG)
  1335 ;;             ___lbdiv (ARG)
  1336 ;;               ___lbmod (ARG)
  1337 ;;           ___lbdiv (ARG)
  1338 ;;             ___lbmod (ARG)
  1339 ;;           ___ftmul (ARG)
  1340 ;;             ___ftpack
  1341 ;;             ___fttol (ARG)
  1342 ;;               ___ftpack (ARG)
  1343 ;;               ___awmod (ARG)
  1344 ;;               ___awdiv (ARG)
  1345 ;;                 ___awmod (ARG)
  1346 ;;               ___bmul (ARG)
  1347 ;;                 ___lbmod (ARG)
  1348 ;;                 ___lbdiv (ARG)
  1349 ;;                   ___lbmod (ARG)
  1350 ;;             ___awdiv (ARG)
  1351 ;;               ___awmod (ARG)
  1352 ;;             ___awmod (ARG)
  1353 ;;             ___bmul (ARG)
  1354 ;;               ___lbmod (ARG)
  1355 ;;               ___lbdiv (ARG)
  1356 ;;                 ___lbmod (ARG)
  1357 ;;             ___lbdiv (ARG)
  1358 ;;               ___lbmod (ARG)
  1359 ;;             ___lbmod (ARG)
  1360 ;;         ___lltoft (ARG)
  1361 ;;           ___ftpack
  1362 ;;       ___lldiv
  1363 ;;       ___llmod
  1364 ;;         ___lldiv (ARG)
  1365 ;;     _lcd_goto
  1366 ;;       _lcd_write
  1367 ;;         _pause
  1368 ;;           _msecbase
  1369 ;;     _lcd_puts
  1370 ;;       _lcd_write
  1371 ;;         _pause
  1372 ;;           _msecbase
  1373 ;;     ___ftmul
  1374 ;;       ___ftpack
  1375 ;;       ___fttol (ARG)
  1376 ;;         ___ftpack (ARG)
  1377 ;;         ___awmod (ARG)
  1378 ;;         ___awdiv (ARG)
  1379 ;;           ___awmod (ARG)
  1380 ;;         ___bmul (ARG)
  1381 ;;           ___lbmod (ARG)
  1382 ;;           ___lbdiv (ARG)
  1383 ;;             ___lbmod (ARG)
  1384 ;;       ___awdiv (ARG)
  1385 ;;         ___awmod (ARG)
  1386 ;;       ___awmod (ARG)
  1387 ;;       ___bmul (ARG)
  1388 ;;         ___lbmod (ARG)
  1389 ;;         ___lbdiv (ARG)
  1390 ;;           ___lbmod (ARG)
  1391 ;;       ___lbdiv (ARG)
  1392 ;;         ___lbmod (ARG)
  1393 ;;       ___lbmod (ARG)
  1394 ;;     _pause
  1395 ;;       _msecbase
  1396 ;;   _PWM
  1397 ;;     _pause
  1398 ;;       _msecbase
  1399 ;;   _lcd_clear
  1400 ;;     _lcd_write
  1401 ;;       _pause
  1402 ;;         _msecbase
  1403 ;;     _pause
  1404 ;;       _msecbase
  1405 ;;
  1406 ;; Address spaces:
  1407 ;;Name               Size   Autos  Total    Cost      Usage
  1408 ;;BITCOMMON            E      0       0       0        0.0%
  1409 ;;EEDATA             100      0       0       0        0.0%
  1410 ;;NULL                 0      0       0       0        0.0%
  1411 ;;CODE                 0      0       0       0        0.0%
  1412 ;;COMMON               E      E       E       1      100.0%
  1413 ;;BITSFR0              0      0       0       1        0.0%
  1414 ;;SFR0                 0      0       0       1        0.0%
  1415 ;;BITSFR1              0      0       0       2        0.0%
  1416 ;;SFR1                 0      0       0       2        0.0%
  1417 ;;STACK                0      0       5       2        0.0%
  1418 ;;ABS                  0      0      83       3        0.0%
  1419 ;;BITBANK0            50      0       0       4        0.0%
  1420 ;;BITSFR3              0      0       0       4        0.0%
  1421 ;;SFR3                 0      0       0       4        0.0%
  1422 ;;BANK0               50     3E      4D       5       96.3%
  1423 ;;BITSFR2              0      0       0       5        0.0%
  1424 ;;SFR2                 0      0       0       5        0.0%
  1425 ;;BITBANK1            50      0       0       6        0.0%
  1426 ;;BANK1               50     19      28       7       50.0%
  1427 ;;BITBANK3            60      0       0       8        0.0%
  1428 ;;BANK3               60      0       0       9        0.0%
  1429 ;;BITBANK2            60      0       0      10        0.0%
  1430 ;;BANK2               60      0       0      11        0.0%
  1431 ;;DATA                 0      0      88      12        0.0%
  1432                           
  1433                           
  1434 ;; *************** function _main *****************
  1435 ;; Defined at:
  1436 ;;		line 74 in file "C:\Users\Jorge\OneDrive\Escritorio\Entregar\LCD_PWM\PWM\PWM.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;		None
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;		None
  1441 ;; Return value:  Size  Location     Type
  1442 ;;		None               void
  1443 ;; Registers used:
  1444 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1445 ;; Tracked objects:
  1446 ;;		On entry : 17F/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1450 ;;      Params:         0       0       0       0       0
  1451 ;;      Locals:         0       0       0       0       0
  1452 ;;      Temps:          0       2       0       0       0
  1453 ;;      Totals:         0       2       0       0       0
  1454 ;;Total ram usage:        2 bytes
  1455 ;; Hardware stack levels required when called:    5
  1456 ;; This function calls:
  1457 ;;		_lcd_init
  1458 ;;		_init_comms
  1459 ;;		_ADC
  1460 ;;		_PWM
  1461 ;;		_lcd_clear
  1462 ;; This function is called by:
  1463 ;;		Startup code after reset
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466  0019                     _main:	
  1467                           
  1468                           ;PWM.c: 76: ANSEL = 0x60;
  1469                           
  1470                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1471  0019  3060               	movlw	96
  1472  001A  1683               	bsf	3,5	;RP0=1, select bank3
  1473  001B  1703               	bsf	3,6	;RP1=1, select bank3
  1474  001C  0088               	movwf	8	;volatile
  1475                           
  1476                           ;PWM.c: 77: ANSELH = 0x00;
  1477  001D  0189               	clrf	9	;volatile
  1478                           
  1479                           ;PWM.c: 78: TRISB = 0xFF;
  1480  001E  30FF               	movlw	255
  1481  001F  1303               	bcf	3,6	;RP1=0, select bank1
  1482  0020  0086               	movwf	6	;volatile
  1483                           
  1484                           ;PWM.c: 79: TRISA = 0x00;
  1485  0021  0185               	clrf	5	;volatile
  1486                           
  1487                           ;PWM.c: 81: TRISD = 0x00;
  1488  0022  0188               	clrf	8	;volatile
  1489                           
  1490                           ;PWM.c: 82: TRISC = 0x00;
  1491  0023  0187               	clrf	7	;volatile
  1492                           
  1493                           ;PWM.c: 83: TRISE = 0x07;
  1494  0024  3007               	movlw	7
  1495  0025  0089               	movwf	9	;volatile
  1496                           
  1497                           ;PWM.c: 84: T2CON = 0x07;
  1498  0026  1283               	bcf	3,5	;RP0=0, select bank0
  1499  0027  0092               	movwf	18	;volatile
  1500                           
  1501                           ;PWM.c: 85: PR2 = 0xFF;
  1502  0028  30FF               	movlw	255
  1503  0029  1683               	bsf	3,5	;RP0=1, select bank1
  1504  002A  0092               	movwf	18	;volatile
  1505                           
  1506                           ;PWM.c: 87: CCPR1L = 0x80;
  1507  002B  3080               	movlw	128
  1508  002C  1283               	bcf	3,5	;RP0=0, select bank0
  1509  002D  0095               	movwf	21	;volatile
  1510                           
  1511                           ;PWM.c: 88: CCP1CON = 0x0C;
  1512  002E  300C               	movlw	12
  1513  002F  0097               	movwf	23	;volatile
  1514                           
  1515                           ;PWM.c: 90: lcd_init();
  1516  0030  120A  158A  222B   	fcall	_lcd_init
      +       120A  118A         
  1517                           
  1518                           ;PWM.c: 92: init_comms();
  1519  0035  120A  158A  20A9   	fcall	_init_comms
      +       120A  118A         
  1520                           
  1521                           ;PWM.c: 94: ADFM = 0;
  1522  003A  1303               	bcf	3,6	;RP1=0, select bank1
  1523  003B  139F               	bcf	31,7
  1524  003C                     l5955:	
  1525                           
  1526                           ;PWM.c: 100: ADC();
  1527  003C  120A  158A  2261   	fcall	_ADC
      +       120A  118A         
  1528                           
  1529                           ;PWM.c: 102: PWM();
  1530  0041  120A  158A  2209   	fcall	_PWM
      +       120A  118A         
  1531                           
  1532                           ;PWM.c: 104: _delay((unsigned long)((100)*(4000000/4000.0)));
  1533  0046  3082               	movlw	130
  1534  0047  1283               	bcf	3,5	;RP0=0, select bank0
  1535  0048  1303               	bcf	3,6	;RP1=0, select bank0
  1536  0049  00DD               	movwf	??_main+1
  1537  004A  30DD               	movlw	221
  1538  004B  00DC               	movwf	??_main
  1539  004C                     u3297:	
  1540  004C  0BDC               	decfsz	??_main,f
  1541  004D  284C               	goto	u3297
  1542  004E  0BDD               	decfsz	??_main+1,f
  1543  004F  284C               	goto	u3297
  1544  0050  2851               	nop2
  1545                           
  1546                           ;PWM.c: 106: lcd_clear();
  1547  0051  120A  158A  23B8   	fcall	_lcd_clear
      +       120A  118A         
  1548                           
  1549                           ;PWM.c: 108: _delay((unsigned long)((100)*(4000000/4000.0)));
  1550  0056  3082               	movlw	130
  1551  0057  1283               	bcf	3,5	;RP0=0, select bank0
  1552  0058  1303               	bcf	3,6	;RP1=0, select bank0
  1553  0059  00DD               	movwf	??_main+1
  1554  005A  30DD               	movlw	221
  1555  005B  00DC               	movwf	??_main
  1556  005C                     u3307:	
  1557  005C  0BDC               	decfsz	??_main,f
  1558  005D  285C               	goto	u3307
  1559  005E  0BDD               	decfsz	??_main+1,f
  1560  005F  285C               	goto	u3307
  1561  0060  2861               	nop2
  1562  0061  283C               	goto	l5955
  1563  0062                     __end_of_main:	
  1564                           
  1565                           	psect	text560
  1566  0062                     __ptext560:	
  1567 ;; =============== function _lcd_goto ends ============
  1568                           
  1569                           
  1570 ;; *************** function _sprintf *****************
  1571 ;; Defined at:
  1572 ;;		line 488 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;  sp              1    wreg     PTR unsigned char 
  1575 ;;		 -> carac2(5), carac22(5), carac1(5), carac11(5), 
  1576 ;;  f               1   50[BANK0 ] PTR const unsigned char 
  1577 ;;		 -> STR_7(6), STR_5(3), STR_3(6), STR_1(3), 
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;  sp              1   21[BANK1 ] PTR unsigned char 
  1580 ;;		 -> carac2(5), carac22(5), carac1(5), carac11(5), 
  1581 ;;  _val            4   12[BANK1 ] struct .
  1582 ;;  fval            3   18[BANK1 ] struct .
  1583 ;;  integ           3    5[BANK1 ] struct .
  1584 ;;  ival            3    0        struct .
  1585 ;;  prec            2   22[BANK1 ] int 
  1586 ;;  exp             2   16[BANK1 ] int 
  1587 ;;  width           2   10[BANK1 ] int 
  1588 ;;  flag            2    8[BANK1 ] unsigned short 
  1589 ;;  c               1   24[BANK1 ] char 
  1590 ;;  ap              1    4[BANK1 ] PTR void [1]
  1591 ;;		 -> ?_sprintf(2), 
  1592 ;;  d               1    0        unsigned char 
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  2   50[BANK0 ] int 
  1595 ;; Registers used:
  1596 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1597 ;; Tracked objects:
  1598 ;;		On entry : 60/0
  1599 ;;		On exit  : 160/20
  1600 ;;		Unchanged: FFE00/0
  1601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1602 ;;      Params:         0       4       0       0       0
  1603 ;;      Locals:         0       0      25       0       0
  1604 ;;      Temps:          0       5       0       0       0
  1605 ;;      Totals:         0       9      25       0       0
  1606 ;;Total ram usage:       34 bytes
  1607 ;; Hardware stack levels used:    1
  1608 ;; Hardware stack levels required when called:    3
  1609 ;; This function calls:
  1610 ;;		_isdigit
  1611 ;;		___wmul
  1612 ;;		___ftge
  1613 ;;		___ftneg
  1614 ;;		___awdiv
  1615 ;;		_scale
  1616 ;;		___ftmul
  1617 ;;		_fround
  1618 ;;		___ftadd
  1619 ;;		___fttol
  1620 ;;		__div_to_l_
  1621 ;;		__tdiv_to_l_
  1622 ;;		___lltoft
  1623 ;;		___ftsub
  1624 ;;		___lldiv
  1625 ;;		___llmod
  1626 ;; This function is called by:
  1627 ;;		_ADC
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630  0062                     _sprintf:	
  1631                           
  1632                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1633                           ;sprintf@sp stored from wreg
  1634  0062  1683               	bsf	3,5	;RP0=1, select bank1
  1635  0063  00B5               	movwf	sprintf@sp^(0+128)
  1636  0064  3053               	movlw	(?_sprintf+1)& (0+255)
  1637  0065  00A4               	movwf	sprintf@ap^(0+128)
  1638  0066                     l5839:	
  1639  0066  1283               	bcf	3,5	;RP0=0, select bank0
  1640  0067  0852               	movf	sprintf@f,w
  1641  0068  0AD2               	incf	sprintf@f,f
  1642  0069  0084               	movwf	4
  1643  006A  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  1644  006F  1683               	bsf	3,5	;RP0=1, select bank1
  1645  0070  00B8               	movwf	sprintf@c^(0+128)
  1646  0071  08B8               	movf	sprintf@c^(0+128),f
  1647  0072  1903               	btfsc	3,2
  1648  0073  2D82               	goto	l5841
  1649  0074  0838               	movf	sprintf@c^(0+128),w
  1650  0075  3A25               	xorlw	37
  1651  0076  1903               	skipnz
  1652  0077  287F               	goto	l5565
  1653  0078  0835               	movf	sprintf@sp^(0+128),w
  1654  0079  0084               	movwf	4
  1655  007A  0838               	movf	sprintf@c^(0+128),w
  1656  007B  1383               	bcf	3,7	;select IRP bank0
  1657  007C  0080               	movwf	0
  1658  007D  0AB5               	incf	sprintf@sp^(0+128),f
  1659  007E  2866               	goto	l5839
  1660  007F                     l5565:	
  1661  007F  01AA               	clrf	sprintf@width^(0+128)
  1662  0080  01AB               	clrf	(sprintf@width+1)^(0+128)
  1663  0081  01A8               	clrf	sprintf@flag^(0+128)
  1664  0082  01A9               	clrf	(sprintf@flag+1)^(0+128)
  1665  0083  1283               	bcf	3,5	;RP0=0, select bank0
  1666  0084  0852               	movf	sprintf@f,w
  1667  0085  0084               	movwf	4
  1668  0086  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  1669  008B  25F1  120A  118A   	fcall	_isdigit
  1670  008E  1C03               	btfss	3,0
  1671  008F  28B8               	goto	l5577
  1672  0090  1683               	bsf	3,5	;RP0=1, select bank1
  1673  0091  01AA               	clrf	sprintf@width^(0+128)
  1674  0092  01AB               	clrf	(sprintf@width+1)^(0+128)
  1675  0093                     l5571:	
  1676  0093  1683               	bsf	3,5	;RP0=1, select bank1
  1677  0094  082B               	movf	(sprintf@width+1)^(0+128),w
  1678  0095  00F1               	movwf	?___wmul+1
  1679  0096  082A               	movf	sprintf@width^(0+128),w
  1680  0097  00F0               	movwf	?___wmul
  1681  0098  300A               	movlw	10
  1682  0099  00F2               	movwf	?___wmul+2
  1683  009A  01F3               	clrf	?___wmul+3
  1684  009B  25FF               	fcall	___wmul
  1685  009C  1283               	bcf	3,5	;RP0=0, select bank0
  1686  009D  0852               	movf	sprintf@f,w
  1687  009E  0084               	movwf	4
  1688  009F  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  1689  00A4  279D  120A  118A   	fcall	PL17	;call to abstracted procedure
  1690  00A7  00AA               	movwf	sprintf@width^(0+128)
  1691  00A8  27F6               	fcall	PL37	;call to abstracted procedure
  1692  00A9  00AB               	movwf	(sprintf@width+1)^(0+128)
  1693  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1694  00AB  0AD2               	incf	sprintf@f,f
  1695  00AC  0852               	movf	sprintf@f,w
  1696  00AD  0084               	movwf	4
  1697  00AE  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  1698  00B3  25F1  120A  118A   	fcall	_isdigit
  1699  00B6  1803               	btfsc	3,0
  1700  00B7  2893               	goto	l5571
  1701  00B8                     l5577:	
  1702  00B8  0852               	movf	sprintf@f,w
  1703  00B9  0084               	movwf	4
  1704  00BA  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  1705  00BF  3A2E               	xorlw	46
  1706  00C0  1D03               	skipz
  1707  00C1  28F2               	goto	l5591
  1708  00C2  1683               	bsf	3,5	;RP0=1, select bank1
  1709  00C3  1729               	bsf	(sprintf@flag^(0+128)+1),6
  1710  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1711  00C5  0AD2               	incf	sprintf@f,f
  1712  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  1713  00C7  01B6               	clrf	sprintf@prec^(0+128)
  1714  00C8  01B7               	clrf	(sprintf@prec+1)^(0+128)
  1715  00C9                     l5589:	
  1716  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1717  00CA  0852               	movf	sprintf@f,w
  1718  00CB  0084               	movwf	4
  1719  00CC  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  1720  00D1  25F1  120A  118A   	fcall	_isdigit
  1721  00D4  1C03               	btfss	3,0
  1722  00D5  28F9               	goto	l5597
  1723  00D6  1683               	bsf	3,5	;RP0=1, select bank1
  1724  00D7  0837               	movf	(sprintf@prec+1)^(0+128),w
  1725  00D8  00F1               	movwf	?___wmul+1
  1726  00D9  0836               	movf	sprintf@prec^(0+128),w
  1727  00DA  00F0               	movwf	?___wmul
  1728  00DB  300A               	movlw	10
  1729  00DC  00F2               	movwf	?___wmul+2
  1730  00DD  01F3               	clrf	?___wmul+3
  1731  00DE  25FF               	fcall	___wmul
  1732  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  1733  00E0  0852               	movf	sprintf@f,w
  1734  00E1  0084               	movwf	4
  1735  00E2  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  1736  00E7  279D  120A  118A   	fcall	PL17	;call to abstracted procedure
  1737  00EA  00B6               	movwf	sprintf@prec^(0+128)
  1738  00EB  27F6  120A  118A   	fcall	PL37	;call to abstracted procedure
  1739  00EE  00B7               	movwf	(sprintf@prec+1)^(0+128)
  1740  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1741  00F0  0AD2               	incf	sprintf@f,f
  1742  00F1  28C9               	goto	l5589
  1743  00F2                     l5591:	
  1744  00F2  1683               	bsf	3,5	;RP0=1, select bank1
  1745  00F3  01B6               	clrf	sprintf@prec^(0+128)
  1746  00F4  01B7               	clrf	(sprintf@prec+1)^(0+128)
  1747  00F5  1629               	bsf	(sprintf@flag^(0+128)+1),4
  1748  00F6  28F9               	goto	l5597
  1749  00F7                     l1173:	
  1750  00F7  1529               	bsf	(sprintf@flag^(0+128)+1),2
  1751  00F8  2911               	goto	l5599
  1752  00F9                     l5597:	
  1753  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  1754  00FA  0852               	movf	sprintf@f,w
  1755  00FB  0AD2               	incf	sprintf@f,f
  1756  00FC  0084               	movwf	4
  1757  00FD  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  1758  0102  1683               	bsf	3,5	;RP0=1, select bank1
  1759  0103  00B8               	movwf	sprintf@c^(0+128)
  1760                           
  1761                           ; Switch size 1, requested type "space"
  1762                           ; Number of cases is 4, Range of values is 0 to 105
  1763                           ; switch strategies available:
  1764                           ; Name         Instructions Cycles
  1765                           ; simple_byte           13     7 (average)
  1766                           ; jumptable            260     6 (fixed)
  1767                           ; rangetable           110     6 (fixed)
  1768                           ; spacedrange          218     9 (fixed)
  1769                           ; locatedrange         106     3 (fixed)
  1770                           ;	Chosen strategy is simple_byte
  1771  0104  3A00               	xorlw	0	; case 0
  1772  0105  1903               	skipnz
  1773  0106  2D82               	goto	l5841
  1774  0107  3A64               	xorlw	100	; case 100
  1775  0108  1903               	skipnz
  1776  0109  2911               	goto	l5599
  1777  010A  3A02               	xorlw	2	; case 102
  1778  010B  1903               	skipnz
  1779  010C  28F7               	goto	l1173
  1780  010D  3A0F               	xorlw	15	; case 105
  1781  010E  1903               	skipnz
  1782  010F  2911               	goto	l5599
  1783  0110  2866               	goto	l5839
  1784  0111                     l5599:	
  1785  0111  1283               	bcf	3,5	;RP0=0, select bank0
  1786  0112  3007               	movlw	7
  1787  0113  01D6               	clrf	??_sprintf
  1788  0114  1683               	bsf	3,5	;RP0=1, select bank1
  1789  0115  0529               	andwf	(sprintf@flag+1)^(0+128),w
  1790  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1791  0117  00D7               	movwf	??_sprintf+1
  1792  0118  0456               	iorwf	??_sprintf,w
  1793  0119  1903               	skipnz
  1794  011A  2C47               	goto	l5759
  1795  011B  1683               	bsf	3,5	;RP0=1, select bank1
  1796  011C  1E29               	btfss	(sprintf@flag+1)^(0+128),4
  1797  011D  2921               	goto	l5605
  1798  011E  3006               	movlw	6
  1799  011F  00B6               	movwf	sprintf@prec^(0+128)
  1800  0120  01B7               	clrf	(sprintf@prec+1)^(0+128)
  1801  0121                     l5605:	
  1802  0121  0824               	movf	sprintf@ap^(0+128),w
  1803  0122  0084               	movwf	4
  1804  0123  1383               	bcf	3,7	;select IRP bank0
  1805  0124  0800               	movf	0,w
  1806  0125  00B2               	movwf	sprintf@fval^(0+128)
  1807  0126  0A84               	incf	4,f
  1808  0127  0800               	movf	0,w
  1809  0128  00B3               	movwf	(sprintf@fval+1)^(0+128)
  1810  0129  0A84               	incf	4,f
  1811  012A  0800               	movf	0,w
  1812  012B  00B4               	movwf	(sprintf@fval+2)^(0+128)
  1813  012C  3003               	movlw	3
  1814  012D  07A4               	addwf	sprintf@ap^(0+128),f
  1815  012E  0832               	movf	sprintf@fval^(0+128),w
  1816  012F  00F0               	movwf	?___ftge
  1817  0130  0833               	movf	(sprintf@fval+1)^(0+128),w
  1818  0131  00F1               	movwf	?___ftge+1
  1819  0132  0834               	movf	(sprintf@fval+2)^(0+128),w
  1820  0133  00F2               	movwf	?___ftge+2
  1821  0134  01F3               	clrf	?___ftge+3
  1822  0135  01F4               	clrf	?___ftge+4
  1823  0136  01F5               	clrf	?___ftge+5
  1824  0137  25C5  120A  118A   	fcall	___ftge
  1825  013A  1803               	btfsc	3,0
  1826  013B  294D               	goto	l5615
  1827  013C  0832               	movf	sprintf@fval^(0+128),w
  1828  013D  00F0               	movwf	?___ftneg
  1829  013E  0833               	movf	(sprintf@fval+1)^(0+128),w
  1830  013F  00F1               	movwf	?___ftneg+1
  1831  0140  0834               	movf	(sprintf@fval+2)^(0+128),w
  1832  0141  00F2               	movwf	?___ftneg+2
  1833  0142  2733  120A  118A   	fcall	___ftneg
  1834  0145  0870               	movf	?___ftneg,w
  1835  0146  00B2               	movwf	sprintf@fval^(0+128)
  1836  0147  0871               	movf	?___ftneg+1,w
  1837  0148  00B3               	movwf	(sprintf@fval+1)^(0+128)
  1838  0149  0872               	movf	?___ftneg+2,w
  1839  014A  00B4               	movwf	(sprintf@fval+2)^(0+128)
  1840  014B  3003               	movlw	3
  1841  014C  04A8               	iorwf	sprintf@flag^(0+128),f
  1842  014D                     l5615:	
  1843  014D  01B0               	clrf	sprintf@exp^(0+128)
  1844  014E  01B1               	clrf	(sprintf@exp+1)^(0+128)
  1845  014F  0834               	movf	(sprintf@fval+2)^(0+128),w
  1846  0150  0433               	iorwf	(sprintf@fval+1)^(0+128),w
  1847  0151  0432               	iorwf	sprintf@fval^(0+128),w
  1848  0152  1903               	skipnz
  1849  0153  29E3               	goto	l5647
  1850  0154  30B2               	movlw	low sprintf@fval
  1851  0155  0084               	movwf	4
  1852  0156  27EF  120A  118A   	fcall	PL34	;call to abstracted procedure
  1853  0159  0A84               	incf	4,f
  1854  015A  0800               	movf	0,w
  1855  015B  00D8               	movwf	??_sprintf+2
  1856  015C  0A84               	incf	4,f
  1857  015D  0800               	movf	0,w
  1858  015E  00D9               	movwf	??_sprintf+3
  1859  015F  300F               	movlw	15
  1860  0160                     u2855:	
  1861  0160  1003               	clrc
  1862  0161  0CD9               	rrf	??_sprintf+3,f
  1863  0162  0CD8               	rrf	??_sprintf+2,f
  1864  0163  0CD7               	rrf	??_sprintf+1,f
  1865  0164  0CD6               	rrf	??_sprintf,f
  1866  0165  3EFF               	addlw	-1
  1867  0166  1D03               	skipz
  1868  0167  2960               	goto	u2855
  1869  0168  0857               	movf	??_sprintf+1,w
  1870  0169  1683               	bsf	3,5	;RP0=1, select bank1
  1871  016A  00B1               	movwf	(sprintf@exp+1)^(0+128)
  1872  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1873  016C  0856               	movf	??_sprintf,w
  1874  016D  1683               	bsf	3,5	;RP0=1, select bank1
  1875  016E  00B0               	movwf	sprintf@exp^(0+128)
  1876  016F  3082               	movlw	-126
  1877  0170  01B1               	clrf	(sprintf@exp+1)^(0+128)
  1878  0171  07B0               	addwf	sprintf@exp^(0+128),f
  1879  0172  1C03               	skipc
  1880  0173  03B1               	decf	(sprintf@exp+1)^(0+128),f
  1881  0174  30FF               	movlw	-1
  1882  0175  07B0               	addwf	sprintf@exp^(0+128),f
  1883  0176  1C03               	skipc
  1884  0177  03B1               	decf	(sprintf@exp+1)^(0+128),f
  1885  0178  3003               	movlw	3
  1886  0179  00F0               	movwf	?___wmul
  1887  017A  01F1               	clrf	?___wmul+1
  1888  017B  0831               	movf	(sprintf@exp+1)^(0+128),w
  1889  017C  00F3               	movwf	?___wmul+3
  1890  017D  0830               	movf	sprintf@exp^(0+128),w
  1891  017E  00F2               	movwf	?___wmul+2
  1892  017F  25FF               	fcall	___wmul
  1893  0180  0871               	movf	?___wmul+1,w
  1894  0181  00B1               	movwf	(sprintf@exp+1)^(0+128)
  1895  0182  0870               	movf	?___wmul,w
  1896  0183  00B0               	movwf	sprintf@exp^(0+128)
  1897  0184  300A               	movlw	10
  1898  0185  00F6               	movwf	?___awdiv
  1899  0186  01F7               	clrf	?___awdiv+1
  1900  0187  0831               	movf	(sprintf@exp+1)^(0+128),w
  1901  0188  00F9               	movwf	?___awdiv+3
  1902  0189  0830               	movf	sprintf@exp^(0+128),w
  1903  018A  00F8               	movwf	?___awdiv+2
  1904  018B  120A  158A  266A   	fcall	___awdiv
      +       120A  118A         
  1905  0190  0877               	movf	?___awdiv+1,w
  1906  0191  00B1               	movwf	(sprintf@exp+1)^(0+128)
  1907  0192  0876               	movf	?___awdiv,w
  1908  0193  00B0               	movwf	sprintf@exp^(0+128)
  1909  0194  1FB1               	btfss	(sprintf@exp+1)^(0+128),7
  1910  0195  299A               	goto	l5635
  1911  0196  30FF               	movlw	-1
  1912  0197  07B0               	addwf	sprintf@exp^(0+128),f
  1913  0198  1C03               	skipc
  1914  0199  03B1               	decf	(sprintf@exp+1)^(0+128),f
  1915  019A                     l5635:	
  1916  019A  0330               	decf	sprintf@exp^(0+128),w
  1917  019B  3AFF               	xorlw	255
  1918  019C  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  1919  01A1  2790  120A  118A   	fcall	PL11	;call to abstracted procedure
  1920  01A4  27B3               	fcall	PL19	;call to abstracted procedure
  1921  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  1922  01A6  0825               	movf	sprintf@integ^(0+128),w
  1923  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  1924  01A8  00B0               	movwf	?___ftmul+3
  1925  01A9  1683               	bsf	3,5	;RP0=1, select bank1
  1926  01AA  0826               	movf	(sprintf@integ+1)^(0+128),w
  1927  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  1928  01AC  00B1               	movwf	?___ftmul+4
  1929  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  1930  01AE  0827               	movf	(sprintf@integ+2)^(0+128),w
  1931  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1932  01B0  00B2               	movwf	?___ftmul+5
  1933  01B1  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  1934  01B6  082D               	movf	?___ftmul,w
  1935  01B7  1683               	bsf	3,5	;RP0=1, select bank1
  1936  01B8  00A5               	movwf	sprintf@integ^(0+128)
  1937  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  1938  01BA  082E               	movf	?___ftmul+1,w
  1939  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  1940  01BC  00A6               	movwf	(sprintf@integ+1)^(0+128)
  1941  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  1942  01BE  082F               	movf	?___ftmul+2,w
  1943  01BF  1683               	bsf	3,5	;RP0=1, select bank1
  1944  01C0  00A7               	movwf	(sprintf@integ+2)^(0+128)
  1945  01C1  27DA  120A  118A   	fcall	PL25	;call to abstracted procedure
  1946  01C4  3080               	movlw	128
  1947  01C5  01F3               	clrf	?___ftge+3
  1948  01C6  00F4               	movwf	?___ftge+4
  1949  01C7  303F               	movlw	63
  1950  01C8  00F5               	movwf	?___ftge+5
  1951  01C9  25C5  120A  118A   	fcall	___ftge
  1952  01CC  1803               	btfsc	3,0
  1953  01CD  29D3               	goto	l5643
  1954  01CE  30FF               	movlw	-1
  1955  01CF  07B0               	addwf	sprintf@exp^(0+128),f
  1956  01D0  1C03               	skipc
  1957  01D1  03B1               	decf	(sprintf@exp+1)^(0+128),f
  1958  01D2  29E3               	goto	l5647
  1959  01D3                     l5643:	
  1960  01D3  27DA  120A  118A   	fcall	PL25	;call to abstracted procedure
  1961  01D6  3020               	movlw	32
  1962  01D7  01F3               	clrf	?___ftge+3
  1963  01D8  00F4               	movwf	?___ftge+4
  1964  01D9  3041               	movlw	65
  1965  01DA  00F5               	movwf	?___ftge+5
  1966  01DB  25C5  120A  118A   	fcall	___ftge
  1967  01DE  1C03               	btfss	3,0
  1968  01DF  29E3               	goto	l5647
  1969  01E0  0AB0               	incf	sprintf@exp^(0+128),f
  1970  01E1  1903               	skipnz
  1971  01E2  0AB1               	incf	(sprintf@exp+1)^(0+128),f
  1972  01E3                     l5647:	
  1973  01E3  0837               	movf	(sprintf@prec+1)^(0+128),w
  1974  01E4  3A80               	xorlw	128
  1975  01E5  00FF               	movwf	127
  1976  01E6  3080               	movlw	128
  1977  01E7  027F               	subwf	127,w
  1978  01E8  1D03               	skipz
  1979  01E9  29EC               	goto	u2895
  1980  01EA  300D               	movlw	13
  1981  01EB  0236               	subwf	sprintf@prec^(0+128),w
  1982  01EC                     u2895:	
  1983  01EC  1803               	skipnc
  1984  01ED  2A17               	goto	l5651
  1985  01EE  27FD               	call	PL38	;select bank 1
  1986  01EF  0836               	movf	sprintf@prec^(0+128),w
  1987  01F0  120A  158A  20B7   	fcall	_fround
      +       120A  118A         
  1988  01F5  0848               	movf	?_fround,w
  1989  01F6  00BC               	movwf	?___ftadd
  1990  01F7  0849               	movf	?_fround+1,w
  1991  01F8  00BD               	movwf	?___ftadd+1
  1992  01F9  084A               	movf	?_fround+2,w
  1993  01FA  00BE               	movwf	?___ftadd+2
  1994  01FB  1683               	bsf	3,5	;RP0=1, select bank1
  1995  01FC  0832               	movf	sprintf@fval^(0+128),w
  1996  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  1997  01FE  00BF               	movwf	?___ftadd+3
  1998  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  1999  0200  0833               	movf	(sprintf@fval+1)^(0+128),w
  2000  0201  1283               	bcf	3,5	;RP0=0, select bank0
  2001  0202  00C0               	movwf	?___ftadd+4
  2002  0203  1683               	bsf	3,5	;RP0=1, select bank1
  2003  0204  0834               	movf	(sprintf@fval+2)^(0+128),w
  2004  0205  1283               	bcf	3,5	;RP0=0, select bank0
  2005  0206  00C1               	movwf	?___ftadd+5
  2006  0207  120A  158A  2418   	fcall	___ftadd
      +       120A  118A         
  2007  020C  083C               	movf	?___ftadd,w
  2008  020D  1683               	bsf	3,5	;RP0=1, select bank1
  2009  020E  00B2               	movwf	sprintf@fval^(0+128)
  2010  020F  1283               	bcf	3,5	;RP0=0, select bank0
  2011  0210  083D               	movf	?___ftadd+1,w
  2012  0211  1683               	bsf	3,5	;RP0=1, select bank1
  2013  0212  00B3               	movwf	(sprintf@fval+1)^(0+128)
  2014  0213  1283               	bcf	3,5	;RP0=0, select bank0
  2015  0214  083E               	movf	?___ftadd+2,w
  2016  0215  1683               	bsf	3,5	;RP0=1, select bank1
  2017  0216  00B4               	movwf	(sprintf@fval+2)^(0+128)
  2018  0217                     l5651:	
  2019  0217  27FD               	call	PL38	;select bank 1
  2020  0218  0831               	movf	(sprintf@exp+1)^(0+128),w
  2021  0219  3A80               	xorlw	128
  2022  021A  00FF               	movwf	127
  2023  021B  3080               	movlw	128
  2024  021C  027F               	subwf	127,w
  2025  021D  1D03               	skipz
  2026  021E  2A21               	goto	u2905
  2027  021F  300A               	movlw	10
  2028  0220  0230               	subwf	sprintf@exp^(0+128),w
  2029  0221                     u2905:	
  2030  0221  1803               	skipnc
  2031  0222  2A42               	goto	l5659
  2032  0223  27FD               	call	PL38	;select bank 1
  2033  0224  0834               	movf	(sprintf@fval+2)^(0+128),w
  2034  0225  0433               	iorwf	(sprintf@fval+1)^(0+128),w
  2035  0226  0432               	iorwf	sprintf@fval^(0+128),w
  2036  0227  1903               	skipnz
  2037  0228  2A83               	goto	l5675
  2038  0229  0832               	movf	sprintf@fval^(0+128),w
  2039  022A  27A8  120A  118A   	fcall	PL18	;call to abstracted procedure
  2040  022D  2618  120A  118A   	fcall	___fttol
  2041  0230  0823               	movf	?___fttol+3,w
  2042  0231  0422               	iorwf	?___fttol+2,w
  2043  0232  0421               	iorwf	?___fttol+1,w
  2044  0233  0420               	iorwf	?___fttol,w
  2045  0234  1D03               	skipz
  2046  0235  2A83               	goto	l5675
  2047  0236  1683               	bsf	3,5	;RP0=1, select bank1
  2048  0237  0831               	movf	(sprintf@exp+1)^(0+128),w
  2049  0238  3A80               	xorlw	128
  2050  0239  00FF               	movwf	127
  2051  023A  3080               	movlw	128
  2052  023B  027F               	subwf	127,w
  2053  023C  1D03               	skipz
  2054  023D  2A40               	goto	u2935
  2055  023E  3002               	movlw	2
  2056  023F  0230               	subwf	sprintf@exp^(0+128),w
  2057  0240                     u2935:	
  2058  0240  1C03               	skipc
  2059  0241  2A83               	goto	l5675
  2060  0242                     l5659:	
  2061  0242  27FD               	call	PL38	;select bank 1
  2062  0243  27DA  120A  118A   	fcall	PL25	;call to abstracted procedure
  2063  0246  3070               	movlw	112
  2064  0247  00F3               	movwf	?___ftge+3
  2065  0248  3089               	movlw	137
  2066  0249  00F4               	movwf	?___ftge+4
  2067  024A  3040               	movlw	64
  2068  024B  00F5               	movwf	?___ftge+5
  2069  024C  25C5  120A  118A   	fcall	___ftge
  2070  024F  1803               	btfsc	3,0
  2071  0250  2A53               	goto	l5663
  2072  0251  30F7               	movlw	-9
  2073  0252  2A54               	goto	L1
  2074  0253                     l5663:	
  2075  0253  30F8               	movlw	-8
  2076  0254                     L1:	
  2077  0254  07B0               	addwf	sprintf@exp^(0+128),f
  2078  0255  1C03               	skipc
  2079  0256  03B1               	decf	(sprintf@exp+1)^(0+128),f
  2080  0257  0830               	movf	sprintf@exp^(0+128),w
  2081  0258  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  2082  025D  2790  120A  118A   	fcall	PL11	;call to abstracted procedure
  2083  0260  00F0               	movwf	?__tdiv_to_l_
  2084  0261  0833               	movf	(sprintf@fval+1)^(0+128),w
  2085  0262  00F1               	movwf	?__tdiv_to_l_+1
  2086  0263  0834               	movf	(sprintf@fval+2)^(0+128),w
  2087  0264  00F2               	movwf	?__tdiv_to_l_+2
  2088  0265  0825               	movf	sprintf@integ^(0+128),w
  2089  0266  00F3               	movwf	?__tdiv_to_l_+3
  2090  0267  0826               	movf	(sprintf@integ+1)^(0+128),w
  2091  0268  00F4               	movwf	?__tdiv_to_l_+4
  2092  0269  0827               	movf	(sprintf@integ+2)^(0+128),w
  2093  026A  00F5               	movwf	?__tdiv_to_l_+5
  2094  026B  26BB  120A  118A   	fcall	__tdiv_to_l_
  2095  026E  0873               	movf	?__tdiv_to_l_+3,w
  2096  026F  1683               	bsf	3,5	;RP0=1, select bank1
  2097  0270  00A3               	movwf	(_sprintf$1919+3)^(0+128)
  2098  0271  0872               	movf	?__tdiv_to_l_+2,w
  2099  0272  00A2               	movwf	(_sprintf$1919+2)^(0+128)
  2100  0273  0871               	movf	?__tdiv_to_l_+1,w
  2101  0274  00A1               	movwf	(_sprintf$1919+1)^(0+128)
  2102  0275  0870               	movf	?__tdiv_to_l_,w
  2103  0276  00A0               	movwf	_sprintf$1919^(0+128)
  2104  0277  0823               	movf	(_sprintf$1919+3)^(0+128),w
  2105  0278  00AF               	movwf	(sprintf@_val+3)^(0+128)
  2106  0279  0822               	movf	(_sprintf$1919+2)^(0+128),w
  2107  027A  00AE               	movwf	(sprintf@_val+2)^(0+128)
  2108  027B  0821               	movf	(_sprintf$1919+1)^(0+128),w
  2109  027C  00AD               	movwf	(sprintf@_val+1)^(0+128)
  2110  027D  0820               	movf	_sprintf$1919^(0+128),w
  2111  027E  00AC               	movwf	sprintf@_val^(0+128)
  2112  027F  01B2               	clrf	sprintf@fval^(0+128)
  2113  0280  01B3               	clrf	(sprintf@fval+1)^(0+128)
  2114  0281  01B4               	clrf	(sprintf@fval+2)^(0+128)
  2115  0282  2ABE               	goto	l5679
  2116  0283                     l5675:	
  2117  0283  27FD               	call	PL38	;select bank 1
  2118  0284  0832               	movf	sprintf@fval^(0+128),w
  2119  0285  27A8  120A  118A   	fcall	PL18	;call to abstracted procedure
  2120  0288  2618  120A  118A   	fcall	___fttol
  2121  028B  2782  120A  118A   	fcall	PL9	;call to abstracted procedure
  2122  028E  1683               	bsf	3,5	;RP0=1, select bank1
  2123  028F  00AC               	movwf	sprintf@_val^(0+128)
  2124  0290  082F               	movf	(sprintf@_val+3)^(0+128),w
  2125  0291  00FB               	movwf	?___lltoft+3
  2126  0292  082E               	movf	(sprintf@_val+2)^(0+128),w
  2127  0293  00FA               	movwf	?___lltoft+2
  2128  0294  082D               	movf	(sprintf@_val+1)^(0+128),w
  2129  0295  00F9               	movwf	?___lltoft+1
  2130  0296  082C               	movf	sprintf@_val^(0+128),w
  2131  0297  00F8               	movwf	?___lltoft
  2132  0298  273B               	fcall	___lltoft
  2133  0299  0878               	movf	?___lltoft,w
  2134  029A  1283               	bcf	3,5	;RP0=0, select bank0
  2135  029B  00C8               	movwf	?___ftsub
  2136  029C  0879               	movf	?___lltoft+1,w
  2137  029D  00C9               	movwf	?___ftsub+1
  2138  029E  087A               	movf	?___lltoft+2,w
  2139  029F  00CA               	movwf	?___ftsub+2
  2140  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  2141  02A1  0832               	movf	sprintf@fval^(0+128),w
  2142  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  2143  02A3  00CB               	movwf	?___ftsub+3
  2144  02A4  1683               	bsf	3,5	;RP0=1, select bank1
  2145  02A5  0833               	movf	(sprintf@fval+1)^(0+128),w
  2146  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  2147  02A7  00CC               	movwf	?___ftsub+4
  2148  02A8  1683               	bsf	3,5	;RP0=1, select bank1
  2149  02A9  0834               	movf	(sprintf@fval+2)^(0+128),w
  2150  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  2151  02AB  00CD               	movwf	?___ftsub+5
  2152  02AC  120A  158A  2402   	fcall	___ftsub
      +       120A  118A         
  2153  02B1  0848               	movf	?___ftsub,w
  2154  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  2155  02B3  00B2               	movwf	sprintf@fval^(0+128)
  2156  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  2157  02B5  0849               	movf	?___ftsub+1,w
  2158  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  2159  02B7  00B3               	movwf	(sprintf@fval+1)^(0+128)
  2160  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  2161  02B9  084A               	movf	?___ftsub+2,w
  2162  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  2163  02BB  00B4               	movwf	(sprintf@fval+2)^(0+128)
  2164  02BC  01B0               	clrf	sprintf@exp^(0+128)
  2165  02BD  01B1               	clrf	(sprintf@exp+1)^(0+128)
  2166  02BE                     l5679:	
  2167  02BE  01B8               	clrf	sprintf@c^(0+128)
  2168  02BF  0AB8               	incf	sprintf@c^(0+128),f
  2169  02C0                     l5685:	
  2170  02C0  275B               	fcall	PL3	;call to abstracted procedure
  2171  02C1  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2172  02C6  00D7               	movwf	??_sprintf+1
  2173  02C7  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2174  02CC  00D8               	movwf	??_sprintf+2
  2175  02CD  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2176  02D2  00D9               	movwf	??_sprintf+3
  2177  02D3  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2178  02D8  00DA               	movwf	??_sprintf+4
  2179  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  2180  02DA  022F               	subwf	(sprintf@_val+3)^(0+128),w
  2181  02DB  1D03               	skipz
  2182  02DC  2AED               	goto	u2955
  2183  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  2184  02DE  0859               	movf	??_sprintf+3,w
  2185  02DF  1683               	bsf	3,5	;RP0=1, select bank1
  2186  02E0  022E               	subwf	(sprintf@_val+2)^(0+128),w
  2187  02E1  1D03               	skipz
  2188  02E2  2AED               	goto	u2955
  2189  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  2190  02E4  0858               	movf	??_sprintf+2,w
  2191  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  2192  02E6  022D               	subwf	(sprintf@_val+1)^(0+128),w
  2193  02E7  1D03               	skipz
  2194  02E8  2AED               	goto	u2955
  2195  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  2196  02EA  0857               	movf	??_sprintf+1,w
  2197  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  2198  02EC  022C               	subwf	sprintf@_val^(0+128),w
  2199  02ED                     u2955:	
  2200  02ED  1C03               	btfss	3,0
  2201  02EE  2AF4               	goto	l5693
  2202  02EF  0AB8               	incf	sprintf@c^(0+128),f
  2203  02F0  0838               	movf	sprintf@c^(0+128),w
  2204  02F1  3A0A               	xorlw	10
  2205  02F2  1D03               	skipz
  2206  02F3  2AC0               	goto	l5685
  2207  02F4                     l5693:	
  2208  02F4  0836               	movf	sprintf@prec^(0+128),w
  2209  02F5  0738               	addwf	sprintf@c^(0+128),w
  2210  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  2211  02F7  00D6               	movwf	??_sprintf
  2212  02F8  1683               	bsf	3,5	;RP0=1, select bank1
  2213  02F9  0837               	movf	(sprintf@prec+1)^(0+128),w
  2214  02FA  1803               	skipnc
  2215  02FB  0A37               	incf	(sprintf@prec+1)^(0+128),w
  2216  02FC  1BB8               	btfsc	sprintf@c^(0+128),7
  2217  02FD  3EFF               	addlw	255
  2218  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  2219  02FF  00D7               	movwf	??_sprintf+1
  2220  0300  1683               	bsf	3,5	;RP0=1, select bank1
  2221  0301  0830               	movf	sprintf@exp^(0+128),w
  2222  0302  1283               	bcf	3,5	;RP0=0, select bank0
  2223  0303  0756               	addwf	??_sprintf,w
  2224  0304  00D8               	movwf	??_sprintf+2
  2225  0305  1683               	bsf	3,5	;RP0=1, select bank1
  2226  0306  0831               	movf	(sprintf@exp+1)^(0+128),w
  2227  0307  1803               	skipnc
  2228  0308  0A31               	incf	(sprintf@exp+1)^(0+128),w
  2229  0309  1283               	bcf	3,5	;RP0=0, select bank0
  2230  030A  0757               	addwf	??_sprintf+1,w
  2231  030B  00D9               	movwf	??_sprintf+3
  2232  030C  0858               	movf	??_sprintf+2,w
  2233  030D  1683               	bsf	3,5	;RP0=1, select bank1
  2234  030E  02AA               	subwf	sprintf@width^(0+128),f
  2235  030F  1283               	bcf	3,5	;RP0=0, select bank0
  2236  0310  0859               	movf	??_sprintf+3,w
  2237  0311  1683               	bsf	3,5	;RP0=1, select bank1
  2238  0312  1C03               	skipc
  2239  0313  03AB               	decf	(sprintf@width+1)^(0+128),f
  2240  0314  02AB               	subwf	(sprintf@width+1)^(0+128),f
  2241  0315  0837               	movf	(sprintf@prec+1)^(0+128),w
  2242  0316  0436               	iorwf	sprintf@prec^(0+128),w
  2243  0317  1903               	skipnz
  2244  0318  2B1D               	goto	l5699
  2245  0319  30FF               	movlw	-1
  2246  031A  07AA               	addwf	sprintf@width^(0+128),f
  2247  031B  1C03               	skipc
  2248  031C  03AB               	decf	(sprintf@width+1)^(0+128),f
  2249  031D                     l5699:	
  2250  031D  0828               	movf	sprintf@flag^(0+128),w
  2251  031E  3903               	andlw	3
  2252  031F  1D03               	btfss	3,2
  2253  0320  2B33               	goto	l5701
  2254  0321                     l5709:	
  2255  0321  082B               	movf	(sprintf@width+1)^(0+128),w
  2256  0322  3A80               	xorlw	128
  2257  0323  00FF               	movwf	127
  2258  0324  3080               	movlw	128
  2259  0325  027F               	subwf	127,w
  2260  0326  1D03               	skipz
  2261  0327  2B2A               	goto	u2995
  2262  0328  3001               	movlw	1
  2263  0329  022A               	subwf	sprintf@width^(0+128),w
  2264  032A                     u2995:	
  2265  032A  1C03               	btfss	3,0
  2266  032B  2B38               	goto	l5711
  2267  032C  27FD               	call	PL38	;select bank 1
  2268  032D  0835               	movf	sprintf@sp^(0+128),w
  2269  032E  0084               	movwf	4
  2270  032F  3020               	movlw	32
  2271  0330  1383               	bcf	3,7	;select IRP bank0
  2272  0331  0080               	movwf	0
  2273  0332  0AB5               	incf	sprintf@sp^(0+128),f
  2274  0333                     l5701:	
  2275  0333  30FF               	movlw	-1
  2276  0334  07AA               	addwf	sprintf@width^(0+128),f
  2277  0335  1C03               	skipc
  2278  0336  03AB               	decf	(sprintf@width+1)^(0+128),f
  2279  0337  2B21               	goto	l5709
  2280  0338                     l5711:	
  2281  0338  27FD               	call	PL38	;select bank 1
  2282  0339  0828               	movf	sprintf@flag^(0+128),w
  2283  033A  3903               	andlw	3
  2284  033B  1903               	btfsc	3,2
  2285  033C  2B6F               	goto	l5721
  2286  033D  0835               	movf	sprintf@sp^(0+128),w
  2287  033E  0084               	movwf	4
  2288  033F  302D               	movlw	45
  2289  0340  2B6B               	goto	L4
  2290  0341                     l5717:	
  2291  0341  2765  120A  118A   	fcall	PL5	;call to abstracted procedure
  2292  0344  275B               	fcall	PL3	;call to abstracted procedure
  2293  0345  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2294  034A  00F0               	movwf	?___lldiv
  2295  034B  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2296  0350  00F1               	movwf	?___lldiv+1
  2297  0351  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2298  0356  00F2               	movwf	?___lldiv+2
  2299  0357  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2300  035C  276D  120A  118A   	fcall	PL6	;call to abstracted procedure
  2301  035F  2673  120A  118A   	fcall	___lldiv
  2302  0362  2778  120A  118A   	fcall	PL7	;call to abstracted procedure
  2303  0365  2587  120A  118A   	fcall	___llmod
  2304  0368  27C8  120A  118A   	fcall	PL23	;call to abstracted procedure
  2305  036B                     L4:	
  2306  036B  1383               	bcf	3,7	;select IRP bank0
  2307  036C  0080               	movwf	0
  2308  036D  1683               	bsf	3,5	;RP0=1, select bank1
  2309  036E  0AB5               	incf	sprintf@sp^(0+128),f
  2310  036F                     l5721:	
  2311  036F  03B8               	decf	sprintf@c^(0+128),f
  2312  0370  0F38               	incfsz	sprintf@c^(0+128),w
  2313  0371  2B41               	goto	l5717
  2314  0372                     l5729:	
  2315  0372  0831               	movf	(sprintf@exp+1)^(0+128),w
  2316  0373  3A80               	xorlw	128
  2317  0374  00FF               	movwf	127
  2318  0375  3080               	movlw	128
  2319  0376  027F               	subwf	127,w
  2320  0377  1D03               	skipz
  2321  0378  2B7B               	goto	u3025
  2322  0379  3001               	movlw	1
  2323  037A  0230               	subwf	sprintf@exp^(0+128),w
  2324  037B                     u3025:	
  2325  037B  1C03               	btfss	3,0
  2326  037C  2B86               	goto	l5731
  2327  037D  27FD               	call	PL38	;select bank 1
  2328  037E  0835               	movf	sprintf@sp^(0+128),w
  2329  037F  27E8  120A  118A   	fcall	PL33	;call to abstracted procedure
  2330  0382  07B0               	addwf	sprintf@exp^(0+128),f
  2331  0383  1C03               	skipc
  2332  0384  03B1               	decf	(sprintf@exp+1)^(0+128),f
  2333  0385  2B72               	goto	l5729
  2334  0386                     l5731:	
  2335  0386  27FD               	call	PL38	;select bank 1
  2336  0387  0837               	movf	(sprintf@prec+1)^(0+128),w
  2337  0388  3A80               	xorlw	128
  2338  0389  00FF               	movwf	127
  2339  038A  3080               	movlw	128
  2340  038B  027F               	subwf	127,w
  2341  038C  1D03               	skipz
  2342  038D  2B90               	goto	u3035
  2343  038E  3009               	movlw	9
  2344  038F  0236               	subwf	sprintf@prec^(0+128),w
  2345  0390                     u3035:	
  2346  0390  1C03               	skipc
  2347  0391  2B95               	goto	l5735
  2348  0392  3008               	movlw	8
  2349  0393  27FD               	call	PL38	;select bank 1
  2350  0394  2B97               	goto	L2
  2351  0395                     l5735:	
  2352  0395  27FD               	call	PL38	;select bank 1
  2353  0396  0836               	movf	sprintf@prec^(0+128),w
  2354  0397                     L2:	
  2355  0397  00B8               	movwf	sprintf@c^(0+128)
  2356  0398  1283               	bcf	3,5	;RP0=0, select bank0
  2357  0399  00D6               	movwf	??_sprintf
  2358  039A  01D7               	clrf	??_sprintf+1
  2359  039B  1BD6               	btfsc	??_sprintf,7
  2360  039C  03D7               	decf	??_sprintf+1,f
  2361  039D  1683               	bsf	3,5	;RP0=1, select bank1
  2362  039E  02B6               	subwf	sprintf@prec^(0+128),f
  2363  039F  1283               	bcf	3,5	;RP0=0, select bank0
  2364  03A0  0857               	movf	??_sprintf+1,w
  2365  03A1  1683               	bsf	3,5	;RP0=1, select bank1
  2366  03A2  1C03               	skipc
  2367  03A3  03B7               	decf	(sprintf@prec+1)^(0+128),f
  2368  03A4  02B7               	subwf	(sprintf@prec+1)^(0+128),f
  2369  03A5  0838               	movf	sprintf@c^(0+128),w
  2370  03A6  1903               	btfsc	3,2
  2371  03A7  2BAE               	goto	l5741
  2372  03A8  0835               	movf	sprintf@sp^(0+128),w
  2373  03A9  0084               	movwf	4
  2374  03AA  302E               	movlw	46
  2375  03AB  1383               	bcf	3,7	;select IRP bank0
  2376  03AC  0080               	movwf	0
  2377  03AD  0AB5               	incf	sprintf@sp^(0+128),f
  2378  03AE                     l5741:	
  2379  03AE  0838               	movf	sprintf@c^(0+128),w
  2380  03AF  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  2381  03B4  083C               	movf	?_scale,w
  2382  03B5  00B0               	movwf	?___ftmul+3
  2383  03B6  083D               	movf	?_scale+1,w
  2384  03B7  00B1               	movwf	?___ftmul+4
  2385  03B8  083E               	movf	?_scale+2,w
  2386  03B9  00B2               	movwf	?___ftmul+5
  2387  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  2388  03BB  0832               	movf	sprintf@fval^(0+128),w
  2389  03BC  27B3               	fcall	PL19	;call to abstracted procedure
  2390  03BD  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2391  03C2  082D               	movf	?___ftmul,w
  2392  03C3  00A0               	movwf	?___fttol
  2393  03C4  082E               	movf	?___ftmul+1,w
  2394  03C5  00A1               	movwf	?___fttol+1
  2395  03C6  082F               	movf	?___ftmul+2,w
  2396  03C7  00A2               	movwf	?___fttol+2
  2397  03C8  2618  120A  118A   	fcall	___fttol
  2398  03CB  2782  120A  118A   	fcall	PL9	;call to abstracted procedure
  2399  03CE  2C36               	goto	L3
  2400  03CF                     l5743:	
  2401  03CF  2765  120A  118A   	fcall	PL5	;call to abstracted procedure
  2402  03D2  275B               	fcall	PL3	;call to abstracted procedure
  2403  03D3  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2404  03D8  00F0               	movwf	?___lldiv
  2405  03D9  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2406  03DE  00F1               	movwf	?___lldiv+1
  2407  03DF  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2408  03E4  00F2               	movwf	?___lldiv+2
  2409  03E5  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2410  03EA  276D  120A  118A   	fcall	PL6	;call to abstracted procedure
  2411  03ED  2673  120A  118A   	fcall	___lldiv
  2412  03F0  2778  120A  118A   	fcall	PL7	;call to abstracted procedure
  2413  03F3  2587  120A  118A   	fcall	___llmod
  2414  03F6  27C8  120A  118A   	fcall	PL23	;call to abstracted procedure
  2415  03F9  1383               	bcf	3,7	;select IRP bank0
  2416  03FA  0080               	movwf	0
  2417  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  2418  03FC  0AB5               	incf	sprintf@sp^(0+128),f
  2419  03FD  275B               	fcall	PL3	;call to abstracted procedure
  2420  03FE  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2421  0403  00A0               	movwf	?___llmod
  2422  0404  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2423  0409  00A1               	movwf	?___llmod+1
  2424  040A  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2425  040F  00A2               	movwf	?___llmod+2
  2426  0410  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2427  0415  00A3               	movwf	?___llmod+3
  2428  0416  1683               	bsf	3,5	;RP0=1, select bank1
  2429  0417  082F               	movf	(sprintf@_val+3)^(0+128),w
  2430  0418  1283               	bcf	3,5	;RP0=0, select bank0
  2431  0419  00A7               	movwf	?___llmod+7
  2432  041A  1683               	bsf	3,5	;RP0=1, select bank1
  2433  041B  082E               	movf	(sprintf@_val+2)^(0+128),w
  2434  041C  1283               	bcf	3,5	;RP0=0, select bank0
  2435  041D  00A6               	movwf	?___llmod+6
  2436  041E  1683               	bsf	3,5	;RP0=1, select bank1
  2437  041F  082D               	movf	(sprintf@_val+1)^(0+128),w
  2438  0420  1283               	bcf	3,5	;RP0=0, select bank0
  2439  0421  00A5               	movwf	?___llmod+5
  2440  0422  1683               	bsf	3,5	;RP0=1, select bank1
  2441  0423  082C               	movf	sprintf@_val^(0+128),w
  2442  0424  1283               	bcf	3,5	;RP0=0, select bank0
  2443  0425  00A4               	movwf	?___llmod+4
  2444  0426  2587  120A  118A   	fcall	___llmod
  2445  0429  0823               	movf	?___llmod+3,w
  2446  042A  1683               	bsf	3,5	;RP0=1, select bank1
  2447  042B  00AF               	movwf	(sprintf@_val+3)^(0+128)
  2448  042C  1283               	bcf	3,5	;RP0=0, select bank0
  2449  042D  0822               	movf	?___llmod+2,w
  2450  042E  1683               	bsf	3,5	;RP0=1, select bank1
  2451  042F  00AE               	movwf	(sprintf@_val+2)^(0+128)
  2452  0430  1283               	bcf	3,5	;RP0=0, select bank0
  2453  0431  0821               	movf	?___llmod+1,w
  2454  0432  1683               	bsf	3,5	;RP0=1, select bank1
  2455  0433  00AD               	movwf	(sprintf@_val+1)^(0+128)
  2456  0434  1283               	bcf	3,5	;RP0=0, select bank0
  2457  0435  0820               	movf	?___llmod,w
  2458  0436                     L3:	
  2459  0436  1683               	bsf	3,5	;RP0=1, select bank1
  2460  0437  00AC               	movwf	sprintf@_val^(0+128)
  2461  0438  03B8               	decf	sprintf@c^(0+128),f
  2462  0439  0F38               	incfsz	sprintf@c^(0+128),w
  2463  043A  2BCF               	goto	l5743
  2464  043B                     l5757:	
  2465  043B  0837               	movf	(sprintf@prec+1)^(0+128),w
  2466  043C  0436               	iorwf	sprintf@prec^(0+128),w
  2467  043D  1903               	btfsc	3,2
  2468  043E  2866               	goto	l5839
  2469  043F  0835               	movf	sprintf@sp^(0+128),w
  2470  0440  27E8  120A  118A   	fcall	PL33	;call to abstracted procedure
  2471  0443  07B6               	addwf	sprintf@prec^(0+128),f
  2472  0444  1C03               	skipc
  2473  0445  03B7               	decf	(sprintf@prec+1)^(0+128),f
  2474  0446  2C3B               	goto	l5757
  2475  0447                     l5759:	
  2476  0447  1683               	bsf	3,5	;RP0=1, select bank1
  2477  0448  0824               	movf	sprintf@ap^(0+128),w
  2478  0449  0084               	movwf	4
  2479  044A  1383               	bcf	3,7	;select IRP bank0
  2480  044B  27EF  120A  118A   	fcall	PL34	;call to abstracted procedure
  2481  044E  0856               	movf	??_sprintf,w
  2482  044F  1683               	bsf	3,5	;RP0=1, select bank1
  2483  0450  00AC               	movwf	sprintf@_val^(0+128)
  2484  0451  1283               	bcf	3,5	;RP0=0, select bank0
  2485  0452  0857               	movf	??_sprintf+1,w
  2486  0453  1683               	bsf	3,5	;RP0=1, select bank1
  2487  0454  00AD               	movwf	(sprintf@_val+1)^(0+128)
  2488  0455  3000               	movlw	0
  2489  0456  1BAD               	btfsc	(sprintf@_val+1)^(0+128),7
  2490  0457  30FF               	movlw	255
  2491  0458  00AE               	movwf	(sprintf@_val+2)^(0+128)
  2492  0459  00AF               	movwf	(sprintf@_val+3)^(0+128)
  2493  045A  0AA4               	incf	sprintf@ap^(0+128),f
  2494  045B  0AA4               	incf	sprintf@ap^(0+128),f
  2495  045C  1FAF               	btfss	(sprintf@_val+3)^(0+128),7
  2496  045D  2C6B               	goto	l5769
  2497  045E  3003               	movlw	3
  2498  045F  04A8               	iorwf	sprintf@flag^(0+128),f
  2499  0460  09AC               	comf	sprintf@_val^(0+128),f
  2500  0461  09AD               	comf	(sprintf@_val+1)^(0+128),f
  2501  0462  09AE               	comf	(sprintf@_val+2)^(0+128),f
  2502  0463  09AF               	comf	(sprintf@_val+3)^(0+128),f
  2503  0464  0AAC               	incf	sprintf@_val^(0+128),f
  2504  0465  1903               	skipnz
  2505  0466  0AAD               	incf	(sprintf@_val+1)^(0+128),f
  2506  0467  1903               	skipnz
  2507  0468  0AAE               	incf	(sprintf@_val+2)^(0+128),f
  2508  0469  1903               	skipnz
  2509  046A  0AAF               	incf	(sprintf@_val+3)^(0+128),f
  2510  046B                     l5769:	
  2511  046B  0837               	movf	(sprintf@prec+1)^(0+128),w
  2512  046C  0436               	iorwf	sprintf@prec^(0+128),w
  2513  046D  1D03               	skipz
  2514  046E  2C77               	goto	l5775
  2515  046F  082F               	movf	(sprintf@_val+3)^(0+128),w
  2516  0470  042E               	iorwf	(sprintf@_val+2)^(0+128),w
  2517  0471  042D               	iorwf	(sprintf@_val+1)^(0+128),w
  2518  0472  042C               	iorwf	sprintf@_val^(0+128),w
  2519  0473  1903               	btfsc	3,2
  2520  0474  0AB6               	incf	sprintf@prec^(0+128),f
  2521  0475  1903               	skipnz
  2522  0476  0AB7               	incf	(sprintf@prec+1)^(0+128),f
  2523  0477                     l5775:	
  2524  0477  01B8               	clrf	sprintf@c^(0+128)
  2525  0478  0AB8               	incf	sprintf@c^(0+128),f
  2526  0479                     l5781:	
  2527  0479  275B               	fcall	PL3	;call to abstracted procedure
  2528  047A  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2529  047F  00D7               	movwf	??_sprintf+1
  2530  0480  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2531  0485  00D8               	movwf	??_sprintf+2
  2532  0486  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2533  048B  00D9               	movwf	??_sprintf+3
  2534  048C  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2535  0491  00DA               	movwf	??_sprintf+4
  2536  0492  1683               	bsf	3,5	;RP0=1, select bank1
  2537  0493  022F               	subwf	(sprintf@_val+3)^(0+128),w
  2538  0494  1D03               	skipz
  2539  0495  2CA6               	goto	u3105
  2540  0496  1283               	bcf	3,5	;RP0=0, select bank0
  2541  0497  0859               	movf	??_sprintf+3,w
  2542  0498  1683               	bsf	3,5	;RP0=1, select bank1
  2543  0499  022E               	subwf	(sprintf@_val+2)^(0+128),w
  2544  049A  1D03               	skipz
  2545  049B  2CA6               	goto	u3105
  2546  049C  1283               	bcf	3,5	;RP0=0, select bank0
  2547  049D  0858               	movf	??_sprintf+2,w
  2548  049E  1683               	bsf	3,5	;RP0=1, select bank1
  2549  049F  022D               	subwf	(sprintf@_val+1)^(0+128),w
  2550  04A0  1D03               	skipz
  2551  04A1  2CA6               	goto	u3105
  2552  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  2553  04A3  0857               	movf	??_sprintf+1,w
  2554  04A4  1683               	bsf	3,5	;RP0=1, select bank1
  2555  04A5  022C               	subwf	sprintf@_val^(0+128),w
  2556  04A6                     u3105:	
  2557  04A6  1C03               	btfss	3,0
  2558  04A7  2CAD               	goto	l5789
  2559  04A8  0AB8               	incf	sprintf@c^(0+128),f
  2560  04A9  0838               	movf	sprintf@c^(0+128),w
  2561  04AA  3A0A               	xorlw	10
  2562  04AB  1D03               	skipz
  2563  04AC  2C79               	goto	l5781
  2564  04AD                     l5789:	
  2565  04AD  0838               	movf	sprintf@c^(0+128),w
  2566  04AE  27BE  120A  118A   	fcall	PL22	;call to abstracted procedure
  2567  04B1  0837               	movf	(sprintf@prec+1)^(0+128),w
  2568  04B2  3A80               	xorlw	128
  2569  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  2570  04B4  0258               	subwf	??_sprintf+2,w
  2571  04B5  1D03               	skipz
  2572  04B6  2CBB               	goto	u3125
  2573  04B7  1683               	bsf	3,5	;RP0=1, select bank1
  2574  04B8  0836               	movf	sprintf@prec^(0+128),w
  2575  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  2576  04BA  0256               	subwf	??_sprintf,w
  2577  04BB                     u3125:	
  2578  04BB  1803               	skipnc
  2579  04BC  2CC1               	goto	l5793
  2580  04BD  27FD               	call	PL38	;select bank 1
  2581  04BE  0836               	movf	sprintf@prec^(0+128),w
  2582  04BF  00B8               	movwf	sprintf@c^(0+128)
  2583  04C0  2CD9               	goto	l5797
  2584  04C1                     l5793:	
  2585  04C1  1683               	bsf	3,5	;RP0=1, select bank1
  2586  04C2  27D1  120A  118A   	fcall	PL24	;call to abstracted procedure
  2587  04C5  0837               	movf	(sprintf@prec+1)^(0+128),w
  2588  04C6  3A80               	xorlw	128
  2589  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  2590  04C8  00D8               	movwf	??_sprintf+2
  2591  04C9  0857               	movf	??_sprintf+1,w
  2592  04CA  3A80               	xorlw	128
  2593  04CB  0258               	subwf	??_sprintf+2,w
  2594  04CC  1D03               	skipz
  2595  04CD  2CD1               	goto	u3135
  2596  04CE  0856               	movf	??_sprintf,w
  2597  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  2598  04D0  0236               	subwf	sprintf@prec^(0+128),w
  2599  04D1                     u3135:	
  2600  04D1  1803               	skipnc
  2601  04D2  2CD9               	goto	l5797
  2602  04D3  27FD               	call	PL38	;select bank 1
  2603  04D4  0838               	movf	sprintf@c^(0+128),w
  2604  04D5  00B6               	movwf	sprintf@prec^(0+128)
  2605  04D6  01B7               	clrf	(sprintf@prec+1)^(0+128)
  2606  04D7  1BB6               	btfsc	sprintf@prec^(0+128),7
  2607  04D8  03B7               	decf	(sprintf@prec+1)^(0+128),f
  2608  04D9                     l5797:	
  2609  04D9  27FD               	call	PL38	;select bank 1
  2610  04DA  082B               	movf	(sprintf@width+1)^(0+128),w
  2611  04DB  042A               	iorwf	sprintf@width^(0+128),w
  2612  04DC  1903               	skipnz
  2613  04DD  2CE6               	goto	l5803
  2614  04DE  0828               	movf	sprintf@flag^(0+128),w
  2615  04DF  3903               	andlw	3
  2616  04E0  1903               	btfsc	3,2
  2617  04E1  2CE6               	goto	l5803
  2618  04E2  30FF               	movlw	-1
  2619  04E3  07AA               	addwf	sprintf@width^(0+128),f
  2620  04E4  1C03               	skipc
  2621  04E5  03AB               	decf	(sprintf@width+1)^(0+128),f
  2622  04E6                     l5803:	
  2623  04E6  1F29               	btfss	(sprintf@flag+1)^(0+128),6
  2624  04E7  2D03               	goto	l5811
  2625  04E8  0837               	movf	(sprintf@prec+1)^(0+128),w
  2626  04E9  3A80               	xorlw	128
  2627  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  2628  04EB  00D6               	movwf	??_sprintf
  2629  04EC  1683               	bsf	3,5	;RP0=1, select bank1
  2630  04ED  082B               	movf	(sprintf@width+1)^(0+128),w
  2631  04EE  3A80               	xorlw	128
  2632  04EF  1283               	bcf	3,5	;RP0=0, select bank0
  2633  04F0  0256               	subwf	??_sprintf,w
  2634  04F1  1D03               	skipz
  2635  04F2  2CF6               	goto	u3175
  2636  04F3  1683               	bsf	3,5	;RP0=1, select bank1
  2637  04F4  082A               	movf	sprintf@width^(0+128),w
  2638  04F5  0236               	subwf	sprintf@prec^(0+128),w
  2639  04F6                     u3175:	
  2640  04F6  1803               	skipnc
  2641  04F7  2D00               	goto	l5809
  2642  04F8  27FD               	call	PL38	;select bank 1
  2643  04F9  0836               	movf	sprintf@prec^(0+128),w
  2644  04FA  02AA               	subwf	sprintf@width^(0+128),f
  2645  04FB  0837               	movf	(sprintf@prec+1)^(0+128),w
  2646  04FC  1C03               	skipc
  2647  04FD  03AB               	decf	(sprintf@width+1)^(0+128),f
  2648  04FE  02AB               	subwf	(sprintf@width+1)^(0+128),f
  2649  04FF  2D03               	goto	l5811
  2650  0500                     l5809:	
  2651  0500  27FD               	call	PL38	;select bank 1
  2652  0501  01AA               	clrf	sprintf@width^(0+128)
  2653  0502  01AB               	clrf	(sprintf@width+1)^(0+128)
  2654  0503                     l5811:	
  2655  0503  0838               	movf	sprintf@c^(0+128),w
  2656  0504  27BE  120A  118A   	fcall	PL22	;call to abstracted procedure
  2657  0507  082B               	movf	(sprintf@width+1)^(0+128),w
  2658  0508  3A80               	xorlw	128
  2659  0509  1283               	bcf	3,5	;RP0=0, select bank0
  2660  050A  0258               	subwf	??_sprintf+2,w
  2661  050B  1D03               	skipz
  2662  050C  2D11               	goto	u3185
  2663  050D  1683               	bsf	3,5	;RP0=1, select bank1
  2664  050E  082A               	movf	sprintf@width^(0+128),w
  2665  050F  1283               	bcf	3,5	;RP0=0, select bank0
  2666  0510  0256               	subwf	??_sprintf,w
  2667  0511                     u3185:	
  2668  0511  1803               	skipnc
  2669  0512  2D1F               	goto	l5815
  2670  0513  1683               	bsf	3,5	;RP0=1, select bank1
  2671  0514  27D1  120A  118A   	fcall	PL24	;call to abstracted procedure
  2672  0517  02AA               	subwf	sprintf@width^(0+128),f
  2673  0518  1283               	bcf	3,5	;RP0=0, select bank0
  2674  0519  0857               	movf	??_sprintf+1,w
  2675  051A  1683               	bsf	3,5	;RP0=1, select bank1
  2676  051B  1C03               	skipc
  2677  051C  03AB               	decf	(sprintf@width+1)^(0+128),f
  2678  051D  02AB               	subwf	(sprintf@width+1)^(0+128),f
  2679  051E  2D22               	goto	l5817
  2680  051F                     l5815:	
  2681  051F  27FD               	call	PL38	;select bank 1
  2682  0520  01AA               	clrf	sprintf@width^(0+128)
  2683  0521  01AB               	clrf	(sprintf@width+1)^(0+128)
  2684  0522                     l5817:	
  2685  0522  082B               	movf	(sprintf@width+1)^(0+128),w
  2686  0523  042A               	iorwf	sprintf@width^(0+128),w
  2687  0524  1903               	skipnz
  2688  0525  2D34               	goto	l5825
  2689  0526                     l5819:	
  2690  0526  0835               	movf	sprintf@sp^(0+128),w
  2691  0527  0084               	movwf	4
  2692  0528  3020               	movlw	32
  2693  0529  1383               	bcf	3,7	;select IRP bank0
  2694  052A  0080               	movwf	0
  2695  052B  30FF               	movlw	-1
  2696  052C  0AB5               	incf	sprintf@sp^(0+128),f
  2697  052D  07AA               	addwf	sprintf@width^(0+128),f
  2698  052E  1C03               	skipc
  2699  052F  03AB               	decf	(sprintf@width+1)^(0+128),f
  2700  0530  082B               	movf	(sprintf@width+1)^(0+128),w
  2701  0531  042A               	iorwf	sprintf@width^(0+128),w
  2702  0532  1D03               	skipz
  2703  0533  2D26               	goto	l5819
  2704  0534                     l5825:	
  2705  0534  0828               	movf	sprintf@flag^(0+128),w
  2706  0535  3903               	andlw	3
  2707  0536  1903               	btfsc	3,2
  2708  0537  2D3E               	goto	l5837
  2709  0538  0835               	movf	sprintf@sp^(0+128),w
  2710  0539  0084               	movwf	4
  2711  053A  302D               	movlw	45
  2712  053B                     L5:	
  2713  053B  1383               	bcf	3,7	;select IRP bank0
  2714  053C  0080               	movwf	0
  2715  053D  0AB5               	incf	sprintf@sp^(0+128),f
  2716  053E                     l5837:	
  2717  053E  30FF               	movlw	-1
  2718  053F  07B6               	addwf	sprintf@prec^(0+128),f
  2719  0540  1C03               	skipc
  2720  0541  03B7               	decf	(sprintf@prec+1)^(0+128),f
  2721  0542  0A36               	incf	sprintf@prec^(0+128),w
  2722  0543  1903               	skipnz
  2723  0544  0A37               	incf	(sprintf@prec+1)^(0+128),w
  2724  0545  1903               	btfsc	3,2
  2725  0546  2866               	goto	l5839
  2726  0547  300A               	movlw	10
  2727  0548  1283               	bcf	3,5	;RP0=0, select bank0
  2728  0549  00A0               	movwf	?___llmod
  2729  054A  01A1               	clrf	?___llmod+1
  2730  054B  01A2               	clrf	?___llmod+2
  2731  054C  01A3               	clrf	?___llmod+3
  2732  054D  1683               	bsf	3,5	;RP0=1, select bank1
  2733  054E  0836               	movf	sprintf@prec^(0+128),w
  2734  054F  1283               	bcf	3,5	;RP0=0, select bank0
  2735  0550  00D6               	movwf	??_sprintf
  2736  0551  1003               	clrc
  2737  0552  0DD6               	rlf	??_sprintf,f
  2738  0553  1003               	clrc
  2739  0554  0D56               	rlf	??_sprintf,w
  2740  0555  3E4F               	addlw	low (_dpowers-__stringbase)
  2741  0556  0084               	movwf	4
  2742  0557  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2743  055C  00F0               	movwf	?___lldiv
  2744  055D  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2745  0562  00F1               	movwf	?___lldiv+1
  2746  0563  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2747  0568  00F2               	movwf	?___lldiv+2
  2748  0569  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2749  056E  276D  120A  118A   	fcall	PL6	;call to abstracted procedure
  2750  0571  2673  120A  118A   	fcall	___lldiv
  2751  0574  2778  120A  118A   	fcall	PL7	;call to abstracted procedure
  2752  0577  2587  120A  118A   	fcall	___llmod
  2753  057A  0820               	movf	?___llmod,w
  2754  057B  3E30               	addlw	48
  2755  057C  1683               	bsf	3,5	;RP0=1, select bank1
  2756  057D  00B8               	movwf	sprintf@c^(0+128)
  2757  057E  0835               	movf	sprintf@sp^(0+128),w
  2758  057F  0084               	movwf	4
  2759  0580  0838               	movf	sprintf@c^(0+128),w
  2760  0581  2D3B               	goto	L5
  2761  0582                     l5841:	
  2762  0582  0835               	movf	sprintf@sp^(0+128),w
  2763  0583  0084               	movwf	4
  2764  0584  1383               	bcf	3,7	;select IRP bank0
  2765  0585  0180               	clrf	0
  2766  0586  0008               	return
  2767  0587                     __end_of_sprintf:	
  2768  0587                     __ptext576:	
  2769 ;; =============== function ___ftneg ends ============
  2770                           
  2771                           
  2772 ;; *************** function ___llmod *****************
  2773 ;; Defined at:
  2774 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\llmod.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;  divisor         4    0[BANK0 ] unsigned long 
  2777 ;;  dividend        4    4[BANK0 ] unsigned long 
  2778 ;; Auto vars:     Size  Location     Type
  2779 ;;  counter         1   13[COMMON] unsigned char 
  2780 ;; Return value:  Size  Location     Type
  2781 ;;                  4    0[BANK0 ] unsigned long 
  2782 ;; Registers used:
  2783 ;;		wreg, status,2, status,0
  2784 ;; Tracked objects:
  2785 ;;		On entry : 60/0
  2786 ;;		On exit  : 60/0
  2787 ;;		Unchanged: FFF9F/0
  2788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2789 ;;      Params:         0       8       0       0       0
  2790 ;;      Locals:         1       0       0       0       0
  2791 ;;      Temps:          0       0       0       0       0
  2792 ;;      Totals:         1       8       0       0       0
  2793 ;;Total ram usage:        9 bytes
  2794 ;; Hardware stack levels used:    1
  2795 ;; This function calls:
  2796 ;;		Nothing
  2797 ;; This function is called by:
  2798 ;;		_sprintf
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801  0587                     ___llmod:	
  2802                           
  2803                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2804  0587  0823               	movf	___llmod@divisor+3,w
  2805  0588  0422               	iorwf	___llmod@divisor+2,w
  2806  0589  0421               	iorwf	___llmod@divisor+1,w
  2807  058A  0420               	iorwf	___llmod@divisor,w
  2808  058B  1903               	skipnz
  2809  058C  2DBC               	goto	l5195
  2810  058D  01FD               	clrf	___llmod@counter
  2811  058E                     L12:	
  2812  058E  0AFD               	incf	___llmod@counter,f
  2813  058F  1BA3               	btfsc	___llmod@divisor+3,7
  2814  0590  2D97               	goto	l5187
  2815  0591  1003               	clrc
  2816  0592  0DA0               	rlf	___llmod@divisor,f
  2817  0593  0DA1               	rlf	___llmod@divisor+1,f
  2818  0594  0DA2               	rlf	___llmod@divisor+2,f
  2819  0595  0DA3               	rlf	___llmod@divisor+3,f
  2820  0596  2D8E               	goto	L12
  2821  0597                     l5187:	
  2822  0597  0823               	movf	___llmod@divisor+3,w
  2823  0598  0227               	subwf	___llmod@dividend+3,w
  2824  0599  1D03               	skipz
  2825  059A  2DA5               	goto	u2215
  2826  059B  0822               	movf	___llmod@divisor+2,w
  2827  059C  0226               	subwf	___llmod@dividend+2,w
  2828  059D  1D03               	skipz
  2829  059E  2DA5               	goto	u2215
  2830  059F  0821               	movf	___llmod@divisor+1,w
  2831  05A0  0225               	subwf	___llmod@dividend+1,w
  2832  05A1  1D03               	skipz
  2833  05A2  2DA5               	goto	u2215
  2834  05A3  0820               	movf	___llmod@divisor,w
  2835  05A4  0224               	subwf	___llmod@dividend,w
  2836  05A5                     u2215:	
  2837  05A5  1C03               	skipc
  2838  05A6  2DB6               	goto	L13
  2839  05A7  0820               	movf	___llmod@divisor,w
  2840  05A8  02A4               	subwf	___llmod@dividend,f
  2841  05A9  0821               	movf	___llmod@divisor+1,w
  2842  05AA  1C03               	skipc
  2843  05AB  0F21               	incfsz	___llmod@divisor+1,w
  2844  05AC  02A5               	subwf	___llmod@dividend+1,f
  2845  05AD  0822               	movf	___llmod@divisor+2,w
  2846  05AE  1C03               	skipc
  2847  05AF  0F22               	incfsz	___llmod@divisor+2,w
  2848  05B0  02A6               	subwf	___llmod@dividend+2,f
  2849  05B1  0823               	movf	___llmod@divisor+3,w
  2850  05B2  1C03               	skipc
  2851  05B3  0F23               	incfsz	___llmod@divisor+3,w
  2852  05B4  02A7               	subwf	___llmod@dividend+3,f
  2853  05B5  1003               	clrc
  2854  05B6                     L13:	
  2855  05B6  0CA3               	rrf	___llmod@divisor+3,f
  2856  05B7  0CA2               	rrf	___llmod@divisor+2,f
  2857  05B8  0CA1               	rrf	___llmod@divisor+1,f
  2858  05B9  0CA0               	rrf	___llmod@divisor,f
  2859  05BA  0BFD               	decfsz	___llmod@counter,f
  2860  05BB  2D97               	goto	l5187
  2861  05BC                     l5195:	
  2862  05BC  0827               	movf	___llmod@dividend+3,w
  2863  05BD  00A3               	movwf	?___llmod+3
  2864  05BE  0826               	movf	___llmod@dividend+2,w
  2865  05BF  00A2               	movwf	?___llmod+2
  2866  05C0  0825               	movf	___llmod@dividend+1,w
  2867  05C1  00A1               	movwf	?___llmod+1
  2868  05C2  0824               	movf	___llmod@dividend,w
  2869  05C3  00A0               	movwf	?___llmod
  2870  05C4  0008               	return
  2871  05C5                     __end_of___llmod:	
  2872  05C5                     __ptext574:	
  2873 ;; =============== function ___lldiv ends ============
  2874                           
  2875                           
  2876 ;; *************** function ___ftge *****************
  2877 ;; Defined at:
  2878 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftge.c"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;  ff1             3    0[COMMON] float 
  2881 ;;  ff2             3    3[COMMON] float 
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;		None
  2884 ;; Return value:  Size  Location     Type
  2885 ;;		None               void
  2886 ;; Registers used:
  2887 ;;		wreg, status,2, status,0
  2888 ;; Tracked objects:
  2889 ;;		On entry : 60/20
  2890 ;;		On exit  : 60/20
  2891 ;;		Unchanged: FFF9F/0
  2892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2893 ;;      Params:         6       0       0       0       0
  2894 ;;      Locals:         0       0       0       0       0
  2895 ;;      Temps:          0       0       0       0       0
  2896 ;;      Totals:         6       0       0       0       0
  2897 ;;Total ram usage:        6 bytes
  2898 ;; Hardware stack levels used:    1
  2899 ;; This function calls:
  2900 ;;		Nothing
  2901 ;; This function is called by:
  2902 ;;		_sprintf
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905  05C5                     ___ftge:	
  2906                           
  2907                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  2908  05C5  1FF2               	btfss	___ftge@ff1+2,7
  2909  05C6  2DD4               	goto	l5211
  2910  05C7  0870               	movf	___ftge@ff1,w
  2911  05C8  3C00               	sublw	0
  2912  05C9  00F0               	movwf	___ftge@ff1
  2913  05CA  0871               	movf	___ftge@ff1+1,w
  2914  05CB  1C03               	skipc
  2915  05CC  0F71               	incfsz	___ftge@ff1+1,w
  2916  05CD  3C00               	sublw	0
  2917  05CE  00F1               	movwf	___ftge@ff1+1
  2918  05CF  0872               	movf	___ftge@ff1+2,w
  2919  05D0  1C03               	skipc
  2920  05D1  0F72               	incfsz	___ftge@ff1+2,w
  2921  05D2  3C80               	sublw	128
  2922  05D3  00F2               	movwf	___ftge@ff1+2
  2923  05D4                     l5211:	
  2924  05D4  1FF5               	btfss	___ftge@ff2+2,7
  2925  05D5  2DE3               	goto	l5215
  2926  05D6  0873               	movf	___ftge@ff2,w
  2927  05D7  3C00               	sublw	0
  2928  05D8  00F3               	movwf	___ftge@ff2
  2929  05D9  0874               	movf	___ftge@ff2+1,w
  2930  05DA  1C03               	skipc
  2931  05DB  0F74               	incfsz	___ftge@ff2+1,w
  2932  05DC  3C00               	sublw	0
  2933  05DD  00F4               	movwf	___ftge@ff2+1
  2934  05DE  0875               	movf	___ftge@ff2+2,w
  2935  05DF  1C03               	skipc
  2936  05E0  0F75               	incfsz	___ftge@ff2+2,w
  2937  05E1  3C80               	sublw	128
  2938  05E2  00F5               	movwf	___ftge@ff2+2
  2939  05E3                     l5215:	
  2940  05E3  3080               	movlw	128
  2941  05E4  06F2               	xorwf	___ftge@ff1+2,f
  2942  05E5  06F5               	xorwf	___ftge@ff2+2,f
  2943  05E6  0875               	movf	___ftge@ff2+2,w
  2944  05E7  0272               	subwf	___ftge@ff1+2,w
  2945  05E8  1D03               	skipz
  2946  05E9  0008               	return
  2947  05EA  0874               	movf	___ftge@ff2+1,w
  2948  05EB  0271               	subwf	___ftge@ff1+1,w
  2949  05EC  1D03               	skipz
  2950  05ED  0008               	return
  2951  05EE  0873               	movf	___ftge@ff2,w
  2952  05EF  0270               	subwf	___ftge@ff1,w
  2953  05F0  0008               	return
  2954  05F1                     __end_of___ftge:	
  2955  05F1                     __ptext586:	
  2956 ;; =============== function __tdiv_to_l_ ends ============
  2957                           
  2958                           
  2959 ;; *************** function _isdigit *****************
  2960 ;; Defined at:
  2961 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\isdigit.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;  c               1    wreg     unsigned char 
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;  c               1    1[COMMON] unsigned char 
  2966 ;; Return value:  Size  Location     Type
  2967 ;;		None               void
  2968 ;; Registers used:
  2969 ;;		wreg, status,2, status,0
  2970 ;; Tracked objects:
  2971 ;;		On entry : 60/0
  2972 ;;		On exit  : 60/0
  2973 ;;		Unchanged: FFF9F/0
  2974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2975 ;;      Params:         0       0       0       0       0
  2976 ;;      Locals:         2       0       0       0       0
  2977 ;;      Temps:          0       0       0       0       0
  2978 ;;      Totals:         2       0       0       0       0
  2979 ;;Total ram usage:        2 bytes
  2980 ;; Hardware stack levels used:    1
  2981 ;; This function calls:
  2982 ;;		Nothing
  2983 ;; This function is called by:
  2984 ;;		_sprintf
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987  05F1                     _isdigit:	
  2988                           
  2989                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2990                           ;isdigit@c stored from wreg
  2991  05F1  00F1               	movwf	isdigit@c
  2992  05F2  303A               	movlw	58
  2993  05F3  01F0               	clrf	_isdigit$2427
  2994  05F4  0271               	subwf	isdigit@c,w
  2995  05F5  1803               	skipnc
  2996  05F6  2DFD               	goto	l4897
  2997  05F7  3030               	movlw	48
  2998  05F8  0271               	subwf	isdigit@c,w
  2999  05F9  1C03               	skipc
  3000  05FA  2DFD               	goto	l4897
  3001  05FB  01F0               	clrf	_isdigit$2427
  3002  05FC  0AF0               	incf	_isdigit$2427,f
  3003  05FD                     l4897:	
  3004  05FD  0C70               	rrf	_isdigit$2427,w
  3005  05FE  0008               	return
  3006  05FF                     __end_of_isdigit:	
  3007  05FF                     __ptext582:	
  3008 ;; =============== function ___lbdiv ends ============
  3009                           
  3010                           
  3011 ;; *************** function ___wmul *****************
  3012 ;; Defined at:
  3013 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\wmul.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;  multiplier      2    0[COMMON] unsigned int 
  3016 ;;  multiplicand    2    2[COMMON] unsigned int 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;  product         2    4[COMMON] unsigned int 
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  2    0[COMMON] unsigned int 
  3021 ;; Registers used:
  3022 ;;		wreg, status,2, status,0
  3023 ;; Tracked objects:
  3024 ;;		On entry : 60/20
  3025 ;;		On exit  : 60/20
  3026 ;;		Unchanged: FFF9F/0
  3027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3028 ;;      Params:         4       0       0       0       0
  3029 ;;      Locals:         2       0       0       0       0
  3030 ;;      Temps:          0       0       0       0       0
  3031 ;;      Totals:         6       0       0       0       0
  3032 ;;Total ram usage:        6 bytes
  3033 ;; Hardware stack levels used:    1
  3034 ;; This function calls:
  3035 ;;		Nothing
  3036 ;; This function is called by:
  3037 ;;		_fround
  3038 ;;		_scale
  3039 ;;		_sprintf
  3040 ;; This function uses a non-reentrant model
  3041 ;;
  3042  05FF                     ___wmul:	
  3043                           
  3044                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3045  05FF  01F4               	clrf	___wmul@product
  3046  0600  01F5               	clrf	___wmul@product+1
  3047  0601                     l5013:	
  3048  0601  1C70               	btfss	___wmul@multiplier,0
  3049  0602  2E09               	goto	l5017
  3050  0603  0872               	movf	___wmul@multiplicand,w
  3051  0604  07F4               	addwf	___wmul@product,f
  3052  0605  1803               	skipnc
  3053  0606  0AF5               	incf	___wmul@product+1,f
  3054  0607  0873               	movf	___wmul@multiplicand+1,w
  3055  0608  07F5               	addwf	___wmul@product+1,f
  3056  0609                     l5017:	
  3057  0609  1003               	clrc
  3058  060A  0DF2               	rlf	___wmul@multiplicand,f
  3059  060B  0DF3               	rlf	___wmul@multiplicand+1,f
  3060  060C  1003               	clrc
  3061  060D  0CF1               	rrf	___wmul@multiplier+1,f
  3062  060E  0CF0               	rrf	___wmul@multiplier,f
  3063  060F  0871               	movf	___wmul@multiplier+1,w
  3064  0610  0470               	iorwf	___wmul@multiplier,w
  3065  0611  1D03               	skipz
  3066  0612  2E01               	goto	l5013
  3067  0613  0875               	movf	___wmul@product+1,w
  3068  0614  00F1               	movwf	?___wmul+1
  3069  0615  0874               	movf	___wmul@product,w
  3070  0616  00F0               	movwf	?___wmul
  3071  0617  0008               	return
  3072  0618                     __end_of___wmul:	
  3073  0618                     __ptext578:	
  3074 ;; =============== function ___awdiv ends ============
  3075                           
  3076                           
  3077 ;; *************** function ___fttol *****************
  3078 ;; Defined at:
  3079 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\fttol.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;  f1              3    0[BANK0 ] float 
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;  lval            4    8[BANK0 ] unsigned long 
  3084 ;;  exp1            1   12[BANK0 ] unsigned char 
  3085 ;;  sign1           1    7[BANK0 ] unsigned char 
  3086 ;; Return value:  Size  Location     Type
  3087 ;;                  4    0[BANK0 ] long 
  3088 ;; Registers used:
  3089 ;;		wreg, status,2, status,0
  3090 ;; Tracked objects:
  3091 ;;		On entry : 60/0
  3092 ;;		On exit  : 60/0
  3093 ;;		Unchanged: FFF9F/0
  3094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3095 ;;      Params:         0       4       0       0       0
  3096 ;;      Locals:         0       6       0       0       0
  3097 ;;      Temps:          0       3       0       0       0
  3098 ;;      Totals:         0      13       0       0       0
  3099 ;;Total ram usage:       13 bytes
  3100 ;; Hardware stack levels used:    1
  3101 ;; This function calls:
  3102 ;;		Nothing
  3103 ;; This function is called by:
  3104 ;;		_ADC
  3105 ;;		_sprintf
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108  0618                     ___fttol:	
  3109                           
  3110                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3111  0618  27E1  120A  118A   	fcall	PL32	;call to abstracted procedure
  3112  061B  1003               	clrc
  3113  061C  0D25               	rlf	??___fttol+1,w
  3114  061D  0D26               	rlf	??___fttol+2,w
  3115  061E  00AC               	movwf	___fttol@exp1
  3116  061F  08AC               	movf	___fttol@exp1,f
  3117  0620  1D03               	skipz
  3118  0621  2E27               	goto	l5101
  3119  0622                     l5099:	
  3120  0622  01A0               	clrf	?___fttol
  3121  0623  01A1               	clrf	?___fttol+1
  3122  0624  01A2               	clrf	?___fttol+2
  3123  0625  01A3               	clrf	?___fttol+3
  3124  0626  0008               	return
  3125  0627                     l5101:	
  3126  0627  27E1  120A  118A   	fcall	PL32	;call to abstracted procedure
  3127  062A  3017               	movlw	23
  3128  062B                     u2055:	
  3129  062B  1003               	clrc
  3130  062C  0CA6               	rrf	??___fttol+2,f
  3131  062D  0CA5               	rrf	??___fttol+1,f
  3132  062E  0CA4               	rrf	??___fttol,f
  3133  062F  3EFF               	addlw	-1
  3134  0630  1D03               	skipz
  3135  0631  2E2B               	goto	u2055
  3136  0632  0824               	movf	??___fttol,w
  3137  0633  00A7               	movwf	___fttol@sign1
  3138  0634  17A1               	bsf	___fttol@f1+1,7
  3139  0635  01A2               	clrf	___fttol@f1+2
  3140  0636  0820               	movf	___fttol@f1,w
  3141  0637  00A8               	movwf	___fttol@lval
  3142  0638  0821               	movf	___fttol@f1+1,w
  3143  0639  00A9               	movwf	___fttol@lval+1
  3144  063A  0822               	movf	___fttol@f1+2,w
  3145  063B  00AA               	movwf	___fttol@lval+2
  3146  063C  308E               	movlw	142
  3147  063D  01AB               	clrf	___fttol@lval+3
  3148  063E  02AC               	subwf	___fttol@exp1,f
  3149  063F  1FAC               	btfss	___fttol@exp1,7
  3150  0640  2E4E               	goto	l5121
  3151  0641  082C               	movf	___fttol@exp1,w
  3152  0642  3A80               	xorlw	128
  3153  0643  3E8F               	addlw	143
  3154  0644  1C03               	btfss	3,0
  3155  0645  2E22               	goto	l5099
  3156  0646                     l5117:	
  3157  0646  1003               	clrc
  3158  0647  0CAB               	rrf	___fttol@lval+3,f
  3159  0648  0CAA               	rrf	___fttol@lval+2,f
  3160  0649  0CA9               	rrf	___fttol@lval+1,f
  3161  064A  0CA8               	rrf	___fttol@lval,f
  3162  064B  0FAC               	incfsz	___fttol@exp1,f
  3163  064C  2E46               	goto	l5117
  3164  064D  2E5C               	goto	l5127
  3165  064E                     l5121:	
  3166  064E  3018               	movlw	24
  3167  064F  022C               	subwf	___fttol@exp1,w
  3168  0650  1803               	btfsc	3,0
  3169  0651  2E22               	goto	l5099
  3170  0652                     l2358:	
  3171  0652  08AC               	movf	___fttol@exp1,f
  3172  0653  1903               	btfsc	3,2
  3173  0654  2E5C               	goto	l5127
  3174  0655  1003               	clrc
  3175  0656  0DA8               	rlf	___fttol@lval,f
  3176  0657  0DA9               	rlf	___fttol@lval+1,f
  3177  0658  0DAA               	rlf	___fttol@lval+2,f
  3178  0659  0DAB               	rlf	___fttol@lval+3,f
  3179  065A  03AC               	decf	___fttol@exp1,f
  3180  065B  2E52               	goto	l2358
  3181  065C                     l5127:	
  3182  065C  0827               	movf	___fttol@sign1,w
  3183  065D  1903               	btfsc	3,2
  3184  065E  2E6A               	goto	l5131
  3185  065F  09A8               	comf	___fttol@lval,f
  3186  0660  09A9               	comf	___fttol@lval+1,f
  3187  0661  09AA               	comf	___fttol@lval+2,f
  3188  0662  09AB               	comf	___fttol@lval+3,f
  3189  0663  0AA8               	incf	___fttol@lval,f
  3190  0664  1903               	skipnz
  3191  0665  0AA9               	incf	___fttol@lval+1,f
  3192  0666  1903               	skipnz
  3193  0667  0AAA               	incf	___fttol@lval+2,f
  3194  0668  1903               	skipnz
  3195  0669  0AAB               	incf	___fttol@lval+3,f
  3196  066A                     l5131:	
  3197  066A  082B               	movf	___fttol@lval+3,w
  3198  066B  00A3               	movwf	?___fttol+3
  3199  066C  082A               	movf	___fttol@lval+2,w
  3200  066D  00A2               	movwf	?___fttol+2
  3201  066E  0829               	movf	___fttol@lval+1,w
  3202  066F  00A1               	movwf	?___fttol+1
  3203  0670  0828               	movf	___fttol@lval,w
  3204  0671  00A0               	movwf	?___fttol
  3205  0672  0008               	return
  3206  0673                     __end_of___fttol:	
  3207  0673                     __ptext573:	
  3208 ;; =============== function ___awmod ends ============
  3209                           
  3210                           
  3211 ;; *************** function ___lldiv *****************
  3212 ;; Defined at:
  3213 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lldiv.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;  divisor         4    0[COMMON] unsigned long 
  3216 ;;  dividend        4    4[COMMON] unsigned long 
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;  quotient        4    8[COMMON] unsigned long 
  3219 ;;  counter         1   12[COMMON] unsigned char 
  3220 ;; Return value:  Size  Location     Type
  3221 ;;                  4    0[COMMON] unsigned long 
  3222 ;; Registers used:
  3223 ;;		wreg, status,2, status,0
  3224 ;; Tracked objects:
  3225 ;;		On entry : 60/20
  3226 ;;		On exit  : 60/20
  3227 ;;		Unchanged: FFF9F/0
  3228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3229 ;;      Params:         8       0       0       0       0
  3230 ;;      Locals:         5       0       0       0       0
  3231 ;;      Temps:          0       0       0       0       0
  3232 ;;      Totals:        13       0       0       0       0
  3233 ;;Total ram usage:       13 bytes
  3234 ;; Hardware stack levels used:    1
  3235 ;; This function calls:
  3236 ;;		Nothing
  3237 ;; This function is called by:
  3238 ;;		_sprintf
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241  0673                     ___lldiv:	
  3242                           
  3243                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3244  0673  01F8               	clrf	___lldiv@quotient
  3245  0674  01F9               	clrf	___lldiv@quotient+1
  3246  0675  01FA               	clrf	___lldiv@quotient+2
  3247  0676  01FB               	clrf	___lldiv@quotient+3
  3248  0677  0873               	movf	___lldiv@divisor+3,w
  3249  0678  0472               	iorwf	___lldiv@divisor+2,w
  3250  0679  0471               	iorwf	___lldiv@divisor+1,w
  3251  067A  0470               	iorwf	___lldiv@divisor,w
  3252  067B  1903               	skipnz
  3253  067C  2EB2               	goto	l5249
  3254  067D  01FC               	clrf	___lldiv@counter
  3255  067E                     L9:	
  3256  067E  0AFC               	incf	___lldiv@counter,f
  3257  067F  1BF3               	btfsc	___lldiv@divisor+3,7
  3258  0680  2E87               	goto	l5237
  3259  0681  1003               	clrc
  3260  0682  0DF0               	rlf	___lldiv@divisor,f
  3261  0683  0DF1               	rlf	___lldiv@divisor+1,f
  3262  0684  0DF2               	rlf	___lldiv@divisor+2,f
  3263  0685  0DF3               	rlf	___lldiv@divisor+3,f
  3264  0686  2E7E               	goto	L9
  3265  0687                     l5237:	
  3266  0687  1003               	clrc
  3267  0688  0DF8               	rlf	___lldiv@quotient,f
  3268  0689  0DF9               	rlf	___lldiv@quotient+1,f
  3269  068A  0DFA               	rlf	___lldiv@quotient+2,f
  3270  068B  0DFB               	rlf	___lldiv@quotient+3,f
  3271  068C  0873               	movf	___lldiv@divisor+3,w
  3272  068D  0277               	subwf	___lldiv@dividend+3,w
  3273  068E  1D03               	skipz
  3274  068F  2E9A               	goto	u2295
  3275  0690  0872               	movf	___lldiv@divisor+2,w
  3276  0691  0276               	subwf	___lldiv@dividend+2,w
  3277  0692  1D03               	skipz
  3278  0693  2E9A               	goto	u2295
  3279  0694  0871               	movf	___lldiv@divisor+1,w
  3280  0695  0275               	subwf	___lldiv@dividend+1,w
  3281  0696  1D03               	skipz
  3282  0697  2E9A               	goto	u2295
  3283  0698  0870               	movf	___lldiv@divisor,w
  3284  0699  0274               	subwf	___lldiv@dividend,w
  3285  069A                     u2295:	
  3286  069A  1C03               	skipc
  3287  069B  2EAC               	goto	L10
  3288  069C  0870               	movf	___lldiv@divisor,w
  3289  069D  02F4               	subwf	___lldiv@dividend,f
  3290  069E  0871               	movf	___lldiv@divisor+1,w
  3291  069F  1C03               	skipc
  3292  06A0  0F71               	incfsz	___lldiv@divisor+1,w
  3293  06A1  02F5               	subwf	___lldiv@dividend+1,f
  3294  06A2  0872               	movf	___lldiv@divisor+2,w
  3295  06A3  1C03               	skipc
  3296  06A4  0F72               	incfsz	___lldiv@divisor+2,w
  3297  06A5  02F6               	subwf	___lldiv@dividend+2,f
  3298  06A6  0873               	movf	___lldiv@divisor+3,w
  3299  06A7  1C03               	skipc
  3300  06A8  0F73               	incfsz	___lldiv@divisor+3,w
  3301  06A9  02F7               	subwf	___lldiv@dividend+3,f
  3302  06AA  1478               	bsf	___lldiv@quotient,0
  3303  06AB  1003               	clrc
  3304  06AC                     L10:	
  3305  06AC  0CF3               	rrf	___lldiv@divisor+3,f
  3306  06AD  0CF2               	rrf	___lldiv@divisor+2,f
  3307  06AE  0CF1               	rrf	___lldiv@divisor+1,f
  3308  06AF  0CF0               	rrf	___lldiv@divisor,f
  3309  06B0  0BFC               	decfsz	___lldiv@counter,f
  3310  06B1  2E87               	goto	l5237
  3311  06B2                     l5249:	
  3312  06B2  087B               	movf	___lldiv@quotient+3,w
  3313  06B3  00F3               	movwf	?___lldiv+3
  3314  06B4  087A               	movf	___lldiv@quotient+2,w
  3315  06B5  00F2               	movwf	?___lldiv+2
  3316  06B6  0879               	movf	___lldiv@quotient+1,w
  3317  06B7  00F1               	movwf	?___lldiv+1
  3318  06B8  0878               	movf	___lldiv@quotient,w
  3319  06B9  00F0               	movwf	?___lldiv
  3320  06BA  0008               	return
  3321  06BB                     __end_of___lldiv:	
  3322  06BB                     __ptext585:	
  3323 ;; =============== function __div_to_l_ ends ============
  3324                           
  3325                           
  3326 ;; *************** function __tdiv_to_l_ *****************
  3327 ;; Defined at:
  3328 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftdivl.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;  f1              3    0[COMMON] float 
  3331 ;;  f2              3    3[COMMON] float 
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;  quot            4    0[BANK0 ] unsigned long 
  3334 ;;  exp1            1    5[BANK0 ] unsigned char 
  3335 ;;  cntr            1    4[BANK0 ] unsigned char 
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  4    0[COMMON] unsigned long 
  3338 ;; Registers used:
  3339 ;;		wreg, status,2, status,0
  3340 ;; Tracked objects:
  3341 ;;		On entry : 60/20
  3342 ;;		On exit  : 60/0
  3343 ;;		Unchanged: FFF9F/0
  3344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3345 ;;      Params:         6       0       0       0       0
  3346 ;;      Locals:         0       6       0       0       0
  3347 ;;      Temps:          3       0       0       0       0
  3348 ;;      Totals:         9       6       0       0       0
  3349 ;;Total ram usage:       15 bytes
  3350 ;; Hardware stack levels used:    1
  3351 ;; This function calls:
  3352 ;;		Nothing
  3353 ;; This function is called by:
  3354 ;;		_sprintf
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357  06BB                     __tdiv_to_l_:	
  3358                           
  3359                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  3360  06BB  0870               	movf	__tdiv_to_l_@f1,w
  3361  06BC  00F6               	movwf	??__tdiv_to_l_
  3362  06BD  0871               	movf	__tdiv_to_l_@f1+1,w
  3363  06BE  00F7               	movwf	??__tdiv_to_l_+1
  3364  06BF  0872               	movf	__tdiv_to_l_@f1+2,w
  3365  06C0  00F8               	movwf	??__tdiv_to_l_+2
  3366  06C1  1003               	clrc
  3367  06C2  0D77               	rlf	??__tdiv_to_l_+1,w
  3368  06C3  0D78               	rlf	??__tdiv_to_l_+2,w
  3369  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  3370  06C5  00A5               	movwf	__tdiv_to_l_@exp1
  3371  06C6  08A5               	movf	__tdiv_to_l_@exp1,f
  3372  06C7  1D03               	skipz
  3373  06C8  2ECE               	goto	l4905
  3374  06C9                     l4903:	
  3375  06C9  01F0               	clrf	?__tdiv_to_l_
  3376  06CA  01F1               	clrf	?__tdiv_to_l_+1
  3377  06CB  01F2               	clrf	?__tdiv_to_l_+2
  3378  06CC  01F3               	clrf	?__tdiv_to_l_+3
  3379  06CD  0008               	return
  3380  06CE                     l4905:	
  3381  06CE  0873               	movf	__tdiv_to_l_@f2,w
  3382  06CF  00F6               	movwf	??__tdiv_to_l_
  3383  06D0  0874               	movf	__tdiv_to_l_@f2+1,w
  3384  06D1  00F7               	movwf	??__tdiv_to_l_+1
  3385  06D2  0875               	movf	__tdiv_to_l_@f2+2,w
  3386  06D3  00F8               	movwf	??__tdiv_to_l_+2
  3387  06D4  1003               	clrc
  3388  06D5  0D77               	rlf	??__tdiv_to_l_+1,w
  3389  06D6  0D78               	rlf	??__tdiv_to_l_+2,w
  3390  06D7  00A4               	movwf	__tdiv_to_l_@cntr
  3391  06D8  08A4               	movf	__tdiv_to_l_@cntr,f
  3392  06D9  1903               	btfsc	3,2
  3393  06DA  2EC9               	goto	l4903
  3394  06DB  307F               	movlw	127
  3395  06DC  17F1               	bsf	__tdiv_to_l_@f1+1,7
  3396  06DD  01F2               	clrf	__tdiv_to_l_@f1+2
  3397  06DE  17F4               	bsf	__tdiv_to_l_@f2+1,7
  3398  06DF  01F5               	clrf	__tdiv_to_l_@f2+2
  3399  06E0  01A0               	clrf	__tdiv_to_l_@quot
  3400  06E1  01A1               	clrf	__tdiv_to_l_@quot+1
  3401  06E2  01A2               	clrf	__tdiv_to_l_@quot+2
  3402  06E3  01A3               	clrf	__tdiv_to_l_@quot+3
  3403  06E4  02A5               	subwf	__tdiv_to_l_@exp1,f
  3404  06E5  3098               	movlw	152
  3405  06E6  0724               	addwf	__tdiv_to_l_@cntr,w
  3406  06E7  00F6               	movwf	??__tdiv_to_l_
  3407  06E8  02A5               	subwf	__tdiv_to_l_@exp1,f
  3408  06E9  3018               	movlw	24
  3409  06EA  00A4               	movwf	__tdiv_to_l_@cntr
  3410  06EB                     l4919:	
  3411  06EB  1003               	clrc
  3412  06EC  0DA0               	rlf	__tdiv_to_l_@quot,f
  3413  06ED  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  3414  06EE  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  3415  06EF  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  3416  06F0  0875               	movf	__tdiv_to_l_@f2+2,w
  3417  06F1  0272               	subwf	__tdiv_to_l_@f1+2,w
  3418  06F2  1D03               	skipz
  3419  06F3  2EFA               	goto	u1705
  3420  06F4  0874               	movf	__tdiv_to_l_@f2+1,w
  3421  06F5  0271               	subwf	__tdiv_to_l_@f1+1,w
  3422  06F6  1D03               	skipz
  3423  06F7  2EFA               	goto	u1705
  3424  06F8  0873               	movf	__tdiv_to_l_@f2,w
  3425  06F9  0270               	subwf	__tdiv_to_l_@f1,w
  3426  06FA                     u1705:	
  3427  06FA  1C03               	skipc
  3428  06FB  2F08               	goto	L18
  3429  06FC  0873               	movf	__tdiv_to_l_@f2,w
  3430  06FD  02F0               	subwf	__tdiv_to_l_@f1,f
  3431  06FE  0874               	movf	__tdiv_to_l_@f2+1,w
  3432  06FF  1C03               	skipc
  3433  0700  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  3434  0701  02F1               	subwf	__tdiv_to_l_@f1+1,f
  3435  0702  0875               	movf	__tdiv_to_l_@f2+2,w
  3436  0703  1C03               	skipc
  3437  0704  0A75               	incf	__tdiv_to_l_@f2+2,w
  3438  0705  02F2               	subwf	__tdiv_to_l_@f1+2,f
  3439  0706  1420               	bsf	__tdiv_to_l_@quot,0
  3440  0707  1003               	clrc
  3441  0708                     L18:	
  3442  0708  0DF0               	rlf	__tdiv_to_l_@f1,f
  3443  0709  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  3444  070A  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  3445  070B  0BA4               	decfsz	__tdiv_to_l_@cntr,f
  3446  070C  2EEB               	goto	l4919
  3447  070D  1FA5               	btfss	__tdiv_to_l_@exp1,7
  3448  070E  2F1C               	goto	l4939
  3449  070F  0825               	movf	__tdiv_to_l_@exp1,w
  3450  0710  3A80               	xorlw	128
  3451  0711  3E97               	addlw	151
  3452  0712  1C03               	btfss	3,0
  3453  0713  2EC9               	goto	l4903
  3454  0714                     l4935:	
  3455  0714  1003               	clrc
  3456  0715  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  3457  0716  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  3458  0717  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  3459  0718  0CA0               	rrf	__tdiv_to_l_@quot,f
  3460  0719  0FA5               	incfsz	__tdiv_to_l_@exp1,f
  3461  071A  2F14               	goto	l4935
  3462  071B  2F2A               	goto	l4945
  3463  071C                     l4939:	
  3464  071C  3018               	movlw	24
  3465  071D  0225               	subwf	__tdiv_to_l_@exp1,w
  3466  071E  1803               	btfsc	3,0
  3467  071F  2EC9               	goto	l4903
  3468  0720                     l2496:	
  3469  0720  08A5               	movf	__tdiv_to_l_@exp1,f
  3470  0721  1903               	btfsc	3,2
  3471  0722  2F2A               	goto	l4945
  3472  0723  1003               	clrc
  3473  0724  0DA0               	rlf	__tdiv_to_l_@quot,f
  3474  0725  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  3475  0726  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  3476  0727  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  3477  0728  03A5               	decf	__tdiv_to_l_@exp1,f
  3478  0729  2F20               	goto	l2496
  3479  072A                     l4945:	
  3480  072A  0823               	movf	__tdiv_to_l_@quot+3,w
  3481  072B  00F3               	movwf	?__tdiv_to_l_+3
  3482  072C  0822               	movf	__tdiv_to_l_@quot+2,w
  3483  072D  00F2               	movwf	?__tdiv_to_l_+2
  3484  072E  0821               	movf	__tdiv_to_l_@quot+1,w
  3485  072F  00F1               	movwf	?__tdiv_to_l_+1
  3486  0730  0820               	movf	__tdiv_to_l_@quot,w
  3487  0731  00F0               	movwf	?__tdiv_to_l_
  3488  0732  0008               	return
  3489  0733                     __end_of__tdiv_to_l_:	
  3490  0733                     __ptext575:	
  3491 ;; =============== function ___ftge ends ============
  3492                           
  3493                           
  3494 ;; *************** function ___ftneg *****************
  3495 ;; Defined at:
  3496 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftneg.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;  f1              3    0[COMMON] float 
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;		None
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  3    0[COMMON] float 
  3503 ;; Registers used:
  3504 ;;		wreg
  3505 ;; Tracked objects:
  3506 ;;		On entry : 160/20
  3507 ;;		On exit  : 160/20
  3508 ;;		Unchanged: FFE9F/0
  3509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3510 ;;      Params:         3       0       0       0       0
  3511 ;;      Locals:         0       0       0       0       0
  3512 ;;      Temps:          0       0       0       0       0
  3513 ;;      Totals:         3       0       0       0       0
  3514 ;;Total ram usage:        3 bytes
  3515 ;; Hardware stack levels used:    1
  3516 ;; This function calls:
  3517 ;;		Nothing
  3518 ;; This function is called by:
  3519 ;;		_sprintf
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522  0733                     ___ftneg:	
  3523                           
  3524                           ; Regs used in ___ftneg: [wreg]
  3525  0733  0872               	movf	___ftneg@f1+2,w
  3526  0734  0471               	iorwf	___ftneg@f1+1,w
  3527  0735  0470               	iorwf	___ftneg@f1,w
  3528  0736  1903               	skipnz
  3529  0737  0008               	return
  3530  0738  3080               	movlw	128
  3531  0739  06F2               	xorwf	___ftneg@f1+2,f
  3532  073A  0008               	return
  3533  073B                     __end_of___ftneg:	
  3534  073B                     __ptext567:	
  3535 ;; =============== function _PWM ends ============
  3536                           
  3537                           
  3538 ;; *************** function ___lltoft *****************
  3539 ;; Defined at:
  3540 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lltoft.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;  c               4    8[COMMON] unsigned long 
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;  exp             1   12[COMMON] unsigned char 
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  3    8[COMMON] float 
  3547 ;; Registers used:
  3548 ;;		wreg, status,2, status,0, pclath, cstack
  3549 ;; Tracked objects:
  3550 ;;		On entry : 60/20
  3551 ;;		On exit  : 60/20
  3552 ;;		Unchanged: FFF9F/0
  3553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3554 ;;      Params:         4       0       0       0       0
  3555 ;;      Locals:         1       0       0       0       0
  3556 ;;      Temps:          0       0       0       0       0
  3557 ;;      Totals:         5       0       0       0       0
  3558 ;;Total ram usage:        5 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; Hardware stack levels required when called:    1
  3561 ;; This function calls:
  3562 ;;		___ftpack
  3563 ;; This function is called by:
  3564 ;;		_sprintf
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567  073B                     ___lltoft:	
  3568                           
  3569                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  3570  073B  308E               	movlw	142
  3571  073C  00FC               	movwf	___lltoft@exp
  3572  073D                     l5447:	
  3573  073D  30FF               	movlw	255
  3574  073E  057B               	andwf	___lltoft@c+3,w
  3575  073F  1903               	btfsc	3,2
  3576  0740  2F48               	goto	l5449
  3577  0741  1003               	clrc
  3578  0742  0CFB               	rrf	___lltoft@c+3,f
  3579  0743  0CFA               	rrf	___lltoft@c+2,f
  3580  0744  0CF9               	rrf	___lltoft@c+1,f
  3581  0745  0CF8               	rrf	___lltoft@c,f
  3582  0746  0AFC               	incf	___lltoft@exp,f
  3583  0747  2F3D               	goto	l5447
  3584  0748                     l5449:	
  3585  0748  0878               	movf	___lltoft@c,w
  3586  0749  00F0               	movwf	?___ftpack
  3587  074A  0879               	movf	___lltoft@c+1,w
  3588  074B  00F1               	movwf	?___ftpack+1
  3589  074C  087A               	movf	___lltoft@c+2,w
  3590  074D  00F2               	movwf	?___ftpack+2
  3591  074E  087C               	movf	___lltoft@exp,w
  3592  074F  00F3               	movwf	?___ftpack+3
  3593  0750  01F4               	clrf	?___ftpack+4
  3594  0751  120A  158A  2769   	fcall	___ftpack
  3595  0754  0870               	movf	?___ftpack,w
  3596  0755  00F8               	movwf	?___lltoft
  3597  0756  0871               	movf	?___ftpack+1,w
  3598  0757  00F9               	movwf	?___lltoft+1
  3599  0758  0872               	movf	?___ftpack+2,w
  3600  0759  00FA               	movwf	?___lltoft+2
  3601  075A  0008               	return
  3602  075B                     __end_of___lltoft:	
  3603  075B                     PL3:	
  3604  075B  0838               	movf	sprintf@c^(0+128),w
  3605  075C  1283               	bcf	3,5	;RP0=0, select bank0
  3606  075D  00D6               	movwf	??_sprintf
  3607  075E  1003               	clrc
  3608  075F  0DD6               	rlf	??_sprintf,f
  3609  0760  1003               	clrc
  3610  0761  0D56               	rlf	??_sprintf,w
  3611  0762  3E4F               	addlw	low (_dpowers-__stringbase)
  3612  0763  0084               	movwf	4
  3613  0764  0008               	return
  3614  0765                     PL5:	
  3615  0765  300A               	movlw	10
  3616  0766  1283               	bcf	3,5	;RP0=0, select bank0
  3617  0767  00A0               	movwf	?___llmod
  3618  0768  01A1               	clrf	?___llmod+1
  3619  0769  01A2               	clrf	?___llmod+2
  3620  076A  01A3               	clrf	?___llmod+3
  3621  076B  1683               	bsf	3,5	;RP0=1, select bank1
  3622  076C  0008               	return
  3623  076D                     PL6:	
  3624  076D  00F3               	movwf	?___lldiv+3
  3625  076E  1683               	bsf	3,5	;RP0=1, select bank1
  3626  076F  082F               	movf	(sprintf@_val+3)^(0+128),w
  3627  0770  00F7               	movwf	?___lldiv+7
  3628  0771  082E               	movf	(sprintf@_val+2)^(0+128),w
  3629  0772  00F6               	movwf	?___lldiv+6
  3630  0773  082D               	movf	(sprintf@_val+1)^(0+128),w
  3631  0774  00F5               	movwf	?___lldiv+5
  3632  0775  082C               	movf	sprintf@_val^(0+128),w
  3633  0776  00F4               	movwf	?___lldiv+4
  3634  0777  0008               	return
  3635  0778                     PL7:	
  3636  0778  0873               	movf	?___lldiv+3,w
  3637  0779  1283               	bcf	3,5	;RP0=0, select bank0
  3638  077A  00A7               	movwf	?___llmod+7
  3639  077B  0872               	movf	?___lldiv+2,w
  3640  077C  00A6               	movwf	?___llmod+6
  3641  077D  0871               	movf	?___lldiv+1,w
  3642  077E  00A5               	movwf	?___llmod+5
  3643  077F  0870               	movf	?___lldiv,w
  3644  0780  00A4               	movwf	?___llmod+4
  3645  0781  0008               	return
  3646  0782                     PL9:	
  3647  0782  0823               	movf	?___fttol+3,w
  3648  0783  1683               	bsf	3,5	;RP0=1, select bank1
  3649  0784  00AF               	movwf	(sprintf@_val+3)^(0+128)
  3650  0785  1283               	bcf	3,5	;RP0=0, select bank0
  3651  0786  0822               	movf	?___fttol+2,w
  3652  0787  1683               	bsf	3,5	;RP0=1, select bank1
  3653  0788  00AE               	movwf	(sprintf@_val+2)^(0+128)
  3654  0789  1283               	bcf	3,5	;RP0=0, select bank0
  3655  078A  0821               	movf	?___fttol+1,w
  3656  078B  1683               	bsf	3,5	;RP0=1, select bank1
  3657  078C  00AD               	movwf	(sprintf@_val+1)^(0+128)
  3658  078D  1283               	bcf	3,5	;RP0=0, select bank0
  3659  078E  0820               	movf	?___fttol,w
  3660  078F  0008               	return
  3661  0790                     PL11:	
  3662  0790  083C               	movf	?_scale,w
  3663  0791  1683               	bsf	3,5	;RP0=1, select bank1
  3664  0792  00A5               	movwf	sprintf@integ^(0+128)
  3665  0793  1283               	bcf	3,5	;RP0=0, select bank0
  3666  0794  083D               	movf	?_scale+1,w
  3667  0795  1683               	bsf	3,5	;RP0=1, select bank1
  3668  0796  00A6               	movwf	(sprintf@integ+1)^(0+128)
  3669  0797  1283               	bcf	3,5	;RP0=0, select bank0
  3670  0798  083E               	movf	?_scale+2,w
  3671  0799  1683               	bsf	3,5	;RP0=1, select bank1
  3672  079A  00A7               	movwf	(sprintf@integ+2)^(0+128)
  3673  079B  0832               	movf	sprintf@fval^(0+128),w
  3674  079C  0008               	return
  3675  079D                     PL17:	
  3676  079D  0770               	addwf	?___wmul,w
  3677  079E  00D6               	movwf	??_sprintf
  3678  079F  3000               	movlw	0
  3679  07A0  1803               	skipnc
  3680  07A1  3001               	movlw	1
  3681  07A2  0771               	addwf	?___wmul+1,w
  3682  07A3  00D7               	movwf	??_sprintf+1
  3683  07A4  0856               	movf	??_sprintf,w
  3684  07A5  3ED0               	addlw	208
  3685  07A6  1683               	bsf	3,5	;RP0=1, select bank1
  3686  07A7  0008               	return
  3687  07A8                     PL18:	
  3688  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  3689  07A9  00A0               	movwf	?___fttol
  3690  07AA  1683               	bsf	3,5	;RP0=1, select bank1
  3691  07AB  0833               	movf	(sprintf@fval+1)^(0+128),w
  3692  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  3693  07AD  00A1               	movwf	?___fttol+1
  3694  07AE  1683               	bsf	3,5	;RP0=1, select bank1
  3695  07AF  0834               	movf	(sprintf@fval+2)^(0+128),w
  3696  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  3697  07B1  00A2               	movwf	?___fttol+2
  3698  07B2  0008               	return
  3699  07B3                     PL19:	
  3700  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  3701  07B4  00AD               	movwf	?___ftmul
  3702  07B5  1683               	bsf	3,5	;RP0=1, select bank1
  3703  07B6  0833               	movf	(sprintf@fval+1)^(0+128),w
  3704  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  3705  07B8  00AE               	movwf	?___ftmul+1
  3706  07B9  1683               	bsf	3,5	;RP0=1, select bank1
  3707  07BA  0834               	movf	(sprintf@fval+2)^(0+128),w
  3708  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  3709  07BC  00AF               	movwf	?___ftmul+2
  3710  07BD  0008               	return
  3711  07BE                     PL22:	
  3712  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  3713  07BF  00D6               	movwf	??_sprintf
  3714  07C0  01D7               	clrf	??_sprintf+1
  3715  07C1  1BD6               	btfsc	??_sprintf,7
  3716  07C2  03D7               	decf	??_sprintf+1,f
  3717  07C3  0857               	movf	??_sprintf+1,w
  3718  07C4  3A80               	xorlw	128
  3719  07C5  00D8               	movwf	??_sprintf+2
  3720  07C6  1683               	bsf	3,5	;RP0=1, select bank1
  3721  07C7  0008               	return
  3722  07C8                     PL23:	
  3723  07C8  0820               	movf	?___llmod,w
  3724  07C9  3E30               	addlw	48
  3725  07CA  00D7               	movwf	??_sprintf+1
  3726  07CB  1683               	bsf	3,5	;RP0=1, select bank1
  3727  07CC  0835               	movf	sprintf@sp^(0+128),w
  3728  07CD  0084               	movwf	4
  3729  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  3730  07CF  0857               	movf	??_sprintf+1,w
  3731  07D0  0008               	return
  3732  07D1                     PL24:	
  3733  07D1  1303               	bcf	3,6	;RP1=0, select bank1
  3734  07D2  0838               	movf	sprintf@c^(0+128),w
  3735  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  3736  07D4  00D6               	movwf	??_sprintf
  3737  07D5  01D7               	clrf	??_sprintf+1
  3738  07D6  1BD6               	btfsc	??_sprintf,7
  3739  07D7  03D7               	decf	??_sprintf+1,f
  3740  07D8  1683               	bsf	3,5	;RP0=1, select bank1
  3741  07D9  0008               	return
  3742  07DA                     PL25:	
  3743  07DA  0825               	movf	sprintf@integ^(0+128),w
  3744  07DB  00F0               	movwf	?___ftge
  3745  07DC  0826               	movf	(sprintf@integ+1)^(0+128),w
  3746  07DD  00F1               	movwf	?___ftge+1
  3747  07DE  0827               	movf	(sprintf@integ+2)^(0+128),w
  3748  07DF  00F2               	movwf	?___ftge+2
  3749  07E0  0008               	return
  3750  07E1                     PL32:	
  3751  07E1  0820               	movf	___fttol@f1,w
  3752  07E2  00A4               	movwf	??___fttol
  3753  07E3  0821               	movf	___fttol@f1+1,w
  3754  07E4  00A5               	movwf	??___fttol+1
  3755  07E5  0822               	movf	___fttol@f1+2,w
  3756  07E6  00A6               	movwf	??___fttol+2
  3757  07E7  0008               	return
  3758  07E8                     PL33:	
  3759  07E8  0084               	movwf	4
  3760  07E9  3030               	movlw	48
  3761  07EA  1383               	bcf	3,7	;select IRP bank0
  3762  07EB  0080               	movwf	0
  3763  07EC  30FF               	movlw	-1
  3764  07ED  0AB5               	incf	sprintf@sp^(0+128),f
  3765  07EE  0008               	return
  3766  07EF                     PL34:	
  3767  07EF  0800               	movf	0,w
  3768  07F0  1283               	bcf	3,5	;RP0=0, select bank0
  3769  07F1  00D6               	movwf	??_sprintf
  3770  07F2  0A84               	incf	4,f
  3771  07F3  0800               	movf	0,w
  3772  07F4  00D7               	movwf	??_sprintf+1
  3773  07F5  0008               	return
  3774  07F6                     PL37:	
  3775  07F6  1283               	bcf	3,5	;RP0=0, select bank0
  3776  07F7  0857               	movf	??_sprintf+1,w
  3777  07F8  1803               	skipnc
  3778  07F9  3E01               	addlw	1
  3779  07FA  3EFF               	addlw	255
  3780  07FB  1683               	bsf	3,5	;RP0=1, select bank1
  3781  07FC  0008               	return
  3782  07FD                     PL38:	
  3783  07FD  1683               	bsf	3,5	;RP0=1, select bank1
  3784  07FE  1303               	bcf	3,6	;RP1=0, select bank1
  3785  07FF  0008               	return
  3786                           
  3787                           	psect	text562
  3788  0C02                     __ptext562:	
  3789 ;; =============== function _lcd_clear ends ============
  3790                           
  3791                           
  3792 ;; *************** function ___ftsub *****************
  3793 ;; Defined at:
  3794 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftsub.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;  f2              3   40[BANK0 ] float 
  3797 ;;  f1              3   43[BANK0 ] float 
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;		None
  3800 ;; Return value:  Size  Location     Type
  3801 ;;                  3   40[BANK0 ] float 
  3802 ;; Registers used:
  3803 ;;		wreg, status,2, status,0, pclath, cstack
  3804 ;; Tracked objects:
  3805 ;;		On entry : 60/0
  3806 ;;		On exit  : 60/0
  3807 ;;		Unchanged: FFF9F/0
  3808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3809 ;;      Params:         0       6       0       0       0
  3810 ;;      Locals:         0       0       0       0       0
  3811 ;;      Temps:          0       0       0       0       0
  3812 ;;      Totals:         0       6       0       0       0
  3813 ;;Total ram usage:        6 bytes
  3814 ;; Hardware stack levels used:    1
  3815 ;; Hardware stack levels required when called:    2
  3816 ;; This function calls:
  3817 ;;		___ftadd
  3818 ;; This function is called by:
  3819 ;;		_sprintf
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822  0C02                     ___ftsub:	
  3823                           
  3824                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  3825  0C02  3080               	movlw	128
  3826  0C03  06CA               	xorwf	___ftsub@f2+2,f
  3827  0C04  084B               	movf	___ftsub@f1,w
  3828  0C05  00BC               	movwf	?___ftadd
  3829  0C06  084C               	movf	___ftsub@f1+1,w
  3830  0C07  00BD               	movwf	?___ftadd+1
  3831  0C08  084D               	movf	___ftsub@f1+2,w
  3832  0C09  00BE               	movwf	?___ftadd+2
  3833  0C0A  0848               	movf	___ftsub@f2,w
  3834  0C0B  00BF               	movwf	?___ftadd+3
  3835  0C0C  0849               	movf	___ftsub@f2+1,w
  3836  0C0D  00C0               	movwf	?___ftadd+4
  3837  0C0E  084A               	movf	___ftsub@f2+2,w
  3838  0C0F  00C1               	movwf	?___ftadd+5
  3839  0C10  2418               	fcall	___ftadd
  3840  0C11  083C               	movf	?___ftadd,w
  3841  0C12  00C8               	movwf	?___ftsub
  3842  0C13  083D               	movf	?___ftadd+1,w
  3843  0C14  00C9               	movwf	?___ftsub+1
  3844  0C15  083E               	movf	?___ftadd+2,w
  3845  0C16  00CA               	movwf	?___ftsub+2
  3846  0C17  0008               	return
  3847  0C18                     __end_of___ftsub:	
  3848  0C18                     __ptext570:	
  3849 ;; =============== function ___ftmul ends ============
  3850                           
  3851                           
  3852 ;; *************** function ___ftadd *****************
  3853 ;; Defined at:
  3854 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftadd.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;  f1              3   28[BANK0 ] float 
  3857 ;;  f2              3   31[BANK0 ] float 
  3858 ;; Auto vars:     Size  Location     Type
  3859 ;;  exp1            1   39[BANK0 ] unsigned char 
  3860 ;;  exp2            1   38[BANK0 ] unsigned char 
  3861 ;;  sign            1   37[BANK0 ] unsigned char 
  3862 ;; Return value:  Size  Location     Type
  3863 ;;                  3   28[BANK0 ] float 
  3864 ;; Registers used:
  3865 ;;		wreg, status,2, status,0, pclath, cstack
  3866 ;; Tracked objects:
  3867 ;;		On entry : 60/0
  3868 ;;		On exit  : 60/0
  3869 ;;		Unchanged: FFF9F/0
  3870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3871 ;;      Params:         0       6       0       0       0
  3872 ;;      Locals:         0       3       0       0       0
  3873 ;;      Temps:          0       3       0       0       0
  3874 ;;      Totals:         0      12       0       0       0
  3875 ;;Total ram usage:       12 bytes
  3876 ;; Hardware stack levels used:    1
  3877 ;; Hardware stack levels required when called:    1
  3878 ;; This function calls:
  3879 ;;		___ftpack
  3880 ;; This function is called by:
  3881 ;;		_sprintf
  3882 ;;		___ftsub
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885  0C18                     ___ftadd:	
  3886                           
  3887                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3888  0C18  083C               	movf	___ftadd@f1,w
  3889  0C19  00C2               	movwf	??___ftadd
  3890  0C1A  083D               	movf	___ftadd@f1+1,w
  3891  0C1B  00C3               	movwf	??___ftadd+1
  3892  0C1C  083E               	movf	___ftadd@f1+2,w
  3893  0C1D  00C4               	movwf	??___ftadd+2
  3894  0C1E  1003               	clrc
  3895  0C1F  0D43               	rlf	??___ftadd+1,w
  3896  0C20  0D44               	rlf	??___ftadd+2,w
  3897  0C21  00C7               	movwf	___ftadd@exp1
  3898  0C22  083F               	movf	___ftadd@f2,w
  3899  0C23  00C2               	movwf	??___ftadd
  3900  0C24  0840               	movf	___ftadd@f2+1,w
  3901  0C25  00C3               	movwf	??___ftadd+1
  3902  0C26  0841               	movf	___ftadd@f2+2,w
  3903  0C27  00C4               	movwf	??___ftadd+2
  3904  0C28  1003               	clrc
  3905  0C29  0D43               	rlf	??___ftadd+1,w
  3906  0C2A  0D44               	rlf	??___ftadd+2,w
  3907  0C2B  00C6               	movwf	___ftadd@exp2
  3908  0C2C  0847               	movf	___ftadd@exp1,w
  3909  0C2D  1903               	btfsc	3,2
  3910  0C2E  2C3B               	goto	l5305
  3911  0C2F  0846               	movf	___ftadd@exp2,w
  3912  0C30  0247               	subwf	___ftadd@exp1,w
  3913  0C31  0846               	movf	___ftadd@exp2,w
  3914  0C32  1803               	skipnc
  3915  0C33  2C43               	goto	L6
  3916  0C34  00C2               	movwf	??___ftadd
  3917  0C35  0847               	movf	___ftadd@exp1,w
  3918  0C36  02C2               	subwf	??___ftadd,f
  3919  0C37  3019               	movlw	25
  3920  0C38  0242               	subwf	??___ftadd,w
  3921  0C39  1C03               	skipc
  3922  0C3A  2C42               	goto	l5309
  3923  0C3B                     l5305:	
  3924  0C3B  083F               	movf	___ftadd@f2,w
  3925  0C3C  00BC               	movwf	?___ftadd
  3926  0C3D  0840               	movf	___ftadd@f2+1,w
  3927  0C3E  00BD               	movwf	?___ftadd+1
  3928  0C3F  0841               	movf	___ftadd@f2+2,w
  3929  0C40  00BE               	movwf	?___ftadd+2
  3930  0C41  0008               	return
  3931  0C42                     l5309:	
  3932  0C42  0846               	movf	___ftadd@exp2,w
  3933  0C43                     L6:	
  3934  0C43  1903               	btfsc	3,2
  3935  0C44  0008               	return
  3936  0C45  0847               	movf	___ftadd@exp1,w
  3937  0C46  0246               	subwf	___ftadd@exp2,w
  3938  0C47  1803               	skipnc
  3939  0C48  2C51               	goto	l5315
  3940  0C49  0847               	movf	___ftadd@exp1,w
  3941  0C4A  00C2               	movwf	??___ftadd
  3942  0C4B  0846               	movf	___ftadd@exp2,w
  3943  0C4C  02C2               	subwf	??___ftadd,f
  3944  0C4D  3019               	movlw	25
  3945  0C4E  0242               	subwf	??___ftadd,w
  3946  0C4F  1803               	btfsc	3,0
  3947  0C50  0008               	return
  3948  0C51                     l5315:	
  3949  0C51  3006               	movlw	6
  3950  0C52  00C5               	movwf	___ftadd@sign
  3951  0C53  1BBE               	btfsc	___ftadd@f1+2,7
  3952  0C54  17C5               	bsf	___ftadd@sign,7
  3953  0C55  1BC1               	btfsc	___ftadd@f2+2,7
  3954  0C56  1745               	bsf	___ftadd@sign,6
  3955  0C57  17BD               	bsf	___ftadd@f1+1,7
  3956  0C58  01BE               	clrf	___ftadd@f1+2
  3957  0C59  17C0               	bsf	___ftadd@f2+1,7
  3958  0C5A  01C1               	clrf	___ftadd@f2+2
  3959  0C5B  0846               	movf	___ftadd@exp2,w
  3960  0C5C  0247               	subwf	___ftadd@exp1,w
  3961  0C5D  1803               	skipnc
  3962  0C5E  2C78               	goto	l5337
  3963  0C5F                     l5327:	
  3964  0C5F  1003               	clrc
  3965  0C60  0DBF               	rlf	___ftadd@f2,f
  3966  0C61  0DC0               	rlf	___ftadd@f2+1,f
  3967  0C62  0DC1               	rlf	___ftadd@f2+2,f
  3968  0C63  03C6               	decf	___ftadd@exp2,f
  3969  0C64  0846               	movf	___ftadd@exp2,w
  3970  0C65  0647               	xorwf	___ftadd@exp1,w
  3971  0C66  1903               	skipnz
  3972  0C67  2C73               	goto	l5335
  3973  0C68  03C5               	decf	___ftadd@sign,f
  3974  0C69  0845               	movf	___ftadd@sign,w
  3975  0C6A  3907               	andlw	7
  3976  0C6B  1903               	btfsc	3,2
  3977  0C6C  2C73               	goto	l5335
  3978  0C6D  2C5F               	goto	l5327
  3979  0C6E                     l5333:	
  3980  0C6E  1003               	clrc
  3981  0C6F  0CBE               	rrf	___ftadd@f1+2,f
  3982  0C70  0CBD               	rrf	___ftadd@f1+1,f
  3983  0C71  0CBC               	rrf	___ftadd@f1,f
  3984  0C72  0AC7               	incf	___ftadd@exp1,f
  3985  0C73                     l5335:	
  3986  0C73  0847               	movf	___ftadd@exp1,w
  3987  0C74  0646               	xorwf	___ftadd@exp2,w
  3988  0C75  1903               	btfsc	3,2
  3989  0C76  2C94               	goto	l2302
  3990  0C77  2C6E               	goto	l5333
  3991  0C78                     l5337:	
  3992  0C78  0847               	movf	___ftadd@exp1,w
  3993  0C79  0246               	subwf	___ftadd@exp2,w
  3994  0C7A  1803               	skipnc
  3995  0C7B  2C94               	goto	l2302
  3996  0C7C                     l5339:	
  3997  0C7C  1003               	clrc
  3998  0C7D  0DBC               	rlf	___ftadd@f1,f
  3999  0C7E  0DBD               	rlf	___ftadd@f1+1,f
  4000  0C7F  0DBE               	rlf	___ftadd@f1+2,f
  4001  0C80  03C7               	decf	___ftadd@exp1,f
  4002  0C81  0846               	movf	___ftadd@exp2,w
  4003  0C82  0647               	xorwf	___ftadd@exp1,w
  4004  0C83  1903               	skipnz
  4005  0C84  2C90               	goto	l5347
  4006  0C85  03C5               	decf	___ftadd@sign,f
  4007  0C86  0845               	movf	___ftadd@sign,w
  4008  0C87  3907               	andlw	7
  4009  0C88  1903               	btfsc	3,2
  4010  0C89  2C90               	goto	l5347
  4011  0C8A  2C7C               	goto	l5339
  4012  0C8B                     l5345:	
  4013  0C8B  1003               	clrc
  4014  0C8C  0CC1               	rrf	___ftadd@f2+2,f
  4015  0C8D  0CC0               	rrf	___ftadd@f2+1,f
  4016  0C8E  0CBF               	rrf	___ftadd@f2,f
  4017  0C8F  0AC6               	incf	___ftadd@exp2,f
  4018  0C90                     l5347:	
  4019  0C90  0847               	movf	___ftadd@exp1,w
  4020  0C91  0646               	xorwf	___ftadd@exp2,w
  4021  0C92  1D03               	skipz
  4022  0C93  2C8B               	goto	l5345
  4023  0C94                     l2302:	
  4024  0C94  1FC5               	btfss	___ftadd@sign,7
  4025  0C95  2C9F               	goto	l5353
  4026  0C96  30FF               	movlw	255
  4027  0C97  06BC               	xorwf	___ftadd@f1,f
  4028  0C98  06BD               	xorwf	___ftadd@f1+1,f
  4029  0C99  06BE               	xorwf	___ftadd@f1+2,f
  4030  0C9A  0ABC               	incf	___ftadd@f1,f
  4031  0C9B  1903               	skipnz
  4032  0C9C  0ABD               	incf	___ftadd@f1+1,f
  4033  0C9D  1903               	skipnz
  4034  0C9E  0ABE               	incf	___ftadd@f1+2,f
  4035  0C9F                     l5353:	
  4036  0C9F  1F45               	btfss	___ftadd@sign,6
  4037  0CA0  2CAA               	goto	l5359
  4038  0CA1  30FF               	movlw	255
  4039  0CA2  06BF               	xorwf	___ftadd@f2,f
  4040  0CA3  06C0               	xorwf	___ftadd@f2+1,f
  4041  0CA4  06C1               	xorwf	___ftadd@f2+2,f
  4042  0CA5  0ABF               	incf	___ftadd@f2,f
  4043  0CA6  1903               	skipnz
  4044  0CA7  0AC0               	incf	___ftadd@f2+1,f
  4045  0CA8  1903               	skipnz
  4046  0CA9  0AC1               	incf	___ftadd@f2+2,f
  4047  0CAA                     l5359:	
  4048  0CAA  01C5               	clrf	___ftadd@sign
  4049  0CAB  083C               	movf	___ftadd@f1,w
  4050  0CAC  07BF               	addwf	___ftadd@f2,f
  4051  0CAD  083D               	movf	___ftadd@f1+1,w
  4052  0CAE  1103               	clrz
  4053  0CAF  1803               	skipnc
  4054  0CB0  0A3D               	incf	___ftadd@f1+1,w
  4055  0CB1  1D03               	btfss	3,2
  4056  0CB2  07C0               	addwf	___ftadd@f2+1,f
  4057  0CB3  083E               	movf	___ftadd@f1+2,w
  4058  0CB4  1103               	clrz
  4059  0CB5  1803               	skipnc
  4060  0CB6  0A3E               	incf	___ftadd@f1+2,w
  4061  0CB7  1D03               	btfss	3,2
  4062  0CB8  07C1               	addwf	___ftadd@f2+2,f
  4063  0CB9  1FC1               	btfss	___ftadd@f2+2,7
  4064  0CBA  2CC6               	goto	l5371
  4065  0CBB  30FF               	movlw	255
  4066  0CBC  06BF               	xorwf	___ftadd@f2,f
  4067  0CBD  06C0               	xorwf	___ftadd@f2+1,f
  4068  0CBE  06C1               	xorwf	___ftadd@f2+2,f
  4069  0CBF  0ABF               	incf	___ftadd@f2,f
  4070  0CC0  1903               	skipnz
  4071  0CC1  0AC0               	incf	___ftadd@f2+1,f
  4072  0CC2  1903               	skipnz
  4073  0CC3  0AC1               	incf	___ftadd@f2+2,f
  4074  0CC4  01C5               	clrf	___ftadd@sign
  4075  0CC5  0AC5               	incf	___ftadd@sign,f
  4076  0CC6                     l5371:	
  4077  0CC6  083F               	movf	___ftadd@f2,w
  4078  0CC7  00F0               	movwf	?___ftpack
  4079  0CC8  0840               	movf	___ftadd@f2+1,w
  4080  0CC9  00F1               	movwf	?___ftpack+1
  4081  0CCA  0841               	movf	___ftadd@f2+2,w
  4082  0CCB  00F2               	movwf	?___ftpack+2
  4083  0CCC  0847               	movf	___ftadd@exp1,w
  4084  0CCD  00F3               	movwf	?___ftpack+3
  4085  0CCE  0845               	movf	___ftadd@sign,w
  4086  0CCF  00F4               	movwf	?___ftpack+4
  4087  0CD0  2769               	fcall	___ftpack
  4088  0CD1  0870               	movf	?___ftpack,w
  4089  0CD2  00BC               	movwf	?___ftadd
  4090  0CD3  0871               	movf	?___ftpack+1,w
  4091  0CD4  00BD               	movwf	?___ftadd+1
  4092  0CD5  0872               	movf	?___ftpack+2,w
  4093  0CD6  00BE               	movwf	?___ftadd+2
  4094  0CD7  0008               	return
  4095  0CD8                     __end_of___ftadd:	
  4096  0CD8                     __ptext563:	
  4097 ;; =============== function ___ftsub ends ============
  4098                           
  4099                           
  4100 ;; *************** function _scale *****************
  4101 ;; Defined at:
  4102 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;  scl             1    wreg     char 
  4105 ;; Auto vars:     Size  Location     Type
  4106 ;;  scl             1   38[BANK0 ] char 
  4107 ;; Return value:  Size  Location     Type
  4108 ;;                  3   28[BANK0 ] char 
  4109 ;; Registers used:
  4110 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4111 ;; Tracked objects:
  4112 ;;		On entry : 60/20
  4113 ;;		On exit  : 60/0
  4114 ;;		Unchanged: FFF9F/0
  4115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4116 ;;      Params:         0       3       0       0       0
  4117 ;;      Locals:         0       4       0       0       0
  4118 ;;      Temps:          0       4       0       0       0
  4119 ;;      Totals:         0      11       0       0       0
  4120 ;;Total ram usage:       11 bytes
  4121 ;; Hardware stack levels used:    1
  4122 ;; Hardware stack levels required when called:    2
  4123 ;; This function calls:
  4124 ;;		___awmod
  4125 ;;		___awdiv
  4126 ;;		___ftmul
  4127 ;;		___bmul
  4128 ;; This function is called by:
  4129 ;;		_sprintf
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132  0CD8                     _scale:	
  4133                           
  4134                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4135                           ;scale@scl stored from wreg
  4136  0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  4137  0CD9  00C6               	movwf	scale@scl
  4138  0CDA  1FC6               	btfss	scale@scl,7
  4139  0CDB  2DA4               	goto	l5529
  4140  0CDC  09C6               	comf	scale@scl,f
  4141  0CDD  0AC6               	incf	scale@scl,f
  4142  0CDE  0846               	movf	scale@scl,w
  4143  0CDF  3A80               	xorlw	128
  4144  0CE0  3E12               	addlw	-238
  4145  0CE1  1C03               	skipc
  4146  0CE2  2D48               	goto	l5519
  4147  0CE3  300A               	movlw	10
  4148  0CE4  27CB  120A  158A   	fcall	PL16	;call to abstracted procedure
  4149  0CE7  26AF  120A  158A   	fcall	___awmod
  4150  0CEA  0871               	movf	?___awmod+1,w
  4151  0CEB  00F9               	movwf	?___awdiv+3
  4152  0CEC  0870               	movf	?___awmod,w
  4153  0CED  00F8               	movwf	?___awdiv+2
  4154  0CEE  266A  120A  158A   	fcall	___awdiv
  4155  0CF1  27F8               	fcall	PL31	;call to abstracted procedure
  4156  0CF2  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4157  0CF3  0084               	movwf	4
  4158  0CF4  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4159  0CF9  00AD               	movwf	?___ftmul
  4160  0CFA  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4161  0CFF  00AE               	movwf	?___ftmul+1
  4162  0D00  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4163  0D05  27E0  120A  158A   	fcall	PL26	;call to abstracted procedure
  4164  0D08  1BF8               	btfsc	?___awdiv+2,7
  4165  0D09  03F9               	decf	?___awdiv+3,f
  4166  0D0A  266A  120A  158A   	fcall	___awdiv
  4167  0D0D  27C3               	fcall	PL14	;call to abstracted procedure
  4168  0D0E  3E37               	addlw	low ((__npowers_-__stringbase+54))
  4169  0D0F  0084               	movwf	4
  4170  0D10  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4171  0D15  00B0               	movwf	?___ftmul+3
  4172  0D16  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4173  0D1B  00B1               	movwf	?___ftmul+4
  4174  0D1C  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4175  0D21  00B2               	movwf	?___ftmul+5
  4176  0D22  26EC  120A  158A   	fcall	___ftmul
  4177  0D25  27AE  120A  158A   	fcall	PL12	;call to abstracted procedure
  4178  0D28  1BF2               	btfsc	?___awmod+2,7
  4179  0D29  03F3               	decf	?___awmod+3,f
  4180  0D2A  26AF  120A  158A   	fcall	___awmod
  4181  0D2D  27BB               	fcall	PL13	;call to abstracted procedure
  4182  0D2E  3E01               	addlw	low (__npowers_-__stringbase)
  4183  0D2F  0084               	movwf	4
  4184  0D30  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4185  0D35  00AD               	movwf	?___ftmul
  4186  0D36  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4187  0D3B  00AE               	movwf	?___ftmul+1
  4188  0D3C  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4189  0D41  27F0  120A  158A   	fcall	PL29	;call to abstracted procedure
  4190  0D44  26EC  120A  158A   	fcall	___ftmul
  4191  0D47  2FA7               	ljmp	PL10	;call to abstracted procedure
  4192  0D48                     l5519:	
  4193  0D48  0846               	movf	scale@scl,w
  4194  0D49  3A80               	xorlw	128
  4195  0D4A  3E75               	addlw	-139
  4196  0D4B  1C03               	skipc
  4197  0D4C  2D8D               	goto	l5525
  4198  0D4D  300A               	movlw	10
  4199  0D4E  00F0               	movwf	?___awmod
  4200  0D4F  01F1               	clrf	?___awmod+1
  4201  0D50  0846               	movf	scale@scl,w
  4202  0D51  00F2               	movwf	?___awmod+2
  4203  0D52  01F3               	clrf	?___awmod+3
  4204  0D53  1BF2               	btfsc	?___awmod+2,7
  4205  0D54  03F3               	decf	?___awmod+3,f
  4206  0D55  26AF  120A  158A   	fcall	___awmod
  4207  0D58  27BB               	fcall	PL13	;call to abstracted procedure
  4208  0D59  3E01               	addlw	low (__npowers_-__stringbase)
  4209  0D5A  0084               	movwf	4
  4210  0D5B  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4211  0D60  00AD               	movwf	?___ftmul
  4212  0D61  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4213  0D66  00AE               	movwf	?___ftmul+1
  4214  0D67  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4215  0D6C  27E8  120A  158A   	fcall	PL28	;call to abstracted procedure
  4216  0D6F  1BF8               	btfsc	?___awdiv+2,7
  4217  0D70  03F9               	decf	?___awdiv+3,f
  4218  0D71  266A  120A  158A   	fcall	___awdiv
  4219  0D74  27C3               	fcall	PL14	;call to abstracted procedure
  4220  0D75  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4221  0D76  0084               	movwf	4
  4222  0D77  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4223  0D7C  00B0               	movwf	?___ftmul+3
  4224  0D7D  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4225  0D82  00B1               	movwf	?___ftmul+4
  4226  0D83  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4227  0D88  00B2               	movwf	?___ftmul+5
  4228  0D89  26EC  120A  158A   	fcall	___ftmul
  4229  0D8C  2FA7               	ljmp	PL10	;call to abstracted procedure
  4230  0D8D                     l5525:	
  4231  0D8D  3003               	movlw	3
  4232  0D8E  00F9               	movwf	?___bmul
  4233  0D8F  0846               	movf	scale@scl,w
  4234  0D90  275B               	fcall	___bmul
  4235  0D91  3E01               	addlw	low (__npowers_-__stringbase)
  4236  0D92  0084               	movwf	4
  4237  0D93  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4238  0D98  00BC               	movwf	?_scale
  4239  0D99  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4240  0D9E  00BD               	movwf	?_scale+1
  4241  0D9F  120A  158A  200A   	fcall	stringdir
  4242  0DA2  00BE               	movwf	?_scale+2
  4243  0DA3  0008               	return
  4244  0DA4                     l5529:	
  4245  0DA4  0846               	movf	scale@scl,w
  4246  0DA5  3A80               	xorlw	128
  4247  0DA6  3E12               	addlw	-238
  4248  0DA7  1C03               	skipc
  4249  0DA8  2E0E               	goto	l5537
  4250  0DA9  300A               	movlw	10
  4251  0DAA  27CB  120A  158A   	fcall	PL16	;call to abstracted procedure
  4252  0DAD  26AF  120A  158A   	fcall	___awmod
  4253  0DB0  0871               	movf	?___awmod+1,w
  4254  0DB1  00F9               	movwf	?___awdiv+3
  4255  0DB2  0870               	movf	?___awmod,w
  4256  0DB3  00F8               	movwf	?___awdiv+2
  4257  0DB4  266A  120A  158A   	fcall	___awdiv
  4258  0DB7  27F8               	fcall	PL31	;call to abstracted procedure
  4259  0DB8  3E43               	addlw	low ((__powers_-__stringbase+27))
  4260  0DB9  0084               	movwf	4
  4261  0DBA  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4262  0DBF  00AD               	movwf	?___ftmul
  4263  0DC0  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4264  0DC5  00AE               	movwf	?___ftmul+1
  4265  0DC6  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4266  0DCB  27E0  120A  158A   	fcall	PL26	;call to abstracted procedure
  4267  0DCE  1BF8               	btfsc	?___awdiv+2,7
  4268  0DCF  03F9               	decf	?___awdiv+3,f
  4269  0DD0  266A  120A  158A   	fcall	___awdiv
  4270  0DD3  27C3               	fcall	PL14	;call to abstracted procedure
  4271  0DD4  3E5E               	addlw	low ((__powers_-__stringbase+54))
  4272  0DD5  0084               	movwf	4
  4273  0DD6  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4274  0DDB  00B0               	movwf	?___ftmul+3
  4275  0DDC  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4276  0DE1  00B1               	movwf	?___ftmul+4
  4277  0DE2  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4278  0DE7  00B2               	movwf	?___ftmul+5
  4279  0DE8  26EC  120A  158A   	fcall	___ftmul
  4280  0DEB  27AE  120A  158A   	fcall	PL12	;call to abstracted procedure
  4281  0DEE  1BF2               	btfsc	?___awmod+2,7
  4282  0DEF  03F3               	decf	?___awmod+3,f
  4283  0DF0  26AF  120A  158A   	fcall	___awmod
  4284  0DF3  27BB               	fcall	PL13	;call to abstracted procedure
  4285  0DF4  3E28               	addlw	low (__powers_-__stringbase)
  4286  0DF5  0084               	movwf	4
  4287  0DF6  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4288  0DFB  00AD               	movwf	?___ftmul
  4289  0DFC  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4290  0E01  00AE               	movwf	?___ftmul+1
  4291  0E02  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4292  0E07  27F0  120A  158A   	fcall	PL29	;call to abstracted procedure
  4293  0E0A  26EC  120A  158A   	fcall	___ftmul
  4294  0E0D  2FA7               	ljmp	PL10	;call to abstracted procedure
  4295  0E0E                     l5537:	
  4296  0E0E  0846               	movf	scale@scl,w
  4297  0E0F  3A80               	xorlw	128
  4298  0E10  3E75               	addlw	-139
  4299  0E11  1C03               	skipc
  4300  0E12  2E53               	goto	l5543
  4301  0E13  300A               	movlw	10
  4302  0E14  00F0               	movwf	?___awmod
  4303  0E15  01F1               	clrf	?___awmod+1
  4304  0E16  0846               	movf	scale@scl,w
  4305  0E17  00F2               	movwf	?___awmod+2
  4306  0E18  01F3               	clrf	?___awmod+3
  4307  0E19  1BF2               	btfsc	?___awmod+2,7
  4308  0E1A  03F3               	decf	?___awmod+3,f
  4309  0E1B  26AF  120A  158A   	fcall	___awmod
  4310  0E1E  27BB               	fcall	PL13	;call to abstracted procedure
  4311  0E1F  3E28               	addlw	low (__powers_-__stringbase)
  4312  0E20  0084               	movwf	4
  4313  0E21  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4314  0E26  00AD               	movwf	?___ftmul
  4315  0E27  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4316  0E2C  00AE               	movwf	?___ftmul+1
  4317  0E2D  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4318  0E32  27E8  120A  158A   	fcall	PL28	;call to abstracted procedure
  4319  0E35  1BF8               	btfsc	?___awdiv+2,7
  4320  0E36  03F9               	decf	?___awdiv+3,f
  4321  0E37  266A  120A  158A   	fcall	___awdiv
  4322  0E3A  27C3               	fcall	PL14	;call to abstracted procedure
  4323  0E3B  3E43               	addlw	low ((__powers_-__stringbase+27))
  4324  0E3C  0084               	movwf	4
  4325  0E3D  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4326  0E42  00B0               	movwf	?___ftmul+3
  4327  0E43  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4328  0E48  00B1               	movwf	?___ftmul+4
  4329  0E49  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4330  0E4E  00B2               	movwf	?___ftmul+5
  4331  0E4F  26EC  120A  158A   	fcall	___ftmul
  4332  0E52  2FA7               	ljmp	PL10	;call to abstracted procedure
  4333  0E53                     l5543:	
  4334  0E53  3003               	movlw	3
  4335  0E54  00F9               	movwf	?___bmul
  4336  0E55  0846               	movf	scale@scl,w
  4337  0E56  275B               	fcall	___bmul
  4338  0E57  3E28               	addlw	low (__powers_-__stringbase)
  4339  0E58  0084               	movwf	4
  4340  0E59  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4341  0E5E  00BC               	movwf	?_scale
  4342  0E5F  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4343  0E64  00BD               	movwf	?_scale+1
  4344  0E65  120A  158A  200A   	fcall	stringdir
  4345  0E68  00BE               	movwf	?_scale+2
  4346  0E69  0008               	return
  4347  0E6A                     __end_of_scale:	
  4348  0E6A                     __ptext577:	
  4349 ;; =============== function ___llmod ends ============
  4350                           
  4351                           
  4352 ;; *************** function ___awdiv *****************
  4353 ;; Defined at:
  4354 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awdiv.c"
  4355 ;; Parameters:    Size  Location     Type
  4356 ;;  divisor         2    6[COMMON] int 
  4357 ;;  dividend        2    8[COMMON] int 
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;  quotient        2   12[COMMON] int 
  4360 ;;  sign            1   11[COMMON] unsigned char 
  4361 ;;  counter         1   10[COMMON] unsigned char 
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  2    6[COMMON] int 
  4364 ;; Registers used:
  4365 ;;		wreg, status,2, status,0
  4366 ;; Tracked objects:
  4367 ;;		On entry : 40/20
  4368 ;;		On exit  : 40/20
  4369 ;;		Unchanged: FFFBF/0
  4370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4371 ;;      Params:         4       0       0       0       0
  4372 ;;      Locals:         4       0       0       0       0
  4373 ;;      Temps:          0       0       0       0       0
  4374 ;;      Totals:         8       0       0       0       0
  4375 ;;Total ram usage:        8 bytes
  4376 ;; Hardware stack levels used:    1
  4377 ;; This function calls:
  4378 ;;		Nothing
  4379 ;; This function is called by:
  4380 ;;		_scale
  4381 ;;		_sprintf
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384  0E6A                     ___awdiv:	
  4385                           
  4386                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4387  0E6A  01FB               	clrf	___awdiv@sign
  4388  0E6B  1FF7               	btfss	___awdiv@divisor+1,7
  4389  0E6C  2E74               	goto	l5143
  4390  0E6D  09F6               	comf	___awdiv@divisor,f
  4391  0E6E  09F7               	comf	___awdiv@divisor+1,f
  4392  0E6F  0AF6               	incf	___awdiv@divisor,f
  4393  0E70  1903               	skipnz
  4394  0E71  0AF7               	incf	___awdiv@divisor+1,f
  4395  0E72  01FB               	clrf	___awdiv@sign
  4396  0E73  0AFB               	incf	___awdiv@sign,f
  4397  0E74                     l5143:	
  4398  0E74  1FF9               	btfss	___awdiv@dividend+1,7
  4399  0E75  2E7D               	goto	l5149
  4400  0E76  09F8               	comf	___awdiv@dividend,f
  4401  0E77  09F9               	comf	___awdiv@dividend+1,f
  4402  0E78  0AF8               	incf	___awdiv@dividend,f
  4403  0E79  1903               	skipnz
  4404  0E7A  0AF9               	incf	___awdiv@dividend+1,f
  4405  0E7B  3001               	movlw	1
  4406  0E7C  06FB               	xorwf	___awdiv@sign,f
  4407  0E7D                     l5149:	
  4408  0E7D  01FC               	clrf	___awdiv@quotient
  4409  0E7E  01FD               	clrf	___awdiv@quotient+1
  4410  0E7F  0877               	movf	___awdiv@divisor+1,w
  4411  0E80  0476               	iorwf	___awdiv@divisor,w
  4412  0E81  1903               	skipnz
  4413  0E82  2EA2               	goto	l5171
  4414  0E83  01FA               	clrf	___awdiv@counter
  4415  0E84                     L14:	
  4416  0E84  0AFA               	incf	___awdiv@counter,f
  4417  0E85  1BF7               	btfsc	___awdiv@divisor+1,7
  4418  0E86  2E8B               	goto	l5159
  4419  0E87  1003               	clrc
  4420  0E88  0DF6               	rlf	___awdiv@divisor,f
  4421  0E89  0DF7               	rlf	___awdiv@divisor+1,f
  4422  0E8A  2E84               	goto	L14
  4423  0E8B                     l5159:	
  4424  0E8B  1003               	clrc
  4425  0E8C  0DFC               	rlf	___awdiv@quotient,f
  4426  0E8D  0DFD               	rlf	___awdiv@quotient+1,f
  4427  0E8E  0877               	movf	___awdiv@divisor+1,w
  4428  0E8F  0279               	subwf	___awdiv@dividend+1,w
  4429  0E90  1D03               	skipz
  4430  0E91  2E94               	goto	u2165
  4431  0E92  0876               	movf	___awdiv@divisor,w
  4432  0E93  0278               	subwf	___awdiv@dividend,w
  4433  0E94                     u2165:	
  4434  0E94  1C03               	skipc
  4435  0E95  2E9E               	goto	L15
  4436  0E96  0876               	movf	___awdiv@divisor,w
  4437  0E97  02F8               	subwf	___awdiv@dividend,f
  4438  0E98  0877               	movf	___awdiv@divisor+1,w
  4439  0E99  1C03               	skipc
  4440  0E9A  03F9               	decf	___awdiv@dividend+1,f
  4441  0E9B  02F9               	subwf	___awdiv@dividend+1,f
  4442  0E9C  147C               	bsf	___awdiv@quotient,0
  4443  0E9D  1003               	clrc
  4444  0E9E                     L15:	
  4445  0E9E  0CF7               	rrf	___awdiv@divisor+1,f
  4446  0E9F  0CF6               	rrf	___awdiv@divisor,f
  4447  0EA0  0BFA               	decfsz	___awdiv@counter,f
  4448  0EA1  2E8B               	goto	l5159
  4449  0EA2                     l5171:	
  4450  0EA2  087B               	movf	___awdiv@sign,w
  4451  0EA3  1903               	btfsc	3,2
  4452  0EA4  2EAA               	goto	l5175
  4453  0EA5  09FC               	comf	___awdiv@quotient,f
  4454  0EA6  09FD               	comf	___awdiv@quotient+1,f
  4455  0EA7  0AFC               	incf	___awdiv@quotient,f
  4456  0EA8  1903               	skipnz
  4457  0EA9  0AFD               	incf	___awdiv@quotient+1,f
  4458  0EAA                     l5175:	
  4459  0EAA  087D               	movf	___awdiv@quotient+1,w
  4460  0EAB  00F7               	movwf	?___awdiv+1
  4461  0EAC  087C               	movf	___awdiv@quotient,w
  4462  0EAD  00F6               	movwf	?___awdiv
  4463  0EAE  0008               	return
  4464  0EAF                     __end_of___awdiv:	
  4465  0EAF                     __ptext572:	
  4466 ;; =============== function _pause ends ============
  4467                           
  4468                           
  4469 ;; *************** function ___awmod *****************
  4470 ;; Defined at:
  4471 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awmod.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;  divisor         2    0[COMMON] int 
  4474 ;;  dividend        2    2[COMMON] int 
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;  sign            1    5[COMMON] unsigned char 
  4477 ;;  counter         1    4[COMMON] unsigned char 
  4478 ;; Return value:  Size  Location     Type
  4479 ;;                  2    0[COMMON] int 
  4480 ;; Registers used:
  4481 ;;		wreg, status,2, status,0
  4482 ;; Tracked objects:
  4483 ;;		On entry : 60/0
  4484 ;;		On exit  : 60/0
  4485 ;;		Unchanged: FFF9F/0
  4486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4487 ;;      Params:         4       0       0       0       0
  4488 ;;      Locals:         2       0       0       0       0
  4489 ;;      Temps:          0       0       0       0       0
  4490 ;;      Totals:         6       0       0       0       0
  4491 ;;Total ram usage:        6 bytes
  4492 ;; Hardware stack levels used:    1
  4493 ;; This function calls:
  4494 ;;		Nothing
  4495 ;; This function is called by:
  4496 ;;		_scale
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499  0EAF                     ___awmod:	
  4500                           
  4501                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4502  0EAF  01F5               	clrf	___awmod@sign
  4503  0EB0  1FF3               	btfss	___awmod@dividend+1,7
  4504  0EB1  2EB9               	goto	l5261
  4505  0EB2  09F2               	comf	___awmod@dividend,f
  4506  0EB3  09F3               	comf	___awmod@dividend+1,f
  4507  0EB4  0AF2               	incf	___awmod@dividend,f
  4508  0EB5  1903               	skipnz
  4509  0EB6  0AF3               	incf	___awmod@dividend+1,f
  4510  0EB7  01F5               	clrf	___awmod@sign
  4511  0EB8  0AF5               	incf	___awmod@sign,f
  4512  0EB9                     l5261:	
  4513  0EB9  1FF1               	btfss	___awmod@divisor+1,7
  4514  0EBA  2EC0               	goto	l5265
  4515  0EBB  09F0               	comf	___awmod@divisor,f
  4516  0EBC  09F1               	comf	___awmod@divisor+1,f
  4517  0EBD  0AF0               	incf	___awmod@divisor,f
  4518  0EBE  1903               	skipnz
  4519  0EBF  0AF1               	incf	___awmod@divisor+1,f
  4520  0EC0                     l5265:	
  4521  0EC0  0871               	movf	___awmod@divisor+1,w
  4522  0EC1  0470               	iorwf	___awmod@divisor,w
  4523  0EC2  1903               	skipnz
  4524  0EC3  2EDF               	goto	l5281
  4525  0EC4  01F4               	clrf	___awmod@counter
  4526  0EC5                     L7:	
  4527  0EC5  0AF4               	incf	___awmod@counter,f
  4528  0EC6  1BF1               	btfsc	___awmod@divisor+1,7
  4529  0EC7  2ECC               	goto	l5273
  4530  0EC8  1003               	clrc
  4531  0EC9  0DF0               	rlf	___awmod@divisor,f
  4532  0ECA  0DF1               	rlf	___awmod@divisor+1,f
  4533  0ECB  2EC5               	goto	L7
  4534  0ECC                     l5273:	
  4535  0ECC  0871               	movf	___awmod@divisor+1,w
  4536  0ECD  0273               	subwf	___awmod@dividend+1,w
  4537  0ECE  1D03               	skipz
  4538  0ECF  2ED2               	goto	u2355
  4539  0ED0  0870               	movf	___awmod@divisor,w
  4540  0ED1  0272               	subwf	___awmod@dividend,w
  4541  0ED2                     u2355:	
  4542  0ED2  1C03               	skipc
  4543  0ED3  2EDB               	goto	L8
  4544  0ED4  0870               	movf	___awmod@divisor,w
  4545  0ED5  02F2               	subwf	___awmod@dividend,f
  4546  0ED6  0871               	movf	___awmod@divisor+1,w
  4547  0ED7  1C03               	skipc
  4548  0ED8  03F3               	decf	___awmod@dividend+1,f
  4549  0ED9  02F3               	subwf	___awmod@dividend+1,f
  4550  0EDA  1003               	clrc
  4551  0EDB                     L8:	
  4552  0EDB  0CF1               	rrf	___awmod@divisor+1,f
  4553  0EDC  0CF0               	rrf	___awmod@divisor,f
  4554  0EDD  0BF4               	decfsz	___awmod@counter,f
  4555  0EDE  2ECC               	goto	l5273
  4556  0EDF                     l5281:	
  4557  0EDF  0875               	movf	___awmod@sign,w
  4558  0EE0  1903               	btfsc	3,2
  4559  0EE1  2EE7               	goto	l5285
  4560  0EE2  09F2               	comf	___awmod@dividend,f
  4561  0EE3  09F3               	comf	___awmod@dividend+1,f
  4562  0EE4  0AF2               	incf	___awmod@dividend,f
  4563  0EE5  1903               	skipnz
  4564  0EE6  0AF3               	incf	___awmod@dividend+1,f
  4565  0EE7                     l5285:	
  4566  0EE7  0873               	movf	___awmod@dividend+1,w
  4567  0EE8  00F1               	movwf	?___awmod+1
  4568  0EE9  0872               	movf	___awmod@dividend,w
  4569  0EEA  00F0               	movwf	?___awmod
  4570  0EEB  0008               	return
  4571  0EEC                     __end_of___awmod:	
  4572  0EEC                     __ptext569:	
  4573 ;; =============== function ___awtoft ends ============
  4574                           
  4575                           
  4576 ;; *************** function ___ftmul *****************
  4577 ;; Defined at:
  4578 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftmul.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;  f1              3   13[BANK0 ] float 
  4581 ;;  f2              3   16[BANK0 ] float 
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;  f3_as_produc    3   23[BANK0 ] unsigned um
  4584 ;;  sign            1   27[BANK0 ] unsigned char 
  4585 ;;  cntr            1   26[BANK0 ] unsigned char 
  4586 ;;  exp             1   22[BANK0 ] unsigned char 
  4587 ;; Return value:  Size  Location     Type
  4588 ;;                  3   13[BANK0 ] float 
  4589 ;; Registers used:
  4590 ;;		wreg, status,2, status,0, pclath, cstack
  4591 ;; Tracked objects:
  4592 ;;		On entry : 60/0
  4593 ;;		On exit  : 60/0
  4594 ;;		Unchanged: FFF9F/0
  4595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4596 ;;      Params:         0       6       0       0       0
  4597 ;;      Locals:         0       6       0       0       0
  4598 ;;      Temps:          0       3       0       0       0
  4599 ;;      Totals:         0      15       0       0       0
  4600 ;;Total ram usage:       15 bytes
  4601 ;; Hardware stack levels used:    1
  4602 ;; Hardware stack levels required when called:    1
  4603 ;; This function calls:
  4604 ;;		___ftpack
  4605 ;; This function is called by:
  4606 ;;		_ADC
  4607 ;;		_fround
  4608 ;;		_scale
  4609 ;;		_sprintf
  4610 ;; This function uses a non-reentrant model
  4611 ;;
  4612  0EEC                     ___ftmul:	
  4613                           
  4614                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4615  0EEC  082D               	movf	___ftmul@f1,w
  4616  0EED  00B3               	movwf	??___ftmul
  4617  0EEE  082E               	movf	___ftmul@f1+1,w
  4618  0EEF  00B4               	movwf	??___ftmul+1
  4619  0EF0  082F               	movf	___ftmul@f1+2,w
  4620  0EF1  00B5               	movwf	??___ftmul+2
  4621  0EF2  1003               	clrc
  4622  0EF3  0D34               	rlf	??___ftmul+1,w
  4623  0EF4  0D35               	rlf	??___ftmul+2,w
  4624  0EF5  00B6               	movwf	___ftmul@exp
  4625  0EF6  08B6               	movf	___ftmul@exp,f
  4626  0EF7  1D03               	skipz
  4627  0EF8  2EFD               	goto	l5381
  4628  0EF9  01AD               	clrf	?___ftmul
  4629  0EFA  01AE               	clrf	?___ftmul+1
  4630  0EFB  01AF               	clrf	?___ftmul+2
  4631  0EFC  0008               	return
  4632  0EFD                     l5381:	
  4633  0EFD  0830               	movf	___ftmul@f2,w
  4634  0EFE  00B3               	movwf	??___ftmul
  4635  0EFF  0831               	movf	___ftmul@f2+1,w
  4636  0F00  00B4               	movwf	??___ftmul+1
  4637  0F01  0832               	movf	___ftmul@f2+2,w
  4638  0F02  00B5               	movwf	??___ftmul+2
  4639  0F03  1003               	clrc
  4640  0F04  0D34               	rlf	??___ftmul+1,w
  4641  0F05  0D35               	rlf	??___ftmul+2,w
  4642  0F06  00BB               	movwf	___ftmul@sign
  4643  0F07  08BB               	movf	___ftmul@sign,f
  4644  0F08  1D03               	skipz
  4645  0F09  2F0E               	goto	l5387
  4646  0F0A  01AD               	clrf	?___ftmul
  4647  0F0B  01AE               	clrf	?___ftmul+1
  4648  0F0C  01AF               	clrf	?___ftmul+2
  4649  0F0D  0008               	return
  4650  0F0E                     l5387:	
  4651  0F0E  083B               	movf	___ftmul@sign,w
  4652  0F0F  3E7B               	addlw	123
  4653  0F10  07B6               	addwf	___ftmul@exp,f
  4654  0F11  082F               	movf	___ftmul@f1+2,w
  4655  0F12  00BB               	movwf	___ftmul@sign
  4656  0F13  0832               	movf	___ftmul@f2+2,w
  4657  0F14  06BB               	xorwf	___ftmul@sign,f
  4658  0F15  3080               	movlw	128
  4659  0F16  05BB               	andwf	___ftmul@sign,f
  4660  0F17  3007               	movlw	7
  4661  0F18  17AE               	bsf	___ftmul@f1+1,7
  4662  0F19  17B1               	bsf	___ftmul@f2+1,7
  4663  0F1A  01B2               	clrf	___ftmul@f2+2
  4664  0F1B  01B7               	clrf	___ftmul@f3_as_product
  4665  0F1C  01B8               	clrf	___ftmul@f3_as_product+1
  4666  0F1D  01B9               	clrf	___ftmul@f3_as_product+2
  4667  0F1E  00BA               	movwf	___ftmul@cntr
  4668  0F1F                     l5405:	
  4669  0F1F  1C2D               	btfss	___ftmul@f1,0
  4670  0F20  2F29               	goto	l5409
  4671  0F21  0830               	movf	___ftmul@f2,w
  4672  0F22  27D6  120A  158A   	fcall	PL21	;call to abstracted procedure
  4673  0F25  1803               	skipnc
  4674  0F26  0A32               	incf	___ftmul@f2+2,w
  4675  0F27  1D03               	btfss	3,2
  4676  0F28  07B9               	addwf	___ftmul@f3_as_product+2,f
  4677  0F29                     l5409:	
  4678  0F29  1003               	clrc
  4679  0F2A  0CAF               	rrf	___ftmul@f1+2,f
  4680  0F2B  0CAE               	rrf	___ftmul@f1+1,f
  4681  0F2C  0CAD               	rrf	___ftmul@f1,f
  4682  0F2D  1003               	clrc
  4683  0F2E  0DB0               	rlf	___ftmul@f2,f
  4684  0F2F  0DB1               	rlf	___ftmul@f2+1,f
  4685  0F30  0DB2               	rlf	___ftmul@f2+2,f
  4686  0F31  0BBA               	decfsz	___ftmul@cntr,f
  4687  0F32  2F1F               	goto	l5405
  4688  0F33  3009               	movlw	9
  4689  0F34  00BA               	movwf	___ftmul@cntr
  4690  0F35                     l5417:	
  4691  0F35  1C2D               	btfss	___ftmul@f1,0
  4692  0F36  2F3F               	goto	l5421
  4693  0F37  0830               	movf	___ftmul@f2,w
  4694  0F38  27D6  120A  158A   	fcall	PL21	;call to abstracted procedure
  4695  0F3B  1803               	skipnc
  4696  0F3C  0A32               	incf	___ftmul@f2+2,w
  4697  0F3D  1D03               	btfss	3,2
  4698  0F3E  07B9               	addwf	___ftmul@f3_as_product+2,f
  4699  0F3F                     l5421:	
  4700  0F3F  1003               	clrc
  4701  0F40  0CAF               	rrf	___ftmul@f1+2,f
  4702  0F41  0CAE               	rrf	___ftmul@f1+1,f
  4703  0F42  0CAD               	rrf	___ftmul@f1,f
  4704  0F43  1003               	clrc
  4705  0F44  0CB9               	rrf	___ftmul@f3_as_product+2,f
  4706  0F45  0CB8               	rrf	___ftmul@f3_as_product+1,f
  4707  0F46  0CB7               	rrf	___ftmul@f3_as_product,f
  4708  0F47  0BBA               	decfsz	___ftmul@cntr,f
  4709  0F48  2F35               	goto	l5417
  4710  0F49  0837               	movf	___ftmul@f3_as_product,w
  4711  0F4A  00F0               	movwf	?___ftpack
  4712  0F4B  0838               	movf	___ftmul@f3_as_product+1,w
  4713  0F4C  00F1               	movwf	?___ftpack+1
  4714  0F4D  0839               	movf	___ftmul@f3_as_product+2,w
  4715  0F4E  00F2               	movwf	?___ftpack+2
  4716  0F4F  0836               	movf	___ftmul@exp,w
  4717  0F50  00F3               	movwf	?___ftpack+3
  4718  0F51  083B               	movf	___ftmul@sign,w
  4719  0F52  00F4               	movwf	?___ftpack+4
  4720  0F53  2769               	fcall	___ftpack
  4721  0F54  0870               	movf	?___ftpack,w
  4722  0F55  00AD               	movwf	?___ftmul
  4723  0F56  0871               	movf	?___ftpack+1,w
  4724  0F57  00AE               	movwf	?___ftmul+1
  4725  0F58  0872               	movf	?___ftpack+2,w
  4726  0F59  00AF               	movwf	?___ftmul+2
  4727  0F5A  0008               	return
  4728  0F5B                     __end_of___ftmul:	
  4729  0F5B                     __ptext583:	
  4730 ;; =============== function ___wmul ends ============
  4731                           
  4732                           
  4733 ;; *************** function ___bmul *****************
  4734 ;; Defined at:
  4735 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\bmul.c"
  4736 ;; Parameters:    Size  Location     Type
  4737 ;;  multiplier      1    wreg     unsigned char 
  4738 ;;  multiplicand    1    9[COMMON] unsigned char 
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;  multiplier      1   11[COMMON] unsigned char 
  4741 ;;  product         1   10[COMMON] unsigned char 
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  1    wreg      unsigned char 
  4744 ;; Registers used:
  4745 ;;		wreg, status,2, status,0
  4746 ;; Tracked objects:
  4747 ;;		On entry : 60/0
  4748 ;;		On exit  : 60/0
  4749 ;;		Unchanged: FFF9F/0
  4750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4751 ;;      Params:         1       0       0       0       0
  4752 ;;      Locals:         2       0       0       0       0
  4753 ;;      Temps:          0       0       0       0       0
  4754 ;;      Totals:         3       0       0       0       0
  4755 ;;Total ram usage:        3 bytes
  4756 ;; Hardware stack levels used:    1
  4757 ;; This function calls:
  4758 ;;		Nothing
  4759 ;; This function is called by:
  4760 ;;		_fround
  4761 ;;		_scale
  4762 ;; This function uses a non-reentrant model
  4763 ;;
  4764  0F5B                     ___bmul:	
  4765                           
  4766                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4767                           ;___bmul@multiplier stored from wreg
  4768  0F5B  00FB               	movwf	___bmul@multiplier
  4769  0F5C  01FA               	clrf	___bmul@product
  4770  0F5D                     l4997:	
  4771  0F5D  0879               	movf	___bmul@multiplicand,w
  4772  0F5E  187B               	btfsc	___bmul@multiplier,0
  4773  0F5F  07FA               	addwf	___bmul@product,f
  4774  0F60  1003               	clrc
  4775  0F61  0DF9               	rlf	___bmul@multiplicand,f
  4776  0F62  1003               	clrc
  4777  0F63  0CFB               	rrf	___bmul@multiplier,f
  4778  0F64  08FB               	movf	___bmul@multiplier,f
  4779  0F65  1D03               	skipz
  4780  0F66  2F5D               	goto	l4997
  4781  0F67  087A               	movf	___bmul@product,w
  4782  0F68  0008               	return
  4783  0F69                     __end_of___bmul:	
  4784  0F69                     __ptext579:	
  4785 ;; =============== function ___fttol ends ============
  4786                           
  4787                           
  4788 ;; *************** function ___ftpack *****************
  4789 ;; Defined at:
  4790 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\float.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;  arg             3    0[COMMON] unsigned um
  4793 ;;  exp             1    3[COMMON] unsigned char 
  4794 ;;  sign            1    4[COMMON] unsigned char 
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;		None
  4797 ;; Return value:  Size  Location     Type
  4798 ;;                  3    0[COMMON] float 
  4799 ;; Registers used:
  4800 ;;		wreg, status,2, status,0
  4801 ;; Tracked objects:
  4802 ;;		On entry : 40/20
  4803 ;;		On exit  : 40/20
  4804 ;;		Unchanged: FFFBF/0
  4805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4806 ;;      Params:         5       0       0       0       0
  4807 ;;      Locals:         0       0       0       0       0
  4808 ;;      Temps:          3       0       0       0       0
  4809 ;;      Totals:         8       0       0       0       0
  4810 ;;Total ram usage:        8 bytes
  4811 ;; Hardware stack levels used:    1
  4812 ;; This function calls:
  4813 ;;		Nothing
  4814 ;; This function is called by:
  4815 ;;		___ftadd
  4816 ;;		___ftmul
  4817 ;;		___awtoft
  4818 ;;		___lltoft
  4819 ;; This function uses a non-reentrant model
  4820 ;;
  4821  0F69                     ___ftpack:	
  4822                           
  4823                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4824  0F69  0873               	movf	___ftpack@exp,w
  4825  0F6A  1903               	btfsc	3,2
  4826  0F6B  2F71               	goto	l5073
  4827  0F6C  0872               	movf	___ftpack@arg+2,w
  4828  0F6D  0471               	iorwf	___ftpack@arg+1,w
  4829  0F6E  0470               	iorwf	___ftpack@arg,w
  4830  0F6F  1D03               	skipz
  4831  0F70  2F7A               	goto	l5079
  4832  0F71                     l5073:	
  4833  0F71  01F0               	clrf	?___ftpack
  4834  0F72  01F1               	clrf	?___ftpack+1
  4835  0F73  01F2               	clrf	?___ftpack+2
  4836  0F74  0008               	return
  4837  0F75                     l5077:	
  4838  0F75  0AF3               	incf	___ftpack@exp,f
  4839  0F76  1003               	clrc
  4840  0F77  0CF2               	rrf	___ftpack@arg+2,f
  4841  0F78  0CF1               	rrf	___ftpack@arg+1,f
  4842  0F79  0CF0               	rrf	___ftpack@arg,f
  4843  0F7A                     l5079:	
  4844  0F7A  30FE               	movlw	254
  4845  0F7B  0572               	andwf	___ftpack@arg+2,w
  4846  0F7C  1903               	btfsc	3,2
  4847  0F7D  2F89               	goto	l5083
  4848  0F7E  2F75               	goto	l5077
  4849  0F7F                     l5081:	
  4850  0F7F  0AF3               	incf	___ftpack@exp,f
  4851  0F80  0AF0               	incf	___ftpack@arg,f
  4852  0F81  1903               	skipnz
  4853  0F82  0AF1               	incf	___ftpack@arg+1,f
  4854  0F83  1903               	skipnz
  4855  0F84  0AF2               	incf	___ftpack@arg+2,f
  4856  0F85  1003               	clrc
  4857  0F86  0CF2               	rrf	___ftpack@arg+2,f
  4858  0F87  0CF1               	rrf	___ftpack@arg+1,f
  4859  0F88  0CF0               	rrf	___ftpack@arg,f
  4860  0F89                     l5083:	
  4861  0F89  30FF               	movlw	255
  4862  0F8A  0572               	andwf	___ftpack@arg+2,w
  4863  0F8B  1903               	btfsc	3,2
  4864  0F8C  2F93               	goto	l5087
  4865  0F8D  2F7F               	goto	l5081
  4866  0F8E                     l5085:	
  4867  0F8E  03F3               	decf	___ftpack@exp,f
  4868  0F8F  1003               	clrc
  4869  0F90  0DF0               	rlf	___ftpack@arg,f
  4870  0F91  0DF1               	rlf	___ftpack@arg+1,f
  4871  0F92  0DF2               	rlf	___ftpack@arg+2,f
  4872  0F93                     l5087:	
  4873  0F93  1FF1               	btfss	___ftpack@arg+1,7
  4874  0F94  2F8E               	goto	l5085
  4875  0F95  1C73               	btfss	___ftpack@exp,0
  4876  0F96  13F1               	bcf	___ftpack@arg+1,7
  4877  0F97  1003               	clrc
  4878  0F98  0CF3               	rrf	___ftpack@exp,f
  4879  0F99  0873               	movf	___ftpack@exp,w
  4880  0F9A  00F7               	movwf	??___ftpack+2
  4881  0F9B  01F6               	clrf	??___ftpack+1
  4882  0F9C  01F5               	clrf	??___ftpack
  4883  0F9D  0875               	movf	??___ftpack,w
  4884  0F9E  04F0               	iorwf	___ftpack@arg,f
  4885  0F9F  0876               	movf	??___ftpack+1,w
  4886  0FA0  04F1               	iorwf	___ftpack@arg+1,f
  4887  0FA1  0877               	movf	??___ftpack+2,w
  4888  0FA2  04F2               	iorwf	___ftpack@arg+2,f
  4889  0FA3  0874               	movf	___ftpack@sign,w
  4890  0FA4  1D03               	skipz
  4891  0FA5  17F2               	bsf	___ftpack@arg+2,7
  4892  0FA6  0008               	return
  4893  0FA7                     __end_of___ftpack:	
  4894  0FA7                     PL10:	
  4895  0FA7  082D               	movf	?___ftmul,w
  4896  0FA8  00BC               	movwf	?_scale
  4897  0FA9  082E               	movf	?___ftmul+1,w
  4898  0FAA  00BD               	movwf	?_scale+1
  4899  0FAB  082F               	movf	?___ftmul+2,w
  4900  0FAC  00BE               	movwf	?_scale+2
  4901  0FAD  0008               	return
  4902  0FAE                     PL12:	
  4903  0FAE  082D               	movf	?___ftmul,w
  4904  0FAF  00C3               	movwf	_scale$2868
  4905  0FB0  082E               	movf	?___ftmul+1,w
  4906  0FB1  00C4               	movwf	_scale$2868+1
  4907  0FB2  082F               	movf	?___ftmul+2,w
  4908  0FB3  00C5               	movwf	_scale$2868+2
  4909  0FB4  300A               	movlw	10
  4910  0FB5  00F0               	movwf	?___awmod
  4911  0FB6  01F1               	clrf	?___awmod+1
  4912  0FB7  0846               	movf	scale@scl,w
  4913  0FB8  00F2               	movwf	?___awmod+2
  4914  0FB9  01F3               	clrf	?___awmod+3
  4915  0FBA  0008               	return
  4916  0FBB                     PL13:	
  4917  0FBB  0870               	movf	?___awmod,w
  4918  0FBC  00BF               	movwf	??_scale
  4919  0FBD  0871               	movf	?___awmod+1,w
  4920  0FBE  00C0               	movwf	??_scale+1
  4921  0FBF  083F               	movf	??_scale,w
  4922  0FC0  073F               	addwf	??_scale,w
  4923  0FC1  073F               	addwf	??_scale,w
  4924  0FC2  0008               	return
  4925  0FC3                     PL14:	
  4926  0FC3  0876               	movf	?___awdiv,w
  4927  0FC4  00C1               	movwf	??_scale+2
  4928  0FC5  0877               	movf	?___awdiv+1,w
  4929  0FC6  00C2               	movwf	??_scale+3
  4930  0FC7  0841               	movf	??_scale+2,w
  4931  0FC8  0741               	addwf	??_scale+2,w
  4932  0FC9  0741               	addwf	??_scale+2,w
  4933  0FCA  0008               	return
  4934  0FCB                     PL16:	
  4935  0FCB  00F6               	movwf	?___awdiv
  4936  0FCC  01F7               	clrf	?___awdiv+1
  4937  0FCD  0846               	movf	scale@scl,w
  4938  0FCE  00F2               	movwf	?___awmod+2
  4939  0FCF  01F3               	clrf	?___awmod+3
  4940  0FD0  1BF2               	btfsc	?___awmod+2,7
  4941  0FD1  03F3               	decf	?___awmod+3,f
  4942  0FD2  3064               	movlw	100
  4943  0FD3  00F0               	movwf	?___awmod
  4944  0FD4  01F1               	clrf	?___awmod+1
  4945  0FD5  0008               	return
  4946  0FD6                     PL21:	
  4947  0FD6  07B7               	addwf	___ftmul@f3_as_product,f
  4948  0FD7  0831               	movf	___ftmul@f2+1,w
  4949  0FD8  1103               	clrz
  4950  0FD9  1803               	skipnc
  4951  0FDA  0A31               	incf	___ftmul@f2+1,w
  4952  0FDB  1D03               	btfss	3,2
  4953  0FDC  07B8               	addwf	___ftmul@f3_as_product+1,f
  4954  0FDD  0832               	movf	___ftmul@f2+2,w
  4955  0FDE  1103               	clrz
  4956  0FDF  0008               	return
  4957  0FE0                     PL26:	
  4958  0FE0  00AF               	movwf	?___ftmul+2
  4959  0FE1  3064               	movlw	100
  4960  0FE2  00F6               	movwf	?___awdiv
  4961  0FE3  01F7               	clrf	?___awdiv+1
  4962  0FE4  0846               	movf	scale@scl,w
  4963  0FE5  00F8               	movwf	?___awdiv+2
  4964  0FE6  01F9               	clrf	?___awdiv+3
  4965  0FE7  0008               	return
  4966  0FE8                     PL28:	
  4967  0FE8  00AF               	movwf	?___ftmul+2
  4968  0FE9  300A               	movlw	10
  4969  0FEA  00F6               	movwf	?___awdiv
  4970  0FEB  01F7               	clrf	?___awdiv+1
  4971  0FEC  0846               	movf	scale@scl,w
  4972  0FED  00F8               	movwf	?___awdiv+2
  4973  0FEE  01F9               	clrf	?___awdiv+3
  4974  0FEF  0008               	return
  4975  0FF0                     PL29:	
  4976  0FF0  00AF               	movwf	?___ftmul+2
  4977  0FF1  0843               	movf	_scale$2868,w
  4978  0FF2  00B0               	movwf	?___ftmul+3
  4979  0FF3  0844               	movf	_scale$2868+1,w
  4980  0FF4  00B1               	movwf	?___ftmul+4
  4981  0FF5  0845               	movf	_scale$2868+2,w
  4982  0FF6  00B2               	movwf	?___ftmul+5
  4983  0FF7  0008               	return
  4984  0FF8                     PL31:	
  4985  0FF8  0876               	movf	?___awdiv,w
  4986  0FF9  00BF               	movwf	??_scale
  4987  0FFA  0877               	movf	?___awdiv+1,w
  4988  0FFB  00C0               	movwf	??_scale+1
  4989  0FFC  083F               	movf	??_scale,w
  4990  0FFD  073F               	addwf	??_scale,w
  4991  0FFE  073F               	addwf	??_scale,w
  4992  0FFF  0008               	return
  4993                           
  4994                           	psect	text564
  4995  08B7                     __ptext564:	
  4996 ;; =============== function _scale ends ============
  4997                           
  4998                           
  4999 ;; *************** function _fround *****************
  5000 ;; Defined at:
  5001 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  5002 ;; Parameters:    Size  Location     Type
  5003 ;;  prec            1    wreg     unsigned char 
  5004 ;; Auto vars:     Size  Location     Type
  5005 ;;  prec            1   49[BANK0 ] unsigned char 
  5006 ;; Return value:  Size  Location     Type
  5007 ;;                  3   40[BANK0 ] unsigned char 
  5008 ;; Registers used:
  5009 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5010 ;; Tracked objects:
  5011 ;;		On entry : 60/20
  5012 ;;		On exit  : 60/0
  5013 ;;		Unchanged: FFF9F/0
  5014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5015 ;;      Params:         0       3       0       0       0
  5016 ;;      Locals:         0       7       0       0       0
  5017 ;;      Temps:          0       0       0       0       0
  5018 ;;      Totals:         0      10       0       0       0
  5019 ;;Total ram usage:       10 bytes
  5020 ;; Hardware stack levels used:    1
  5021 ;; Hardware stack levels required when called:    2
  5022 ;; This function calls:
  5023 ;;		___lbmod
  5024 ;;		___bmul
  5025 ;;		___lbdiv
  5026 ;;		___ftmul
  5027 ;; This function is called by:
  5028 ;;		_sprintf
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031  08B7                     _fround:	
  5032                           
  5033                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5034                           ;fround@prec stored from wreg
  5035  08B7  1283               	bcf	3,5	;RP0=0, select bank0
  5036  08B8  00D1               	movwf	fround@prec
  5037  08B9  306E               	movlw	110
  5038  08BA  0251               	subwf	fround@prec,w
  5039  08BB  1C03               	skipc
  5040  08BC  2942               	goto	l5495
  5041  08BD  3003               	movlw	3
  5042  08BE  00F9               	movwf	?___bmul
  5043  08BF  300A               	movlw	10
  5044  08C0  00F5               	movwf	?___lbdiv
  5045  08C1  3064               	movlw	100
  5046  08C2  00F0               	movwf	?___lbmod
  5047  08C3  0851               	movf	fround@prec,w
  5048  08C4  21D7  120A  158A   	fcall	___lbmod
  5049  08C7  21BC               	fcall	___lbdiv
  5050  08C8  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  5051  08CD  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5052  08CE  0084               	movwf	4
  5053  08CF  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5054  08D4  00AD               	movwf	?___ftmul
  5055  08D5  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5056  08DA  00AE               	movwf	?___ftmul+1
  5057  08DB  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5058  08E0  00AF               	movwf	?___ftmul+2
  5059  08E1  3003               	movlw	3
  5060  08E2  00F9               	movwf	?___bmul
  5061  08E3  3064               	movlw	100
  5062  08E4  00F5               	movwf	?___lbdiv
  5063  08E5  0851               	movf	fround@prec,w
  5064  08E6  21BC               	fcall	___lbdiv
  5065  08E7  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  5066  08EC  3E37               	addlw	low ((__npowers_-__stringbase+54))
  5067  08ED  0084               	movwf	4
  5068  08EE  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5069  08F3  00B0               	movwf	?___ftmul+3
  5070  08F4  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5071  08F9  00B1               	movwf	?___ftmul+4
  5072  08FA  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5073  08FF  00B2               	movwf	?___ftmul+5
  5074  0900  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  5075  0905  2202  120A  158A   	fcall	PL36	;call to abstracted procedure
  5076  0908  3003               	movlw	3
  5077  0909  00F9               	movwf	?___bmul
  5078  090A  300A               	movlw	10
  5079  090B  00F0               	movwf	?___lbmod
  5080  090C  0851               	movf	fround@prec,w
  5081  090D  21D7               	fcall	___lbmod
  5082  090E  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  5083  0913  3E01               	addlw	low (__npowers_-__stringbase)
  5084  0914  0084               	movwf	4
  5085  0915  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5086  091A  00AD               	movwf	?___ftmul
  5087  091B  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5088  0920  00AE               	movwf	?___ftmul+1
  5089  0921  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5090  0926  21FA               	fcall	PL30	;call to abstracted procedure
  5091  0927  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  5092  092C  082D               	movf	?___ftmul,w
  5093  092D  00CB               	movwf	_fround$2867
  5094  092E  082E               	movf	?___ftmul+1,w
  5095  092F  00CC               	movwf	_fround$2867+1
  5096  0930  082F               	movf	?___ftmul+2,w
  5097  0931  00CD               	movwf	_fround$2867+2
  5098  0932  303F               	movlw	63
  5099  0933  01AD               	clrf	?___ftmul
  5100  0934  01AE               	clrf	?___ftmul+1
  5101  0935  00AF               	movwf	?___ftmul+2
  5102  0936  084B               	movf	_fround$2867,w
  5103  0937  00B0               	movwf	?___ftmul+3
  5104  0938  084C               	movf	_fround$2867+1,w
  5105  0939  00B1               	movwf	?___ftmul+4
  5106  093A  084D               	movf	_fround$2867+2,w
  5107  093B  00B2               	movwf	?___ftmul+5
  5108  093C  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  5109  0941  29F3               	ljmp	PL20	;call to abstracted procedure
  5110  0942                     l5495:	
  5111  0942  300B               	movlw	11
  5112  0943  0251               	subwf	fround@prec,w
  5113  0944  1C03               	skipc
  5114  0945  2996               	goto	l5503
  5115  0946  3003               	movlw	3
  5116  0947  00F9               	movwf	?___bmul
  5117  0948  300A               	movlw	10
  5118  0949  00F0               	movwf	?___lbmod
  5119  094A  0851               	movf	fround@prec,w
  5120  094B  21D7               	fcall	___lbmod
  5121  094C  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  5122  0951  3E01               	addlw	low (__npowers_-__stringbase)
  5123  0952  0084               	movwf	4
  5124  0953  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5125  0958  00AD               	movwf	?___ftmul
  5126  0959  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5127  095E  00AE               	movwf	?___ftmul+1
  5128  095F  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5129  0964  00AF               	movwf	?___ftmul+2
  5130  0965  3003               	movlw	3
  5131  0966  00F9               	movwf	?___bmul
  5132  0967  300A               	movlw	10
  5133  0968  00F5               	movwf	?___lbdiv
  5134  0969  0851               	movf	fround@prec,w
  5135  096A  21BC               	fcall	___lbdiv
  5136  096B  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  5137  0970  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5138  0971  0084               	movwf	4
  5139  0972  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5140  0977  00B0               	movwf	?___ftmul+3
  5141  0978  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5142  097D  00B1               	movwf	?___ftmul+4
  5143  097E  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5144  0983  00B2               	movwf	?___ftmul+5
  5145  0984  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  5146  0989  2202  120A  158A   	fcall	PL36	;call to abstracted procedure
  5147  098C  303F               	movlw	63
  5148  098D  01AD               	clrf	?___ftmul
  5149  098E  01AE               	clrf	?___ftmul+1
  5150  098F  21FA               	fcall	PL30	;call to abstracted procedure
  5151  0990  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  5152  0995  29F3               	ljmp	PL20	;call to abstracted procedure
  5153  0996                     l5503:	
  5154  0996  303F               	movlw	63
  5155  0997  01AD               	clrf	?___ftmul
  5156  0998  01AE               	clrf	?___ftmul+1
  5157  0999  00AF               	movwf	?___ftmul+2
  5158  099A  3003               	movlw	3
  5159  099B  00F9               	movwf	?___bmul
  5160  099C  0851               	movf	fround@prec,w
  5161  099D  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  5162  09A2  3E01               	addlw	low (__npowers_-__stringbase)
  5163  09A3  0084               	movwf	4
  5164  09A4  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5165  09A9  00B0               	movwf	?___ftmul+3
  5166  09AA  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5167  09AF  00B1               	movwf	?___ftmul+4
  5168  09B0  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5169  09B5  00B2               	movwf	?___ftmul+5
  5170  09B6  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  5171  09BB  29F3               	ljmp	PL20	;call to abstracted procedure
  5172  09BC                     __end_of_fround:	
  5173  09BC                     __ptext581:	
  5174 ;; =============== function ___lbmod ends ============
  5175                           
  5176                           
  5177 ;; *************** function ___lbdiv *****************
  5178 ;; Defined at:
  5179 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lbdiv.c"
  5180 ;; Parameters:    Size  Location     Type
  5181 ;;  dividend        1    wreg     unsigned char 
  5182 ;;  divisor         1    5[COMMON] unsigned char 
  5183 ;; Auto vars:     Size  Location     Type
  5184 ;;  dividend        1    6[COMMON] unsigned char 
  5185 ;;  quotient        1    8[COMMON] unsigned char 
  5186 ;;  counter         1    7[COMMON] unsigned char 
  5187 ;; Return value:  Size  Location     Type
  5188 ;;                  1    wreg      unsigned char 
  5189 ;; Registers used:
  5190 ;;		wreg, status,2, status,0
  5191 ;; Tracked objects:
  5192 ;;		On entry : 60/0
  5193 ;;		On exit  : 60/0
  5194 ;;		Unchanged: FFF9F/0
  5195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5196 ;;      Params:         1       0       0       0       0
  5197 ;;      Locals:         3       0       0       0       0
  5198 ;;      Temps:          0       0       0       0       0
  5199 ;;      Totals:         4       0       0       0       0
  5200 ;;Total ram usage:        4 bytes
  5201 ;; Hardware stack levels used:    1
  5202 ;; This function calls:
  5203 ;;		Nothing
  5204 ;; This function is called by:
  5205 ;;		_fround
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208  09BC                     ___lbdiv:	
  5209                           
  5210                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  5211                           ;___lbdiv@dividend stored from wreg
  5212  09BC  00F6               	movwf	___lbdiv@dividend
  5213  09BD  01F8               	clrf	___lbdiv@quotient
  5214  09BE  0875               	movf	___lbdiv@divisor,w
  5215  09BF  1903               	btfsc	3,2
  5216  09C0  29D5               	goto	l5047
  5217  09C1  01F7               	clrf	___lbdiv@counter
  5218  09C2                     l5033:	
  5219  09C2  0AF7               	incf	___lbdiv@counter,f
  5220  09C3  1BF5               	btfsc	___lbdiv@divisor,7
  5221  09C4  29C8               	goto	l2271
  5222  09C5  1003               	clrc
  5223  09C6  0DF5               	rlf	___lbdiv@divisor,f
  5224  09C7  29C2               	goto	l5033
  5225  09C8                     l2271:	
  5226  09C8  1003               	clrc
  5227  09C9  0DF8               	rlf	___lbdiv@quotient,f
  5228  09CA  0875               	movf	___lbdiv@divisor,w
  5229  09CB  0276               	subwf	___lbdiv@dividend,w
  5230  09CC  1C03               	skipc
  5231  09CD  29D2               	goto	L17
  5232  09CE  0875               	movf	___lbdiv@divisor,w
  5233  09CF  02F6               	subwf	___lbdiv@dividend,f
  5234  09D0  1478               	bsf	___lbdiv@quotient,0
  5235  09D1  1003               	clrc
  5236  09D2                     L17:	
  5237  09D2  0CF5               	rrf	___lbdiv@divisor,f
  5238  09D3  0BF7               	decfsz	___lbdiv@counter,f
  5239  09D4  29C8               	goto	l2271
  5240  09D5                     l5047:	
  5241  09D5  0878               	movf	___lbdiv@quotient,w
  5242  09D6  0008               	return
  5243  09D7                     __end_of___lbdiv:	
  5244  09D7                     __ptext580:	
  5245 ;; =============== function ___ftpack ends ============
  5246                           
  5247                           
  5248 ;; *************** function ___lbmod *****************
  5249 ;; Defined at:
  5250 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lbmod.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;  dividend        1    wreg     unsigned char 
  5253 ;;  divisor         1    0[COMMON] unsigned char 
  5254 ;; Auto vars:     Size  Location     Type
  5255 ;;  dividend        1    2[COMMON] unsigned char 
  5256 ;;  rem             1    4[COMMON] unsigned char 
  5257 ;;  counter         1    3[COMMON] unsigned char 
  5258 ;; Return value:  Size  Location     Type
  5259 ;;                  1    wreg      unsigned char 
  5260 ;; Registers used:
  5261 ;;		wreg, status,2, status,0
  5262 ;; Tracked objects:
  5263 ;;		On entry : 60/0
  5264 ;;		On exit  : 60/0
  5265 ;;		Unchanged: FFF9F/0
  5266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5267 ;;      Params:         1       0       0       0       0
  5268 ;;      Locals:         3       0       0       0       0
  5269 ;;      Temps:          1       0       0       0       0
  5270 ;;      Totals:         5       0       0       0       0
  5271 ;;Total ram usage:        5 bytes
  5272 ;; Hardware stack levels used:    1
  5273 ;; This function calls:
  5274 ;;		Nothing
  5275 ;; This function is called by:
  5276 ;;		_fround
  5277 ;; This function uses a non-reentrant model
  5278 ;;
  5279  09D7                     ___lbmod:	
  5280                           
  5281                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  5282                           ;___lbmod@dividend stored from wreg
  5283  09D7  00F2               	movwf	___lbmod@dividend
  5284  09D8  3008               	movlw	8
  5285  09D9  00F3               	movwf	___lbmod@counter
  5286  09DA  01F4               	clrf	___lbmod@rem
  5287  09DB                     l5055:	
  5288  09DB  0872               	movf	___lbmod@dividend,w
  5289  09DC  00F1               	movwf	??___lbmod
  5290  09DD  3007               	movlw	7
  5291  09DE  1003               	clrc
  5292  09DF                     L16:	
  5293  09DF  0CF1               	rrf	??___lbmod,f
  5294  09E0  3EFF               	addlw	-1
  5295  09E1  1003               	clrc
  5296  09E2  1D03               	skipz
  5297  09E3  29DF               	goto	L16
  5298  09E4  0D74               	rlf	___lbmod@rem,w
  5299  09E5  0471               	iorwf	??___lbmod,w
  5300  09E6  00F4               	movwf	___lbmod@rem
  5301  09E7  1003               	clrc
  5302  09E8  0DF2               	rlf	___lbmod@dividend,f
  5303  09E9  0870               	movf	___lbmod@divisor,w
  5304  09EA  0274               	subwf	___lbmod@rem,w
  5305  09EB  1C03               	skipc
  5306  09EC  29EF               	goto	l5063
  5307  09ED  0870               	movf	___lbmod@divisor,w
  5308  09EE  02F4               	subwf	___lbmod@rem,f
  5309  09EF                     l5063:	
  5310  09EF  0BF3               	decfsz	___lbmod@counter,f
  5311  09F0  29DB               	goto	l5055
  5312  09F1  0874               	movf	___lbmod@rem,w
  5313  09F2  0008               	return
  5314  09F3                     __end_of___lbmod:	
  5315  09F3                     PL20:	
  5316  09F3  082D               	movf	?___ftmul,w
  5317  09F4  00C8               	movwf	?_fround
  5318  09F5  082E               	movf	?___ftmul+1,w
  5319  09F6  00C9               	movwf	?_fround+1
  5320  09F7  082F               	movf	?___ftmul+2,w
  5321  09F8  00CA               	movwf	?_fround+2
  5322  09F9  0008               	return
  5323  09FA                     PL30:	
  5324  09FA  00AF               	movwf	?___ftmul+2
  5325  09FB  084E               	movf	_fround$2866,w
  5326  09FC  00B0               	movwf	?___ftmul+3
  5327  09FD  084F               	movf	_fround$2866+1,w
  5328  09FE  00B1               	movwf	?___ftmul+4
  5329  09FF  0850               	movf	_fround$2866+2,w
  5330  0A00  00B2               	movwf	?___ftmul+5
  5331  0A01  0008               	return
  5332  0A02                     PL36:	
  5333  0A02  082D               	movf	?___ftmul,w
  5334  0A03  00CE               	movwf	_fround$2866
  5335  0A04  082E               	movf	?___ftmul+1,w
  5336  0A05  00CF               	movwf	_fround$2866+1
  5337  0A06  082F               	movf	?___ftmul+2,w
  5338  0A07  00D0               	movwf	_fround$2866+2
  5339  0A08  0008               	return
  5340                           
  5341                           	psect	text566
  5342  0A09                     __ptext566:	
  5343 ;; =============== function _lcd_write ends ============
  5344                           
  5345                           
  5346 ;; *************** function _PWM *****************
  5347 ;; Defined at:
  5348 ;;		line 149 in file "C:\Users\Jorge\OneDrive\Escritorio\Entregar\LCD_PWM\PWM\PWM.c"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;		None
  5351 ;; Auto vars:     Size  Location     Type
  5352 ;;		None
  5353 ;; Return value:  Size  Location     Type
  5354 ;;		None               void
  5355 ;; Registers used:
  5356 ;;		wreg, status,2, status,0, pclath, cstack
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/20
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: FFF9F/0
  5361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5362 ;;      Params:         0       0       0       0       0
  5363 ;;      Locals:         0       0       0       0       0
  5364 ;;      Temps:          2       0       0       0       0
  5365 ;;      Totals:         2       0       0       0       0
  5366 ;;Total ram usage:        2 bytes
  5367 ;; Hardware stack levels used:    1
  5368 ;; Hardware stack levels required when called:    2
  5369 ;; This function calls:
  5370 ;;		_pause
  5371 ;; This function is called by:
  5372 ;;		_main
  5373 ;; This function uses a non-reentrant model
  5374 ;;
  5375  0A09                     _PWM:	
  5376  0A09  23FF               	call	PL39	;select bank 0
  5377                           
  5378                           ;PWM.c: 150: ADRESH=pwm1>>2;
  5379                           
  5380                           ; Regs used in _PWM: [wreg+status,2+status,0+pclath+cstack]
  5381  0A0A  0865               	movf	_pwm1+1,w
  5382  0A0B  00F5               	movwf	??_PWM+1
  5383  0A0C  0864               	movf	_pwm1,w
  5384                           
  5385                           ;PWM.c: 151: ADRESL=pwm1<<8;
  5386                           
  5387                           ;PWM.c: 152: CCPR1L=ADRESH;
  5388  0A0D  23D7  120A  158A   	fcall	PL8	;call to abstracted procedure
  5389  0A10  0095               	movwf	21	;volatile
  5390                           
  5391                           ;PWM.c: 153: CCP1CON=0X0C|(ADRESL>>2);
  5392  0A11  23E5  120A  158A   	fcall	PL15	;call to abstracted procedure
  5393  0A14  0097               	movwf	23	;volatile
  5394                           
  5395                           ;PWM.c: 154: pause(1);
  5396  0A15  01F0               	clrf	?_pause
  5397  0A16  0AF0               	incf	?_pause,f
  5398  0A17  01F1               	clrf	?_pause+1
  5399  0A18  2387  120A  158A   	fcall	_pause
  5400  0A1B  23FF               	call	PL39	;select bank 0
  5401                           
  5402                           ;PWM.c: 156: ADRESH=pwm2>>2;
  5403  0A1C  0867               	movf	_pwm2+1,w
  5404  0A1D  00F5               	movwf	??_PWM+1
  5405  0A1E  0866               	movf	_pwm2,w
  5406                           
  5407                           ;PWM.c: 157: ADRESL=pwm2<<8;
  5408                           
  5409                           ;PWM.c: 158: CCPR2L=ADRESH;
  5410  0A1F  23D7  120A  158A   	fcall	PL8	;call to abstracted procedure
  5411  0A22  009B               	movwf	27	;volatile
  5412                           
  5413                           ;PWM.c: 159: CCP2CON=0X0C|(ADRESL>>2);
  5414  0A23  23E5  120A  158A   	fcall	PL15	;call to abstracted procedure
  5415  0A26  009D               	movwf	29	;volatile
  5416                           
  5417                           ;PWM.c: 160: pause(1);
  5418  0A27  01F0               	clrf	?_pause
  5419  0A28  0AF0               	incf	?_pause,f
  5420  0A29  01F1               	clrf	?_pause+1
  5421  0A2A  2B87               	ljmp	l5289
  5422  0A2B                     __end_of_PWM:	
  5423  0A2B                     __ptext557:	
  5424 ;; =============== function _ADC ends ============
  5425                           
  5426                           
  5427 ;; *************** function _lcd_init *****************
  5428 ;; Defined at:
  5429 ;;		line 195 in file "C:\Users\Jorge\OneDrive\Escritorio\Entregar\LCD_PWM\PWM\PWM.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;		None
  5432 ;; Auto vars:     Size  Location     Type
  5433 ;;  init_value      1    0        unsigned char 
  5434 ;; Return value:  Size  Location     Type
  5435 ;;		None               void
  5436 ;; Registers used:
  5437 ;;		wreg, status,2, status,0, pclath, cstack
  5438 ;; Tracked objects:
  5439 ;;		On entry : 17F/0
  5440 ;;		On exit  : 17F/0
  5441 ;;		Unchanged: FFE80/0
  5442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5443 ;;      Params:         0       0       0       0       0
  5444 ;;      Locals:         1       0       0       0       0
  5445 ;;      Temps:          0       0       0       0       0
  5446 ;;      Totals:         1       0       0       0       0
  5447 ;;Total ram usage:        1 bytes
  5448 ;; Hardware stack levels used:    1
  5449 ;; Hardware stack levels required when called:    4
  5450 ;; This function calls:
  5451 ;;		_pause
  5452 ;;		_lcd_write
  5453 ;;		_lcd_clear
  5454 ;; This function is called by:
  5455 ;;		_main
  5456 ;; This function uses a non-reentrant model
  5457 ;;
  5458  0A2B                     _lcd_init:	
  5459  0A2B  300F               	movlw	15
  5460                           
  5461                           ;PWM.c: 200: RC3 = 0;
  5462                           
  5463                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  5464  0A2C  1187               	bcf	7,3
  5465                           
  5466                           ;PWM.c: 201: RC0 = 0;
  5467  0A2D  1007               	bcf	7,0
  5468                           
  5469                           ;PWM.c: 202: RC4 = 0;
  5470  0A2E  1207               	bcf	7,4
  5471                           
  5472                           ;PWM.c: 204: pause(15);
  5473  0A2F  00F0               	movwf	?_pause
  5474  0A30  01F1               	clrf	?_pause+1
  5475  0A31  2387  120A  158A   	fcall	_pause
  5476                           
  5477                           ;PWM.c: 205: PORTD = init_value;
  5478  0A34  3003               	movlw	3
  5479  0A35  23FF               	call	PL39	;select bank 0
  5480  0A36  0088               	movwf	8	;volatile
  5481  0A37  300A               	movlw	10
  5482                           
  5483                           ;PWM.c: 206: ((RC0 = 1),(RC0=0));
  5484  0A38  1407               	bsf	7,0
  5485  0A39  1007               	bcf	7,0
  5486                           
  5487                           ;PWM.c: 207: pause(10);
  5488  0A3A  00F0               	movwf	?_pause
  5489  0A3B  01F1               	clrf	?_pause+1
  5490  0A3C  2387  120A  158A   	fcall	_pause
  5491                           
  5492                           ;PWM.c: 208: ((RC0 = 1),(RC0=0));
  5493                           
  5494                           ;PWM.c: 209: pause(10);
  5495  0A3F  23F0  120A  158A   	fcall	PL27	;call to abstracted procedure
  5496  0A42  2387  120A  158A   	fcall	_pause
  5497                           
  5498                           ;PWM.c: 210: ((RC0 = 1),(RC0=0));
  5499                           
  5500                           ;PWM.c: 211: pause(10);
  5501  0A45  23F0  120A  158A   	fcall	PL27	;call to abstracted procedure
  5502  0A48  2387  120A  158A   	fcall	_pause
  5503                           
  5504                           ;PWM.c: 212: PORTD= 2;
  5505  0A4B  3002               	movlw	2
  5506  0A4C  23FF               	call	PL39	;select bank 0
  5507  0A4D  0088               	movwf	8	;volatile
  5508  0A4E  3028               	movlw	40
  5509                           
  5510                           ;PWM.c: 213: ((RC0 = 1),(RC0=0));
  5511  0A4F  1407               	bsf	7,0
  5512  0A50  1007               	bcf	7,0
  5513                           
  5514                           ;PWM.c: 215: lcd_write(0x28);
  5515  0A51  2398  120A  158A   	fcall	_lcd_write
  5516                           
  5517                           ;PWM.c: 216: lcd_write(0x0C);
  5518  0A54  300C               	movlw	12
  5519  0A55  2398  120A  158A   	fcall	_lcd_write
  5520                           
  5521                           ;PWM.c: 217: lcd_write(0x0F);
  5522  0A58  300F               	movlw	15
  5523  0A59  2398  120A  158A   	fcall	_lcd_write
  5524                           
  5525                           ;PWM.c: 218: lcd_clear();
  5526  0A5C  23B8  120A  158A   	fcall	_lcd_clear
  5527                           
  5528                           ;PWM.c: 219: lcd_write(0x06);
  5529  0A5F  3006               	movlw	6
  5530  0A60  2B98               	ljmp	_lcd_write
  5531  0A61                     __end_of_lcd_init:	
  5532  0A61                     __ptext556:	
  5533 ;; =============== function _main ends ============
  5534                           
  5535                           
  5536 ;; *************** function _ADC *****************
  5537 ;; Defined at:
  5538 ;;		line 114 in file "C:\Users\Jorge\OneDrive\Escritorio\Entregar\LCD_PWM\PWM\PWM.c"
  5539 ;; Parameters:    Size  Location     Type
  5540 ;;		None
  5541 ;; Auto vars:     Size  Location     Type
  5542 ;;		None
  5543 ;; Return value:  Size  Location     Type
  5544 ;;		None               void
  5545 ;; Registers used:
  5546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5547 ;; Tracked objects:
  5548 ;;		On entry : 0/20
  5549 ;;		On exit  : 0/0
  5550 ;;		Unchanged: FFE00/0
  5551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5552 ;;      Params:         0       0       0       0       0
  5553 ;;      Locals:         0       0       0       0       0
  5554 ;;      Temps:          0       1       0       0       0
  5555 ;;      Totals:         0       1       0       0       0
  5556 ;;Total ram usage:        1 bytes
  5557 ;; Hardware stack levels used:    1
  5558 ;; Hardware stack levels required when called:    4
  5559 ;; This function calls:
  5560 ;;		___awtoft
  5561 ;;		___fttol
  5562 ;;		_sprintf
  5563 ;;		_lcd_goto
  5564 ;;		_lcd_puts
  5565 ;;		___ftmul
  5566 ;;		_pause
  5567 ;; This function is called by:
  5568 ;;		_main
  5569 ;; This function uses a non-reentrant model
  5570 ;;
  5571  0A61                     _ADC:	
  5572                           
  5573                           ;PWM.c: 115: ADCON0=0xD5;
  5574                           
  5575                           ; Regs used in _ADC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5576  0A61  30D5               	movlw	213
  5577  0A62  23FF               	call	PL39	;select bank 0
  5578  0A63  009F               	movwf	31	;volatile
  5579                           
  5580                           ;PWM.c: 116: GO_DONE=1;
  5581  0A64  149F               	bsf	31,1
  5582  0A65                     l1082:	
  5583                           ;PWM.c: 117: while(GO_DONE);
  5584                           
  5585  0A65  189F               	btfsc	31,1
  5586  0A66  2A65               	goto	l1082
  5587                           
  5588                           ;PWM.c: 118: vadc1=(ADRESH<<2)|(ADRESL>>6);
  5589  0A67  081E               	movf	30,w	;volatile
  5590  0A68  23C2  120A  158A   	fcall	PL4	;call to abstracted procedure
  5591  0A6B  236A               	fcall	___awtoft
  5592  0A6C  0878               	movf	?___awtoft,w
  5593  0A6D  00DE               	movwf	_vadc1
  5594  0A6E  0879               	movf	?___awtoft+1,w
  5595  0A6F  00DF               	movwf	_vadc1+1
  5596  0A70  087A               	movf	?___awtoft+2,w
  5597  0A71  00E0               	movwf	_vadc1+2
  5598                           
  5599                           ;PWM.c: 119: pwm1=vadc1;
  5600  0A72  085E               	movf	_vadc1,w
  5601  0A73  00A0               	movwf	?___fttol
  5602  0A74  085F               	movf	_vadc1+1,w
  5603  0A75  00A1               	movwf	?___fttol+1
  5604  0A76  0860               	movf	_vadc1+2,w
  5605  0A77  00A2               	movwf	?___fttol+2
  5606  0A78  120A  118A  2618   	fcall	___fttol
      +       120A  158A         
  5607  0A7D  0821               	movf	?___fttol+1,w
  5608  0A7E  00E5               	movwf	_pwm1+1
  5609  0A7F  0820               	movf	?___fttol,w
  5610  0A80  00E4               	movwf	_pwm1
  5611                           
  5612                           ;PWM.c: 120: sprintf(carac11, "%d",pwm1);
  5613  0A81  308F               	movlw	(STR_1-__stringbase)& (0+255)
  5614  0A82  00D2               	movwf	?_sprintf
  5615  0A83  0865               	movf	_pwm1+1,w
  5616  0A84  00D4               	movwf	?_sprintf+2
  5617  0A85  0864               	movf	_pwm1,w
  5618  0A86  00D3               	movwf	?_sprintf+1
  5619  0A87  30B9               	movlw	_carac11& (0+255)
  5620  0A88  120A  118A  2062   	fcall	_sprintf
      +       120A  158A         
  5621                           
  5622                           ;PWM.c: 121: lcd_goto(0x47);
  5623  0A8D  3047               	movlw	71
  5624  0A8E  2364  120A  158A   	fcall	_lcd_goto
  5625                           
  5626                           ;PWM.c: 122: lcd_puts("PWM1:");
  5627  0A91  3077               	movlw	low (STR_2-__stringbase)
  5628  0A92  00F5               	movwf	?_lcd_puts
  5629  0A93  3080               	movlw	128
  5630  0A94  00F6               	movwf	?_lcd_puts+1
  5631  0A95  2347  120A  158A   	fcall	_lcd_puts
  5632                           
  5633                           ;PWM.c: 123: lcd_puts(carac11);
  5634  0A98  30B9               	movlw	_carac11& (0+255)
  5635  0A99  00F5               	movwf	?_lcd_puts
  5636  0A9A  01F6               	clrf	?_lcd_puts+1
  5637  0A9B  2347  120A  158A   	fcall	_lcd_puts
  5638                           
  5639                           ;PWM.c: 124: vadc1 = vadc1*0.0048875855327468;
  5640  0A9E  23F8               	fcall	PL35	;call to abstracted procedure
  5641  0A9F  085E               	movf	_vadc1,w
  5642  0AA0  00B0               	movwf	?___ftmul+3
  5643  0AA1  085F               	movf	_vadc1+1,w
  5644  0AA2  00B1               	movwf	?___ftmul+4
  5645  0AA3  0860               	movf	_vadc1+2,w
  5646  0AA4  00B2               	movwf	?___ftmul+5
  5647  0AA5  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  5648  0AAA  082D               	movf	?___ftmul,w
  5649  0AAB  00DE               	movwf	_vadc1
  5650  0AAC  082E               	movf	?___ftmul+1,w
  5651  0AAD  00DF               	movwf	_vadc1+1
  5652  0AAE  082F               	movf	?___ftmul+2,w
  5653  0AAF  00E0               	movwf	_vadc1+2
  5654                           
  5655                           ;PWM.c: 125: sprintf(carac1, "%1.3f",vadc1);
  5656  0AB0  3083               	movlw	(STR_3-__stringbase)& (0+255)
  5657  0AB1  00D2               	movwf	?_sprintf
  5658  0AB2  085E               	movf	_vadc1,w
  5659  0AB3  00D3               	movwf	?_sprintf+1
  5660  0AB4  085F               	movf	_vadc1+1,w
  5661  0AB5  00D4               	movwf	?_sprintf+2
  5662  0AB6  0860               	movf	_vadc1+2,w
  5663  0AB7  00D5               	movwf	?_sprintf+3
  5664  0AB8  3068               	movlw	_carac1& (0+255)
  5665  0AB9  120A  118A  2062   	fcall	_sprintf
      +       120A  158A         
  5666                           
  5667                           ;PWM.c: 126: lcd_goto(0x00);
  5668  0ABE  3000               	movlw	0
  5669  0ABF  2364  120A  158A   	fcall	_lcd_goto
  5670                           
  5671                           ;PWM.c: 127: lcd_puts("5:");
  5672  0AC2  3089               	movlw	low (STR_4-__stringbase)
  5673  0AC3  00F5               	movwf	?_lcd_puts
  5674  0AC4  3080               	movlw	128
  5675  0AC5  00F6               	movwf	?_lcd_puts+1
  5676  0AC6  2347  120A  158A   	fcall	_lcd_puts
  5677                           
  5678                           ;PWM.c: 128: lcd_puts(carac1);
  5679  0AC9  3068               	movlw	_carac1& (0+255)
  5680  0ACA  00F5               	movwf	?_lcd_puts
  5681  0ACB  01F6               	clrf	?_lcd_puts+1
  5682  0ACC  2347  120A  158A   	fcall	_lcd_puts
  5683                           
  5684                           ;PWM.c: 129: pause(1);
  5685  0ACF  01F0               	clrf	?_pause
  5686  0AD0  0AF0               	incf	?_pause,f
  5687  0AD1  01F1               	clrf	?_pause+1
  5688  0AD2  2387  120A  158A   	fcall	_pause
  5689                           
  5690                           ;PWM.c: 131: ADCON0=0xD9;
  5691  0AD5  30D9               	movlw	217
  5692  0AD6  23FF               	call	PL39	;select bank 0
  5693  0AD7  009F               	movwf	31	;volatile
  5694                           
  5695                           ;PWM.c: 132: GO_DONE=1;
  5696  0AD8  149F               	bsf	31,1
  5697  0AD9                     l1085:	
  5698                           ;PWM.c: 133: while(GO_DONE);
  5699                           
  5700  0AD9  189F               	btfsc	31,1
  5701  0ADA  2AD9               	goto	l1085
  5702                           
  5703                           ;PWM.c: 134: vadc2=(ADRESH<<2)|(ADRESL>>6);
  5704  0ADB  081E               	movf	30,w	;volatile
  5705  0ADC  23C2  120A  158A   	fcall	PL4	;call to abstracted procedure
  5706  0ADF  236A               	fcall	___awtoft
  5707  0AE0  0878               	movf	?___awtoft,w
  5708  0AE1  00E1               	movwf	_vadc2
  5709  0AE2  0879               	movf	?___awtoft+1,w
  5710  0AE3  00E2               	movwf	_vadc2+1
  5711  0AE4  087A               	movf	?___awtoft+2,w
  5712  0AE5  00E3               	movwf	_vadc2+2
  5713                           
  5714                           ;PWM.c: 135: pwm2=vadc2;
  5715  0AE6  0861               	movf	_vadc2,w
  5716  0AE7  00A0               	movwf	?___fttol
  5717  0AE8  0862               	movf	_vadc2+1,w
  5718  0AE9  00A1               	movwf	?___fttol+1
  5719  0AEA  0863               	movf	_vadc2+2,w
  5720  0AEB  00A2               	movwf	?___fttol+2
  5721  0AEC  120A  118A  2618   	fcall	___fttol
      +       120A  158A         
  5722  0AF1  0821               	movf	?___fttol+1,w
  5723  0AF2  00E7               	movwf	_pwm2+1
  5724  0AF3  0820               	movf	?___fttol,w
  5725  0AF4  00E6               	movwf	_pwm2
  5726                           
  5727                           ;PWM.c: 136: sprintf(carac22, "%d",pwm2);
  5728  0AF5  308F               	movlw	(STR_1-__stringbase)& (0+255)
  5729  0AF6  00D2               	movwf	?_sprintf
  5730  0AF7  0867               	movf	_pwm2+1,w
  5731  0AF8  00D4               	movwf	?_sprintf+2
  5732  0AF9  0866               	movf	_pwm2,w
  5733  0AFA  00D3               	movwf	?_sprintf+1
  5734  0AFB  30C3               	movlw	_carac22& (0+255)
  5735  0AFC  120A  118A  2062   	fcall	_sprintf
      +       120A  158A         
  5736                           
  5737                           ;PWM.c: 137: lcd_goto(0x07);
  5738  0B01  3007               	movlw	7
  5739  0B02  2364  120A  158A   	fcall	_lcd_goto
  5740                           
  5741                           ;PWM.c: 138: lcd_puts("PWM2:");
  5742  0B05  307D               	movlw	low (STR_6-__stringbase)
  5743  0B06  00F5               	movwf	?_lcd_puts
  5744  0B07  3080               	movlw	128
  5745  0B08  00F6               	movwf	?_lcd_puts+1
  5746  0B09  2347  120A  158A   	fcall	_lcd_puts
  5747                           
  5748                           ;PWM.c: 139: lcd_puts(carac22);
  5749  0B0C  30C3               	movlw	_carac22& (0+255)
  5750  0B0D  00F5               	movwf	?_lcd_puts
  5751  0B0E  01F6               	clrf	?_lcd_puts+1
  5752  0B0F  2347  120A  158A   	fcall	_lcd_puts
  5753                           
  5754                           ;PWM.c: 140: vadc2 = vadc2*0.0048875855327468;
  5755  0B12  23F8               	fcall	PL35	;call to abstracted procedure
  5756  0B13  0861               	movf	_vadc2,w
  5757  0B14  00B0               	movwf	?___ftmul+3
  5758  0B15  0862               	movf	_vadc2+1,w
  5759  0B16  00B1               	movwf	?___ftmul+4
  5760  0B17  0863               	movf	_vadc2+2,w
  5761  0B18  00B2               	movwf	?___ftmul+5
  5762  0B19  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  5763  0B1E  082D               	movf	?___ftmul,w
  5764  0B1F  00E1               	movwf	_vadc2
  5765  0B20  082E               	movf	?___ftmul+1,w
  5766  0B21  00E2               	movwf	_vadc2+1
  5767  0B22  082F               	movf	?___ftmul+2,w
  5768  0B23  00E3               	movwf	_vadc2+2
  5769                           
  5770                           ;PWM.c: 141: sprintf(carac2, "%1.3f",vadc2);
  5771  0B24  3083               	movlw	(STR_3-__stringbase)& (0+255)
  5772  0B25  00D2               	movwf	?_sprintf
  5773  0B26  0861               	movf	_vadc2,w
  5774  0B27  00D3               	movwf	?_sprintf+1
  5775  0B28  0862               	movf	_vadc2+1,w
  5776  0B29  00D4               	movwf	?_sprintf+2
  5777  0B2A  0863               	movf	_vadc2+2,w
  5778  0B2B  00D5               	movwf	?_sprintf+3
  5779  0B2C  30BE               	movlw	_carac2& (0+255)
  5780  0B2D  120A  118A  2062   	fcall	_sprintf
      +       120A  158A         
  5781                           
  5782                           ;PWM.c: 142: lcd_goto(0x40);
  5783  0B32  3040               	movlw	64
  5784  0B33  2364  120A  158A   	fcall	_lcd_goto
  5785                           
  5786                           ;PWM.c: 143: lcd_puts("6:");
  5787  0B36  308C               	movlw	low (STR_8-__stringbase)
  5788  0B37  00F5               	movwf	?_lcd_puts
  5789  0B38  3080               	movlw	128
  5790  0B39  00F6               	movwf	?_lcd_puts+1
  5791  0B3A  2347  120A  158A   	fcall	_lcd_puts
  5792                           
  5793                           ;PWM.c: 144: lcd_puts(carac2);
  5794  0B3D  30BE               	movlw	_carac2& (0+255)
  5795  0B3E  00F5               	movwf	?_lcd_puts
  5796  0B3F  01F6               	clrf	?_lcd_puts+1
  5797  0B40  2347  120A  158A   	fcall	_lcd_puts
  5798                           
  5799                           ;PWM.c: 145: pause(1);
  5800  0B43  01F0               	clrf	?_pause
  5801  0B44  0AF0               	incf	?_pause,f
  5802  0B45  01F1               	clrf	?_pause+1
  5803  0B46  2B87               	ljmp	l5289
  5804  0B47                     __end_of_ADC:	
  5805  0B47                     __ptext558:	
  5806 ;; =============== function _lcd_init ends ============
  5807                           
  5808                           
  5809 ;; *************** function _lcd_puts *****************
  5810 ;; Defined at:
  5811 ;;		line 179 in file "C:\Users\Jorge\OneDrive\Escritorio\Entregar\LCD_PWM\PWM\PWM.c"
  5812 ;; Parameters:    Size  Location     Type
  5813 ;;  s               2    5[COMMON] PTR const unsigned char 
  5814 ;;		 -> STR_8(3), carac2(5), STR_6(6), carac22(5), 
  5815 ;;		 -> STR_4(3), carac1(5), STR_2(6), carac11(5), 
  5816 ;; Auto vars:     Size  Location     Type
  5817 ;;		None
  5818 ;; Return value:  Size  Location     Type
  5819 ;;		None               void
  5820 ;; Registers used:
  5821 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5822 ;; Tracked objects:
  5823 ;;		On entry : 60/0
  5824 ;;		On exit  : 60/0
  5825 ;;		Unchanged: FFE9F/0
  5826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5827 ;;      Params:         2       0       0       0       0
  5828 ;;      Locals:         0       0       0       0       0
  5829 ;;      Temps:          0       0       0       0       0
  5830 ;;      Totals:         2       0       0       0       0
  5831 ;;Total ram usage:        2 bytes
  5832 ;; Hardware stack levels used:    1
  5833 ;; Hardware stack levels required when called:    3
  5834 ;; This function calls:
  5835 ;;		_lcd_write
  5836 ;; This function is called by:
  5837 ;;		_ADC
  5838 ;; This function uses a non-reentrant model
  5839 ;;
  5840  0B47                     _lcd_puts:	
  5841                           
  5842                           ;PWM.c: 180: RC3 = 1;
  5843                           
  5844                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5845  0B47  1587               	bsf	7,3
  5846  0B48                     l5855:	
  5847                           ;PWM.c: 181: while(*s)
  5848                           
  5849  0B48  0876               	movf	lcd_puts@s+1,w
  5850  0B49  00FF               	movwf	127
  5851  0B4A  0875               	movf	lcd_puts@s,w
  5852  0B4B  0084               	movwf	4
  5853  0B4C  120A  158A  2000   	fcall	stringtab
      +       120A  158A         
  5854  0B51  3800               	iorlw	0
  5855  0B52  1903               	btfsc	3,2
  5856  0B53  0008               	return
  5857                           
  5858                           ;PWM.c: 182: lcd_write(*s++);
  5859  0B54  0876               	movf	lcd_puts@s+1,w
  5860  0B55  00FF               	movwf	127
  5861  0B56  0875               	movf	lcd_puts@s,w
  5862  0B57  0084               	movwf	4
  5863  0B58  120A  158A  2000   	fcall	stringtab
      +       120A  158A         
  5864  0B5D  2398  120A  158A   	fcall	_lcd_write
  5865  0B60  0AF5               	incf	lcd_puts@s,f
  5866  0B61  1903               	skipnz
  5867  0B62  0AF6               	incf	lcd_puts@s+1,f
  5868  0B63  2B48               	goto	l5855
  5869  0B64                     __end_of_lcd_puts:	
  5870  0B64                     __ptext559:	
  5871 ;; =============== function _lcd_puts ends ============
  5872                           
  5873                           
  5874 ;; *************** function _lcd_goto *****************
  5875 ;; Defined at:
  5876 ;;		line 190 in file "C:\Users\Jorge\OneDrive\Escritorio\Entregar\LCD_PWM\PWM\PWM.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;  pos             1    wreg     unsigned char 
  5879 ;; Auto vars:     Size  Location     Type
  5880 ;;  pos             1    5[COMMON] unsigned char 
  5881 ;; Return value:  Size  Location     Type
  5882 ;;		None               void
  5883 ;; Registers used:
  5884 ;;		wreg, status,2, status,0, pclath, cstack
  5885 ;; Tracked objects:
  5886 ;;		On entry : 160/20
  5887 ;;		On exit  : 160/0
  5888 ;;		Unchanged: FFE9F/0
  5889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5890 ;;      Params:         0       0       0       0       0
  5891 ;;      Locals:         1       0       0       0       0
  5892 ;;      Temps:          0       0       0       0       0
  5893 ;;      Totals:         1       0       0       0       0
  5894 ;;Total ram usage:        1 bytes
  5895 ;; Hardware stack levels used:    1
  5896 ;; Hardware stack levels required when called:    3
  5897 ;; This function calls:
  5898 ;;		_lcd_write
  5899 ;; This function is called by:
  5900 ;;		_ADC
  5901 ;; This function uses a non-reentrant model
  5902 ;;
  5903  0B64                     _lcd_goto:	
  5904                           
  5905                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  5906                           ;lcd_goto@pos stored from wreg
  5907  0B64  00F5               	movwf	lcd_goto@pos
  5908                           
  5909                           ;PWM.c: 191: RC3 = 0;
  5910  0B65  1283               	bcf	3,5	;RP0=0, select bank0
  5911  0B66  1187               	bcf	7,3
  5912                           
  5913                           ;PWM.c: 192: lcd_write(0x80 + pos);
  5914  0B67  0875               	movf	lcd_goto@pos,w
  5915  0B68  3E80               	addlw	128
  5916  0B69  2B98               	ljmp	_lcd_write
  5917  0B6A                     __end_of_lcd_goto:	
  5918  0B6A                     __ptext568:	
  5919 ;; =============== function ___lltoft ends ============
  5920                           
  5921                           
  5922 ;; *************** function ___awtoft *****************
  5923 ;; Defined at:
  5924 ;;		line 33 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awtoft.c"
  5925 ;; Parameters:    Size  Location     Type
  5926 ;;  c               2    8[COMMON] int 
  5927 ;; Auto vars:     Size  Location     Type
  5928 ;;  sign            1   11[COMMON] unsigned char 
  5929 ;; Return value:  Size  Location     Type
  5930 ;;                  3    8[COMMON] float 
  5931 ;; Registers used:
  5932 ;;		wreg, status,2, status,0, pclath, cstack
  5933 ;; Tracked objects:
  5934 ;;		On entry : 60/0
  5935 ;;		On exit  : 60/0
  5936 ;;		Unchanged: FFF9F/0
  5937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5938 ;;      Params:         3       0       0       0       0
  5939 ;;      Locals:         1       0       0       0       0
  5940 ;;      Temps:          0       0       0       0       0
  5941 ;;      Totals:         4       0       0       0       0
  5942 ;;Total ram usage:        4 bytes
  5943 ;; Hardware stack levels used:    1
  5944 ;; Hardware stack levels required when called:    1
  5945 ;; This function calls:
  5946 ;;		___ftpack
  5947 ;; This function is called by:
  5948 ;;		_ADC
  5949 ;; This function uses a non-reentrant model
  5950 ;;
  5951  0B6A                     ___awtoft:	
  5952                           
  5953                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5954  0B6A  01FB               	clrf	___awtoft@sign
  5955  0B6B  1FF9               	btfss	___awtoft@c+1,7
  5956  0B6C  2B74               	goto	l5439
  5957  0B6D  09F8               	comf	___awtoft@c,f
  5958  0B6E  09F9               	comf	___awtoft@c+1,f
  5959  0B6F  0AF8               	incf	___awtoft@c,f
  5960  0B70  1903               	skipnz
  5961  0B71  0AF9               	incf	___awtoft@c+1,f
  5962  0B72  01FB               	clrf	___awtoft@sign
  5963  0B73  0AFB               	incf	___awtoft@sign,f
  5964  0B74                     l5439:	
  5965  0B74  0878               	movf	___awtoft@c,w
  5966  0B75  00F0               	movwf	?___ftpack
  5967  0B76  0879               	movf	___awtoft@c+1,w
  5968  0B77  00F1               	movwf	?___ftpack+1
  5969  0B78  308E               	movlw	142
  5970  0B79  01F2               	clrf	?___ftpack+2
  5971  0B7A  00F3               	movwf	?___ftpack+3
  5972  0B7B  087B               	movf	___awtoft@sign,w
  5973  0B7C  00F4               	movwf	?___ftpack+4
  5974  0B7D  120A  158A  2769   	fcall	___ftpack
  5975  0B80  0870               	movf	?___ftpack,w
  5976  0B81  00F8               	movwf	?___awtoft
  5977  0B82  0871               	movf	?___ftpack+1,w
  5978  0B83  00F9               	movwf	?___awtoft+1
  5979  0B84  0872               	movf	?___ftpack+2,w
  5980  0B85  00FA               	movwf	?___awtoft+2
  5981  0B86  0008               	return
  5982  0B87                     __end_of___awtoft:	
  5983  0B87                     __ptext571:	
  5984 ;; =============== function ___ftadd ends ============
  5985                           
  5986                           
  5987 ;; *************** function _pause *****************
  5988 ;; Defined at:
  5989 ;;		line 222 in file "C:\Users\Jorge\OneDrive\Escritorio\Entregar\LCD_PWM\PWM\PWM.c"
  5990 ;; Parameters:    Size  Location     Type
  5991 ;;  usvalue         2    0[COMMON] unsigned short 
  5992 ;; Auto vars:     Size  Location     Type
  5993 ;;  x               2    2[COMMON] unsigned short 
  5994 ;; Return value:  Size  Location     Type
  5995 ;;		None               void
  5996 ;; Registers used:
  5997 ;;		wreg, status,2, status,0, pclath, cstack
  5998 ;; Tracked objects:
  5999 ;;		On entry : 0/0
  6000 ;;		On exit  : 0/0
  6001 ;;		Unchanged: FFF9F/0
  6002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6003 ;;      Params:         2       0       0       0       0
  6004 ;;      Locals:         2       0       0       0       0
  6005 ;;      Temps:          0       0       0       0       0
  6006 ;;      Totals:         4       0       0       0       0
  6007 ;;Total ram usage:        4 bytes
  6008 ;; Hardware stack levels used:    1
  6009 ;; Hardware stack levels required when called:    1
  6010 ;; This function calls:
  6011 ;;		_msecbase
  6012 ;; This function is called by:
  6013 ;;		_ADC
  6014 ;;		_PWM
  6015 ;;		_lcd_write
  6016 ;;		_lcd_clear
  6017 ;;		_lcd_init
  6018 ;; This function uses a non-reentrant model
  6019 ;;
  6020  0B87                     _pause:	
  6021  0B87                     l5289:	
  6022                           ; Regs used in _pause: [wreg+status,2+status,0+pclath+cstack]
  6023                           
  6024                           
  6025                           ;PWM.c: 223: unsigned short x;
  6026                           ;PWM.c: 224: for (x=0; x<=usvalue; x++)
  6027  0B87  01F2               	clrf	pause@x
  6028  0B88  01F3               	clrf	pause@x+1
  6029  0B89                     l5295:	
  6030  0B89  0873               	movf	pause@x+1,w
  6031  0B8A  0271               	subwf	pause@usvalue+1,w
  6032  0B8B  1D03               	skipz
  6033  0B8C  2B8F               	goto	u2385
  6034  0B8D  0872               	movf	pause@x,w
  6035  0B8E  0270               	subwf	pause@usvalue,w
  6036  0B8F                     u2385:	
  6037  0B8F  1C03               	btfss	3,0
  6038  0B90  0008               	return
  6039                           
  6040                           ;PWM.c: 225: {
  6041                           ;PWM.c: 226: msecbase();
  6042  0B91  23AB  120A  158A   	fcall	_msecbase
  6043  0B94  0AF2               	incf	pause@x,f
  6044  0B95  1903               	skipnz
  6045  0B96  0AF3               	incf	pause@x+1,f
  6046  0B97  2B89               	goto	l5295
  6047  0B98                     __end_of_pause:	
  6048  0B98                     __ptext565:	
  6049 ;; =============== function _fround ends ============
  6050                           
  6051                           
  6052 ;; *************** function _lcd_write *****************
  6053 ;; Defined at:
  6054 ;;		line 165 in file "C:\Users\Jorge\OneDrive\Escritorio\Entregar\LCD_PWM\PWM\PWM.c"
  6055 ;; Parameters:    Size  Location     Type
  6056 ;;  c               1    wreg     unsigned char 
  6057 ;; Auto vars:     Size  Location     Type
  6058 ;;  c               1    4[COMMON] unsigned char 
  6059 ;; Return value:  Size  Location     Type
  6060 ;;		None               void
  6061 ;; Registers used:
  6062 ;;		wreg, status,2, status,0, pclath, cstack
  6063 ;; Tracked objects:
  6064 ;;		On entry : 0/0
  6065 ;;		On exit  : 60/0
  6066 ;;		Unchanged: FFF9F/0
  6067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6068 ;;      Params:         0       0       0       0       0
  6069 ;;      Locals:         1       0       0       0       0
  6070 ;;      Temps:          0       0       0       0       0
  6071 ;;      Totals:         1       0       0       0       0
  6072 ;;Total ram usage:        1 bytes
  6073 ;; Hardware stack levels used:    1
  6074 ;; Hardware stack levels required when called:    2
  6075 ;; This function calls:
  6076 ;;		_pause
  6077 ;; This function is called by:
  6078 ;;		_lcd_clear
  6079 ;;		_lcd_puts
  6080 ;;		_lcd_goto
  6081 ;;		_lcd_init
  6082 ;; This function uses a non-reentrant model
  6083 ;;
  6084  0B98                     _lcd_write:	
  6085                           
  6086                           ; Regs used in _lcd_write: [wreg+status,2+status,0+pclath+cstack]
  6087                           ;lcd_write@c stored from wreg
  6088  0B98  00F4               	movwf	lcd_write@c
  6089                           
  6090                           ;PWM.c: 166: pause(1);
  6091  0B99  01F0               	clrf	?_pause
  6092  0B9A  0AF0               	incf	?_pause,f
  6093  0B9B  01F1               	clrf	?_pause+1
  6094  0B9C  2387  120A  158A   	fcall	_pause
  6095                           
  6096                           ;PWM.c: 167: PORTD = ( ( c >> 4) & 0x0F);
  6097  0B9F  0E74               	swapf	lcd_write@c,w
  6098  0BA0  390F               	andlw	15
  6099  0BA1  23FF               	call	PL39	;select bank 0
  6100  0BA2  0088               	movwf	8	;volatile
  6101                           
  6102                           ;PWM.c: 168: ((RC0 = 1),(RC0=0));
  6103  0BA3  1407               	bsf	7,0
  6104  0BA4  1007               	bcf	7,0
  6105                           
  6106                           ;PWM.c: 169: PORTD = (c & 0x0F);
  6107  0BA5  0874               	movf	lcd_write@c,w
  6108  0BA6  390F               	andlw	15
  6109  0BA7  0088               	movwf	8	;volatile
  6110                           
  6111                           ;PWM.c: 170: ((RC0 = 1),(RC0=0));
  6112  0BA8  1407               	bsf	7,0
  6113  0BA9  1007               	bcf	7,0
  6114  0BAA  0008               	return
  6115  0BAB                     __end_of_lcd_write:	
  6116  0BAB                     __ptext587:	
  6117 ;; =============== function _isdigit ends ============
  6118                           
  6119                           
  6120 ;; *************** function _msecbase *****************
  6121 ;; Defined at:
  6122 ;;		line 230 in file "C:\Users\Jorge\OneDrive\Escritorio\Entregar\LCD_PWM\PWM\PWM.c"
  6123 ;; Parameters:    Size  Location     Type
  6124 ;;		None
  6125 ;; Auto vars:     Size  Location     Type
  6126 ;;		None
  6127 ;; Return value:  Size  Location     Type
  6128 ;;		None               void
  6129 ;; Registers used:
  6130 ;;		wreg
  6131 ;; Tracked objects:
  6132 ;;		On entry : 0/0
  6133 ;;		On exit  : 0/0
  6134 ;;		Unchanged: FFF9F/0
  6135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6136 ;;      Params:         0       0       0       0       0
  6137 ;;      Locals:         0       0       0       0       0
  6138 ;;      Temps:          0       0       0       0       0
  6139 ;;      Totals:         0       0       0       0       0
  6140 ;;Total ram usage:        0 bytes
  6141 ;; Hardware stack levels used:    1
  6142 ;; This function calls:
  6143 ;;		Nothing
  6144 ;; This function is called by:
  6145 ;;		_pause
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148  0BAB                     _msecbase:	
  6149                           
  6150                           ;PWM.c: 231: OPTION_REG = 0b11010001;
  6151                           
  6152                           ; Regs used in _msecbase: [wreg]
  6153  0BAB  30D1               	movlw	209
  6154  0BAC  1683               	bsf	3,5	;RP0=1, select bank1
  6155  0BAD  1303               	bcf	3,6	;RP1=0, select bank1
  6156  0BAE  0081               	movwf	1	;volatile
  6157                           
  6158                           ;PWM.c: 232: TMR0 = 0x0E;
  6159  0BAF  300E               	movlw	14
  6160  0BB0  1283               	bcf	3,5	;RP0=0, select bank0
  6161  0BB1  0081               	movwf	1	;volatile
  6162                           
  6163                           ;PWM.c: 233: TMR0 = 0x8E;
  6164  0BB2  308E               	movlw	142
  6165  0BB3  0081               	movwf	1	;volatile
  6166  0BB4                     l1121:	
  6167                           ;PWM.c: 234: while(!T0IF);
  6168                           
  6169  0BB4  1D0B               	btfss	11,2
  6170  0BB5  2BB4               	goto	l1121
  6171                           
  6172                           ;PWM.c: 235: T0IF = 0;
  6173  0BB6  110B               	bcf	11,2
  6174  0BB7  0008               	return
  6175  0BB8                     __end_of_msecbase:	
  6176  0BB8                     __ptext561:	
  6177 ;; =============== function _sprintf ends ============
  6178                           
  6179                           
  6180 ;; *************** function _lcd_clear *****************
  6181 ;; Defined at:
  6182 ;;		line 173 in file "C:\Users\Jorge\OneDrive\Escritorio\Entregar\LCD_PWM\PWM\PWM.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;		None
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;		None
  6187 ;; Return value:  Size  Location     Type
  6188 ;;		None               void
  6189 ;; Registers used:
  6190 ;;		wreg, status,2, status,0, pclath, cstack
  6191 ;; Tracked objects:
  6192 ;;		On entry : 0/20
  6193 ;;		On exit  : 0/0
  6194 ;;		Unchanged: FFF9F/0
  6195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6196 ;;      Params:         0       0       0       0       0
  6197 ;;      Locals:         0       0       0       0       0
  6198 ;;      Temps:          0       0       0       0       0
  6199 ;;      Totals:         0       0       0       0       0
  6200 ;;Total ram usage:        0 bytes
  6201 ;; Hardware stack levels used:    1
  6202 ;; Hardware stack levels required when called:    3
  6203 ;; This function calls:
  6204 ;;		_lcd_write
  6205 ;;		_pause
  6206 ;; This function is called by:
  6207 ;;		_main
  6208 ;;		_lcd_init
  6209 ;; This function uses a non-reentrant model
  6210 ;;
  6211  0BB8                     _lcd_clear:	
  6212  0BB8  23FF               	call	PL39	;select bank 0
  6213                           
  6214                           ;PWM.c: 174: RC3 = 0;
  6215                           
  6216                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  6217  0BB9  3001               	movlw	1
  6218  0BBA  1187               	bcf	7,3
  6219                           
  6220                           ;PWM.c: 175: lcd_write(0x01);
  6221  0BBB  2398  120A  158A   	fcall	_lcd_write
  6222                           
  6223                           ;PWM.c: 176: pause (2);
  6224  0BBE  3002               	movlw	2
  6225  0BBF  00F0               	movwf	?_pause
  6226  0BC0  01F1               	clrf	?_pause+1
  6227  0BC1  2B87               	ljmp	l5289
  6228  0BC2                     __end_of_lcd_clear:	
  6229  0BC2                     PL4:	
  6230  0BC2  00F8               	movwf	?___awtoft
  6231  0BC3  01F9               	clrf	?___awtoft+1
  6232  0BC4  1003               	clrc
  6233  0BC5  0DF8               	rlf	?___awtoft,f
  6234  0BC6  0DF9               	rlf	?___awtoft+1,f
  6235  0BC7  1003               	clrc
  6236  0BC8  0DF8               	rlf	?___awtoft,f
  6237  0BC9  0DF9               	rlf	?___awtoft+1,f
  6238  0BCA  1683               	bsf	3,5	;RP0=1, select bank1
  6239  0BCB  081E               	movf	30,w	;volatile
  6240  0BCC  1283               	bcf	3,5	;RP0=0, select bank0
  6241  0BCD  00DB               	movwf	??_ADC
  6242  0BCE  3006               	movlw	6
  6243  0BCF                     u3265:	
  6244  0BCF  1003               	clrc
  6245  0BD0  0CDB               	rrf	??_ADC,f
  6246  0BD1  3EFF               	addlw	-1
  6247  0BD2  1D03               	skipz
  6248  0BD3  2BCF               	goto	u3265
  6249  0BD4  085B               	movf	??_ADC,w
  6250  0BD5  04F8               	iorwf	?___awtoft,f
  6251  0BD6  0008               	return
  6252  0BD7                     PL8:	
  6253  0BD7  00F4               	movwf	??_PWM
  6254  0BD8  1003               	clrc
  6255  0BD9  0CF5               	rrf	??_PWM+1,f
  6256  0BDA  0CF4               	rrf	??_PWM,f
  6257  0BDB  1003               	clrc
  6258  0BDC  0CF5               	rrf	??_PWM+1,f
  6259  0BDD  0CF4               	rrf	??_PWM,f
  6260  0BDE  0874               	movf	??_PWM,w
  6261  0BDF  009E               	movwf	30	;volatile
  6262  0BE0  1683               	bsf	3,5	;RP0=1, select bank1
  6263  0BE1  019E               	clrf	30	;volatile
  6264  0BE2  1283               	bcf	3,5	;RP0=0, select bank0
  6265  0BE3  081E               	movf	30,w	;volatile
  6266  0BE4  0008               	return
  6267  0BE5                     PL15:	
  6268  0BE5  1683               	bsf	3,5	;RP0=1, select bank1
  6269  0BE6  081E               	movf	30,w	;volatile
  6270  0BE7  00F4               	movwf	??_PWM
  6271  0BE8  1003               	clrc
  6272  0BE9  0CF4               	rrf	??_PWM,f
  6273  0BEA  1003               	clrc
  6274  0BEB  0CF4               	rrf	??_PWM,f
  6275  0BEC  0874               	movf	??_PWM,w
  6276  0BED  380C               	iorlw	12
  6277  0BEE  1283               	bcf	3,5	;RP0=0, select bank0
  6278  0BEF  0008               	return
  6279  0BF0                     PL27:	
  6280  0BF0  1283               	bcf	3,5	;RP0=0, select bank0
  6281  0BF1  1303               	bcf	3,6	;RP1=0, select bank0
  6282  0BF2  300A               	movlw	10
  6283  0BF3  1407               	bsf	7,0
  6284  0BF4  1007               	bcf	7,0
  6285  0BF5  00F0               	movwf	?_pause
  6286  0BF6  01F1               	clrf	?_pause+1
  6287  0BF7  0008               	return
  6288  0BF8                     PL35:	
  6289  0BF8  3028               	movlw	40
  6290  0BF9  00AD               	movwf	?___ftmul
  6291  0BFA  30A0               	movlw	160
  6292  0BFB  00AE               	movwf	?___ftmul+1
  6293  0BFC  303B               	movlw	59
  6294  0BFD  00AF               	movwf	?___ftmul+2
  6295  0BFE  0008               	return
  6296  0BFF                     PL39:	
  6297  0BFF  1283               	bcf	3,5	;RP0=0, select bank0
  6298  0C00  1303               	bcf	3,6	;RP1=0, select bank0
  6299  0C01  0008               	return
  6300                           
  6301                           	psect	text584
  6302  173E                     __ptext584:	
  6303 ;; =============== function ___bmul ends ============
  6304                           
  6305                           
  6306 ;; *************** function __div_to_l_ *****************
  6307 ;; Defined at:
  6308 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\fldivl.c"
  6309 ;; Parameters:    Size  Location     Type
  6310 ;;  f1              3    0[COMMON] unsigned char 
  6311 ;;  f2              3    3[COMMON] unsigned char 
  6312 ;; Auto vars:     Size  Location     Type
  6313 ;;  quot            4    0[BANK0 ] unsigned long 
  6314 ;;  exp1            1    5[BANK0 ] unsigned char 
  6315 ;;  cntr            1    4[BANK0 ] unsigned char 
  6316 ;; Return value:  Size  Location     Type
  6317 ;;                  4    0[COMMON] unsigned long 
  6318 ;; Registers used:
  6319 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6320 ;; Tracked objects:
  6321 ;;		On entry : 0/0
  6322 ;;		On exit  : 60/0
  6323 ;;		Unchanged: FFF9F/0
  6324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6325 ;;      Params:         6       0       0       0       0
  6326 ;;      Locals:         0       6       0       0       0
  6327 ;;      Temps:          8       0       0       0       0
  6328 ;;      Totals:        14       6       0       0       0
  6329 ;;Total ram usage:       20 bytes
  6330 ;; Hardware stack levels used:    1
  6331 ;; This function calls:
  6332 ;;		Nothing
  6333 ;; This function is called by:
  6334 ;;		_sprintf
  6335 ;; This function uses a non-reentrant model
  6336 ;;
  6337  173E                     __div_to_l_:	
  6338                           
  6339                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  6340  173E  3070               	movlw	low __div_to_l_@f1
  6341  173F  27F3  160A  118A   	fcall	PL2	;call to abstracted procedure
  6342  1742  1003               	clrc
  6343  1743  0D78               	rlf	??__div_to_l_+2,w
  6344  1744  0D79               	rlf	??__div_to_l_+3,w
  6345  1745  1283               	bcf	3,5	;RP0=0, select bank0
  6346  1746  1303               	bcf	3,6	;RP1=0, select bank0
  6347  1747  00A5               	movwf	__div_to_l_@exp1
  6348  1748  08A5               	movf	__div_to_l_@exp1,f
  6349  1749  1D03               	skipz
  6350  174A  2F50               	goto	l4953
  6351  174B                     l4951:	
  6352  174B  01F0               	clrf	?__div_to_l_
  6353  174C  01F1               	clrf	?__div_to_l_+1
  6354  174D  01F2               	clrf	?__div_to_l_+2
  6355  174E  01F3               	clrf	?__div_to_l_+3
  6356  174F  0008               	return
  6357  1750                     l4953:	
  6358  1750  3073               	movlw	low __div_to_l_@f2
  6359  1751  27F3  160A  118A   	fcall	PL2	;call to abstracted procedure
  6360  1754  1003               	clrc
  6361  1755  0D78               	rlf	??__div_to_l_+2,w
  6362  1756  0D79               	rlf	??__div_to_l_+3,w
  6363  1757  00A4               	movwf	__div_to_l_@cntr
  6364  1758  08A4               	movf	__div_to_l_@cntr,f
  6365  1759  1903               	btfsc	3,2
  6366  175A  2F4B               	goto	l4951
  6367  175B  3070               	movlw	low __div_to_l_@f1
  6368  175C  0084               	movwf	4
  6369  175D  3080               	movlw	128
  6370  175E  0A84               	incf	4,f
  6371  175F  0A84               	incf	4,f
  6372  1760  0480               	iorwf	0,f
  6373  1761  3070               	movlw	low __div_to_l_@f1
  6374  1762  0A84               	incf	4,f
  6375  1763  0084               	movwf	4
  6376  1764  3073               	movlw	low __div_to_l_@f2
  6377  1765  0A84               	incf	4,f
  6378  1766  0A84               	incf	4,f
  6379  1767  0A84               	incf	4,f
  6380  1768  0180               	clrf	0
  6381  1769  0084               	movwf	4
  6382  176A  3080               	movlw	128
  6383  176B  0A84               	incf	4,f
  6384  176C  0A84               	incf	4,f
  6385  176D  0480               	iorwf	0,f
  6386  176E  3073               	movlw	low __div_to_l_@f2
  6387  176F  0A84               	incf	4,f
  6388  1770  0084               	movwf	4
  6389  1771  307F               	movlw	127
  6390  1772  0A84               	incf	4,f
  6391  1773  0A84               	incf	4,f
  6392  1774  0A84               	incf	4,f
  6393  1775  0180               	clrf	0
  6394  1776  01A0               	clrf	__div_to_l_@quot
  6395  1777  01A1               	clrf	__div_to_l_@quot+1
  6396  1778  01A2               	clrf	__div_to_l_@quot+2
  6397  1779  01A3               	clrf	__div_to_l_@quot+3
  6398  177A  02A5               	subwf	__div_to_l_@exp1,f
  6399  177B  30A0               	movlw	160
  6400  177C  0724               	addwf	__div_to_l_@cntr,w
  6401  177D  00F6               	movwf	??__div_to_l_
  6402  177E  02A5               	subwf	__div_to_l_@exp1,f
  6403  177F  3020               	movlw	32
  6404  1780  00A4               	movwf	__div_to_l_@cntr
  6405  1781                     l4967:	
  6406  1781  3073               	movlw	low __div_to_l_@f2
  6407  1782  1003               	clrc
  6408  1783  0DA0               	rlf	__div_to_l_@quot,f
  6409  1784  0DA1               	rlf	__div_to_l_@quot+1,f
  6410  1785  0DA2               	rlf	__div_to_l_@quot+2,f
  6411  1786  0DA3               	rlf	__div_to_l_@quot+3,f
  6412  1787  27F3  160A  118A   	fcall	PL2	;call to abstracted procedure
  6413  178A  3070               	movlw	low __div_to_l_@f1
  6414  178B  0084               	movwf	4
  6415  178C  0800               	movf	0,w
  6416  178D  00FA               	movwf	??__div_to_l_+4
  6417  178E  0A84               	incf	4,f
  6418  178F  0800               	movf	0,w
  6419  1790  00FB               	movwf	??__div_to_l_+5
  6420  1791  0A84               	incf	4,f
  6421  1792  0800               	movf	0,w
  6422  1793  00FC               	movwf	??__div_to_l_+6
  6423  1794  0A84               	incf	4,f
  6424  1795  0800               	movf	0,w
  6425  1796  00FD               	movwf	??__div_to_l_+7
  6426  1797  0879               	movf	??__div_to_l_+3,w
  6427  1798  027D               	subwf	??__div_to_l_+7,w
  6428  1799  1D03               	skipz
  6429  179A  2FA5               	goto	u1795
  6430  179B  0878               	movf	??__div_to_l_+2,w
  6431  179C  027C               	subwf	??__div_to_l_+6,w
  6432  179D  1D03               	skipz
  6433  179E  2FA5               	goto	u1795
  6434  179F  0877               	movf	??__div_to_l_+1,w
  6435  17A0  027B               	subwf	??__div_to_l_+5,w
  6436  17A1  1D03               	skipz
  6437  17A2  2FA5               	goto	u1795
  6438  17A3  0876               	movf	??__div_to_l_,w
  6439  17A4  027A               	subwf	??__div_to_l_+4,w
  6440  17A5                     u1795:	
  6441  17A5  1C03               	skipc
  6442  17A6  2FC1               	goto	l2531
  6443  17A7  3073               	movlw	low __div_to_l_@f2
  6444  17A8  27F3  160A  118A   	fcall	PL2	;call to abstracted procedure
  6445  17AB  3070               	movlw	low __div_to_l_@f1
  6446  17AC  0084               	movwf	4
  6447  17AD  0876               	movf	??__div_to_l_,w
  6448  17AE  0280               	subwf	0,f
  6449  17AF  0A84               	incf	4,f
  6450  17B0  0877               	movf	??__div_to_l_+1,w
  6451  17B1  1C03               	skipc
  6452  17B2  0F77               	incfsz	??__div_to_l_+1,w
  6453  17B3  0280               	subwf	0,f
  6454  17B4  0A84               	incf	4,f
  6455  17B5  0878               	movf	??__div_to_l_+2,w
  6456  17B6  1C03               	skipc
  6457  17B7  0F78               	incfsz	??__div_to_l_+2,w
  6458  17B8  0280               	subwf	0,f
  6459  17B9  0A84               	incf	4,f
  6460  17BA  0879               	movf	??__div_to_l_+3,w
  6461  17BB  1C03               	skipc
  6462  17BC  0A79               	incf	??__div_to_l_+3,w
  6463  17BD  0280               	subwf	0,f
  6464  17BE  3003               	movlw	3
  6465  17BF  0284               	subwf	4,f
  6466  17C0  1420               	bsf	__div_to_l_@quot,0
  6467  17C1                     l2531:	
  6468  17C1  3070               	movlw	low __div_to_l_@f1
  6469  17C2  0084               	movwf	4
  6470  17C3  1003               	clrc
  6471  17C4  0D80               	rlf	0,f
  6472  17C5  0A84               	incf	4,f
  6473  17C6  0D80               	rlf	0,f
  6474  17C7  0A84               	incf	4,f
  6475  17C8  0D80               	rlf	0,f
  6476  17C9  0A84               	incf	4,f
  6477  17CA  0D80               	rlf	0,f
  6478  17CB  0BA4               	decfsz	__div_to_l_@cntr,f
  6479  17CC  2F81               	goto	l4967
  6480  17CD  1FA5               	btfss	__div_to_l_@exp1,7
  6481  17CE  2FDC               	goto	l4985
  6482  17CF  0825               	movf	__div_to_l_@exp1,w
  6483  17D0  3A80               	xorlw	128
  6484  17D1  3E9F               	addlw	159
  6485  17D2  1C03               	btfss	3,0
  6486  17D3  2F4B               	goto	l4951
  6487  17D4                     l4981:	
  6488  17D4  1003               	clrc
  6489  17D5  0CA3               	rrf	__div_to_l_@quot+3,f
  6490  17D6  0CA2               	rrf	__div_to_l_@quot+2,f
  6491  17D7  0CA1               	rrf	__div_to_l_@quot+1,f
  6492  17D8  0CA0               	rrf	__div_to_l_@quot,f
  6493  17D9  0FA5               	incfsz	__div_to_l_@exp1,f
  6494  17DA  2FD4               	goto	l4981
  6495  17DB  2FEA               	goto	l4991
  6496  17DC                     l4985:	
  6497  17DC  3020               	movlw	32
  6498  17DD  0225               	subwf	__div_to_l_@exp1,w
  6499  17DE  1803               	btfsc	3,0
  6500  17DF  2F4B               	goto	l4951
  6501  17E0                     l2539:	
  6502  17E0  08A5               	movf	__div_to_l_@exp1,f
  6503  17E1  1903               	btfsc	3,2
  6504  17E2  2FEA               	goto	l4991
  6505  17E3  1003               	clrc
  6506  17E4  0DA0               	rlf	__div_to_l_@quot,f
  6507  17E5  0DA1               	rlf	__div_to_l_@quot+1,f
  6508  17E6  0DA2               	rlf	__div_to_l_@quot+2,f
  6509  17E7  0DA3               	rlf	__div_to_l_@quot+3,f
  6510  17E8  03A5               	decf	__div_to_l_@exp1,f
  6511  17E9  2FE0               	goto	l2539
  6512  17EA                     l4991:	
  6513  17EA  0823               	movf	__div_to_l_@quot+3,w
  6514  17EB  00F3               	movwf	?__div_to_l_+3
  6515  17EC  0822               	movf	__div_to_l_@quot+2,w
  6516  17ED  00F2               	movwf	?__div_to_l_+2
  6517  17EE  0821               	movf	__div_to_l_@quot+1,w
  6518  17EF  00F1               	movwf	?__div_to_l_+1
  6519  17F0  0820               	movf	__div_to_l_@quot,w
  6520  17F1  00F0               	movwf	?__div_to_l_
  6521  17F2  0008               	return
  6522  17F3                     __end_of__div_to_l_:	
  6523  17F3                     PL2:	
  6524  17F3  0084               	movwf	4
  6525  17F4  0800               	movf	0,w
  6526  17F5  00F6               	movwf	??__div_to_l_
  6527  17F6  0A84               	incf	4,f
  6528  17F7  0800               	movf	0,w
  6529  17F8  00F7               	movwf	??__div_to_l_+1
  6530  17F9  0A84               	incf	4,f
  6531  17FA  0800               	movf	0,w
  6532  17FB  00F8               	movwf	??__div_to_l_+2
  6533  17FC  0A84               	incf	4,f
  6534  17FD  0800               	movf	0,w
  6535  17FE  00F9               	movwf	??__div_to_l_+3
  6536  17FF  0008               	return
  6537                           
  6538                           	psect	text588
  6539  08A9                     __ptext588:	
  6540 ;; =============== function _msecbase ends ============
  6541                           
  6542                           
  6543 ;; *************** function _init_comms *****************
  6544 ;; Defined at:
  6545 ;;		line 50 in file "C:\Users\Jorge\OneDrive\Escritorio\Entregar\LCD_PWM\PWM\PWM.c"
  6546 ;; Parameters:    Size  Location     Type
  6547 ;;		None
  6548 ;; Auto vars:     Size  Location     Type
  6549 ;;		None
  6550 ;; Return value:  Size  Location     Type
  6551 ;;		None               void
  6552 ;; Registers used:
  6553 ;;		wreg, status,2
  6554 ;; Tracked objects:
  6555 ;;		On entry : 17F/0
  6556 ;;		On exit  : 17F/60
  6557 ;;		Unchanged: FFE80/0
  6558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6559 ;;      Params:         0       0       0       0       0
  6560 ;;      Locals:         0       0       0       0       0
  6561 ;;      Temps:          0       0       0       0       0
  6562 ;;      Totals:         0       0       0       0       0
  6563 ;;Total ram usage:        0 bytes
  6564 ;; Hardware stack levels used:    1
  6565 ;; This function calls:
  6566 ;;		Nothing
  6567 ;; This function is called by:
  6568 ;;		_main
  6569 ;; This function uses a non-reentrant model
  6570 ;;
  6571  08A9                     _init_comms:	
  6572                           
  6573                           ;PWM.c: 51: TRISC7 = 1;
  6574                           
  6575                           ; Regs used in _init_comms: [wreg+status,2]
  6576  08A9  1683               	bsf	3,5	;RP0=1, select bank1
  6577  08AA  3019               	movlw	25
  6578  08AB  1787               	bsf	7,7
  6579                           
  6580                           ;PWM.c: 52: TRISC6 = 0;
  6581  08AC  1307               	bcf	7,6
  6582                           
  6583                           ;PWM.c: 53: SPBRG = 0x19;
  6584  08AD  0099               	movwf	25	;volatile
  6585                           
  6586                           ;PWM.c: 55: RCSTA = 0x90;
  6587  08AE  3090               	movlw	144
  6588  08AF  1283               	bcf	3,5	;RP0=0, select bank0
  6589  08B0  0098               	movwf	24	;volatile
  6590                           
  6591                           ;PWM.c: 56: TXSTA = 0x26;
  6592  08B1  3026               	movlw	38
  6593  08B2  1683               	bsf	3,5	;RP0=1, select bank1
  6594  08B3  0098               	movwf	24	;volatile
  6595                           
  6596                           ;PWM.c: 57: BAUDCTL = 0;
  6597  08B4  1703               	bsf	3,6	;RP1=1, select bank3
  6598  08B5  0187               	clrf	7	;volatile
  6599  08B6  0008               	return
  6600  08B7                     __end_of_init_comms:	
  6601                           
  6602                           	psect	text589
  6603  0000                     __ptext589:	
  6604 ;; =============== function _init_comms ends ============
  6605                           
  6606  007E                     btemp	set	126	;btemp
  6607  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Tue Jun 07 14:53:43 2022

                    pc 0002         ___bmul@product 007A           ___awdiv@sign 007B                     fsr 0004  
  ___wmul@multiplicand 0072           ___ftadd@exp1 0047           ___ftadd@exp2 0046           ___ftadd@sign 0045  
                  _ADC 0A61                    _RC0 0038                    _RC3 003B                    _RC4 003C  
                  _PR2 0092                    _PWM 0A09                    fsr0 0004                    indf 0000  
         ___awmod@sign 0075            lcd_goto@pos 0075                   ?_ADC 0070                   ?_PWM 0070  
                 l1103 0000                   l1112 0000                   l1121 0BB4                   l1124 0000  
                 l1109 0000                   l1118 0000                   l1073 0000                   l1082 0A65  
                 l1091 0000                   l1243 0000                   l1173 00F7                   l1085 0AD9  
                 l2302 0C94                   l1094 0000                   l1088 0000                   l2401 0000  
                 l1097 0000                   l2228 0000                   l2244 0000                   l2420 0000  
                 l2324 0000                   l2405 0000                   l2238 0000                   l2271 09C8  
                 l2280 0000                   l2274 0000                   l2531 17C1                   l5003 0000  
                 l5011 0000                   l2532 0000                   l5005 0000                   l5021 0000  
                 l5013 0601                   l5101 0627                   l2358 0652                   l5031 0000  
                 l5111 0000                   l5103 0000                   l2391 0000                   l5017 0609  
                 l5041 0000                   l5033 09C2                   l5121 064E                   l5105 0000  
                 l2481 0000                   l2378 0000                   l2539 17E0                   l5019 0000  
                 l5027 0000                   l5051 0000                   l5131 066A                   l5107 0000  
                 l5211 05D4                   l2459 0000                   l5045 0000                   l5037 0000  
                 l5029 0000                   l5053 0000                   l5117 0646                   l5109 0000  
                 l5141 0000                   l5301 0000                   l5047 09D5                   l5063 09EF  
                 l5055 09DB                   l5071 0000                   l5127 065C                   l5119 0000  
                 l5151 0000                   l5143 0E74                   l5135 0000                   l5215 05E3  
                 l5207 0000                   l5311 0000                   l2496 0720                   l2489 0000  
                 l5065 0000                   l5057 0000                   l5081 0F7F                   l5073 0F71  
                 l5129 0000                   l5161 0000                   l5137 0000                   l5217 0000  
                 l5305 0C3B                   l5401 0000                   l5059 0000                   l5091 0000  
                 l5083 0F89                   l5171 0EA2                   l5147 0000                   l5219 0000  
                 l5243 0000                   l5227 0000                   l5323 0000                   l5315 0C51  
                 l5411 0000                   l5403 0000                   l5093 0000                   l5085 0F8E  
                 l5077 0F75                   l5069 0000                   l5173 0000                   l5165 0000  
                 l5149 0E7D                   l5237 0687                   l5229 0000                   l5261 0EB9  
                 l5253 0000                   l5341 0000                   l5333 0C6E                   l5325 0000  
                 l5317 0000                   l5309 0C42                   l5421 0F3F                   l5413 0000  
                 l5405 0F1F                   l3663 0000                   l5095 0000                   l5087 0F93  
                 l5079 0F7A                   l5175 0EAA                   l5159 0E8B                   l5247 0000  
                 l5239 0000                   l5255 0000                   l5351 0000                   l5335 0C73  
                 l5327 0C5F                   l5423 0000                   l5415 0000                   l5431 0000  
                 l5503 0996                   l5511 0000                   l3665 0000                   l5097 0000  
                 l5169 0000                   l5193 0000                   l5249 06B2                   l5273 0ECC  
                 l5281 0EDF                   l5265 0EC0                   l5361 0000                   l5353 0C9F  
                 l5345 0C8B                   l5329 0000                   l5337 0C78                   l5425 0000  
                 l5417 0F35                   l5409 0F29                   l5433 0000                   l3667 0000  
                 l5099 0622                   l5187 0597                   l5195 05BC                   l5179 0000  
                 l5283 0000                   l5259 0000                   l5371 0CC6                   l5363 0000  
                 l5347 0C90                   l5339 0C7C                   l5427 0000                   l5443 0000  
                 l5507 0000                   l4901 0000                   l5285 0EE7                   l5293 0000  
                 l5357 0000                   l5381 0EFD                   l5437 0000                   l5461 0000  
                 l5453 0000                   l5525 0D8D                   l5701 0333                   l5621 0000  
                 l5613 0000                   l5605 0121                   l4911 0000                   l4903 06C9  
                 l5199 0000                   l5279 0000                   l5295 0B89                   l5367 0000  
                 l5359 0CAA                   l5391 0000                   l5375 0000                   l5439 0B74  
                 l5447 073D                   l5463 0000                   l5455 0000                   l5471 0000  
                 l5543 0E53                   l5519 0D48                   l5711 0338                   l5631 0000  
                 l5623 0000                   l5615 014D                   l5607 0000                   l4921 0000  
                 l4913 0000                   l4905 06CE                   l5289 0B87                   l5369 0000  
                 l5297 0000                   l5393 0000                   l5449 0748                   l5465 0000  
                 l5457 0000                   l5481 0000                   l5473 0000                   l5537 0E0E  
                 l5529 0DA4                   l5553 0000                   l5721 036F                   l5705 0000  
                 l5625 0000                   l5617 0000                   l5609 0000                   l4915 0000  
                 l5299 0000                   l5395 0000                   l5387 0F0E                   l5467 0000  
                 l5459 0000                   l5483 0000                   l5475 0000                   l5547 0000  
                 l5555 0000                   l5811 0503                   l5803 04E6                   l5731 0386  
                 l5651 0217                   l5643 01D3                   l5635 019A                   l5627 0000  
                 l5571 0093                   l5563 0000                   l4925 0000                   l4917 0000  
                 l4909 0000                   l5397 0000                   l5389 0000                   l5469 0000  
                 l5477 0000                   l5485 0000                   l5549 0000                   l5821 0000  
                 l5741 03AE                   l5725 0000                   l5717 0341                   l5709 0321  
                 l5637 0000                   l5629 0000                   l5581 0000                   l5573 0000  
                 l5565 007F                   l5557 0000                   l4935 0714                   l4919 06EB  
                 l4951 174B                   l5399 0000                   l5479 0000                   l5495 0942  
                 l5823 0000                   l5815 051F                   l5743 03CF                   l5735 0395  
                 l5727 0000                   l5671 0000                   l5663 0253                   l5639 0000  
                 l5647 01E3                   l5583 0000                   l5591 00F2                   l5575 0000  
                 l5567 0000                   l5911 0000                   l5903 0000                   l4945 072A  
                 l4937 0000                   l4929 0000                   l4961 0000                   l4953 1750  
                 l5489 0000                   l5833 0000                   l5825 0534                   l5817 0522  
                 l5809 0500                   l5761 0000                   l5753 0000                   l5745 0000  
                 l5737 0000                   l5729 0372                   l5673 0000                   l5841 0582  
                 l5593 0000                   l5577 00B8                   l5921 0000                   l5913 0000  
                 l5905 0000                   _ADFM 04FF                   l4891 0000                   l4939 071C  
                 l4963 0000                   l5499 0000                   l5819 0526                   l5763 0000  
                 l5755 0000                   l5747 0000                   l5739 0000                   l5691 0000  
                 l5675 0283                   l5659 0242                   l5587 0000                   l5931 0000  
                 l5923 0000                   l5915 0000                   l5907 0000                   l4981 17D4  
                 l4973 0000                   l4965 0000                   l4949 0000                   l5837 053E  
                 l5781 0479                   l5757 043B                   l5693 02F4                   l5685 02C0  
                 l5677 0000                   l5669 0000                   l5597 00F9                   l5589 00C9  
                 l5845 0000                   l5853 0000                   l5861 0000                   l5925 0000  
                 l5917 0000                   l5909 0000                   l5941 0000                   l5933 0000  
                 l4887 0000                   l4991 17EA                   l4983 0000                   l4975 0000  
                 l4967 1781                   l4959 0000                   l5775 0477                   l5767 0000  
                 l5695 0000                   l5679 02BE                   l5759 0447                   l5599 0111  
                 l5839 0066                   l5847 0000                   l5855 0B48                   l5871 0000  
                 l5863 0000                   l5927 0000                   l5951 0000                   l5943 0000  
                 l5935 0000                   l4897 05FD                   l4889 0000                   l4985 17DC  
                 l4969 0000                   l5793 04C1                   l5769 046B                   l5849 0000  
                 l5881 0000                   l5873 0000                   l5865 0000                   l5857 0000  
                 l5929 0000                   l5961 0000                   l5953 0000                   l5945 0000  
                 l5937 0000                   l4995 0000                   l5787 0000                   l5699 031D  
                 l5891 0000                   l5883 0000                   l5875 0000                   l5867 0000  
                 l5859 0000                   l5963 0000                   l5955 003C                   l5947 0000  
                 l5939 0000                   l4997 0F5D                   l5797 04D9                   l5789 04AD  
                 l5893 0000                   l5885 0000                   l5877 0000                   l5869 0000  
                 l5957 0000                   l5949 0000                   l5895 0000                   l5887 0000  
                 l5879 0000                   l5959 0000                   l5889 0000                   l5897 0000  
                 l5899 0000                   STR_1 089E                   STR_2 0886                   STR_3 0892  
                 STR_4 0898                   STR_5 089E                   STR_6 088C                   STR_7 0892  
                 STR_8 089B                   _T0IF 005A                   u2050 0000                   u2055 062B  
                 u2215 05A5                   u3105 04A6                   u3025 037B                   u3035 0390  
                 u2165 0E94                   u3125 04BB                   u3135 04D1                   u1705 06FA  
                 u2355 0ED2                   u3307 005C                   u2295 069A                   u3175 04F6  
                 u2385 0B8F                   u3185 0511                   u3265 0BCF                   u2905 0221  
                 u3297 004C                   u2850 0000                   u1795 17A5                   u2935 0240  
                 u2855 0160                   u2955 02ED                   u2895 01EC                   u2995 032A  
                 _TMR0 0001                   _main 0019           ___ftpack@arg 0070                   _pwm1 0064  
                 _pwm2 0066           ___ftpack@exp 0073                   btemp 007E                   start 0000  
         _sprintf$1919 00A0      ___bmul@multiplier 007B           ___ftmul@cntr 003A           ___ftmul@sign 003B  
                ??_ADC 005B                  ??_PWM 0074           ___fttol@exp1 002C           ___fttol@lval 0028  
                ?_main 0070        __end_of___awdiv 0EAF        __end_of___lbdiv 09D7        __end_of___ftadd 0CD8  
      __end_of___awmod 0EEC        __end_of___lbmod 09F3        __end_of___ftneg 073B                  _ANSEL 0188  
      __end_of___lldiv 06BB        __end_of___ftmul 0F5B        ___awdiv@divisor 0076        __end_of___llmod 05C5  
      __end_of___ftsub 0C18        __end_of___fttol 0673                  _T2CON 0012        ___awdiv@counter 007A  
                _RCSTA 0018                  _SPBRG 0099                  _PORTD 0008                  _TRISA 0085  
                _TRISB 0086                  _TRISC 0087                  _TRISD 0088                  _TRISE 0089  
                _TXSTA 0098           ___lltoft@exp 007C          ___awtoft@sign 007B                  _vadc1 005E  
                _vadc2 0061                  _scale 0CD8        __end_of_isdigit 05FF                  _pause 0B87  
        ___ftpack@sign 0074                  pclath 000A                  status 0003                  wtemp0 007E  
      __end_of_sprintf 0587        ___lbdiv@divisor 0075        ___lbdiv@counter 0077           __end_of_main 0062  
               ??_main 005C          ___fttol@sign1 0027   __size_of__tdiv_to_l_ 0078                 _ADCON0 001F  
     ___llmod@dividend 0024                 ?_scale 003C                 _ADRESH 001E                 _ADRESL 009E  
               _CCPR1L 0015                 ?_pause 0070                 _CCPR2L 001B       ___awdiv@dividend 0078  
     __end_of___awtoft 0B87       __end_of___ftpack 0FA7                 _ANSELH 0189       __end_of___lltoft 075B  
               _TRISC6 043E                 _TRISC7 043F       __end_of_lcd_init 0A61       __end_of_lcd_goto 0B6A  
               ___bmul 0F5B       __end_of_lcd_puts 0B64                 ___ftge 05C5                 _carac1 0068  
               _carac2 00BE                 ___wmul 05FF              ??___awdiv 007A              ??___lbdiv 0076  
            ??___ftadd 0042              ??___awmod 0074              ??___lbmod 0071              ??___ftneg 0073  
            ??___lldiv 0078              ??___ftmul 0033              ??___llmod 007D              ??___ftsub 007E  
            ??___fttol 0024                 _fround 08B7       ___awdiv@quotient 007C        ___awmod@divisor 0070  
      ___awmod@counter 0074       __end_of_msecbase 0BB8                 clrloop 08A2  ___ftmul@f3_as_product 0037  
            ??_isdigit 0070                 pause@x 0072              ??_sprintf 0056       ___lbdiv@dividend 0076  
      ___lbmod@divisor 0070        ___lbmod@counter 0073             ___ftadd@f1 003C             ___ftadd@f2 003F  
           ___ftge@ff1 0070             ___ftge@ff2 0073             ___ftneg@f1 0070             ___awtoft@c 0078  
  ___bmul@multiplicand 0079             ___ftmul@f1 002D             ___ftmul@f2 0030             ___ftsub@f1 004B  
           ___ftsub@f2 0048             ___fttol@f1 0020         __pcstackCOMMON 0070             ___lltoft@c 0078  
        __end_of_scale 0E6A          __end_of_pause 0B98       ___lbdiv@quotient 0078             __div_to_l_ 173E  
   __size_of_lcd_clear 000A        __div_to_l_@exp1 0025     __size_of_lcd_write 0013        __div_to_l_@cntr 0024  
         sprintf@integ 00A5                ??_scale 003F                ??_pause 0072        __div_to_l_@quot 0020  
         sprintf@width 00AA             __pbssBANK0 005E             __pbssBANK1 00B9          __div_to_l_@f1 0070  
        __div_to_l_@f2 0073             __pmaintext 0019                ?___bmul 0079                ?___ftge 0070  
              ?___wmul 0070                _CCP1CON 0017                _CCP2CON 001D                _BAUDCTL 0187  
              ?_fround 0048              ?___awtoft 0078              ?___ftpack 0070              ?___lltoft 0078  
              _GO_DONE 00F9              ?_lcd_init 0070              ?_lcd_goto 0070              ?_lcd_puts 0075  
            ?_msecbase 0070             _scale$2868 0043      __end_of_lcd_clear 0BC2        __size_of___bmul 000E  
      __size_of___ftge 002C                ___awdiv 0E6A                ___lbdiv 09BC                ___ftadd 0C18  
              ___awmod 0EAF                ___lbmod 09D7      __end_of_lcd_write 0BAB                ___ftneg 0733  
              ___lldiv 0673        __size_of___wmul 0019                ___ftmul 0EEC                ___llmod 0587  
              ___ftsub 0C02                ___fttol 0618                _carac11 00B9                _carac22 00C3  
           _init_comms 08A9             ??___awtoft 007B             ??___ftpack 0075        __size_of_fround 0105  
           ??___lltoft 007C           __size_of_ADC 00E6           __size_of_PWM 0022            ?__div_to_l_ 0070  
              _dpowers 085E                _isdigit 05F1       ___awmod@dividend 0072                _sprintf 0062  
           ??_lcd_init 0075             ??_lcd_goto 0075             ??_lcd_puts 0077   end_of_initialization 0015  
           ??_msecbase 0070        ___lldiv@divisor 0070        ___lldiv@counter 007C         __tdiv_to_l_@f1 0070  
       __tdiv_to_l_@f2 0073          ??__tdiv_to_l_ 0076       ___lbmod@dividend 0072            ___lbmod@rem 0074  
  __size_of__div_to_l_ 00B5             lcd_write@c 0074            ___ftmul@exp 0036         __end_of___bmul 0F69  
       __end_of___ftge 05F1            ?_init_comms 0070         __end_of___wmul 0618         __end_of_fround 09BC  
  start_initialization 0006            __end_of_ADC 0B47            __end_of_PWM 0A2B    __end_of__tdiv_to_l_ 0733  
      ___llmod@divisor 0020        ___llmod@counter 007D               ??___bmul 007A               ??___ftge 0076  
             ??___wmul 0074               ??_fround 007E             fround@prec 0051      __size_of___awtoft 001D  
    __size_of___ftpack 003E           pause@usvalue 0070      __size_of___lltoft 0020          __pcstackBANK0 0020  
        __pcstackBANK1 00A0           _isdigit$2427 0070    __size_of_init_comms 000E      __size_of_lcd_init 0036  
    __size_of_lcd_goto 0006            sprintf@_val 00AC            sprintf@flag 00A8      __size_of_lcd_puts 001D  
          sprintf@fval 00B2            sprintf@prec 00B6      __size_of_msecbase 000D               ?___awdiv 0076  
             ?___lbdiv 0075               ?___ftadd 003C               ?___awmod 0070              __ptext560 0062  
            __ptext561 0BB8              __ptext570 0C18              __ptext562 0C02              __ptext571 0B87  
            __ptext563 0CD8               ?___lbmod 0070              __ptext580 09D7              __ptext572 0EAF  
            __ptext564 08B7              __ptext556 0A61              __ptext581 09BC              __ptext573 0673  
            __ptext565 0B98              __ptext557 0A2B              __ptext582 05FF              __ptext574 05C5  
            __ptext566 0A09              __ptext558 0B47              __ptext583 0F5B              __ptext575 0733  
            __ptext567 073B              __ptext559 0B64              __ptext584 173E              __ptext576 0587  
            __ptext568 0B6A              __ptext585 06BB              __ptext577 0E6A              __ptext569 0EEC  
            __ptext586 05F1              __ptext578 0618              __ptext587 0BAB              __ptext579 0F69  
            __ptext588 08A9              __ptext589 0000               ?___ftneg 0070               ?___lldiv 0070  
             ?___ftmul 002D               ?___llmod 0020               ?___ftsub 0048              __npowers_ 0810  
             ?___fttol 0020              _lcd_clear 0BB8              __pstrings 0800            __tdiv_to_l_ 06BB  
            _lcd_write 0B98           ??__div_to_l_ 0076               ?_isdigit 0070               ?_sprintf 0052  
       __size_of_scale 0192         __size_of_pause 0011         ___wmul@product 0074     __end_of__div_to_l_ 17F3  
           ?_lcd_clear 0070            __stringbase 080F             ?_lcd_write 0070      ___wmul@multiplier 0070  
            lcd_puts@s 0075           ??_init_comms 0070       __size_of___awdiv 0045       __size_of___lbdiv 001B  
     __size_of___ftadd 00C0       __size_of___awmod 003D       __size_of___lbmod 001C       __size_of___ftneg 0008  
     __size_of___lldiv 0048       __size_of___ftmul 006F       __size_of___llmod 003E       __size_of___ftsub 0016  
     __size_of___fttol 005B               ___awtoft 0B6A               ___ftpack 0F69            _fround$2866 004E  
          _fround$2867 004B               ___lltoft 073B             sprintf@exp 00B0       __size_of_isdigit 000E  
             __powers_ 0837               _lcd_init 0A2B               _lcd_goto 0B64               _lcd_puts 0B47  
     __size_of_sprintf 0525          __size_of_main 0049     __end_of_init_comms 08B7               _msecbase 0BAB  
             clear_ram 08A1            ??_lcd_clear 0075            ??_lcd_write 0074               isdigit@c 0071  
             scale@scl 0046              sprintf@ap 00A4       __tdiv_to_l_@exp1 0025       __tdiv_to_l_@cntr 0024  
            sprintf@sp 00B5       __tdiv_to_l_@quot 0020       ___lldiv@dividend 0074              stringcode 080A  
         ?__tdiv_to_l_ 0070             _OPTION_REG 0081               sprintf@c 00B8               sprintf@f 0052  
     ___lldiv@quotient 0078               stringdir 080A               stringtab 0800  
