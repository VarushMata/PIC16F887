

HI-TECH Software PIC PRO Macro Assembler V9.82 build 9453 
                                                                                               Sun May 08 12:20:58 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 9453
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,delta=2
    10                           	psect	text43,local,class=CODE,delta=2
    11                           	psect	text45,local,class=CODE,delta=2
    12                           	psect	text46,local,class=CODE,delta=2
    13                           	psect	pa_nodes,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  000A                     	;#
    16                           
    17                           	psect	config
    18  2007  E0D4               	dw	57556	;#
    19  2008  FFFF               	dw	65535	;#
    20                           
    21                           	psect	strings
    22  0003                     __pstrings:	
    23  0003                     stringtab:	
    24                           ;	global	stringdir,stringtab,__stringbase
    25                           
    26  0003                     stringcode:	
    27                           ;	String table - string pointers are 1 byte each
    28                           
    29  0003                     stringdir:	
    30  0003  3000               	movlw	high stringdir
    31  0004  008A               	movwf	10
    32  0005  0804               	movf	4,w
    33  0006  0A84               	incf	4,f
    34  0007  0782               	addwf	2,f
    35  0008                     __stringbase:	
    36  0008  3400               	retlw	0
    37  0009                     _DP7:	
    38  0009  343F               	retlw	63
    39  000A  3400               	retlw	0
    40  000B  3406               	retlw	6
    41  000C  3400               	retlw	0
    42  000D  345B               	retlw	91
    43  000E  3400               	retlw	0
    44  000F  344F               	retlw	79
    45  0010  3400               	retlw	0
    46  0011  3466               	retlw	102
    47  0012  3400               	retlw	0
    48  0013  346D               	retlw	109
    49  0014  3400               	retlw	0
    50  0015  347D               	retlw	125
    51  0016  3400               	retlw	0
    52  0017  3407               	retlw	7
    53  0018  3400               	retlw	0
    54  0019  347F               	retlw	127
    55  001A  3400               	retlw	0
    56  001B  3467               	retlw	103
    57  001C  3400               	retlw	0
    58  001F                     _ADCON0	set	31
    59  001E                     _ADRESH	set	30
    60  0005                     _PORTA	set	5
    61  0007                     _PORTC	set	7
    62  0001                     _TMR0	set	1
    63  00F9                     _GO_DONE	set	249
    64  005A                     _T0IF	set	90
    65  009F                     _ADCON1	set	159
    66  009E                     _ADRESL	set	158
    67  0081                     _OPTION_REG	set	129
    68  0085                     _TRISA	set	133
    69  0086                     _TRISB	set	134
    70  0087                     _TRISC	set	135
    71  0088                     _TRISD	set	136
    72  0089                     _TRISE	set	137
    73  0188                     _ANSEL	set	392
    74  0189                     _ANSELH	set	393
    75                           
    76                           	psect	cinit
    77  0747                     start_initialization:	
    78                           
    79                           ; Clear objects allocated to COMMON
    80  0747  01F0               	clrf	__pbssCOMMON& (0+127)
    81  0748  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
    82  0749  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
    83  074A  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
    84  074B  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
    85  074C  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
    86  074D  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
    87  074E  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
    88  074F                     end_of_initialization:	
    89                           ;End of C runtime variable initialization code
    90                           
    91  074F  0183               	clrf	3
    92  0750  120A  118A  2F90   	ljmp	_main	;jump to C main() function
    93                           
    94                           	psect	bssCOMMON
    95  0070                     __pbssCOMMON:	
    96  0070                     _NC:	
    97  0070                     	ds	2
    98  0072                     _ND:	
    99  0072                     	ds	2
   100  0074                     _NU:	
   101  0074                     	ds	2
   102  0076                     _NUM:	
   103  0076                     	ds	2
   104                           
   105                           	psect	cstackCOMMON
   106  0078                     __pcstackCOMMON:	
   107  0078                     ?_pause:	
   108  0078                     ?_msecbase:	
   109                           ; 0 bytes @ 0x0
   110                           
   111  0078                     ??_msecbase:	
   112                           ; 0 bytes @ 0x0
   113                           
   114  0078                     ?_digitos:	
   115                           ; 0 bytes @ 0x0
   116                           
   117  0078                     ??_digitos:	
   118                           ; 0 bytes @ 0x0
   119                           
   120  0078                     ?_main:	
   121                           ; 0 bytes @ 0x0
   122                           
   123  0078                     digitos@x:	
   124                           ; 0 bytes @ 0x0
   125                           
   126  0078                     pause@usvalue:	
   127                           ; 1 bytes @ 0x0
   128                           
   129                           
   130                           ; 2 bytes @ 0x0
   131  0078                     	ds	2
   132  007A                     ??_pause:	
   133  007A                     pause@x:	
   134                           ; 0 bytes @ 0x2
   135                           
   136                           
   137                           ; 2 bytes @ 0x2
   138  007A                     	ds	2
   139  007C                     ??_main:	
   140                           
   141                           ; 0 bytes @ 0x4
   142  007C                     	ds	1
   143                           
   144                           	psect	maintext
   145  0790                     __pmaintext:	
   146 ;;Data sizes: Strings 0, constant 20, data 0, bss 8, persistent 0 stack 0
   147 ;;Auto spaces:   Size  Autos    Used
   148 ;; COMMON          14      5      13
   149 ;; BANK0           80      0       0
   150 ;; BANK1           80      0       0
   151 ;; BANK3           96      0       0
   152 ;; BANK2           96      0       0
   153 ;;
   154 ;; Pointer list with targets:
   155 ;;
   156 ;; Critical Paths under _main in COMMON
   157 ;;
   158 ;;   _main->_pause
   159 ;;
   160 ;; Critical Paths under _main in BANK0
   161 ;;
   162 ;;   None.
   163 ;;
   164 ;; Critical Paths under _main in BANK1
   165 ;;
   166 ;;   None.
   167 ;;
   168 ;; Critical Paths under _main in BANK3
   169 ;;
   170 ;;   None.
   171 ;;
   172 ;; Critical Paths under _main in BANK2
   173 ;;
   174 ;;   None.
   175 ;;
   176 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   177 ;;
   178 ;;
   179 ;;Call Graph Tables:
   180 ;;
   181 ;; ---------------------------------------------------------------------------------
   182 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   183 ;; ---------------------------------------------------------------------------------
   184 ;; (0) _main                                                 1     1      0      75
   185 ;;                                              4 COMMON     1     1      0
   186 ;;                            _digitos
   187 ;;                              _pause
   188 ;; ---------------------------------------------------------------------------------
   189 ;; (1) _pause                                                4     2      2      30
   190 ;;                                              0 COMMON     4     2      2
   191 ;;                           _msecbase
   192 ;; ---------------------------------------------------------------------------------
   193 ;; (2) _msecbase                                             0     0      0       0
   194 ;; ---------------------------------------------------------------------------------
   195 ;; (1) _digitos                                              1     1      0      45
   196 ;;                                              0 COMMON     1     1      0
   197 ;; ---------------------------------------------------------------------------------
   198 ;; Estimated maximum stack depth 2
   199 ;; ---------------------------------------------------------------------------------
   200 ;; Call Graph Graphs:
   201 ;; _main (ROOT)
   202 ;;   _digitos
   203 ;;   _pause
   204 ;;     _msecbase
   205 ;;
   206 ;; Address spaces:
   207 ;;Name               Size   Autos  Total    Cost      Usage
   208 ;;BITCOMMON            E      0       0       0        0.0%
   209 ;;EEDATA             100      0       0       0        0.0%
   210 ;;NULL                 0      0       0       0        0.0%
   211 ;;CODE                 0      0       0       0        0.0%
   212 ;;COMMON               E      5       D       1       92.9%
   213 ;;BITSFR0              0      0       0       1        0.0%
   214 ;;SFR0                 0      0       0       1        0.0%
   215 ;;BITSFR1              0      0       0       2        0.0%
   216 ;;SFR1                 0      0       0       2        0.0%
   217 ;;STACK                0      0       2       2        0.0%
   218 ;;ABS                  0      0       D       3        0.0%
   219 ;;BITBANK0            50      0       0       4        0.0%
   220 ;;BITSFR3              0      0       0       4        0.0%
   221 ;;SFR3                 0      0       0       4        0.0%
   222 ;;BANK0               50      0       0       5        0.0%
   223 ;;BITSFR2              0      0       0       5        0.0%
   224 ;;SFR2                 0      0       0       5        0.0%
   225 ;;BITBANK1            50      0       0       6        0.0%
   226 ;;BANK1               50      0       0       7        0.0%
   227 ;;BITBANK3            60      0       0       8        0.0%
   228 ;;BANK3               60      0       0       9        0.0%
   229 ;;BITBANK2            60      0       0      10        0.0%
   230 ;;BANK2               60      0       0      11        0.0%
   231 ;;DATA                 0      0       F      12        0.0%
   232                           
   233                           
   234 ;; *************** function _main *****************
   235 ;; Defined at:
   236 ;;		line 42 in file "C:\Users\Jorge\OneDrive\Escritorio\PROGS C\Faltan\VOLDISPLAY\VOLDISPLAY.c"
   237 ;; Parameters:    Size  Location     Type
   238 ;;		None
   239 ;; Auto vars:     Size  Location     Type
   240 ;;		None
   241 ;; Return value:  Size  Location     Type
   242 ;;		None               void
   243 ;; Registers used:
   244 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   245 ;; Tracked objects:
   246 ;;		On entry : 17F/0
   247 ;;		On exit  : 11F/0
   248 ;;		Unchanged: FFE80/0
   249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   250 ;;      Params:         0       0       0       0       0
   251 ;;      Locals:         0       0       0       0       0
   252 ;;      Temps:          1       0       0       0       0
   253 ;;      Totals:         1       0       0       0       0
   254 ;;Total ram usage:        1 bytes
   255 ;; Hardware stack levels required when called:    2
   256 ;; This function calls:
   257 ;;		_digitos
   258 ;;		_pause
   259 ;; This function is called by:
   260 ;;		Startup code after reset
   261 ;; This function uses a non-reentrant model
   262 ;;
   263  0790                     _main:	
   264                           
   265                           ;VOLDISPLAY.c: 43: ANSEL = 0x60;
   266                           
   267                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   268  0790  3060               	movlw	96
   269  0791  1683               	bsf	3,5	;RP0=1, select bank3
   270  0792  1703               	bsf	3,6	;RP1=1, select bank3
   271  0793  0088               	movwf	8	;volatile
   272                           
   273                           ;VOLDISPLAY.c: 44: ANSELH = 0x00;
   274  0794  0189               	clrf	9	;volatile
   275                           
   276                           ;VOLDISPLAY.c: 46: TRISA = 0x00;
   277  0795  1303               	bcf	3,6	;RP1=0, select bank1
   278  0796  0185               	clrf	5	;volatile
   279                           
   280                           ;VOLDISPLAY.c: 47: TRISB = 0x00;
   281  0797  0186               	clrf	6	;volatile
   282                           
   283                           ;VOLDISPLAY.c: 48: TRISC = 0x00;
   284  0798  0187               	clrf	7	;volatile
   285                           
   286                           ;VOLDISPLAY.c: 49: TRISD = 0x00;
   287  0799  0188               	clrf	8	;volatile
   288                           
   289                           ;VOLDISPLAY.c: 50: TRISE = 0x03;
   290  079A  3003               	movlw	3
   291  079B  0089               	movwf	9	;volatile
   292                           
   293                           ;VOLDISPLAY.c: 51: ADCON1 = 0x00;
   294  079C  019F               	clrf	31	;volatile
   295  079D                     l2464:	
   296                           
   297                           ;VOLDISPLAY.c: 54: {
   298                           ;VOLDISPLAY.c: 56: ADCON0=0XD5;
   299  079D  30D5               	movlw	213
   300  079E  1283               	bcf	3,5	;RP0=0, select bank0
   301  079F  1303               	bcf	3,6	;RP1=0, select bank0
   302  07A0  009F               	movwf	31	;volatile
   303                           
   304                           ;VOLDISPLAY.c: 57: GO_DONE=1;
   305  07A1  149F               	bsf	31,1
   306  07A2                     l1052:	
   307                           ;VOLDISPLAY.c: 58: while(GO_DONE);
   308                           
   309  07A2  189F               	btfsc	31,1
   310  07A3  2FA2               	goto	l1052
   311                           
   312                           ;VOLDISPLAY.c: 60: NUM=(ADRESH<<2)|(ADRESL>>6);
   313  07A4  081E               	movf	30,w	;volatile
   314  07A5  00F6               	movwf	_NUM
   315  07A6  01F7               	clrf	_NUM+1
   316  07A7  1003               	clrc
   317  07A8  0DF6               	rlf	_NUM,f
   318  07A9  0DF7               	rlf	_NUM+1,f
   319  07AA  1003               	clrc
   320  07AB  0DF6               	rlf	_NUM,f
   321  07AC  0DF7               	rlf	_NUM+1,f
   322  07AD  1683               	bsf	3,5	;RP0=1, select bank1
   323  07AE  081E               	movf	30,w	;volatile
   324  07AF  00FC               	movwf	??_main
   325  07B0  3006               	movlw	6
   326  07B1                     u75:	
   327  07B1  1003               	clrc
   328  07B2  0CFC               	rrf	??_main,f
   329  07B3  3EFF               	addlw	-1
   330  07B4  1D03               	skipz
   331  07B5  2FB1               	goto	u75
   332  07B6  087C               	movf	??_main,w
   333  07B7  04F6               	iorwf	_NUM,f
   334                           
   335                           ;VOLDISPLAY.c: 62: digitos(NUM);
   336  07B8  0876               	movf	_NUM,w
   337  07B9  120A  118A  276F   	fcall	_digitos
      +       120A  118A         
   338                           
   339                           ;VOLDISPLAY.c: 64: PORTC = 0x01;
   340  07BE  3001               	movlw	1
   341  07BF  1283               	bcf	3,5	;RP0=0, select bank0
   342  07C0  0087               	movwf	7	;volatile
   343                           
   344                           ;VOLDISPLAY.c: 65: PORTA = DP7[NU];
   345  07C1  1003               	clrc
   346  07C2  0D74               	rlf	_NU,w
   347  07C3  3E01               	addlw	low (_DP7-__stringbase)
   348  07C4  0084               	movwf	4
   349  07C5  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
   350  07CA  0085               	movwf	5	;volatile
   351                           
   352                           ;VOLDISPLAY.c: 66: pause(1);
   353  07CB  01F8               	clrf	?_pause
   354  07CC  0AF8               	incf	?_pause,f
   355  07CD  01F9               	clrf	?_pause+1
   356  07CE  120A  118A  2753   	fcall	_pause
      +       120A  118A         
   357                           
   358                           ;VOLDISPLAY.c: 68: PORTC = 0x02;
   359  07D3  3002               	movlw	2
   360  07D4  1283               	bcf	3,5	;RP0=0, select bank0
   361  07D5  1303               	bcf	3,6	;RP1=0, select bank0
   362  07D6  0087               	movwf	7	;volatile
   363                           
   364                           ;VOLDISPLAY.c: 69: PORTA = DP7[ND];
   365  07D7  1003               	clrc
   366  07D8  0D72               	rlf	_ND,w
   367  07D9  3E01               	addlw	low (_DP7-__stringbase)
   368  07DA  0084               	movwf	4
   369  07DB  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
   370  07E0  0085               	movwf	5	;volatile
   371                           
   372                           ;VOLDISPLAY.c: 70: pause(1);
   373  07E1  01F8               	clrf	?_pause
   374  07E2  0AF8               	incf	?_pause,f
   375  07E3  01F9               	clrf	?_pause+1
   376  07E4  120A  118A  2753   	fcall	_pause
      +       120A  118A         
   377                           
   378                           ;VOLDISPLAY.c: 72: PORTC = 0x04;
   379  07E9  3004               	movlw	4
   380  07EA  1283               	bcf	3,5	;RP0=0, select bank0
   381  07EB  1303               	bcf	3,6	;RP1=0, select bank0
   382  07EC  0087               	movwf	7	;volatile
   383                           
   384                           ;VOLDISPLAY.c: 73: PORTA = DP7[NC];
   385  07ED  1003               	clrc
   386  07EE  0D70               	rlf	_NC,w
   387  07EF  3E01               	addlw	low (_DP7-__stringbase)
   388  07F0  0084               	movwf	4
   389  07F1  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
   390  07F6  0085               	movwf	5	;volatile
   391                           
   392                           ;VOLDISPLAY.c: 74: pause(1);
   393  07F7  01F8               	clrf	?_pause
   394  07F8  0AF8               	incf	?_pause,f
   395  07F9  01F9               	clrf	?_pause+1
   396  07FA  120A  118A  2753   	fcall	_pause
      +       120A  118A         
   397  07FF  2F9D               	goto	l2464
   398  0800                     __end_of_main:	
   399                           
   400                           	psect	text43
   401  0753                     __ptext43:	
   402 ;; =============== function _main ends ============
   403                           
   404                           
   405 ;; *************** function _pause *****************
   406 ;; Defined at:
   407 ;;		line 85 in file "C:\Users\Jorge\OneDrive\Escritorio\PROGS C\Faltan\VOLDISPLAY\VOLDISPLAY.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;  usvalue         2    0[COMMON] unsigned short 
   410 ;; Auto vars:     Size  Location     Type
   411 ;;  x               2    2[COMMON] unsigned short 
   412 ;; Return value:  Size  Location     Type
   413 ;;		None               void
   414 ;; Registers used:
   415 ;;		wreg, status,2, status,0, pclath, cstack
   416 ;; Tracked objects:
   417 ;;		On entry : 17F/0
   418 ;;		On exit  : 11F/0
   419 ;;		Unchanged: FFE80/0
   420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   421 ;;      Params:         2       0       0       0       0
   422 ;;      Locals:         2       0       0       0       0
   423 ;;      Temps:          0       0       0       0       0
   424 ;;      Totals:         4       0       0       0       0
   425 ;;Total ram usage:        4 bytes
   426 ;; Hardware stack levels used:    1
   427 ;; Hardware stack levels required when called:    1
   428 ;; This function calls:
   429 ;;		_msecbase
   430 ;; This function is called by:
   431 ;;		_main
   432 ;; This function uses a non-reentrant model
   433 ;;
   434  0753                     _pause:	
   435                           
   436                           ;VOLDISPLAY.c: 86: unsigned short x;
   437                           ;VOLDISPLAY.c: 87: for (x=0; x<usvalue; x++)
   438                           
   439                           ; Regs used in _pause: [wreg+status,2+status,0+pclath+cstack]
   440  0753  01FA               	clrf	pause@x
   441  0754  01FB               	clrf	pause@x+1
   442  0755                     l2448:	
   443  0755  0879               	movf	pause@usvalue+1,w
   444  0756  027B               	subwf	pause@x+1,w
   445  0757  1D03               	skipz
   446  0758  2F5B               	goto	u55
   447  0759  0878               	movf	pause@usvalue,w
   448  075A  027A               	subwf	pause@x,w
   449  075B                     u55:	
   450  075B  1803               	btfsc	3,0
   451  075C  0008               	return
   452                           
   453                           ;VOLDISPLAY.c: 88: {
   454                           ;VOLDISPLAY.c: 89: msecbase();
   455  075D  2764  120A  118A   	fcall	_msecbase
   456  0760  0AFA               	incf	pause@x,f
   457  0761  1903               	skipnz
   458  0762  0AFB               	incf	pause@x+1,f
   459  0763  2F55               	goto	l2448
   460  0764                     __end_of_pause:	
   461  0764                     __ptext44:	
   462 ;; =============== function _pause ends ============
   463                           
   464                           
   465 ;; *************** function _msecbase *****************
   466 ;; Defined at:
   467 ;;		line 94 in file "C:\Users\Jorge\OneDrive\Escritorio\PROGS C\Faltan\VOLDISPLAY\VOLDISPLAY.c"
   468 ;; Parameters:    Size  Location     Type
   469 ;;		None
   470 ;; Auto vars:     Size  Location     Type
   471 ;;		None
   472 ;; Return value:  Size  Location     Type
   473 ;;		None               void
   474 ;; Registers used:
   475 ;;		wreg
   476 ;; Tracked objects:
   477 ;;		On entry : 11F/0
   478 ;;		On exit  : 11F/0
   479 ;;		Unchanged: FFE80/0
   480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   481 ;;      Params:         0       0       0       0       0
   482 ;;      Locals:         0       0       0       0       0
   483 ;;      Temps:          0       0       0       0       0
   484 ;;      Totals:         0       0       0       0       0
   485 ;;Total ram usage:        0 bytes
   486 ;; Hardware stack levels used:    1
   487 ;; This function calls:
   488 ;;		Nothing
   489 ;; This function is called by:
   490 ;;		_pause
   491 ;; This function uses a non-reentrant model
   492 ;;
   493  0764                     _msecbase:	
   494                           
   495                           ;VOLDISPLAY.c: 95: OPTION_REG = 0b11010110;
   496                           
   497                           ; Regs used in _msecbase: [wreg]
   498  0764  30D6               	movlw	214
   499  0765  1683               	bsf	3,5	;RP0=1, select bank1
   500  0766  1303               	bcf	3,6	;RP1=0, select bank1
   501  0767  0081               	movwf	1	;volatile
   502                           
   503                           ;VOLDISPLAY.c: 96: TMR0 = 0x7A;
   504  0768  307A               	movlw	122
   505  0769  1283               	bcf	3,5	;RP0=0, select bank0
   506  076A  0081               	movwf	1	;volatile
   507  076B                     l1066:	
   508                           ;VOLDISPLAY.c: 97: while(!T0IF);
   509                           
   510  076B  1D0B               	btfss	11,2
   511  076C  2F6B               	goto	l1066
   512                           
   513                           ;VOLDISPLAY.c: 98: T0IF = 0;
   514  076D  110B               	bcf	11,2
   515  076E  0008               	return
   516  076F                     __end_of_msecbase:	
   517                           
   518                           	psect	text45
   519  076F                     __ptext45:	
   520 ;; =============== function _msecbase ends ============
   521                           
   522                           
   523 ;; *************** function _digitos *****************
   524 ;; Defined at:
   525 ;;		line 20 in file "C:\Users\Jorge\OneDrive\Escritorio\PROGS C\Faltan\VOLDISPLAY\VOLDISPLAY.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;  x               1    wreg     unsigned char 
   528 ;; Auto vars:     Size  Location     Type
   529 ;;  x               1    0[COMMON] unsigned char 
   530 ;; Return value:  Size  Location     Type
   531 ;;		None               void
   532 ;; Registers used:
   533 ;;		wreg, status,2, status,0
   534 ;; Tracked objects:
   535 ;;		On entry : 17F/20
   536 ;;		On exit  : 17F/20
   537 ;;		Unchanged: FFE80/0
   538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   539 ;;      Params:         0       0       0       0       0
   540 ;;      Locals:         1       0       0       0       0
   541 ;;      Temps:          0       0       0       0       0
   542 ;;      Totals:         1       0       0       0       0
   543 ;;Total ram usage:        1 bytes
   544 ;; Hardware stack levels used:    1
   545 ;; This function calls:
   546 ;;		Nothing
   547 ;; This function is called by:
   548 ;;		_main
   549 ;; This function uses a non-reentrant model
   550 ;;
   551  076F                     _digitos:	
   552                           
   553                           ; Regs used in _digitos: [wreg+status,2+status,0]
   554                           ;digitos@x stored from wreg
   555  076F  00F8               	movwf	digitos@x
   556                           
   557                           ;VOLDISPLAY.c: 22: NC = 0;
   558  0770  01F0               	clrf	_NC
   559  0771  01F1               	clrf	_NC+1
   560                           
   561                           ;VOLDISPLAY.c: 23: ND = 0;
   562  0772  01F2               	clrf	_ND
   563  0773  01F3               	clrf	_ND+1
   564                           
   565                           ;VOLDISPLAY.c: 24: NU = 0;
   566  0774  01F4               	clrf	_NU
   567  0775  01F5               	clrf	_NU+1
   568  0776                     l2428:	
   569                           ;VOLDISPLAY.c: 26: while(x>=0x33){
   570                           
   571  0776  3033               	movlw	51
   572  0777  0278               	subwf	digitos@x,w
   573  0778  1C03               	btfss	3,0
   574  0779  2F82               	goto	l2432
   575                           
   576                           ;VOLDISPLAY.c: 27: x=x-0x33;
   577  077A  30CD               	movlw	205
   578  077B  07F8               	addwf	digitos@x,f
   579                           
   580                           ;VOLDISPLAY.c: 28: NC++;
   581  077C  0AF0               	incf	_NC,f
   582  077D  1903               	skipnz
   583  077E  0AF1               	incf	_NC+1,f
   584  077F  2F76               	goto	l2428
   585  0780                     l2430:	
   586                           
   587                           ;VOLDISPLAY.c: 31: x=x-0x05;
   588  0780  30FB               	movlw	251
   589  0781  07F8               	addwf	digitos@x,f
   590  0782                     l2432:	
   591  0782  3005               	movlw	5
   592  0783  0278               	subwf	digitos@x,w
   593  0784  1C03               	btfss	3,0
   594  0785  2F8C               	goto	l2438
   595  0786  2F80               	goto	l2430
   596  0787                     l2434:	
   597                           
   598                           ;VOLDISPLAY.c: 35: x=x-0x01;
   599  0787  30FF               	movlw	255
   600  0788  07F8               	addwf	digitos@x,f
   601                           
   602                           ;VOLDISPLAY.c: 36: NU++;
   603  0789  0AF4               	incf	_NU,f
   604  078A  1903               	skipnz
   605  078B  0AF5               	incf	_NU+1,f
   606  078C                     l2438:	
   607  078C  08F8               	movf	digitos@x,f
   608  078D  1903               	btfsc	3,2
   609  078E  0008               	return
   610  078F  2F87               	goto	l2434
   611  0790                     __end_of_digitos:	
   612                           
   613                           	psect	text46
   614  0000                     __ptext46:	
   615 ;; =============== function _digitos ends ============
   616                           
   617  007E                     btemp	set	126	;btemp
   618  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Sun May 08 12:20:58 2022

                   pc 0002                    _NC 0070                    _ND 0072                    _NU 0074  
                  u55 075B                    u75 07B1                    fsr 0004                   _DP7 0009  
                 _NUM 0076                   fsr0 0004                  l1052 07A2                  l1063 0000  
                l1048 0000                  l1066 076B                  l1069 0000                  l2430 0780  
                l2422 0000                  l2432 0782                  l2440 0000                  l2434 0787  
                l2426 0000                  l2442 0000                  l2450 0000                  l2436 0000  
                l2428 0776                  l2460 0000                  l2452 0000                  l2438 078C  
                l2446 0000                  l2470 0000                  l2462 0000                  l2454 0000  
                l2448 0755                  l2480 0000                  l2472 0000                  l2464 079D  
                l2456 0000                  l2490 0000                  l2482 0000                  l2474 0000  
                l2466 0000                  l2458 0000                  l2484 0000                  l2476 0000  
                l2486 0000                  l2478 0000                  l2488 0000                  _T0IF 005A  
                _TMR0 0001                  _main 0790                  btemp 007E                  start 0000  
               ?_main 0078                 _ANSEL 0188                 _PORTA 0005                 _PORTC 0007  
               _TRISA 0085                 _TRISB 0086                 _TRISC 0087                 _TRISD 0088  
               _TRISE 0089       __end_of_digitos 0790                 _pause 0753                 pclath 000A  
               status 0003                 wtemp0 007E          __end_of_main 0800                ??_main 007C  
              _ADCON0 001F                _ADCON1 009F                _ADRESH 001E                _ADRESL 009E  
              ?_pause 0078                _ANSELH 0189             ??_digitos 0078      __end_of_msecbase 076F  
              pause@x 007A        __pcstackCOMMON 0078         __end_of_pause 0764               ??_pause 007A  
          __pmaintext 0790               _GO_DONE 00F9             ?_msecbase 0078               _digitos 076F  
end_of_initialization 074F            ??_msecbase 0078   start_initialization 0747          pause@usvalue 0078  
         __pbssCOMMON 0070     __size_of_msecbase 000B             __pstrings 0003              ?_digitos 0078  
      __size_of_pause 0011           __stringbase 0008      __size_of_digitos 0021              __ptext43 0753  
            __ptext44 0764              __ptext45 076F              __ptext46 0000         __size_of_main 0070  
            _msecbase 0764              digitos@x 0078             stringcode 0003            _OPTION_REG 0081  
            stringdir 0003              stringtab 0003  
