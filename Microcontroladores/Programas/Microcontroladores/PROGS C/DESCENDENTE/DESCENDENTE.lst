

HI-TECH Software PIC PRO Macro Assembler V9.82 build 9453 
                                                                                               Sat May 07 21:32:57 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 9453
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,delta=2
     9                           	psect	text42,local,class=CODE,delta=2
    10                           	psect	text44,local,class=CODE,delta=2
    11                           	psect	pa_nodes,global,class=CODE,delta=2
    12                           	dabs	1,0x7E,2
    13  000A                     	;#
    14                           
    15                           	psect	config
    16  2007  E0D4               	dw	57556	;#
    17  2008  FFFF               	dw	65535	;#
    18                           
    19                           	psect	nvCOMMON
    20  0074                     __pnvCOMMON:	
    21  0074                     _VPA:	
    22  0074                     	ds	1
    23  0005                     _PORTA	set	5
    24  0001                     _TMR0	set	1
    25  005A                     _T0IF	set	90
    26  0081                     _OPTION_REG	set	129
    27  0085                     _TRISA	set	133
    28  0086                     _TRISB	set	134
    29  0087                     _TRISC	set	135
    30  0088                     _TRISD	set	136
    31  0089                     _TRISE	set	137
    32  0188                     _ANSEL	set	392
    33  0189                     _ANSELH	set	393
    34                           
    35                           	psect	cinit
    36  07C0                     start_initialization:	
    37  07C0                     end_of_initialization:	
    38                           ;End of C runtime variable initialization code
    39                           
    40  07C0  0183               	clrf	3
    41  07C1  120A  118A  2FE0   	ljmp	_main	;jump to C main() function
    42                           
    43                           	psect	cstackCOMMON
    44  0070                     __pcstackCOMMON:	
    45  0070                     ?_pause:	
    46  0070                     ?_msecbase:	
    47                           ; 0 bytes @ 0x0
    48                           
    49  0070                     ??_msecbase:	
    50                           ; 0 bytes @ 0x0
    51                           
    52  0070                     ?_main:	
    53                           ; 0 bytes @ 0x0
    54                           
    55  0070                     pause@usvalue:	
    56                           ; 0 bytes @ 0x0
    57                           
    58                           
    59                           ; 2 bytes @ 0x0
    60  0070                     	ds	2
    61  0072                     ??_pause:	
    62  0072                     pause@x:	
    63                           ; 0 bytes @ 0x2
    64                           
    65                           
    66                           ; 2 bytes @ 0x2
    67  0072                     	ds	2
    68  0074                     ??_main:	
    69                           
    70                           	psect	maintext
    71  07E0                     __pmaintext:	
    72                           ; 0 bytes @ 0x4
    73 ;;Data sizes: Strings 0, constant 0, data 0, bss 0, persistent 1 stack 0
    74 ;;Auto spaces:   Size  Autos    Used
    75 ;; COMMON          14      4       5
    76 ;; BANK0           80      0       0
    77 ;; BANK1           80      0       0
    78 ;; BANK3           96      0       0
    79 ;; BANK2           96      0       0
    80 ;;
    81 ;; Pointer list with targets:
    82 ;;
    83 ;; Critical Paths under _main in COMMON
    84 ;;
    85 ;;   _main->_pause
    86 ;;
    87 ;; Critical Paths under _main in BANK0
    88 ;;
    89 ;;   None.
    90 ;;
    91 ;; Critical Paths under _main in BANK1
    92 ;;
    93 ;;   None.
    94 ;;
    95 ;; Critical Paths under _main in BANK3
    96 ;;
    97 ;;   None.
    98 ;;
    99 ;; Critical Paths under _main in BANK2
   100 ;;
   101 ;;   None.
   102 ;;
   103 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   104 ;;
   105 ;;
   106 ;;Call Graph Tables:
   107 ;;
   108 ;; ---------------------------------------------------------------------------------
   109 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   110 ;; ---------------------------------------------------------------------------------
   111 ;; (0) _main                                                 0     0      0      30
   112 ;;                              _pause
   113 ;; ---------------------------------------------------------------------------------
   114 ;; (1) _pause                                                4     2      2      30
   115 ;;                                              0 COMMON     4     2      2
   116 ;;                           _msecbase
   117 ;; ---------------------------------------------------------------------------------
   118 ;; (2) _msecbase                                             0     0      0       0
   119 ;; ---------------------------------------------------------------------------------
   120 ;; Estimated maximum stack depth 2
   121 ;; ---------------------------------------------------------------------------------
   122 ;; Call Graph Graphs:
   123 ;; _main (ROOT)
   124 ;;   _pause
   125 ;;     _msecbase
   126 ;;
   127 ;; Address spaces:
   128 ;;Name               Size   Autos  Total    Cost      Usage
   129 ;;BITCOMMON            E      0       0       0        0.0%
   130 ;;EEDATA             100      0       0       0        0.0%
   131 ;;NULL                 0      0       0       0        0.0%
   132 ;;CODE                 0      0       0       0        0.0%
   133 ;;COMMON               E      4       5       1       35.7%
   134 ;;BITSFR0              0      0       0       1        0.0%
   135 ;;SFR0                 0      0       0       1        0.0%
   136 ;;BITSFR1              0      0       0       2        0.0%
   137 ;;SFR1                 0      0       0       2        0.0%
   138 ;;STACK                0      0       2       2        0.0%
   139 ;;ABS                  0      0       5       3        0.0%
   140 ;;BITBANK0            50      0       0       4        0.0%
   141 ;;BITSFR3              0      0       0       4        0.0%
   142 ;;SFR3                 0      0       0       4        0.0%
   143 ;;BANK0               50      0       0       5        0.0%
   144 ;;BITSFR2              0      0       0       5        0.0%
   145 ;;SFR2                 0      0       0       5        0.0%
   146 ;;BITBANK1            50      0       0       6        0.0%
   147 ;;BANK1               50      0       0       7        0.0%
   148 ;;BITBANK3            60      0       0       8        0.0%
   149 ;;BANK3               60      0       0       9        0.0%
   150 ;;BITBANK2            60      0       0      10        0.0%
   151 ;;BANK2               60      0       0      11        0.0%
   152 ;;DATA                 0      0       7      12        0.0%
   153                           
   154                           
   155 ;; *************** function _main *****************
   156 ;; Defined at:
   157 ;;		line 13 in file "C:\Users\Jorge\OneDrive\Escritorio\PROGS C\DESCENDENTE\DESCENDENTE.c"
   158 ;; Parameters:    Size  Location     Type
   159 ;;		None
   160 ;; Auto vars:     Size  Location     Type
   161 ;;		None
   162 ;; Return value:  Size  Location     Type
   163 ;;		None               void
   164 ;; Registers used:
   165 ;;		wreg, status,2, status,0, pclath, cstack
   166 ;; Tracked objects:
   167 ;;		On entry : 17F/0
   168 ;;		On exit  : 11F/0
   169 ;;		Unchanged: FFE80/0
   170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   171 ;;      Params:         0       0       0       0       0
   172 ;;      Locals:         0       0       0       0       0
   173 ;;      Temps:          0       0       0       0       0
   174 ;;      Totals:         0       0       0       0       0
   175 ;;Total ram usage:        0 bytes
   176 ;; Hardware stack levels required when called:    2
   177 ;; This function calls:
   178 ;;		_pause
   179 ;; This function is called by:
   180 ;;		Startup code after reset
   181 ;; This function uses a non-reentrant model
   182 ;;
   183  07E0                     _main:	
   184                           
   185                           ;DESCENDENTE.c: 16: ANSEL = 0x00;
   186                           
   187                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   188  07E0  1683               	bsf	3,5	;RP0=1, select bank3
   189  07E1  1703               	bsf	3,6	;RP1=1, select bank3
   190  07E2  0188               	clrf	8	;volatile
   191                           
   192                           ;DESCENDENTE.c: 17: ANSELH = 0x00;
   193  07E3  0189               	clrf	9	;volatile
   194                           
   195                           ;DESCENDENTE.c: 19: TRISA = 0x00;
   196  07E4  1303               	bcf	3,6	;RP1=0, select bank1
   197  07E5  0185               	clrf	5	;volatile
   198                           
   199                           ;DESCENDENTE.c: 20: TRISB = 0xFF;
   200  07E6  30FF               	movlw	255
   201  07E7  0086               	movwf	6	;volatile
   202                           
   203                           ;DESCENDENTE.c: 21: TRISC = 0x00;
   204  07E8  0187               	clrf	7	;volatile
   205                           
   206                           ;DESCENDENTE.c: 22: TRISD = 0x00;
   207  07E9  0188               	clrf	8	;volatile
   208                           
   209                           ;DESCENDENTE.c: 23: TRISE = 0x03;
   210  07EA  3003               	movlw	3
   211  07EB  0089               	movwf	9	;volatile
   212  07EC                     l2422:	
   213                           
   214                           ;DESCENDENTE.c: 26: for(VPA = 0x64;0x01<=VPA;VPA-- ){
   215  07EC  3064               	movlw	100
   216  07ED  00F4               	movwf	_VPA
   217  07EE                     l2430:	
   218  07EE  08F4               	movf	_VPA,f
   219  07EF  1903               	btfsc	3,2
   220  07F0  2FEC               	goto	l2422
   221                           
   222                           ;DESCENDENTE.c: 27: PORTA = VPA;
   223  07F1  0874               	movf	_VPA,w
   224  07F2  1283               	bcf	3,5	;RP0=0, select bank0
   225  07F3  1303               	bcf	3,6	;RP1=0, select bank0
   226  07F4  0085               	movwf	5	;volatile
   227                           
   228                           ;DESCENDENTE.c: 28: pause(438);
   229  07F5  30B6               	movlw	182
   230  07F6  00F0               	movwf	?_pause
   231  07F7  3001               	movlw	1
   232  07F8  00F1               	movwf	?_pause+1
   233  07F9  120A  118A  27C4   	fcall	_pause
      +       120A  118A         
   234  07FE  03F4               	decf	_VPA,f
   235  07FF  2FEE               	goto	l2430
   236  0800                     __end_of_main:	
   237                           
   238                           	psect	text42
   239  07C4                     __ptext42:	
   240 ;; =============== function _main ends ============
   241                           
   242                           
   243 ;; *************** function _pause *****************
   244 ;; Defined at:
   245 ;;		line 34 in file "C:\Users\Jorge\OneDrive\Escritorio\PROGS C\DESCENDENTE\DESCENDENTE.c"
   246 ;; Parameters:    Size  Location     Type
   247 ;;  usvalue         2    0[COMMON] unsigned short 
   248 ;; Auto vars:     Size  Location     Type
   249 ;;  x               2    2[COMMON] unsigned short 
   250 ;; Return value:  Size  Location     Type
   251 ;;		None               void
   252 ;; Registers used:
   253 ;;		wreg, status,2, status,0, pclath, cstack
   254 ;; Tracked objects:
   255 ;;		On entry : 17F/0
   256 ;;		On exit  : 11F/0
   257 ;;		Unchanged: FFE80/0
   258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   259 ;;      Params:         2       0       0       0       0
   260 ;;      Locals:         2       0       0       0       0
   261 ;;      Temps:          0       0       0       0       0
   262 ;;      Totals:         4       0       0       0       0
   263 ;;Total ram usage:        4 bytes
   264 ;; Hardware stack levels used:    1
   265 ;; Hardware stack levels required when called:    1
   266 ;; This function calls:
   267 ;;		_msecbase
   268 ;; This function is called by:
   269 ;;		_main
   270 ;; This function uses a non-reentrant model
   271 ;;
   272  07C4                     _pause:	
   273                           
   274                           ;DESCENDENTE.c: 35: unsigned short x;
   275                           ;DESCENDENTE.c: 36: for (x=0; x<usvalue; x++)
   276                           
   277                           ; Regs used in _pause: [wreg+status,2+status,0+pclath+cstack]
   278  07C4  01F2               	clrf	pause@x
   279  07C5  01F3               	clrf	pause@x+1
   280  07C6                     l2410:	
   281  07C6  0871               	movf	pause@usvalue+1,w
   282  07C7  0273               	subwf	pause@x+1,w
   283  07C8  1D03               	skipz
   284  07C9  2FCC               	goto	u25
   285  07CA  0870               	movf	pause@usvalue,w
   286  07CB  0272               	subwf	pause@x,w
   287  07CC                     u25:	
   288  07CC  1803               	btfsc	3,0
   289  07CD  0008               	return
   290                           
   291                           ;DESCENDENTE.c: 37: {
   292                           ;DESCENDENTE.c: 38: msecbase();
   293  07CE  27D5  120A  118A   	fcall	_msecbase
   294  07D1  0AF2               	incf	pause@x,f
   295  07D2  1903               	skipnz
   296  07D3  0AF3               	incf	pause@x+1,f
   297  07D4  2FC6               	goto	l2410
   298  07D5                     __end_of_pause:	
   299  07D5                     __ptext43:	
   300 ;; =============== function _pause ends ============
   301                           
   302                           
   303 ;; *************** function _msecbase *****************
   304 ;; Defined at:
   305 ;;		line 43 in file "C:\Users\Jorge\OneDrive\Escritorio\PROGS C\DESCENDENTE\DESCENDENTE.c"
   306 ;; Parameters:    Size  Location     Type
   307 ;;		None
   308 ;; Auto vars:     Size  Location     Type
   309 ;;		None
   310 ;; Return value:  Size  Location     Type
   311 ;;		None               void
   312 ;; Registers used:
   313 ;;		wreg
   314 ;; Tracked objects:
   315 ;;		On entry : 11F/0
   316 ;;		On exit  : 11F/0
   317 ;;		Unchanged: FFE80/0
   318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   319 ;;      Params:         0       0       0       0       0
   320 ;;      Locals:         0       0       0       0       0
   321 ;;      Temps:          0       0       0       0       0
   322 ;;      Totals:         0       0       0       0       0
   323 ;;Total ram usage:        0 bytes
   324 ;; Hardware stack levels used:    1
   325 ;; This function calls:
   326 ;;		Nothing
   327 ;; This function is called by:
   328 ;;		_pause
   329 ;; This function uses a non-reentrant model
   330 ;;
   331  07D5                     _msecbase:	
   332                           
   333                           ;DESCENDENTE.c: 44: OPTION_REG = 0b11010001;
   334                           
   335                           ; Regs used in _msecbase: [wreg]
   336  07D5  30D1               	movlw	209
   337  07D6  1683               	bsf	3,5	;RP0=1, select bank1
   338  07D7  1303               	bcf	3,6	;RP1=0, select bank1
   339  07D8  0081               	movwf	1	;volatile
   340                           
   341                           ;DESCENDENTE.c: 45: TMR0 = 0x7A;
   342  07D9  307A               	movlw	122
   343  07DA  1283               	bcf	3,5	;RP0=0, select bank0
   344  07DB  0081               	movwf	1	;volatile
   345  07DC                     l1046:	
   346                           ;DESCENDENTE.c: 46: while(!T0IF);
   347                           
   348  07DC  1D0B               	btfss	11,2
   349  07DD  2FDC               	goto	l1046
   350                           
   351                           ;DESCENDENTE.c: 47: T0IF = 0;
   352  07DE  110B               	bcf	11,2
   353  07DF  0008               	return
   354  07E0                     __end_of_msecbase:	
   355                           
   356                           	psect	text44
   357  0000                     __ptext44:	
   358 ;; =============== function _msecbase ends ============
   359                           
   360  007E                     btemp	set	126	;btemp
   361  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Sat May 07 21:32:57 2022

                  u25 07CC                   _VPA 0074                  l1043 0000                  l1046 07DC  
                l1049 0000                  l2402 0000                  l2410 07C6                  l2404 0000  
                l2420 0000                  l2412 0000                  l2430 07EE                  l2422 07EC  
                l2414 0000                  l2408 0000                  l2416 0000                  l2426 0000  
                l2418 0000                  l2428 0000                  _T0IF 005A                  _TMR0 0001  
                _main 07E0                  btemp 007E                  start 0000                 ?_main 0070  
               _ANSEL 0188                 _PORTA 0005                 _TRISA 0085                 _TRISB 0086  
               _TRISC 0087                 _TRISD 0088                 _TRISE 0089                 _pause 07C4  
               status 0003                 wtemp0 007E          __end_of_main 0800                ??_main 0074  
              ?_pause 0070                _ANSELH 0189      __end_of_msecbase 07E0                pause@x 0072  
      __pcstackCOMMON 0070         __end_of_pause 07D5               ??_pause 0072            __pnvCOMMON 0074  
          __pmaintext 07E0             ?_msecbase 0070  end_of_initialization 07C0            ??_msecbase 0070  
 start_initialization 07C0          pause@usvalue 0070     __size_of_msecbase 000B        __size_of_pause 0011  
            __ptext42 07C4              __ptext43 07D5              __ptext44 0000         __size_of_main 0020  
            _msecbase 07D5            _OPTION_REG 0081  
