

HI-TECH Software PIC PRO Macro Assembler V9.82 build 9453 
                                                                                               Sat May 07 22:05:41 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 9453
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,delta=2
     9                           	psect	text37,local,class=CODE,delta=2
    10                           	psect	text39,local,class=CODE,delta=2
    11                           	psect	pa_nodes,global,class=CODE,delta=2
    12                           	dabs	1,0x7E,2
    13  000A                     	;#
    14                           
    15                           	psect	config
    16  2007  E0D4               	dw	57556	;#
    17  2008  FFFF               	dw	65535	;#
    18                           
    19                           	psect	nvCOMMON
    20  0074                     __pnvCOMMON:	
    21  0074                     _NA:	
    22  0074                     	ds	1
    23  0075                     _VPA:	
    24  0075                     	ds	1
    25  0005                     _PORTA	set	5
    26  0001                     _TMR0	set	1
    27  005A                     _T0IF	set	90
    28  0081                     _OPTION_REG	set	129
    29  0085                     _TRISA	set	133
    30  0086                     _TRISB	set	134
    31  0087                     _TRISC	set	135
    32  0088                     _TRISD	set	136
    33  0089                     _TRISE	set	137
    34  0188                     _ANSEL	set	392
    35  0189                     _ANSELH	set	393
    36                           
    37                           	psect	cinit
    38  07A5                     start_initialization:	
    39  07A5                     end_of_initialization:	
    40                           ;End of C runtime variable initialization code
    41                           
    42  07A5  0183               	clrf	3
    43  07A6  120A  118A  2FC5   	ljmp	_main	;jump to C main() function
    44                           
    45                           	psect	cstackCOMMON
    46  0070                     __pcstackCOMMON:	
    47  0070                     ?_pause:	
    48  0070                     ?_msecbase:	
    49                           ; 0 bytes @ 0x0
    50                           
    51  0070                     ??_msecbase:	
    52                           ; 0 bytes @ 0x0
    53                           
    54  0070                     ?_main:	
    55                           ; 0 bytes @ 0x0
    56                           
    57  0070                     pause@usvalue:	
    58                           ; 0 bytes @ 0x0
    59                           
    60                           
    61                           ; 2 bytes @ 0x0
    62  0070                     	ds	2
    63  0072                     ??_pause:	
    64  0072                     pause@x:	
    65                           ; 0 bytes @ 0x2
    66                           
    67                           
    68                           ; 2 bytes @ 0x2
    69  0072                     	ds	2
    70  0074                     ??_main:	
    71                           
    72                           	psect	maintext
    73  07C5                     __pmaintext:	
    74                           ; 0 bytes @ 0x4
    75 ;;Data sizes: Strings 0, constant 0, data 0, bss 0, persistent 2 stack 0
    76 ;;Auto spaces:   Size  Autos    Used
    77 ;; COMMON          14      4       6
    78 ;; BANK0           80      0       0
    79 ;; BANK1           80      0       0
    80 ;; BANK3           96      0       0
    81 ;; BANK2           96      0       0
    82 ;;
    83 ;; Pointer list with targets:
    84 ;;
    85 ;; Critical Paths under _main in COMMON
    86 ;;
    87 ;;   _main->_pause
    88 ;;
    89 ;; Critical Paths under _main in BANK0
    90 ;;
    91 ;;   None.
    92 ;;
    93 ;; Critical Paths under _main in BANK1
    94 ;;
    95 ;;   None.
    96 ;;
    97 ;; Critical Paths under _main in BANK3
    98 ;;
    99 ;;   None.
   100 ;;
   101 ;; Critical Paths under _main in BANK2
   102 ;;
   103 ;;   None.
   104 ;;
   105 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   106 ;;
   107 ;;
   108 ;;Call Graph Tables:
   109 ;;
   110 ;; ---------------------------------------------------------------------------------
   111 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   112 ;; ---------------------------------------------------------------------------------
   113 ;; (0) _main                                                 0     0      0      30
   114 ;;                              _pause
   115 ;; ---------------------------------------------------------------------------------
   116 ;; (1) _pause                                                4     2      2      30
   117 ;;                                              0 COMMON     4     2      2
   118 ;;                           _msecbase
   119 ;; ---------------------------------------------------------------------------------
   120 ;; (2) _msecbase                                             0     0      0       0
   121 ;; ---------------------------------------------------------------------------------
   122 ;; Estimated maximum stack depth 2
   123 ;; ---------------------------------------------------------------------------------
   124 ;; Call Graph Graphs:
   125 ;; _main (ROOT)
   126 ;;   _pause
   127 ;;     _msecbase
   128 ;;
   129 ;; Address spaces:
   130 ;;Name               Size   Autos  Total    Cost      Usage
   131 ;;BITCOMMON            E      0       0       0        0.0%
   132 ;;EEDATA             100      0       0       0        0.0%
   133 ;;NULL                 0      0       0       0        0.0%
   134 ;;CODE                 0      0       0       0        0.0%
   135 ;;COMMON               E      4       6       1       42.9%
   136 ;;BITSFR0              0      0       0       1        0.0%
   137 ;;SFR0                 0      0       0       1        0.0%
   138 ;;BITSFR1              0      0       0       2        0.0%
   139 ;;SFR1                 0      0       0       2        0.0%
   140 ;;STACK                0      0       2       2        0.0%
   141 ;;ABS                  0      0       6       3        0.0%
   142 ;;BITBANK0            50      0       0       4        0.0%
   143 ;;BITSFR3              0      0       0       4        0.0%
   144 ;;SFR3                 0      0       0       4        0.0%
   145 ;;BANK0               50      0       0       5        0.0%
   146 ;;BITSFR2              0      0       0       5        0.0%
   147 ;;SFR2                 0      0       0       5        0.0%
   148 ;;BITBANK1            50      0       0       6        0.0%
   149 ;;BANK1               50      0       0       7        0.0%
   150 ;;BITBANK3            60      0       0       8        0.0%
   151 ;;BANK3               60      0       0       9        0.0%
   152 ;;BITBANK2            60      0       0      10        0.0%
   153 ;;BANK2               60      0       0      11        0.0%
   154 ;;DATA                 0      0       8      12        0.0%
   155                           
   156                           
   157 ;; *************** function _main *****************
   158 ;; Defined at:
   159 ;;		line 13 in file "C:\Users\Jorge\OneDrive\Escritorio\PROGS C\TIMER2\TIMER2.c"
   160 ;; Parameters:    Size  Location     Type
   161 ;;		None
   162 ;; Auto vars:     Size  Location     Type
   163 ;;		None
   164 ;; Return value:  Size  Location     Type
   165 ;;		None               void
   166 ;; Registers used:
   167 ;;		wreg, status,2, status,0, pclath, cstack
   168 ;; Tracked objects:
   169 ;;		On entry : 17F/0
   170 ;;		On exit  : 17F/0
   171 ;;		Unchanged: FFE80/0
   172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   173 ;;      Params:         0       0       0       0       0
   174 ;;      Locals:         0       0       0       0       0
   175 ;;      Temps:          0       0       0       0       0
   176 ;;      Totals:         0       0       0       0       0
   177 ;;Total ram usage:        0 bytes
   178 ;; Hardware stack levels required when called:    2
   179 ;; This function calls:
   180 ;;		_pause
   181 ;; This function is called by:
   182 ;;		Startup code after reset
   183 ;; This function uses a non-reentrant model
   184 ;;
   185  07C5                     _main:	
   186                           
   187                           ;TIMER2.c: 14: ANSEL = 0x00;
   188                           
   189                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   190  07C5  1683               	bsf	3,5	;RP0=1, select bank3
   191  07C6  1703               	bsf	3,6	;RP1=1, select bank3
   192  07C7  0188               	clrf	8	;volatile
   193                           
   194                           ;TIMER2.c: 15: ANSELH = 0x00;
   195  07C8  0189               	clrf	9	;volatile
   196                           
   197                           ;TIMER2.c: 17: TRISA = 0x00;
   198  07C9  1303               	bcf	3,6	;RP1=0, select bank1
   199  07CA  0185               	clrf	5	;volatile
   200                           
   201                           ;TIMER2.c: 18: TRISB = 0xFF;
   202  07CB  30FF               	movlw	255
   203  07CC  0086               	movwf	6	;volatile
   204                           
   205                           ;TIMER2.c: 19: TRISC = 0x00;
   206  07CD  0187               	clrf	7	;volatile
   207                           
   208                           ;TIMER2.c: 20: TRISD = 0x00;
   209  07CE  0188               	clrf	8	;volatile
   210                           
   211                           ;TIMER2.c: 21: TRISE = 0x00;
   212  07CF  0189               	clrf	9	;volatile
   213  07D0                     l2425:	
   214                           
   215                           ;TIMER2.c: 24: {
   216                           ;TIMER2.c: 32: VPA = 0x01;
   217  07D0  01F5               	clrf	_VPA
   218  07D1  0AF5               	incf	_VPA,f
   219                           
   220                           ;TIMER2.c: 34: for(NA = 0x00;NA <= 0x06; NA++){
   221  07D2  01F4               	clrf	_NA
   222  07D3                     l2433:	
   223                           
   224                           ;TIMER2.c: 35: PORTA = VPA;
   225  07D3  0875               	movf	_VPA,w
   226  07D4  1283               	bcf	3,5	;RP0=0, select bank0
   227  07D5  0085               	movwf	5	;volatile
   228  07D6  300A               	movlw	10
   229                           
   230                           ;TIMER2.c: 36: VPA = VPA<<1;
   231  07D7  1003               	clrc
   232  07D8  0DF5               	rlf	_VPA,f
   233                           
   234                           ;TIMER2.c: 37: pause(10);
   235  07D9  00F0               	movwf	?_pause
   236  07DA  01F1               	clrf	?_pause+1
   237  07DB  120A  118A  27A9   	fcall	_pause
      +       120A  118A         
   238                           
   239                           ;TIMER2.c: 38: PORTA = VPA;
   240  07E0  0875               	movf	_VPA,w
   241  07E1  1283               	bcf	3,5	;RP0=0, select bank0
   242  07E2  1303               	bcf	3,6	;RP1=0, select bank0
   243  07E3  0085               	movwf	5	;volatile
   244  07E4  3007               	movlw	7
   245  07E5  0AF4               	incf	_NA,f
   246  07E6  0274               	subwf	_NA,w
   247  07E7  1C03               	skipc
   248  07E8  2FD3               	goto	l2433
   249                           
   250                           ;TIMER2.c: 39: }
   251                           ;TIMER2.c: 41: for(NA = 0x00;NA <= 0x06; NA++){
   252  07E9  01F4               	clrf	_NA
   253  07EA                     l2451:	
   254                           
   255                           ;TIMER2.c: 42: PORTA = VPA;
   256  07EA  0875               	movf	_VPA,w
   257  07EB  0085               	movwf	5	;volatile
   258  07EC  300A               	movlw	10
   259                           
   260                           ;TIMER2.c: 43: VPA = VPA>>1;
   261  07ED  1003               	clrc
   262  07EE  0CF5               	rrf	_VPA,f
   263                           
   264                           ;TIMER2.c: 44: pause(10);
   265  07EF  00F0               	movwf	?_pause
   266  07F0  01F1               	clrf	?_pause+1
   267  07F1  120A  118A  27A9   	fcall	_pause
      +       120A  118A         
   268                           
   269                           ;TIMER2.c: 45: PORTA = VPA;
   270  07F6  0875               	movf	_VPA,w
   271  07F7  1283               	bcf	3,5	;RP0=0, select bank0
   272  07F8  1303               	bcf	3,6	;RP1=0, select bank0
   273  07F9  0085               	movwf	5	;volatile
   274  07FA  3007               	movlw	7
   275  07FB  0AF4               	incf	_NA,f
   276  07FC  0274               	subwf	_NA,w
   277  07FD  1803               	btfsc	3,0
   278  07FE  2FD0               	goto	l2425
   279  07FF  2FEA               	goto	l2451
   280  0800                     __end_of_main:	
   281                           
   282                           	psect	text37
   283  07A9                     __ptext37:	
   284 ;; =============== function _main ends ============
   285                           
   286                           
   287 ;; *************** function _pause *****************
   288 ;; Defined at:
   289 ;;		line 52 in file "C:\Users\Jorge\OneDrive\Escritorio\PROGS C\TIMER2\TIMER2.c"
   290 ;; Parameters:    Size  Location     Type
   291 ;;  usvalue         2    0[COMMON] unsigned short 
   292 ;; Auto vars:     Size  Location     Type
   293 ;;  x               2    2[COMMON] unsigned short 
   294 ;; Return value:  Size  Location     Type
   295 ;;		None               void
   296 ;; Registers used:
   297 ;;		wreg, status,2, status,0, pclath, cstack
   298 ;; Tracked objects:
   299 ;;		On entry : 17F/0
   300 ;;		On exit  : 11F/0
   301 ;;		Unchanged: FFE80/0
   302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   303 ;;      Params:         2       0       0       0       0
   304 ;;      Locals:         2       0       0       0       0
   305 ;;      Temps:          0       0       0       0       0
   306 ;;      Totals:         4       0       0       0       0
   307 ;;Total ram usage:        4 bytes
   308 ;; Hardware stack levels used:    1
   309 ;; Hardware stack levels required when called:    1
   310 ;; This function calls:
   311 ;;		_msecbase
   312 ;; This function is called by:
   313 ;;		_main
   314 ;; This function uses a non-reentrant model
   315 ;;
   316  07A9                     _pause:	
   317                           
   318                           ;TIMER2.c: 53: unsigned short x;
   319                           ;TIMER2.c: 54: for (x=0; x<usvalue; x++)
   320                           
   321                           ; Regs used in _pause: [wreg+status,2+status,0+pclath+cstack]
   322  07A9  01F2               	clrf	pause@x
   323  07AA  01F3               	clrf	pause@x+1
   324  07AB                     l2413:	
   325  07AB  0871               	movf	pause@usvalue+1,w
   326  07AC  0273               	subwf	pause@x+1,w
   327  07AD  1D03               	skipz
   328  07AE  2FB1               	goto	u25
   329  07AF  0870               	movf	pause@usvalue,w
   330  07B0  0272               	subwf	pause@x,w
   331  07B1                     u25:	
   332  07B1  1803               	btfsc	3,0
   333  07B2  0008               	return
   334                           
   335                           ;TIMER2.c: 55: {
   336                           ;TIMER2.c: 56: msecbase();
   337  07B3  27BA  120A  118A   	fcall	_msecbase
   338  07B6  0AF2               	incf	pause@x,f
   339  07B7  1903               	skipnz
   340  07B8  0AF3               	incf	pause@x+1,f
   341  07B9  2FAB               	goto	l2413
   342  07BA                     __end_of_pause:	
   343  07BA                     __ptext38:	
   344 ;; =============== function _pause ends ============
   345                           
   346                           
   347 ;; *************** function _msecbase *****************
   348 ;; Defined at:
   349 ;;		line 61 in file "C:\Users\Jorge\OneDrive\Escritorio\PROGS C\TIMER2\TIMER2.c"
   350 ;; Parameters:    Size  Location     Type
   351 ;;		None
   352 ;; Auto vars:     Size  Location     Type
   353 ;;		None
   354 ;; Return value:  Size  Location     Type
   355 ;;		None               void
   356 ;; Registers used:
   357 ;;		wreg
   358 ;; Tracked objects:
   359 ;;		On entry : 11F/0
   360 ;;		On exit  : 11F/0
   361 ;;		Unchanged: FFE80/0
   362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   363 ;;      Params:         0       0       0       0       0
   364 ;;      Locals:         0       0       0       0       0
   365 ;;      Temps:          0       0       0       0       0
   366 ;;      Totals:         0       0       0       0       0
   367 ;;Total ram usage:        0 bytes
   368 ;; Hardware stack levels used:    1
   369 ;; This function calls:
   370 ;;		Nothing
   371 ;; This function is called by:
   372 ;;		_pause
   373 ;; This function uses a non-reentrant model
   374 ;;
   375  07BA                     _msecbase:	
   376                           
   377                           ;TIMER2.c: 62: OPTION_REG = 0b11010110;
   378                           
   379                           ; Regs used in _msecbase: [wreg]
   380  07BA  30D6               	movlw	214
   381  07BB  1683               	bsf	3,5	;RP0=1, select bank1
   382  07BC  1303               	bcf	3,6	;RP1=0, select bank1
   383  07BD  0081               	movwf	1	;volatile
   384                           
   385                           ;TIMER2.c: 63: TMR0 = 0x7A;
   386  07BE  307A               	movlw	122
   387  07BF  1283               	bcf	3,5	;RP0=0, select bank0
   388  07C0  0081               	movwf	1	;volatile
   389  07C1                     l1049:	
   390                           ;TIMER2.c: 64: while(!T0IF);
   391                           
   392  07C1  1D0B               	btfss	11,2
   393  07C2  2FC1               	goto	l1049
   394                           
   395                           ;TIMER2.c: 65: T0IF = 0;
   396  07C3  110B               	bcf	11,2
   397  07C4  0008               	return
   398  07C5                     __end_of_msecbase:	
   399                           
   400                           	psect	text39
   401  0000                     __ptext39:	
   402 ;; =============== function _msecbase ends ============
   403                           
   404  007E                     btemp	set	126	;btemp
   405  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Sat May 07 22:05:41 2022

                  _NA 0074                    u25 07B1                   _VPA 0075                  l1052 0000  
                l1046 0000                  l1049 07C1                  l2411 0000                  l2405 0000  
                l2413 07AB                  l2421 0000                  l2407 0000                  l2423 0000  
                l2415 0000                  l2441 0000                  l2433 07D3                  l2425 07D0  
                l2417 0000                  l2451 07EA                  l2443 0000                  l2435 0000  
                l2427 0000                  l2419 0000                  l2461 0000                  l2453 0000  
                l2437 0000                  l2455 0000                  l2439 0000                  l2457 0000  
                l2459 0000                  _T0IF 005A                  _TMR0 0001                  _main 07C5  
                btemp 007E                  start 0000                 ?_main 0070                 _ANSEL 0188  
               _PORTA 0005                 _TRISA 0085                 _TRISB 0086                 _TRISC 0087  
               _TRISD 0088                 _TRISE 0089                 _pause 07A9                 status 0003  
               wtemp0 007E          __end_of_main 0800                ??_main 0074                ?_pause 0070  
              _ANSELH 0189      __end_of_msecbase 07C5                pause@x 0072        __pcstackCOMMON 0070  
       __end_of_pause 07BA               ??_pause 0072            __pnvCOMMON 0074            __pmaintext 07C5  
           ?_msecbase 0070  end_of_initialization 07A5            ??_msecbase 0070   start_initialization 07A5  
        pause@usvalue 0070     __size_of_msecbase 000B        __size_of_pause 0011              __ptext37 07A9  
            __ptext38 07BA              __ptext39 0000         __size_of_main 003B              _msecbase 07BA  
          _OPTION_REG 0081  
