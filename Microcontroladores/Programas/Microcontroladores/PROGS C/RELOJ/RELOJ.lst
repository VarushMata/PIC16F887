

HI-TECH Software PIC PRO Macro Assembler V9.82 build 9453 
                                                                                               Sun May 08 09:56:16 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 9453
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,delta=2
    10                           	psect	text43,local,class=CODE,delta=2
    11                           	psect	text45,local,class=CODE,delta=2
    12                           	psect	text46,local,class=CODE,delta=2
    13                           	psect	pa_nodes,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  000A                     	;#
    16                           
    17                           	psect	config
    18  2007  E0D4               	dw	57556	;#
    19  2008  FFFF               	dw	65535	;#
    20                           
    21                           	psect	strings
    22  0003                     __pstrings:	
    23  0003                     stringtab:	
    24                           ;	global	stringdir,stringtab,__stringbase
    25                           
    26  0003                     stringcode:	
    27                           ;	String table - string pointers are 1 byte each
    28                           
    29  0003                     stringdir:	
    30  0003  3000               	movlw	high stringdir
    31  0004  008A               	movwf	10
    32  0005  0804               	movf	4,w
    33  0006  0A84               	incf	4,f
    34  0007  0782               	addwf	2,f
    35  0008                     __stringbase:	
    36  0008  3400               	retlw	0
    37  0009                     _DP7:	
    38  0009  343F               	retlw	63
    39  000A  3400               	retlw	0
    40  000B  3406               	retlw	6
    41  000C  3400               	retlw	0
    42  000D  345B               	retlw	91
    43  000E  3400               	retlw	0
    44  000F  344F               	retlw	79
    45  0010  3400               	retlw	0
    46  0011  3466               	retlw	102
    47  0012  3400               	retlw	0
    48  0013  346D               	retlw	109
    49  0014  3400               	retlw	0
    50  0015  347D               	retlw	125
    51  0016  3400               	retlw	0
    52  0017  3407               	retlw	7
    53  0018  3400               	retlw	0
    54  0019  347F               	retlw	127
    55  001A  3400               	retlw	0
    56  001B  3467               	retlw	103
    57  001C  3400               	retlw	0
    58  0005                     _PORTA	set	5
    59  0007                     _PORTC	set	7
    60  0001                     _TMR0	set	1
    61  005A                     _T0IF	set	90
    62  0081                     _OPTION_REG	set	129
    63  0085                     _TRISA	set	133
    64  0086                     _TRISB	set	134
    65  0087                     _TRISC	set	135
    66  0088                     _TRISD	set	136
    67  0089                     _TRISE	set	137
    68  0188                     _ANSEL	set	392
    69  0189                     _ANSELH	set	393
    70                           
    71                           	psect	cinit
    72  0705                     start_initialization:	
    73                           
    74                           ; Clear objects allocated to COMMON
    75  0705  01F0               	clrf	__pbssCOMMON& (0+127)
    76  0706  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
    77  0707  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
    78  0708  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
    79  0709  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
    80  070A  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
    81  070B  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
    82  070C  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
    83  070D                     end_of_initialization:	
    84                           ;End of C runtime variable initialization code
    85                           
    86  070D  0183               	clrf	3
    87  070E  120A  118A  2F83   	ljmp	_main	;jump to C main() function
    88                           
    89                           	psect	bssCOMMON
    90  0070                     __pbssCOMMON:	
    91  0070                     _NC:	
    92  0070                     	ds	2
    93  0072                     _ND:	
    94  0072                     	ds	2
    95  0074                     _NM:	
    96  0074                     	ds	2
    97  0076                     _NU:	
    98  0076                     	ds	2
    99                           
   100                           	psect	cstackCOMMON
   101  0078                     __pcstackCOMMON:	
   102  0078                     ?_pause:	
   103  0078                     ?_msecbase:	
   104                           ; 0 bytes @ 0x0
   105                           
   106  0078                     ??_msecbase:	
   107                           ; 0 bytes @ 0x0
   108                           
   109  0078                     ?_digitos:	
   110                           ; 0 bytes @ 0x0
   111                           
   112  0078                     ?_main:	
   113                           ; 0 bytes @ 0x0
   114                           
   115  0078                     digitos@x:	
   116                           ; 0 bytes @ 0x0
   117                           
   118  0078                     pause@usvalue:	
   119                           ; 2 bytes @ 0x0
   120                           
   121                           
   122                           ; 2 bytes @ 0x0
   123  0078                     	ds	2
   124  007A                     ??_pause:	
   125  007A                     ??_digitos:	
   126                           ; 0 bytes @ 0x2
   127                           
   128  007A                     pause@x:	
   129                           ; 0 bytes @ 0x2
   130                           
   131                           
   132                           ; 2 bytes @ 0x2
   133  007A                     	ds	2
   134  007C                     ??_main:	
   135  007C                     main@CON:	
   136                           ; 0 bytes @ 0x4
   137                           
   138                           
   139                           ; 2 bytes @ 0x4
   140  007C                     	ds	2
   141                           
   142                           	psect	maintext
   143  0783                     __pmaintext:	
   144 ;;Data sizes: Strings 0, constant 20, data 0, bss 8, persistent 0 stack 0
   145 ;;Auto spaces:   Size  Autos    Used
   146 ;; COMMON          14      6      14
   147 ;; BANK0           80      0       0
   148 ;; BANK1           80      0       0
   149 ;; BANK3           96      0       0
   150 ;; BANK2           96      0       0
   151 ;;
   152 ;; Pointer list with targets:
   153 ;;
   154 ;; Critical Paths under _main in COMMON
   155 ;;
   156 ;;   _main->_pause
   157 ;;
   158 ;; Critical Paths under _main in BANK0
   159 ;;
   160 ;;   None.
   161 ;;
   162 ;; Critical Paths under _main in BANK1
   163 ;;
   164 ;;   None.
   165 ;;
   166 ;; Critical Paths under _main in BANK3
   167 ;;
   168 ;;   None.
   169 ;;
   170 ;; Critical Paths under _main in BANK2
   171 ;;
   172 ;;   None.
   173 ;;
   174 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   175 ;;
   176 ;;
   177 ;;Call Graph Tables:
   178 ;;
   179 ;; ---------------------------------------------------------------------------------
   180 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   181 ;; ---------------------------------------------------------------------------------
   182 ;; (0) _main                                                 2     2      0     120
   183 ;;                                              4 COMMON     2     2      0
   184 ;;                            _digitos
   185 ;;                              _pause
   186 ;; ---------------------------------------------------------------------------------
   187 ;; (1) _pause                                                4     2      2      30
   188 ;;                                              0 COMMON     4     2      2
   189 ;;                           _msecbase
   190 ;; ---------------------------------------------------------------------------------
   191 ;; (2) _msecbase                                             0     0      0       0
   192 ;; ---------------------------------------------------------------------------------
   193 ;; (1) _digitos                                              2     0      2      60
   194 ;;                                              0 COMMON     2     0      2
   195 ;; ---------------------------------------------------------------------------------
   196 ;; Estimated maximum stack depth 2
   197 ;; ---------------------------------------------------------------------------------
   198 ;; Call Graph Graphs:
   199 ;; _main (ROOT)
   200 ;;   _digitos
   201 ;;   _pause
   202 ;;     _msecbase
   203 ;;
   204 ;; Address spaces:
   205 ;;Name               Size   Autos  Total    Cost      Usage
   206 ;;BITCOMMON            E      0       0       0        0.0%
   207 ;;EEDATA             100      0       0       0        0.0%
   208 ;;NULL                 0      0       0       0        0.0%
   209 ;;CODE                 0      0       0       0        0.0%
   210 ;;COMMON               E      6       E       1      100.0%
   211 ;;BITSFR0              0      0       0       1        0.0%
   212 ;;SFR0                 0      0       0       1        0.0%
   213 ;;BITSFR1              0      0       0       2        0.0%
   214 ;;SFR1                 0      0       0       2        0.0%
   215 ;;STACK                0      0       2       2        0.0%
   216 ;;ABS                  0      0       E       3        0.0%
   217 ;;BITBANK0            50      0       0       4        0.0%
   218 ;;BITSFR3              0      0       0       4        0.0%
   219 ;;SFR3                 0      0       0       4        0.0%
   220 ;;BANK0               50      0       0       5        0.0%
   221 ;;BITSFR2              0      0       0       5        0.0%
   222 ;;SFR2                 0      0       0       5        0.0%
   223 ;;BITBANK1            50      0       0       6        0.0%
   224 ;;BANK1               50      0       0       7        0.0%
   225 ;;BITBANK3            60      0       0       8        0.0%
   226 ;;BANK3               60      0       0       9        0.0%
   227 ;;BITBANK2            60      0       0      10        0.0%
   228 ;;BANK2               60      0       0      11        0.0%
   229 ;;DATA                 0      0      10      12        0.0%
   230                           
   231                           
   232 ;; *************** function _main *****************
   233 ;; Defined at:
   234 ;;		line 44 in file "C:\Users\Jorge\OneDrive\Escritorio\PROGS C\RELOJ\RELOJ.c"
   235 ;; Parameters:    Size  Location     Type
   236 ;;		None
   237 ;; Auto vars:     Size  Location     Type
   238 ;;  CON             2    4[COMMON] short 
   239 ;; Return value:  Size  Location     Type
   240 ;;		None               void
   241 ;; Registers used:
   242 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   243 ;; Tracked objects:
   244 ;;		On entry : 17F/0
   245 ;;		On exit  : 0/0
   246 ;;		Unchanged: FFE00/0
   247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   248 ;;      Params:         0       0       0       0       0
   249 ;;      Locals:         2       0       0       0       0
   250 ;;      Temps:          0       0       0       0       0
   251 ;;      Totals:         2       0       0       0       0
   252 ;;Total ram usage:        2 bytes
   253 ;; Hardware stack levels required when called:    2
   254 ;; This function calls:
   255 ;;		_digitos
   256 ;;		_pause
   257 ;; This function is called by:
   258 ;;		Startup code after reset
   259 ;; This function uses a non-reentrant model
   260 ;;
   261  0783                     _main:	
   262  0783  3060               	movlw	96
   263                           
   264                           ;RELOJ.c: 46: short int CON = 0;
   265                           
   266                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   267  0784  01FC               	clrf	main@CON
   268  0785  01FD               	clrf	main@CON+1
   269                           
   270                           ;RELOJ.c: 49: ANSEL = 0x60;
   271  0786  1683               	bsf	3,5	;RP0=1, select bank3
   272  0787  1703               	bsf	3,6	;RP1=1, select bank3
   273  0788  0088               	movwf	8	;volatile
   274                           
   275                           ;RELOJ.c: 50: ANSELH = 0x00;
   276  0789  0189               	clrf	9	;volatile
   277                           
   278                           ;RELOJ.c: 52: TRISA = 0x00;
   279  078A  1303               	bcf	3,6	;RP1=0, select bank1
   280  078B  0185               	clrf	5	;volatile
   281                           
   282                           ;RELOJ.c: 53: TRISB = 0xFF;
   283  078C  30FF               	movlw	255
   284  078D  0086               	movwf	6	;volatile
   285                           
   286                           ;RELOJ.c: 54: TRISC = 0x00;
   287  078E  0187               	clrf	7	;volatile
   288                           
   289                           ;RELOJ.c: 55: TRISD = 0x00;
   290  078F  0188               	clrf	8	;volatile
   291                           
   292                           ;RELOJ.c: 56: TRISE = 0x00;
   293  0790  0189               	clrf	9	;volatile
   294  0791  2F94               	goto	l2470
   295  0792                     l2498:	
   296                           
   297                           ;RELOJ.c: 80: CON=0;
   298  0792  01FC               	clrf	main@CON
   299  0793  01FD               	clrf	main@CON+1
   300  0794                     l2470:	
   301                           ;RELOJ.c: 81: }else{
   302                           
   303                           
   304                           ;RELOJ.c: 59: {
   305                           ;RELOJ.c: 61: digitos(CON);
   306  0794  087D               	movf	main@CON+1,w
   307  0795  00F9               	movwf	?_digitos+1
   308  0796  087C               	movf	main@CON,w
   309  0797  00F8               	movwf	?_digitos
   310  0798  120A  118A  272D   	fcall	_digitos
      +       120A  118A         
   311                           
   312                           ;RELOJ.c: 63: PORTC = 0x01;
   313  079D  3001               	movlw	1
   314  079E  1283               	bcf	3,5	;RP0=0, select bank0
   315  079F  1303               	bcf	3,6	;RP1=0, select bank0
   316  07A0  0087               	movwf	7	;volatile
   317                           
   318                           ;RELOJ.c: 64: PORTA = DP7[NU];
   319  07A1  1003               	clrc
   320  07A2  0D76               	rlf	_NU,w
   321  07A3  3E01               	addlw	low (_DP7-__stringbase)
   322  07A4  0084               	movwf	4
   323  07A5  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
   324  07AA  0085               	movwf	5	;volatile
   325                           
   326                           ;RELOJ.c: 65: pause(1);
   327  07AB  01F8               	clrf	?_pause
   328  07AC  0AF8               	incf	?_pause,f
   329  07AD  01F9               	clrf	?_pause+1
   330  07AE  120A  118A  2711   	fcall	_pause
      +       120A  118A         
   331                           
   332                           ;RELOJ.c: 67: PORTC = 0x02;
   333  07B3  3002               	movlw	2
   334  07B4  1283               	bcf	3,5	;RP0=0, select bank0
   335  07B5  1303               	bcf	3,6	;RP1=0, select bank0
   336  07B6  0087               	movwf	7	;volatile
   337                           
   338                           ;RELOJ.c: 68: PORTA = DP7[ND];
   339  07B7  1003               	clrc
   340  07B8  0D72               	rlf	_ND,w
   341  07B9  3E01               	addlw	low (_DP7-__stringbase)
   342  07BA  0084               	movwf	4
   343  07BB  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
   344  07C0  0085               	movwf	5	;volatile
   345                           
   346                           ;RELOJ.c: 69: pause(1);
   347  07C1  01F8               	clrf	?_pause
   348  07C2  0AF8               	incf	?_pause,f
   349  07C3  01F9               	clrf	?_pause+1
   350  07C4  120A  118A  2711   	fcall	_pause
      +       120A  118A         
   351                           
   352                           ;RELOJ.c: 71: PORTC = 0x04;
   353  07C9  3004               	movlw	4
   354  07CA  1283               	bcf	3,5	;RP0=0, select bank0
   355  07CB  1303               	bcf	3,6	;RP1=0, select bank0
   356  07CC  0087               	movwf	7	;volatile
   357                           
   358                           ;RELOJ.c: 72: PORTA = DP7[NC];
   359  07CD  1003               	clrc
   360  07CE  0D70               	rlf	_NC,w
   361  07CF  3E01               	addlw	low (_DP7-__stringbase)
   362  07D0  0084               	movwf	4
   363  07D1  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
   364  07D6  0085               	movwf	5	;volatile
   365                           
   366                           ;RELOJ.c: 73: pause(1);
   367  07D7  01F8               	clrf	?_pause
   368  07D8  0AF8               	incf	?_pause,f
   369  07D9  01F9               	clrf	?_pause+1
   370  07DA  120A  118A  2711   	fcall	_pause
      +       120A  118A         
   371                           
   372                           ;RELOJ.c: 75: PORTC = 0x08;
   373  07DF  3008               	movlw	8
   374  07E0  1283               	bcf	3,5	;RP0=0, select bank0
   375  07E1  1303               	bcf	3,6	;RP1=0, select bank0
   376  07E2  0087               	movwf	7	;volatile
   377                           
   378                           ;RELOJ.c: 76: PORTA = DP7[NM];
   379  07E3  1003               	clrc
   380  07E4  0D74               	rlf	_NM,w
   381  07E5  3E01               	addlw	low (_DP7-__stringbase)
   382  07E6  0084               	movwf	4
   383  07E7  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
   384  07EC  0085               	movwf	5	;volatile
   385                           
   386                           ;RELOJ.c: 77: pause(1);
   387  07ED  01F8               	clrf	?_pause
   388  07EE  0AF8               	incf	?_pause,f
   389  07EF  01F9               	clrf	?_pause+1
   390  07F0  120A  118A  2711   	fcall	_pause
      +       120A  118A         
   391                           
   392                           ;RELOJ.c: 79: if(CON==9999){
   393  07F5  087D               	movf	main@CON+1,w
   394  07F6  3A27               	xorlw	39
   395  07F7  300F               	movlw	15
   396  07F8  1903               	skipnz
   397  07F9  067C               	xorwf	main@CON,w
   398  07FA  1903               	btfsc	3,2
   399  07FB  2F92               	goto	l2498
   400                           
   401                           ;RELOJ.c: 82: CON++;
   402  07FC  0AFC               	incf	main@CON,f
   403  07FD  1903               	skipnz
   404  07FE  0AFD               	incf	main@CON+1,f
   405  07FF  2F94               	goto	l2470
   406  0800                     __end_of_main:	
   407                           
   408                           	psect	text43
   409  0711                     __ptext43:	
   410 ;; =============== function _main ends ============
   411                           
   412                           
   413 ;; *************** function _pause *****************
   414 ;; Defined at:
   415 ;;		line 105 in file "C:\Users\Jorge\OneDrive\Escritorio\PROGS C\RELOJ\RELOJ.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;  usvalue         2    0[COMMON] unsigned short 
   418 ;; Auto vars:     Size  Location     Type
   419 ;;  x               2    2[COMMON] unsigned short 
   420 ;; Return value:  Size  Location     Type
   421 ;;		None               void
   422 ;; Registers used:
   423 ;;		wreg, status,2, status,0, pclath, cstack
   424 ;; Tracked objects:
   425 ;;		On entry : 60/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: FFF9F/0
   428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   429 ;;      Params:         2       0       0       0       0
   430 ;;      Locals:         2       0       0       0       0
   431 ;;      Temps:          0       0       0       0       0
   432 ;;      Totals:         4       0       0       0       0
   433 ;;Total ram usage:        4 bytes
   434 ;; Hardware stack levels used:    1
   435 ;; Hardware stack levels required when called:    1
   436 ;; This function calls:
   437 ;;		_msecbase
   438 ;; This function is called by:
   439 ;;		_main
   440 ;; This function uses a non-reentrant model
   441 ;;
   442  0711                     _pause:	
   443                           
   444                           ;RELOJ.c: 106: unsigned short x;
   445                           ;RELOJ.c: 107: for (x=0; x<usvalue; x++)
   446                           
   447                           ; Regs used in _pause: [wreg+status,2+status,0+pclath+cstack]
   448  0711  01FA               	clrf	pause@x
   449  0712  01FB               	clrf	pause@x+1
   450  0713                     l2458:	
   451  0713  0879               	movf	pause@usvalue+1,w
   452  0714  027B               	subwf	pause@x+1,w
   453  0715  1D03               	skipz
   454  0716  2F19               	goto	u65
   455  0717  0878               	movf	pause@usvalue,w
   456  0718  027A               	subwf	pause@x,w
   457  0719                     u65:	
   458  0719  1803               	btfsc	3,0
   459  071A  0008               	return
   460                           
   461                           ;RELOJ.c: 108: {
   462                           ;RELOJ.c: 109: msecbase();
   463  071B  2722  120A  118A   	fcall	_msecbase
   464  071E  0AFA               	incf	pause@x,f
   465  071F  1903               	skipnz
   466  0720  0AFB               	incf	pause@x+1,f
   467  0721  2F13               	goto	l2458
   468  0722                     __end_of_pause:	
   469  0722                     __ptext44:	
   470 ;; =============== function _pause ends ============
   471                           
   472                           
   473 ;; *************** function _msecbase *****************
   474 ;; Defined at:
   475 ;;		line 114 in file "C:\Users\Jorge\OneDrive\Escritorio\PROGS C\RELOJ\RELOJ.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;		None
   478 ;; Auto vars:     Size  Location     Type
   479 ;;		None
   480 ;; Return value:  Size  Location     Type
   481 ;;		None               void
   482 ;; Registers used:
   483 ;;		wreg
   484 ;; Tracked objects:
   485 ;;		On entry : 0/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: FFF9F/0
   488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   489 ;;      Params:         0       0       0       0       0
   490 ;;      Locals:         0       0       0       0       0
   491 ;;      Temps:          0       0       0       0       0
   492 ;;      Totals:         0       0       0       0       0
   493 ;;Total ram usage:        0 bytes
   494 ;; Hardware stack levels used:    1
   495 ;; This function calls:
   496 ;;		Nothing
   497 ;; This function is called by:
   498 ;;		_pause
   499 ;; This function uses a non-reentrant model
   500 ;;
   501  0722                     _msecbase:	
   502                           
   503                           ;RELOJ.c: 115: OPTION_REG = 0b11010110;
   504                           
   505                           ; Regs used in _msecbase: [wreg]
   506  0722  30D6               	movlw	214
   507  0723  1683               	bsf	3,5	;RP0=1, select bank1
   508  0724  1303               	bcf	3,6	;RP1=0, select bank1
   509  0725  0081               	movwf	1	;volatile
   510                           
   511                           ;RELOJ.c: 116: TMR0 = 0x7A;
   512  0726  307A               	movlw	122
   513  0727  1283               	bcf	3,5	;RP0=0, select bank0
   514  0728  0081               	movwf	1	;volatile
   515  0729                     l1068:	
   516                           ;RELOJ.c: 117: while(!T0IF);
   517                           
   518  0729  1D0B               	btfss	11,2
   519  072A  2F29               	goto	l1068
   520                           
   521                           ;RELOJ.c: 118: T0IF = 0;
   522  072B  110B               	bcf	11,2
   523  072C  0008               	return
   524  072D                     __end_of_msecbase:	
   525                           
   526                           	psect	text45
   527  072D                     __ptext45:	
   528 ;; =============== function _msecbase ends ============
   529                           
   530                           
   531 ;; *************** function _digitos *****************
   532 ;; Defined at:
   533 ;;		line 18 in file "C:\Users\Jorge\OneDrive\Escritorio\PROGS C\RELOJ\RELOJ.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;  x               2    0[COMMON] int 
   536 ;; Auto vars:     Size  Location     Type
   537 ;;		None
   538 ;; Return value:  Size  Location     Type
   539 ;;		None               void
   540 ;; Registers used:
   541 ;;		wreg, status,2, status,0, btemp+1
   542 ;; Tracked objects:
   543 ;;		On entry : 0/20
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: FFE00/0
   546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   547 ;;      Params:         2       0       0       0       0
   548 ;;      Locals:         0       0       0       0       0
   549 ;;      Temps:          0       0       0       0       0
   550 ;;      Totals:         2       0       0       0       0
   551 ;;Total ram usage:        2 bytes
   552 ;; Hardware stack levels used:    1
   553 ;; This function calls:
   554 ;;		Nothing
   555 ;; This function is called by:
   556 ;;		_main
   557 ;; This function uses a non-reentrant model
   558 ;;
   559  072D                     _digitos:	
   560                           
   561                           ;RELOJ.c: 19: NM = 0;
   562                           
   563                           ; Regs used in _digitos: [wreg+status,2+status,0+btemp+1]
   564  072D  01F4               	clrf	_NM
   565  072E  01F5               	clrf	_NM+1
   566                           
   567                           ;RELOJ.c: 20: NC = 0;
   568  072F  01F0               	clrf	_NC
   569  0730  01F1               	clrf	_NC+1
   570                           
   571                           ;RELOJ.c: 21: ND = 0;
   572  0731  01F2               	clrf	_ND
   573  0732  01F3               	clrf	_ND+1
   574                           
   575                           ;RELOJ.c: 22: NU = 0;
   576  0733  01F6               	clrf	_NU
   577  0734  01F7               	clrf	_NU+1
   578  0735                     l2430:	
   579                           ;RELOJ.c: 24: while(x>=1000){
   580                           
   581  0735  0879               	movf	digitos@x+1,w
   582  0736  3A80               	xorlw	128
   583  0737  00FF               	movwf	127
   584  0738  3083               	movlw	131
   585  0739  027F               	subwf	127,w
   586  073A  1D03               	skipz
   587  073B  2F3E               	goto	u15
   588  073C  30E8               	movlw	232
   589  073D  0278               	subwf	digitos@x,w
   590  073E                     u15:	
   591  073E  1C03               	btfss	3,0
   592  073F  2F51               	goto	l2436
   593                           
   594                           ;RELOJ.c: 25: x-=1000;
   595  0740  3018               	movlw	24
   596  0741  07F8               	addwf	digitos@x,f
   597  0742  1803               	skipnc
   598  0743  0AF9               	incf	digitos@x+1,f
   599  0744  30FC               	movlw	252
   600  0745  07F9               	addwf	digitos@x+1,f
   601                           
   602                           ;RELOJ.c: 26: NM++;
   603  0746  0AF4               	incf	_NM,f
   604  0747  1903               	skipnz
   605  0748  0AF5               	incf	_NM+1,f
   606  0749  2F35               	goto	l2430
   607  074A                     l2432:	
   608                           
   609                           ;RELOJ.c: 29: x-=100;
   610  074A  309C               	movlw	-100
   611  074B  07F8               	addwf	digitos@x,f
   612  074C  1C03               	skipc
   613  074D  03F9               	decf	digitos@x+1,f
   614                           
   615                           ;RELOJ.c: 30: NC++;
   616  074E  0AF0               	incf	_NC,f
   617  074F  1903               	skipnz
   618  0750  0AF1               	incf	_NC+1,f
   619  0751                     l2436:	
   620  0751  0879               	movf	digitos@x+1,w
   621  0752  3A80               	xorlw	128
   622  0753  00FF               	movwf	127
   623  0754  3080               	movlw	128
   624  0755  027F               	subwf	127,w
   625  0756  1D03               	skipz
   626  0757  2F5A               	goto	u25
   627  0758  3064               	movlw	100
   628  0759  0278               	subwf	digitos@x,w
   629  075A                     u25:	
   630  075A  1C03               	btfss	3,0
   631  075B  2F64               	goto	l2442
   632  075C  2F4A               	goto	l2432
   633  075D                     l2438:	
   634                           
   635                           ;RELOJ.c: 33: x-=10;
   636  075D  30F6               	movlw	-10
   637  075E  07F8               	addwf	digitos@x,f
   638  075F  1C03               	skipc
   639  0760  03F9               	decf	digitos@x+1,f
   640                           
   641                           ;RELOJ.c: 34: ND++;
   642  0761  0AF2               	incf	_ND,f
   643  0762  1903               	skipnz
   644  0763  0AF3               	incf	_ND+1,f
   645  0764                     l2442:	
   646  0764  0879               	movf	digitos@x+1,w
   647  0765  3A80               	xorlw	128
   648  0766  00FF               	movwf	127
   649  0767  3080               	movlw	128
   650  0768  027F               	subwf	127,w
   651  0769  1D03               	skipz
   652  076A  2F6D               	goto	u35
   653  076B  300A               	movlw	10
   654  076C  0278               	subwf	digitos@x,w
   655  076D                     u35:	
   656  076D  1C03               	btfss	3,0
   657  076E  2F77               	goto	l2448
   658  076F  2F5D               	goto	l2438
   659  0770                     l2444:	
   660                           
   661                           ;RELOJ.c: 37: x-=1;
   662  0770  30FF               	movlw	-1
   663  0771  07F8               	addwf	digitos@x,f
   664  0772  1C03               	skipc
   665  0773  03F9               	decf	digitos@x+1,f
   666                           
   667                           ;RELOJ.c: 38: NU++;
   668  0774  0AF6               	incf	_NU,f
   669  0775  1903               	skipnz
   670  0776  0AF7               	incf	_NU+1,f
   671  0777                     l2448:	
   672  0777  0879               	movf	digitos@x+1,w
   673  0778  3A80               	xorlw	128
   674  0779  00FF               	movwf	127
   675  077A  3080               	movlw	128
   676  077B  027F               	subwf	127,w
   677  077C  1D03               	skipz
   678  077D  2F80               	goto	u45
   679  077E  3001               	movlw	1
   680  077F  0278               	subwf	digitos@x,w
   681  0780                     u45:	
   682  0780  1C03               	btfss	3,0
   683  0781  0008               	return
   684  0782  2F70               	goto	l2444
   685  0783                     __end_of_digitos:	
   686                           
   687                           	psect	text46
   688  0000                     __ptext46:	
   689 ;; =============== function _digitos ends ============
   690                           
   691  007E                     btemp	set	126	;btemp
   692  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Sun May 08 09:56:16 2022

                   pc 0002                    _NC 0070                    _ND 0072                    _NM 0074  
                  u15 073E                    u25 075A                    _NU 0076                    u35 076D  
                  u45 0780                    u65 0719                    fsr 0004                   _DP7 0009  
                 fsr0 0004                  l1051 0000                  l1071 0000                  l1065 0000  
                l1068 0729                  l2430 0735                  l2440 0000                  l2432 074A  
                l2424 0000                  l2442 0764                  l2434 0000                  l2450 0000  
                l2444 0770                  l2436 0751                  l2428 0000                  l2452 0000  
                l2460 0000                  l2446 0000                  l2438 075D                  l2470 0794  
                l2462 0000                  l2448 0777                  l2456 0000                  l2480 0000  
                l2472 0000                  l2464 0000                  l2458 0713                  l2490 0000  
                l2482 0000                  l2474 0000                  l2466 0000                  l2492 0000  
                l2484 0000                  l2476 0000                  l2468 0000                  l2494 0000  
                l2486 0000                  l2478 0000                  l2496 0000                  l2488 0000  
                l2498 0792                  _T0IF 005A                  _TMR0 0001                  _main 0783  
                btemp 007E                  start 0000                 ?_main 0078                 _ANSEL 0188  
               _PORTA 0005                 _PORTC 0007                 _TRISA 0085                 _TRISB 0086  
               _TRISC 0087                 _TRISD 0088                 _TRISE 0089       __end_of_digitos 0783  
               _pause 0711                 pclath 000A                 status 0003                 wtemp0 007E  
        __end_of_main 0800                ??_main 007C                ?_pause 0078                _ANSELH 0189  
           ??_digitos 007A      __end_of_msecbase 072D                pause@x 007A        __pcstackCOMMON 0078  
       __end_of_pause 0722               ??_pause 007A            __pmaintext 0783             ?_msecbase 0078  
             _digitos 072D               main@CON 007C  end_of_initialization 070D            ??_msecbase 0078  
 start_initialization 0705          pause@usvalue 0078           __pbssCOMMON 0070     __size_of_msecbase 000B  
           __pstrings 0003              ?_digitos 0078        __size_of_pause 0011           __stringbase 0008  
    __size_of_digitos 0056              __ptext43 0711              __ptext44 0722              __ptext45 072D  
            __ptext46 0000         __size_of_main 007D              _msecbase 0722              digitos@x 0078  
           stringcode 0003            _OPTION_REG 0081              stringdir 0003              stringtab 0003  
