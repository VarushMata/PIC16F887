

HI-TECH Software PIC PRO Macro Assembler V9.82 build 9453 
                                                                                               Sun May 08 14:36:17 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 9453
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,delta=2
    13                           	psect	text84,local,class=CODE,delta=2
    14                           	psect	text86,local,class=CODE,delta=2
    15                           	psect	pa_nodes,global,class=CODE,delta=2
    16                           	dabs	1,0x7E,2
    17  000A                     	;#
    18                           
    19                           	psect	config
    20  2007  E0F4               	dw	57588	;#
    21  2008  FFFF               	dw	65535	;#
    22                           
    23                           	psect	idataBANK0
    24  0788                     __pidataBANK0:	
    25                           
    26                           ;initializer for _LETRA1
    27  0788  3400               	retlw	0
    28  0789  3422               	retlw	34
    29  078A  3442               	retlw	66
    30  078B  3442               	retlw	66
    31  078C  3442               	retlw	66
    32  078D  343E               	retlw	62
    33  078E  3402               	retlw	2
    34  078F  3400               	retlw	0
    35  0790  3400               	retlw	0
    36  0791  347C               	retlw	124
    37  0792  3412               	retlw	18
    38  0793  3412               	retlw	18
    39  0794  3412               	retlw	18
    40  0795  3412               	retlw	18
    41  0796  347C               	retlw	124
    42  0797  3400               	retlw	0
    43  0798  3400               	retlw	0
    44  0799  3400               	retlw	0
    45  079A  343C               	retlw	60
    46  079B  3442               	retlw	66
    47  079C  3442               	retlw	66
    48  079D  3442               	retlw	66
    49  079E  3400               	retlw	0
    50  079F  3400               	retlw	0
    51  07A0  3400               	retlw	0
    52  07A1  3422               	retlw	34
    53  07A2  3442               	retlw	66
    54  07A3  3442               	retlw	66
    55  07A4  3442               	retlw	66
    56  07A5  343E               	retlw	62
    57  07A6  3402               	retlw	2
    58  07A7  3400               	retlw	0
    59  07A8  3400               	retlw	0
    60  07A9  3400               	retlw	0
    61  07AA  3400               	retlw	0
    62  07AB  3400               	retlw	0
    63                           
    64                           ;initializer for _POS
    65  07AC  3400               	retlw	0
    66  07AD  3401               	retlw	1
    67  07AE  3402               	retlw	2
    68  07AF  3404               	retlw	4
    69  07B0  3408               	retlw	8
    70  07B1  3410               	retlw	16
    71  07B2  3420               	retlw	32
    72  07B3  3440               	retlw	64
    73  07B4  3480               	retlw	128
    74                           
    75                           	psect	nvCOMMON
    76  007A                     __pnvCOMMON:	
    77  007A                     _i:	
    78  007A                     	ds	2
    79  0005                     _PORTA	set	5
    80  0007                     _PORTC	set	7
    81  0001                     _TMR0	set	1
    82  005A                     _T0IF	set	90
    83  0081                     _OPTION_REG	set	129
    84  0085                     _TRISA	set	133
    85  0086                     _TRISB	set	134
    86  0087                     _TRISC	set	135
    87  0088                     _TRISD	set	136
    88  0089                     _TRISE	set	137
    89  0188                     _ANSEL	set	392
    90  0189                     _ANSELH	set	393
    91                           
    92                           	psect	cinit
    93  0756                     start_initialization:	
    94  0756  304D               	movlw	low (__pdataBANK0+45)
    95                           
    96                           ; Clear objects allocated to COMMON
    97  0757  01F6               	clrf	__pbssCOMMON& (0+127)
    98  0758  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
    99  0759  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   100  075A  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   101                           
   102                           ; Initialize objects allocated to BANK0
   103  075B  1383               	bcf	3,7	;select IRP bank0
   104  075C  00FD               	movwf	125
   105  075D  3007               	movlw	high __pidataBANK0
   106  075E  00FE               	movwf	126
   107  075F  3088               	movlw	low __pidataBANK0
   108  0760  00FF               	movwf	127
   109  0761  3020               	movlw	low __pdataBANK0
   110  0762  0084               	movwf	4
   111  0763  120A  118A  2749   	fcall	init_ram
   112  0766                     end_of_initialization:	
   113                           ;End of C runtime variable initialization code
   114                           
   115  0766  0183               	clrf	3
   116  0767  120A  118A  2FB5   	ljmp	_main	;jump to C main() function
   117                           
   118                           	psect	bssCOMMON
   119  0076                     __pbssCOMMON:	
   120  0076                     _j:	
   121  0076                     	ds	2
   122  0078                     _k:	
   123  0078                     	ds	2
   124                           
   125                           	psect	dataBANK0
   126  0020                     __pdataBANK0:	
   127  0020                     _LETRA1:	
   128  0020                     	ds	36
   129  0044                     _POS:	
   130  0044                     	ds	9
   131                           
   132                           	psect	inittext
   133  0745                     init_fetch:	
   134                           ;	Called with low address in FSR and high address in W
   135                           
   136  0745  087E               	movf	126,w
   137  0746  008A               	movwf	10
   138  0747  087F               	movf	127,w
   139  0748  0082               	movwf	2
   140  0749                     init_ram:	
   141                           ;Called with:
   142                           ;	high address of idata address in btemp 
   143                           ;	low address of idata address in btemp+1 
   144                           ;	low address of data in FSR
   145                           ;	high address + 1 of data in btemp-1
   146                           
   147  0749  2745  120A  118A   	fcall	init_fetch
   148  074C  0080               	movwf	0
   149  074D  0A84               	incf	4,f
   150  074E  0804               	movf	4,w
   151  074F  067D               	xorwf	125,w
   152  0750  1903               	btfsc	3,2
   153  0751  3400               	retlw	0
   154  0752  0AFF               	incf	127,f
   155  0753  1903               	btfsc	3,2
   156  0754  0AFE               	incf	126,f
   157  0755  2F49               	goto	init_ram
   158                           
   159                           	psect	cstackCOMMON
   160  0070                     __pcstackCOMMON:	
   161  0070                     ?_pause:	
   162  0070                     ?_msecbase:	
   163                           ; 0 bytes @ 0x0
   164                           
   165  0070                     ??_msecbase:	
   166                           ; 0 bytes @ 0x0
   167                           
   168  0070                     ?_main:	
   169                           ; 0 bytes @ 0x0
   170                           
   171  0070                     pause@usvalue:	
   172                           ; 0 bytes @ 0x0
   173                           
   174                           
   175                           ; 2 bytes @ 0x0
   176  0070                     	ds	2
   177  0072                     ??_pause:	
   178  0072                     pause@x:	
   179                           ; 0 bytes @ 0x2
   180                           
   181                           
   182                           ; 2 bytes @ 0x2
   183  0072                     	ds	2
   184  0074                     ??_main:	
   185                           
   186                           ; 0 bytes @ 0x4
   187  0074                     	ds	2
   188                           
   189                           	psect	maintext
   190  07B5                     __pmaintext:	
   191 ;;Data sizes: Strings 0, constant 0, data 45, bss 4, persistent 2 stack 0
   192 ;;Auto spaces:   Size  Autos    Used
   193 ;; COMMON          14      6      12
   194 ;; BANK0           80      0      45
   195 ;; BANK1           80      0       0
   196 ;; BANK3           96      0       0
   197 ;; BANK2           96      0       0
   198 ;;
   199 ;; Pointer list with targets:
   200 ;;
   201 ;; Critical Paths under _main in COMMON
   202 ;;
   203 ;;   _main->_pause
   204 ;;
   205 ;; Critical Paths under _main in BANK0
   206 ;;
   207 ;;   None.
   208 ;;
   209 ;; Critical Paths under _main in BANK1
   210 ;;
   211 ;;   None.
   212 ;;
   213 ;; Critical Paths under _main in BANK3
   214 ;;
   215 ;;   None.
   216 ;;
   217 ;; Critical Paths under _main in BANK2
   218 ;;
   219 ;;   None.
   220 ;;
   221 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   222 ;;
   223 ;;
   224 ;;Call Graph Tables:
   225 ;;
   226 ;; ---------------------------------------------------------------------------------
   227 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   228 ;; ---------------------------------------------------------------------------------
   229 ;; (0) _main                                                 2     2      0      46
   230 ;;                                              4 COMMON     2     2      0
   231 ;;                              _pause
   232 ;; ---------------------------------------------------------------------------------
   233 ;; (1) _pause                                                4     2      2      46
   234 ;;                                              0 COMMON     4     2      2
   235 ;;                           _msecbase
   236 ;; ---------------------------------------------------------------------------------
   237 ;; (2) _msecbase                                             0     0      0       0
   238 ;; ---------------------------------------------------------------------------------
   239 ;; Estimated maximum stack depth 2
   240 ;; ---------------------------------------------------------------------------------
   241 ;; Call Graph Graphs:
   242 ;; _main (ROOT)
   243 ;;   _pause
   244 ;;     _msecbase
   245 ;;
   246 ;; Address spaces:
   247 ;;Name               Size   Autos  Total    Cost      Usage
   248 ;;BANK3               60      0       0       9        0.0%
   249 ;;BITBANK3            60      0       0       8        0.0%
   250 ;;SFR3                 0      0       0       4        0.0%
   251 ;;BITSFR3              0      0       0       4        0.0%
   252 ;;BANK2               60      0       0      11        0.0%
   253 ;;BITBANK2            60      0       0      10        0.0%
   254 ;;SFR2                 0      0       0       5        0.0%
   255 ;;BITSFR2              0      0       0       5        0.0%
   256 ;;SFR1                 0      0       0       2        0.0%
   257 ;;BITSFR1              0      0       0       2        0.0%
   258 ;;BANK1               50      0       0       7        0.0%
   259 ;;BITBANK1            50      0       0       6        0.0%
   260 ;;CODE                 0      0       0       0        0.0%
   261 ;;DATA                 0      0      3B      12        0.0%
   262 ;;ABS                  0      0      39       3        0.0%
   263 ;;NULL                 0      0       0       0        0.0%
   264 ;;STACK                0      0       2       2        0.0%
   265 ;;BANK0               50      0      2D       5       56.3%
   266 ;;BITBANK0            50      0       0       4        0.0%
   267 ;;SFR0                 0      0       0       1        0.0%
   268 ;;BITSFR0              0      0       0       1        0.0%
   269 ;;COMMON               E      6       C       1       85.7%
   270 ;;BITCOMMON            E      0       0       0        0.0%
   271 ;;EEDATA             100      0       0       0        0.0%
   272                           
   273                           
   274 ;; *************** function _main *****************
   275 ;; Defined at:
   276 ;;		line 21 in file "C:\Users\Jorge\OneDrive\Escritorio\PROGS C\NOMBRE\NOMBRE.c"
   277 ;; Parameters:    Size  Location     Type
   278 ;;		None
   279 ;; Auto vars:     Size  Location     Type
   280 ;;		None
   281 ;; Return value:  Size  Location     Type
   282 ;;		None               void
   283 ;; Registers used:
   284 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   285 ;; Tracked objects:
   286 ;;		On entry : 17F/0
   287 ;;		On exit  : 11F/0
   288 ;;		Unchanged: FFE80/0
   289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   290 ;;      Params:         0       0       0       0       0
   291 ;;      Locals:         0       0       0       0       0
   292 ;;      Temps:          2       0       0       0       0
   293 ;;      Totals:         2       0       0       0       0
   294 ;;Total ram usage:        2 bytes
   295 ;; Hardware stack levels required when called:    2
   296 ;; This function calls:
   297 ;;		_pause
   298 ;; This function is called by:
   299 ;;		Startup code after reset
   300 ;; This function uses a non-reentrant model
   301 ;;
   302  07B5                     _main:	
   303                           
   304                           ;NOMBRE.c: 23: ANSEL = 0x60;
   305                           
   306                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   307  07B5  3060               	movlw	96
   308  07B6  1683               	bsf	3,5	;RP0=1, select bank3
   309  07B7  1703               	bsf	3,6	;RP1=1, select bank3
   310  07B8  0088               	movwf	8	;volatile
   311                           
   312                           ;NOMBRE.c: 24: ANSELH = 0x00;
   313  07B9  0189               	clrf	9	;volatile
   314                           
   315                           ;NOMBRE.c: 25: TRISB = 0xFF;
   316  07BA  30FF               	movlw	255
   317  07BB  1303               	bcf	3,6	;RP1=0, select bank1
   318  07BC  0086               	movwf	6	;volatile
   319                           
   320                           ;NOMBRE.c: 26: TRISA = 0x00;
   321  07BD  0185               	clrf	5	;volatile
   322                           
   323                           ;NOMBRE.c: 27: TRISD =0x00;
   324  07BE  0188               	clrf	8	;volatile
   325                           
   326                           ;NOMBRE.c: 28: TRISC =0x00;
   327  07BF  0187               	clrf	7	;volatile
   328                           
   329                           ;NOMBRE.c: 29: TRISE = 0x07;
   330  07C0  3007               	movlw	7
   331  07C1  0089               	movwf	9	;volatile
   332  07C2                     l2481:	
   333                           
   334                           ;NOMBRE.c: 33: for(i=0;i<=32+4;i++){
   335  07C2  01FA               	clrf	_i
   336  07C3  01FB               	clrf	_i+1
   337  07C4                     l2485:	
   338                           
   339                           ;NOMBRE.c: 35: for(k=1;k<=50;k++){
   340  07C4  01F8               	clrf	_k
   341  07C5  0AF8               	incf	_k,f
   342  07C6  01F9               	clrf	_k+1
   343  07C7                     l2491:	
   344                           
   345                           ;NOMBRE.c: 37: for(j=0;j<=9;j++){
   346  07C7  01F6               	clrf	_j
   347  07C8  01F7               	clrf	_j+1
   348  07C9                     l2497:	
   349                           
   350                           ;NOMBRE.c: 39: PORTC=POS[j];
   351  07C9  0876               	movf	_j,w
   352  07CA  3E44               	addlw	_POS& (0+255)
   353  07CB  0084               	movwf	4
   354  07CC  0800               	movf	0,w
   355  07CD  1283               	bcf	3,5	;RP0=0, select bank0
   356  07CE  1303               	bcf	3,6	;RP1=0, select bank0
   357  07CF  0087               	movwf	7	;volatile
   358                           
   359                           ;NOMBRE.c: 41: PORTA = LETRA1[j+i];
   360  07D0  3020               	movlw	_LETRA1& (0+255)
   361  07D1  0776               	addwf	_j,w
   362  07D2  00F4               	movwf	??_main
   363  07D3  087A               	movf	_i,w
   364  07D4  0774               	addwf	??_main,w
   365  07D5  00F5               	movwf	??_main+1
   366  07D6  0084               	movwf	4
   367  07D7  0800               	movf	0,w
   368  07D8  0085               	movwf	5	;volatile
   369                           
   370                           ;NOMBRE.c: 43: pause(10);
   371  07D9  300A               	movlw	10
   372  07DA  00F0               	movwf	?_pause
   373  07DB  01F1               	clrf	?_pause+1
   374  07DC  120A  118A  276A   	fcall	_pause
      +       120A  118A         
   375  07E1  0AF6               	incf	_j,f
   376  07E2  1903               	skipnz
   377  07E3  0AF7               	incf	_j+1,f
   378  07E4  3000               	movlw	0
   379  07E5  0277               	subwf	_j+1,w
   380  07E6  300A               	movlw	10
   381  07E7  1903               	skipnz
   382  07E8  0276               	subwf	_j,w
   383  07E9  1C03               	skipc
   384  07EA  2FC9               	goto	l2497
   385  07EB  0AF8               	incf	_k,f
   386  07EC  1903               	skipnz
   387  07ED  0AF9               	incf	_k+1,f
   388  07EE  3000               	movlw	0
   389  07EF  0279               	subwf	_k+1,w
   390  07F0  3033               	movlw	51
   391  07F1  1903               	skipnz
   392  07F2  0278               	subwf	_k,w
   393  07F3  1C03               	skipc
   394  07F4  2FC7               	goto	l2491
   395  07F5  0AFA               	incf	_i,f
   396  07F6  1903               	skipnz
   397  07F7  0AFB               	incf	_i+1,f
   398  07F8  3000               	movlw	0
   399  07F9  027B               	subwf	_i+1,w
   400  07FA  3025               	movlw	37
   401  07FB  1903               	skipnz
   402  07FC  027A               	subwf	_i,w
   403  07FD  1803               	btfsc	3,0
   404  07FE  2FC2               	goto	l2481
   405  07FF  2FC4               	goto	l2485
   406  0800                     __end_of_main:	
   407                           
   408                           	psect	text84
   409  076A                     __ptext84:	
   410 ;; =============== function _main ends ============
   411                           
   412                           
   413 ;; *************** function _pause *****************
   414 ;; Defined at:
   415 ;;		line 55 in file "C:\Users\Jorge\OneDrive\Escritorio\PROGS C\NOMBRE\NOMBRE.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;  usvalue         2    0[COMMON] unsigned short 
   418 ;; Auto vars:     Size  Location     Type
   419 ;;  x               2    2[COMMON] unsigned short 
   420 ;; Return value:  Size  Location     Type
   421 ;;		None               void
   422 ;; Registers used:
   423 ;;		wreg, status,2, status,0, pclath, cstack
   424 ;; Tracked objects:
   425 ;;		On entry : 17F/0
   426 ;;		On exit  : 11F/0
   427 ;;		Unchanged: FFE80/0
   428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   429 ;;      Params:         2       0       0       0       0
   430 ;;      Locals:         2       0       0       0       0
   431 ;;      Temps:          0       0       0       0       0
   432 ;;      Totals:         4       0       0       0       0
   433 ;;Total ram usage:        4 bytes
   434 ;; Hardware stack levels used:    1
   435 ;; Hardware stack levels required when called:    1
   436 ;; This function calls:
   437 ;;		_msecbase
   438 ;; This function is called by:
   439 ;;		_main
   440 ;; This function uses a non-reentrant model
   441 ;;
   442  076A                     _pause:	
   443                           
   444                           ;NOMBRE.c: 56: unsigned short x;
   445                           ;NOMBRE.c: 58: for (x=0; x<=usvalue; x++)
   446                           
   447                           ; Regs used in _pause: [wreg+status,2+status,0+pclath+cstack]
   448  076A  01F2               	clrf	pause@x
   449  076B  01F3               	clrf	pause@x+1
   450  076C                     l2471:	
   451  076C  0873               	movf	pause@x+1,w
   452  076D  0271               	subwf	pause@usvalue+1,w
   453  076E  1D03               	skipz
   454  076F  2F72               	goto	u75
   455  0770  0872               	movf	pause@x,w
   456  0771  0270               	subwf	pause@usvalue,w
   457  0772                     u75:	
   458  0772  1C03               	btfss	3,0
   459  0773  0008               	return
   460                           
   461                           ;NOMBRE.c: 59: {
   462                           ;NOMBRE.c: 60: msecbase();
   463  0774  277B  120A  118A   	fcall	_msecbase
   464  0777  0AF2               	incf	pause@x,f
   465  0778  1903               	skipnz
   466  0779  0AF3               	incf	pause@x+1,f
   467  077A  2F6C               	goto	l2471
   468  077B                     __end_of_pause:	
   469  077B                     __ptext85:	
   470 ;; =============== function _pause ends ============
   471                           
   472                           
   473 ;; *************** function _msecbase *****************
   474 ;; Defined at:
   475 ;;		line 65 in file "C:\Users\Jorge\OneDrive\Escritorio\PROGS C\NOMBRE\NOMBRE.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;		None
   478 ;; Auto vars:     Size  Location     Type
   479 ;;		None
   480 ;; Return value:  Size  Location     Type
   481 ;;		None               void
   482 ;; Registers used:
   483 ;;		wreg
   484 ;; Tracked objects:
   485 ;;		On entry : 11F/0
   486 ;;		On exit  : 11F/0
   487 ;;		Unchanged: FFE80/0
   488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   489 ;;      Params:         0       0       0       0       0
   490 ;;      Locals:         0       0       0       0       0
   491 ;;      Temps:          0       0       0       0       0
   492 ;;      Totals:         0       0       0       0       0
   493 ;;Total ram usage:        0 bytes
   494 ;; Hardware stack levels used:    1
   495 ;; This function calls:
   496 ;;		Nothing
   497 ;; This function is called by:
   498 ;;		_pause
   499 ;; This function uses a non-reentrant model
   500 ;;
   501  077B                     _msecbase:	
   502                           
   503                           ;NOMBRE.c: 66: OPTION_REG = 0b11010001;
   504                           
   505                           ; Regs used in _msecbase: [wreg]
   506  077B  30D1               	movlw	209
   507  077C  1683               	bsf	3,5	;RP0=1, select bank1
   508  077D  1303               	bcf	3,6	;RP1=0, select bank1
   509  077E  0081               	movwf	1	;volatile
   510                           
   511                           ;NOMBRE.c: 67: TMR0 = 0x0E;
   512  077F  300E               	movlw	14
   513  0780  1283               	bcf	3,5	;RP0=0, select bank0
   514  0781  0081               	movwf	1	;volatile
   515                           
   516                           ;NOMBRE.c: 68: TMR0 = 0x8E;
   517  0782  308E               	movlw	142
   518  0783  0081               	movwf	1	;volatile
   519  0784                     l1057:	
   520                           ;NOMBRE.c: 69: while(!T0IF);
   521                           
   522  0784  1D0B               	btfss	11,2
   523  0785  2F84               	goto	l1057
   524                           
   525                           ;NOMBRE.c: 70: T0IF = 0;
   526  0786  110B               	bcf	11,2
   527  0787  0008               	return
   528  0788                     __end_of_msecbase:	
   529                           
   530                           	psect	text86
   531  0000                     __ptext86:	
   532 ;; =============== function _msecbase ends ============
   533                           
   534  007E                     btemp	set	126	;btemp
   535  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Sun May 08 14:36:17 2022

                   _i 007A                     _j 0076                     _k 0078                     pc 0002  
                  u75 0772                    fsr 0004                   _POS 0044                   fsr0 0004  
                 indf 0000                  l1060 0000                  l1054 0000                  l1057 0784  
                l2501 0000                  l2511 0000                  l2503 0000                  l2507 0000  
                l2463 0000                  l2471 076C                  l2465 0000                  l2481 07C2  
                l2473 0000                  l2491 07C7                  l2475 0000                  l2469 0000  
                l2485 07C4                  l2477 0000                  l2479 0000                  l2497 07C9  
                l2499 0000                  _T0IF 005A                  _TMR0 0001                  _main 07B5  
                btemp 007E                  start 0000                 ?_main 0070                 _ANSEL 0188  
               _PORTA 0005                 _PORTC 0007                 _TRISA 0085                 _TRISB 0086  
               _TRISC 0087                 _TRISD 0088                 _TRISE 0089                 _pause 076A  
               pclath 000A                 status 0003                 wtemp0 007E          __end_of_main 0800  
              ??_main 0074                ?_pause 0070                _ANSELH 0189                _LETRA1 0020  
    __end_of_msecbase 0788                pause@x 0072        __pcstackCOMMON 0070          __pidataBANK0 0788  
       __end_of_pause 077B               ??_pause 0072            __pnvCOMMON 007A            __pmaintext 07B5  
           ?_msecbase 0070  end_of_initialization 0766               init_ram 0749            ??_msecbase 0070  
 start_initialization 0756           __pdataBANK0 0020          pause@usvalue 0070           __pbssCOMMON 0076  
   __size_of_msecbase 000D        __size_of_pause 0011             init_fetch 0745              __ptext84 076A  
            __ptext85 077B              __ptext86 0000         __size_of_main 004B              _msecbase 077B  
          _OPTION_REG 0081  
