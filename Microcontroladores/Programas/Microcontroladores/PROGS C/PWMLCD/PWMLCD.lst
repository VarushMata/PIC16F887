

HI-TECH Software PIC PRO Macro Assembler V9.82 build 9453 
                                                                                               Wed May 11 08:07:24 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 9453
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,delta=2
    13                           	psect	text501,local,class=CODE,delta=2
    14                           	psect	text502,local,class=CODE,delta=2
    15                           	psect	text504,local,class=CODE,delta=2
    16                           	psect	text506,local,class=CODE,delta=2
    17                           	psect	text509,local,class=CODE,delta=2
    18                           	psect	text525,local,class=CODE,delta=2
    19                           	psect	text529,local,class=CODE,delta=2
    20                           	psect	pa_nodes,global,class=CODE,delta=2
    21                           	dabs	1,0x7E,2
    22  000A                     	;#
    23                           
    24                           	psect	config
    25  2007  E0D4               	dw	57556	;#
    26  2008  FFFF               	dw	65535	;#
    27                           
    28                           	psect	strings
    29  0800                     __pstrings:	
    30  0800                     stringtab:	
    31                           ;	global	stringdir,stringtab,__stringbase
    32                           
    33                           
    34                           ;	String table - string pointers are 1 byte each
    35  0800  1BFF               	btfsc	btemp+1,7
    36  0801  280A               	ljmp	stringcode
    37  0802  1383               	bcf	3,7
    38  0803  187F               	btfsc	btemp+1,0
    39  0804  1783               	bsf	3,7
    40  0805  0800               	movf	0,w
    41  0806  0A84               	incf	4,f
    42  0807  1903               	skipnz
    43  0808  0AFF               	incf	btemp+1,f
    44  0809  0008               	return
    45  080A                     stringcode:	
    46  080A                     stringdir:	
    47  080A  3008               	movlw	high stringdir
    48  080B  008A               	movwf	10
    49  080C  0804               	movf	4,w
    50  080D  0A84               	incf	4,f
    51  080E  0782               	addwf	2,f
    52  080F                     __stringbase:	
    53  080F  3400               	retlw	0
    54  0810                     __npowers_:	
    55  0810  3400               	retlw	0
    56  0811  3480               	retlw	128
    57  0812  343F               	retlw	63
    58  0813  34CD               	retlw	205
    59  0814  34CC               	retlw	204
    60  0815  343D               	retlw	61
    61  0816  34D7               	retlw	215
    62  0817  3423               	retlw	35
    63  0818  343C               	retlw	60
    64  0819  3412               	retlw	18
    65  081A  3483               	retlw	131
    66  081B  343A               	retlw	58
    67  081C  34B7               	retlw	183
    68  081D  34D1               	retlw	209
    69  081E  3438               	retlw	56
    70  081F  34C6               	retlw	198
    71  0820  3427               	retlw	39
    72  0821  3437               	retlw	55
    73  0822  3438               	retlw	56
    74  0823  3486               	retlw	134
    75  0824  3435               	retlw	53
    76  0825  34C0               	retlw	192
    77  0826  34D6               	retlw	214
    78  0827  3433               	retlw	51
    79  0828  34CC               	retlw	204
    80  0829  342B               	retlw	43
    81  082A  3432               	retlw	50
    82  082B  3470               	retlw	112
    83  082C  3489               	retlw	137
    84  082D  3430               	retlw	48
    85  082E  34E7               	retlw	231
    86  082F  34DB               	retlw	219
    87  0830  342E               	retlw	46
    88  0831  34E5               	retlw	229
    89  0832  343C               	retlw	60
    90  0833  341E               	retlw	30
    91  0834  3442               	retlw	66
    92  0835  34A2               	retlw	162
    93  0836  340D               	retlw	13
    94  0837                     __powers_:	
    95  0837  3400               	retlw	0
    96  0838  3480               	retlw	128
    97  0839  343F               	retlw	63
    98  083A  3400               	retlw	0
    99  083B  3420               	retlw	32
   100  083C  3441               	retlw	65
   101  083D  3400               	retlw	0
   102  083E  34C8               	retlw	200
   103  083F  3442               	retlw	66
   104  0840  3400               	retlw	0
   105  0841  347A               	retlw	122
   106  0842  3444               	retlw	68
   107  0843  3440               	retlw	64
   108  0844  341C               	retlw	28
   109  0845  3446               	retlw	70
   110  0846  3450               	retlw	80
   111  0847  34C3               	retlw	195
   112  0848  3447               	retlw	71
   113  0849  3424               	retlw	36
   114  084A  3474               	retlw	116
   115  084B  3449               	retlw	73
   116  084C  3497               	retlw	151
   117  084D  3418               	retlw	24
   118  084E  344B               	retlw	75
   119  084F  34BC               	retlw	188
   120  0850  34BE               	retlw	190
   121  0851  344C               	retlw	76
   122  0852  346B               	retlw	107
   123  0853  346E               	retlw	110
   124  0854  344E               	retlw	78
   125  0855  3403               	retlw	3
   126  0856  3415               	retlw	21
   127  0857  3450               	retlw	80
   128  0858  3479               	retlw	121
   129  0859  34AD               	retlw	173
   130  085A  3460               	retlw	96
   131  085B  34F3               	retlw	243
   132  085C  3449               	retlw	73
   133  085D  3471               	retlw	113
   134  085E                     _dpowers:	
   135  085E  3401               	retlw	1
   136  085F  3400               	retlw	0
   137  0860  3400               	retlw	0
   138  0861  3400               	retlw	0
   139  0862  340A               	retlw	10
   140  0863  3400               	retlw	0
   141  0864  3400               	retlw	0
   142  0865  3400               	retlw	0
   143  0866  3464               	retlw	100
   144  0867  3400               	retlw	0
   145  0868  3400               	retlw	0
   146  0869  3400               	retlw	0
   147  086A  34E8               	retlw	232
   148  086B  3403               	retlw	3
   149  086C  3400               	retlw	0
   150  086D  3400               	retlw	0
   151  086E  3410               	retlw	16
   152  086F  3427               	retlw	39
   153  0870  3400               	retlw	0
   154  0871  3400               	retlw	0
   155  0872  34A0               	retlw	160
   156  0873  3486               	retlw	134
   157  0874  3401               	retlw	1
   158  0875  3400               	retlw	0
   159  0876  3440               	retlw	64
   160  0877  3442               	retlw	66
   161  0878  340F               	retlw	15
   162  0879  3400               	retlw	0
   163  087A  3480               	retlw	128
   164  087B  3496               	retlw	150
   165  087C  3498               	retlw	152
   166  087D  3400               	retlw	0
   167  087E  3400               	retlw	0
   168  087F  34E1               	retlw	225
   169  0880  34F5               	retlw	245
   170  0881  3405               	retlw	5
   171  0882  3400               	retlw	0
   172  0883  34CA               	retlw	202
   173  0884  349A               	retlw	154
   174  0885  343B               	retlw	59
   175  001F                     _ADCON0	set	31
   176  001E                     _ADRESH	set	30
   177  0008                     _PORTD	set	8
   178  0001                     _TMR0	set	1
   179  00F9                     _GO_DONE	set	249
   180  0038                     _RC0	set	56
   181  003B                     _RC3	set	59
   182  003C                     _RC4	set	60
   183  005A                     _T0IF	set	90
   184  009F                     _ADCON1	set	159
   185  009E                     _ADRESL	set	158
   186  0081                     _OPTION_REG	set	129
   187  0085                     _TRISA	set	133
   188  0087                     _TRISC	set	135
   189  0088                     _TRISD	set	136
   190  0089                     _TRISE	set	137
   191  0188                     _ANSEL	set	392
   192  0189                     _ANSELH	set	393
   193  0886                     STR_2:	
   194  0886  3450               	retlw	80	;'P'
   195  0887  3457               	retlw	87	;'W'
   196  0888  344D               	retlw	77	;'M'
   197  0889  3431               	retlw	49	;'1'
   198  088A  343A               	retlw	58	;':'
   199  088B  3400               	retlw	0
   200  088C                     STR_6:	
   201  088C  3450               	retlw	80	;'P'
   202  088D  3457               	retlw	87	;'W'
   203  088E  344D               	retlw	77	;'M'
   204  088F  3432               	retlw	50	;'2'
   205  0890  343A               	retlw	58	;':'
   206  0891  3400               	retlw	0
   207  0892                     STR_1:	
   208  0892  3425               	retlw	37	;'%'
   209  0893  3431               	retlw	49	;'1'
   210  0894  342E               	retlw	46	;'.'
   211  0895  3431               	retlw	49	;'1'
   212  0896  3466               	retlw	102	;'f'
   213  0897  3400               	retlw	0
   214  0898                     STR_4:	
   215  0898  3443               	retlw	67	;'C'
   216  0899  3435               	retlw	53	;'5'
   217  089A  343A               	retlw	58	;':'
   218  089B  3400               	retlw	0
   219  089C                     STR_8:	
   220  089C  3443               	retlw	67	;'C'
   221  089D  3436               	retlw	54	;'6'
   222  089E  343A               	retlw	58	;':'
   223  089F  3400               	retlw	0
   224  08A0                     STR_3:	
   225  08A0  3425               	retlw	37	;'%'
   226  08A1  3464               	retlw	100	;'d'
   227  08A2  3400               	retlw	0
   228  08A0                     
   229                           	psect	cinit
   230  0057                     start_initialization:	
   231  0057  305B               	movlw	low __pbssBANK0
   232                           
   233                           ; Clear objects allocated to BANK0
   234  0058  1383               	bcf	3,7	;select IRP bank0
   235  0059  0084               	movwf	4
   236  005A  306B               	movlw	low (__pbssBANK0+16)
   237  005B  120A  118A  204F   	fcall	clear_ram
   238  005E                     end_of_initialization:	
   239                           ;End of C runtime variable initialization code
   240                           
   241  005E  0183               	clrf	3
   242  005F  120A  158A  2A58   	ljmp	_main	;jump to C main() function
   243                           
   244                           	psect	bssBANK0
   245  005B                     __pbssBANK0:	
   246  005B                     _pwm:	
   247  005B                     	ds	3
   248  005E                     _adc:	
   249  005E                     	ds	2
   250  0060                     _num:	
   251  0060                     	ds	2
   252  0062                     _carac:	
   253  0062                     	ds	5
   254  0067                     _carac2:	
   255  0067                     	ds	4
   256                           
   257                           	psect	clrtext
   258  004F                     clear_ram:	
   259                           ;	Called with FSR containing the base address, and
   260                           ;	W with the last address+1
   261                           
   262  004F  0064               	clrwdt	;clear the watchdog before getting into this loop
   263  0050                     clrloop:	
   264  0050  0180               	clrf	0	;clear RAM location pointed to by FSR
   265  0051  0A84               	incf	4,f	;increment pointer
   266  0052  0604               	xorwf	4,w	;XOR with final address
   267  0053  1903               	btfsc	3,2	;have we reached the end yet?
   268  0054  3400               	retlw	0	;all done for this memory range, return
   269  0055  0604               	xorwf	4,w	;XOR again to restore value
   270  0056  2850               	goto	clrloop	;do the next byte
   271                           
   272                           	psect	cstackBANK1
   273  00A0                     __pcstackBANK1:	
   274  00A0                     _sprintf$1897:	
   275                           
   276                           ; 4 bytes @ 0x0
   277  00A0                     	ds	4
   278  00A4                     sprintf@ap:	
   279                           
   280                           ; 1 bytes @ 0x4
   281  00A4                     	ds	1
   282  00A5                     sprintf@integ:	
   283                           
   284                           ; 3 bytes @ 0x5
   285  00A5                     	ds	3
   286  00A8                     sprintf@flag:	
   287                           
   288                           ; 2 bytes @ 0x8
   289  00A8                     	ds	2
   290  00AA                     sprintf@width:	
   291                           
   292                           ; 2 bytes @ 0xA
   293  00AA                     	ds	2
   294  00AC                     sprintf@_val:	
   295                           
   296                           ; 4 bytes @ 0xC
   297  00AC                     	ds	4
   298  00B0                     sprintf@exp:	
   299                           
   300                           ; 2 bytes @ 0x10
   301  00B0                     	ds	2
   302  00B2                     sprintf@fval:	
   303                           
   304                           ; 3 bytes @ 0x12
   305  00B2                     	ds	3
   306  00B5                     sprintf@sp:	
   307                           
   308                           ; 1 bytes @ 0x15
   309  00B5                     	ds	1
   310  00B6                     sprintf@prec:	
   311                           
   312                           ; 2 bytes @ 0x16
   313  00B6                     	ds	2
   314  00B8                     sprintf@c:	
   315                           
   316                           ; 1 bytes @ 0x18
   317  00B8                     	ds	1
   318                           
   319                           	psect	cstackCOMMON
   320  0070                     __pcstackCOMMON:	
   321  0070                     ?_lcd_init:	
   322  0070                     ?_lcd_clear:	
   323                           ; 0 bytes @ 0x0
   324                           
   325  0070                     ?_lcd_goto:	
   326                           ; 0 bytes @ 0x0
   327                           
   328  0070                     ?_pause:	
   329                           ; 0 bytes @ 0x0
   330                           
   331  0070                     ?_msecbase:	
   332                           ; 0 bytes @ 0x0
   333                           
   334  0070                     ??_msecbase:	
   335                           ; 0 bytes @ 0x0
   336                           
   337  0070                     ?_isdigit:	
   338                           ; 0 bytes @ 0x0
   339                           
   340  0070                     ??_isdigit:	
   341                           ; 1 bit 
   342                           
   343  0070                     ?_main:	
   344                           ; 0 bytes @ 0x0
   345                           
   346  0070                     ?_lcd_write:	
   347                           ; 0 bytes @ 0x0
   348                           
   349  0070                     ?___ftge:	
   350                           ; 0 bytes @ 0x0
   351                           
   352  0070                     ?___lbmod:	
   353                           ; 1 bit 
   354                           
   355  0070                     ?___wmul:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ?___awmod:	
   359                           ; 2 bytes @ 0x0
   360                           
   361  0070                     ?___ftpack:	
   362                           ; 2 bytes @ 0x0
   363                           
   364  0070                     ?___ftneg:	
   365                           ; 3 bytes @ 0x0
   366                           
   367  0070                     ?__tdiv_to_l_:	
   368                           ; 3 bytes @ 0x0
   369                           
   370  0070                     ?__div_to_l_:	
   371                           ; 4 bytes @ 0x0
   372                           
   373  0070                     ?___lldiv:	
   374                           ; 4 bytes @ 0x0
   375                           
   376  0070                     _isdigit$2405:	
   377                           ; 4 bytes @ 0x0
   378                           
   379  0070                     ___lbmod@divisor:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     pause@usvalue:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ___wmul@multiplier:	
   386                           ; 2 bytes @ 0x0
   387                           
   388  0070                     ___awmod@divisor:	
   389                           ; 2 bytes @ 0x0
   390                           
   391  0070                     ___ftneg@f1:	
   392                           ; 2 bytes @ 0x0
   393                           
   394  0070                     ___ftge@ff1:	
   395                           ; 3 bytes @ 0x0
   396                           
   397  0070                     __tdiv_to_l_@f1:	
   398                           ; 3 bytes @ 0x0
   399                           
   400  0070                     __div_to_l_@f1:	
   401                           ; 3 bytes @ 0x0
   402                           
   403  0070                     ___ftpack@arg:	
   404                           ; 3 bytes @ 0x0
   405                           
   406  0070                     ___lldiv@divisor:	
   407                           ; 3 bytes @ 0x0
   408                           
   409                           
   410                           ; 4 bytes @ 0x0
   411  0070                     	ds	1
   412  0071                     ??___lbmod:	
   413  0071                     isdigit@c:	
   414                           ; 0 bytes @ 0x1
   415                           
   416                           
   417                           ; 1 bytes @ 0x1
   418  0071                     	ds	1
   419  0072                     ??_pause:	
   420  0072                     ___lbmod@dividend:	
   421                           ; 0 bytes @ 0x2
   422                           
   423  0072                     pause@x:	
   424                           ; 1 bytes @ 0x2
   425                           
   426  0072                     ___wmul@multiplicand:	
   427                           ; 2 bytes @ 0x2
   428                           
   429  0072                     ___awmod@dividend:	
   430                           ; 2 bytes @ 0x2
   431                           
   432                           
   433                           ; 2 bytes @ 0x2
   434  0072                     	ds	1
   435  0073                     ??___ftneg:	
   436  0073                     ___lbmod@counter:	
   437                           ; 0 bytes @ 0x3
   438                           
   439  0073                     ___ftpack@exp:	
   440                           ; 1 bytes @ 0x3
   441                           
   442  0073                     ___ftge@ff2:	
   443                           ; 1 bytes @ 0x3
   444                           
   445  0073                     __tdiv_to_l_@f2:	
   446                           ; 3 bytes @ 0x3
   447                           
   448  0073                     __div_to_l_@f2:	
   449                           ; 3 bytes @ 0x3
   450                           
   451                           
   452                           ; 3 bytes @ 0x3
   453  0073                     	ds	1
   454  0074                     ??_lcd_write:	
   455  0074                     ??___wmul:	
   456                           ; 0 bytes @ 0x4
   457                           
   458  0074                     ??___awmod:	
   459                           ; 0 bytes @ 0x4
   460                           
   461  0074                     lcd_write@c:	
   462                           ; 0 bytes @ 0x4
   463                           
   464  0074                     ___lbmod@rem:	
   465                           ; 1 bytes @ 0x4
   466                           
   467  0074                     ___awmod@counter:	
   468                           ; 1 bytes @ 0x4
   469                           
   470  0074                     ___ftpack@sign:	
   471                           ; 1 bytes @ 0x4
   472                           
   473  0074                     ___wmul@product:	
   474                           ; 1 bytes @ 0x4
   475                           
   476  0074                     ___lldiv@dividend:	
   477                           ; 2 bytes @ 0x4
   478                           
   479                           
   480                           ; 4 bytes @ 0x4
   481  0074                     	ds	1
   482  0075                     ??_lcd_init:	
   483  0075                     ??_lcd_clear:	
   484                           ; 0 bytes @ 0x5
   485                           
   486  0075                     ??_lcd_goto:	
   487                           ; 0 bytes @ 0x5
   488                           
   489  0075                     ?_lcd_puts:	
   490                           ; 0 bytes @ 0x5
   491                           
   492  0075                     ??___ftpack:	
   493                           ; 0 bytes @ 0x5
   494                           
   495  0075                     ?___lbdiv:	
   496                           ; 0 bytes @ 0x5
   497                           
   498  0075                     lcd_goto@pos:	
   499                           ; 1 bytes @ 0x5
   500                           
   501  0075                     ___lbdiv@divisor:	
   502                           ; 1 bytes @ 0x5
   503                           
   504  0075                     ___awmod@sign:	
   505                           ; 1 bytes @ 0x5
   506                           
   507  0075                     lcd_puts@s:	
   508                           ; 1 bytes @ 0x5
   509                           
   510                           
   511                           ; 2 bytes @ 0x5
   512  0075                     	ds	1
   513  0076                     ??__tdiv_to_l_:	
   514  0076                     ??__div_to_l_:	
   515                           ; 0 bytes @ 0x6
   516                           
   517  0076                     ??___lbdiv:	
   518                           ; 0 bytes @ 0x6
   519                           
   520  0076                     ??___ftge:	
   521                           ; 0 bytes @ 0x6
   522                           
   523  0076                     ?___awdiv:	
   524                           ; 0 bytes @ 0x6
   525                           
   526  0076                     ___lbdiv@dividend:	
   527                           ; 2 bytes @ 0x6
   528                           
   529  0076                     ___awdiv@divisor:	
   530                           ; 1 bytes @ 0x6
   531                           
   532                           
   533                           ; 2 bytes @ 0x6
   534  0076                     	ds	1
   535  0077                     ??_lcd_puts:	
   536  0077                     ___lbdiv@counter:	
   537                           ; 0 bytes @ 0x7
   538                           
   539                           
   540                           ; 1 bytes @ 0x7
   541  0077                     	ds	1
   542  0078                     ??___lldiv:	
   543  0078                     ?___awtoft:	
   544                           ; 0 bytes @ 0x8
   545                           
   546  0078                     ?___lltoft:	
   547                           ; 3 bytes @ 0x8
   548                           
   549  0078                     ___lbdiv@quotient:	
   550                           ; 3 bytes @ 0x8
   551                           
   552  0078                     ___awtoft@c:	
   553                           ; 1 bytes @ 0x8
   554                           
   555  0078                     ___awdiv@dividend:	
   556                           ; 2 bytes @ 0x8
   557                           
   558  0078                     ___lldiv@quotient:	
   559                           ; 2 bytes @ 0x8
   560                           
   561  0078                     ___lltoft@c:	
   562                           ; 4 bytes @ 0x8
   563                           
   564                           
   565                           ; 4 bytes @ 0x8
   566  0078                     	ds	1
   567  0079                     ?___bmul:	
   568  0079                     ___bmul@multiplicand:	
   569                           ; 1 bytes @ 0x9
   570                           
   571                           
   572                           ; 1 bytes @ 0x9
   573  0079                     	ds	1
   574  007A                     ??___bmul:	
   575  007A                     ??___awdiv:	
   576                           ; 0 bytes @ 0xA
   577                           
   578  007A                     ___bmul@product:	
   579                           ; 0 bytes @ 0xA
   580                           
   581  007A                     ___awdiv@counter:	
   582                           ; 1 bytes @ 0xA
   583                           
   584                           
   585                           ; 1 bytes @ 0xA
   586  007A                     	ds	1
   587  007B                     ??___awtoft:	
   588  007B                     ___bmul@multiplier:	
   589                           ; 0 bytes @ 0xB
   590                           
   591  007B                     ___awtoft@sign:	
   592                           ; 1 bytes @ 0xB
   593                           
   594  007B                     ___awdiv@sign:	
   595                           ; 1 bytes @ 0xB
   596                           
   597                           
   598                           ; 1 bytes @ 0xB
   599  007B                     	ds	1
   600  007C                     ??___lltoft:	
   601  007C                     ___lldiv@counter:	
   602                           ; 0 bytes @ 0xC
   603                           
   604  007C                     ___lltoft@exp:	
   605                           ; 1 bytes @ 0xC
   606                           
   607  007C                     ___awdiv@quotient:	
   608                           ; 1 bytes @ 0xC
   609                           
   610                           
   611                           ; 2 bytes @ 0xC
   612  007C                     	ds	1
   613  007D                     ??___llmod:	
   614  007D                     ___llmod@counter:	
   615                           ; 0 bytes @ 0xD
   616                           
   617                           
   618                           ; 1 bytes @ 0xD
   619  007D                     	ds	1
   620  007E                     ??_main:	
   621  007E                     ??_fround:	
   622                           ; 0 bytes @ 0xE
   623                           
   624  007E                     ??___ftsub:	
   625                           ; 0 bytes @ 0xE
   626                           
   627                           
   628                           	psect	cstackBANK0
   629  0020                     __pcstackBANK0:	
   630                           ; 0 bytes @ 0xE
   631                           
   632  0020                     ?___fttol:	
   633  0020                     ?___llmod:	
   634                           ; 4 bytes @ 0x0
   635                           
   636  0020                     ___fttol@f1:	
   637                           ; 4 bytes @ 0x0
   638                           
   639  0020                     ___llmod@divisor:	
   640                           ; 3 bytes @ 0x0
   641                           
   642  0020                     __tdiv_to_l_@quot:	
   643                           ; 4 bytes @ 0x0
   644                           
   645  0020                     __div_to_l_@quot:	
   646                           ; 4 bytes @ 0x0
   647                           
   648                           
   649                           ; 4 bytes @ 0x0
   650  0020                     	ds	4
   651  0024                     ??___fttol:	
   652  0024                     __tdiv_to_l_@cntr:	
   653                           ; 0 bytes @ 0x4
   654                           
   655  0024                     __div_to_l_@cntr:	
   656                           ; 1 bytes @ 0x4
   657                           
   658  0024                     ___llmod@dividend:	
   659                           ; 1 bytes @ 0x4
   660                           
   661                           
   662                           ; 4 bytes @ 0x4
   663  0024                     	ds	1
   664  0025                     __tdiv_to_l_@exp1:	
   665  0025                     __div_to_l_@exp1:	
   666                           ; 1 bytes @ 0x5
   667                           
   668                           
   669                           ; 1 bytes @ 0x5
   670  0025                     	ds	2
   671  0027                     ___fttol@sign1:	
   672                           
   673                           ; 1 bytes @ 0x7
   674  0027                     	ds	1
   675  0028                     ___fttol@lval:	
   676                           
   677                           ; 4 bytes @ 0x8
   678  0028                     	ds	4
   679  002C                     ___fttol@exp1:	
   680                           
   681                           ; 1 bytes @ 0xC
   682  002C                     	ds	1
   683  002D                     ?___ftmul:	
   684  002D                     ___ftmul@f1:	
   685                           ; 3 bytes @ 0xD
   686                           
   687                           
   688                           ; 3 bytes @ 0xD
   689  002D                     	ds	3
   690  0030                     ___ftmul@f2:	
   691                           
   692                           ; 3 bytes @ 0x10
   693  0030                     	ds	3
   694  0033                     ??___ftmul:	
   695                           
   696                           ; 0 bytes @ 0x13
   697  0033                     	ds	3
   698  0036                     ___ftmul@exp:	
   699                           
   700                           ; 1 bytes @ 0x16
   701  0036                     	ds	1
   702  0037                     ___ftmul@f3_as_product:	
   703                           
   704                           ; 3 bytes @ 0x17
   705  0037                     	ds	3
   706  003A                     ___ftmul@cntr:	
   707                           
   708                           ; 1 bytes @ 0x1A
   709  003A                     	ds	1
   710  003B                     ___ftmul@sign:	
   711                           
   712                           ; 1 bytes @ 0x1B
   713  003B                     	ds	1
   714  003C                     ?_scale:	
   715  003C                     ?___ftadd:	
   716                           ; 3 bytes @ 0x1C
   717                           
   718  003C                     ___ftadd@f1:	
   719                           ; 3 bytes @ 0x1C
   720                           
   721                           
   722                           ; 3 bytes @ 0x1C
   723  003C                     	ds	3
   724  003F                     ??_scale:	
   725  003F                     ___ftadd@f2:	
   726                           ; 0 bytes @ 0x1F
   727                           
   728                           
   729                           ; 3 bytes @ 0x1F
   730  003F                     	ds	3
   731  0042                     ??___ftadd:	
   732                           
   733                           ; 0 bytes @ 0x22
   734  0042                     	ds	1
   735  0043                     _scale$2835:	
   736                           
   737                           ; 3 bytes @ 0x23
   738  0043                     	ds	2
   739  0045                     ___ftadd@sign:	
   740                           
   741                           ; 1 bytes @ 0x25
   742  0045                     	ds	1
   743  0046                     scale@scl:	
   744  0046                     ___ftadd@exp2:	
   745                           ; 1 bytes @ 0x26
   746                           
   747                           
   748                           ; 1 bytes @ 0x26
   749  0046                     	ds	1
   750  0047                     ___ftadd@exp1:	
   751                           
   752                           ; 1 bytes @ 0x27
   753  0047                     	ds	1
   754  0048                     ?_fround:	
   755  0048                     ?___ftsub:	
   756                           ; 3 bytes @ 0x28
   757                           
   758  0048                     ___ftsub@f2:	
   759                           ; 3 bytes @ 0x28
   760                           
   761                           
   762                           ; 3 bytes @ 0x28
   763  0048                     	ds	3
   764  004B                     ___ftsub@f1:	
   765  004B                     _fround$2834:	
   766                           ; 3 bytes @ 0x2B
   767                           
   768                           
   769                           ; 3 bytes @ 0x2B
   770  004B                     	ds	3
   771  004E                     _fround$2833:	
   772                           
   773                           ; 3 bytes @ 0x2E
   774  004E                     	ds	3
   775  0051                     fround@prec:	
   776                           
   777                           ; 1 bytes @ 0x31
   778  0051                     	ds	1
   779  0052                     ?_sprintf:	
   780  0052                     sprintf@f:	
   781                           ; 2 bytes @ 0x32
   782                           
   783                           
   784                           ; 1 bytes @ 0x32
   785  0052                     	ds	4
   786  0056                     ??_sprintf:	
   787                           
   788                           ; 0 bytes @ 0x36
   789  0056                     	ds	5
   790                           
   791                           	psect	maintext
   792  0A58                     __pmaintext:	
   793 ;;Data sizes: Strings 29, constant 118, data 0, bss 16, persistent 0 stack 0
   794 ;;Auto spaces:   Size  Autos    Used
   795 ;; COMMON          14     14      14
   796 ;; BANK0           80     59      75
   797 ;; BANK1           80     25      25
   798 ;; BANK3           96      0       0
   799 ;; BANK2           96      0       0
   800 ;;
   801 ;; Pointer list with targets:
   802 ;; ?___ftpack	float  size(1) Largest target is 0
   803 ;;
   804 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   805 ;;
   806 ;; ?___llmod	unsigned long  size(1) Largest target is 0
   807 ;;
   808 ;; ?___ftsub	float  size(1) Largest target is 0
   809 ;;
   810 ;; ?___lltoft	float  size(1) Largest target is 0
   811 ;;
   812 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
   813 ;;
   814 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
   815 ;;
   816 ;; ?___fttol	long  size(1) Largest target is 0
   817 ;;
   818 ;; ?___ftadd	float  size(1) Largest target is 0
   819 ;;
   820 ;; ?___ftneg	float  size(1) Largest target is 0
   821 ;;
   822 ;; ?___awmod	int  size(1) Largest target is 40
   823 ;;		 -> dpowers(CODE[40]), 
   824 ;;
   825 ;; ?___awdiv	int  size(1) Largest target is 0
   826 ;;
   827 ;; ?_scale	int  size(1) Largest target is 0
   828 ;;
   829 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   830 ;;
   831 ;; ?_fround	unsigned int  size(1) Largest target is 0
   832 ;;
   833 ;; ?___ftmul	float  size(1) Largest target is 0
   834 ;;
   835 ;; ?___awtoft	float  size(1) Largest target is 0
   836 ;;
   837 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 6
   838 ;;		 -> STR_7(CODE[3]), STR_5(CODE[6]), STR_3(CODE[3]), STR_1(CODE[6]), 
   839 ;;
   840 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 5
   841 ;;		 -> carac2(BANK0[4]), carac(BANK0[5]), 
   842 ;;
   843 ;; ?_sprintf	int  size(1) Largest target is 0
   844 ;;
   845 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
   846 ;;		 -> ?_sprintf(BANK0[2]), 
   847 ;;
   848 ;; S1886$_cp	PTR const unsigned char  size(1) Largest target is 0
   849 ;;
   850 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   851 ;;
   852 ;; lcd_puts@s	PTR const unsigned char  size(2) Largest target is 6
   853 ;;		 -> STR_8(CODE[4]), STR_6(CODE[6]), STR_4(CODE[4]), carac2(BANK0[4]), 
   854 ;;		 -> STR_2(CODE[6]), carac(BANK0[5]), 
   855 ;;
   856 ;;
   857 ;; Critical Paths under _main in COMMON
   858 ;;
   859 ;;   _lcd_init->_lcd_write
   860 ;;   _lcd_puts->_lcd_write
   861 ;;   _lcd_goto->_lcd_write
   862 ;;   _sprintf->___awdiv
   863 ;;   _sprintf->__div_to_l_
   864 ;;   _sprintf->___llmod
   865 ;;   _lcd_clear->_lcd_write
   866 ;;   _scale->___awdiv
   867 ;;   _lcd_write->_pause
   868 ;;   ___lltoft->___ftpack
   869 ;;   ___awtoft->___ftpack
   870 ;;   ___ftmul->___awdiv
   871 ;;   ___llmod->___lldiv
   872 ;;   ___awdiv->___awmod
   873 ;;   ___fttol->___awdiv
   874 ;;   ___lbdiv->___lbmod
   875 ;;   ___bmul->___lbdiv
   876 ;;
   877 ;; Critical Paths under _main in BANK0
   878 ;;
   879 ;;   _main->_sprintf
   880 ;;   _sprintf->_fround
   881 ;;   ___ftsub->___ftadd
   882 ;;   _scale->___ftmul
   883 ;;   _fround->___ftadd
   884 ;;   ___ftmul->___fttol
   885 ;;   ___ftadd->___ftmul
   886 ;;
   887 ;; Critical Paths under _main in BANK1
   888 ;;
   889 ;;   _main->_sprintf
   890 ;;
   891 ;; Critical Paths under _main in BANK3
   892 ;;
   893 ;;   None.
   894 ;;
   895 ;; Critical Paths under _main in BANK2
   896 ;;
   897 ;;   None.
   898 ;;
   899 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   900 ;;
   901 ;;
   902 ;;Call Graph Tables:
   903 ;;
   904 ;; ---------------------------------------------------------------------------------
   905 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   906 ;; ---------------------------------------------------------------------------------
   907 ;; (0) _main                                                 0     0      0   11973
   908 ;;                           _lcd_init
   909 ;;                          _lcd_clear
   910 ;;                           ___awtoft
   911 ;;                            ___ftmul
   912 ;;                            _sprintf
   913 ;;                           _lcd_goto
   914 ;;                           _lcd_puts
   915 ;;                              _pause
   916 ;; ---------------------------------------------------------------------------------
   917 ;; (1) _lcd_init                                             1     1      0     295
   918 ;;                                              5 COMMON     1     1      0
   919 ;;                              _pause
   920 ;;                          _lcd_write
   921 ;;                          _lcd_clear
   922 ;; ---------------------------------------------------------------------------------
   923 ;; (1) _lcd_puts                                             2     0      2     135
   924 ;;                                              5 COMMON     2     0      2
   925 ;;                          _lcd_write
   926 ;; ---------------------------------------------------------------------------------
   927 ;; (1) _lcd_goto                                             1     1      0     112
   928 ;;                                              5 COMMON     1     1      0
   929 ;;                          _lcd_write
   930 ;; ---------------------------------------------------------------------------------
   931 ;; (1) _sprintf                                             38    34      4   10414
   932 ;;                                             50 BANK0      9     5      4
   933 ;;                                              0 BANK1     25    25      0
   934 ;;                            _isdigit
   935 ;;                             ___wmul
   936 ;;                             ___ftge
   937 ;;                            ___ftneg
   938 ;;                            ___awdiv
   939 ;;                              _scale
   940 ;;                            ___ftmul
   941 ;;                             _fround
   942 ;;                            ___ftadd
   943 ;;                            ___fttol
   944 ;;                         __div_to_l_
   945 ;;                        __tdiv_to_l_
   946 ;;                           ___lltoft
   947 ;;                            ___ftsub
   948 ;;                            ___lldiv
   949 ;;                            ___llmod
   950 ;; ---------------------------------------------------------------------------------
   951 ;; (1) _lcd_clear                                            0     0      0     136
   952 ;;                          _lcd_write
   953 ;;                              _pause
   954 ;; ---------------------------------------------------------------------------------
   955 ;; (2) ___ftsub                                              6     0      6    1094
   956 ;;                                             40 BANK0      6     0      6
   957 ;;                            ___ftadd
   958 ;;                           ___lltoft (ARG)
   959 ;; ---------------------------------------------------------------------------------
   960 ;; (2) _scale                                               14    11      3    1688
   961 ;;                                             28 BANK0     11     8      3
   962 ;;                            ___awmod
   963 ;;                            ___awdiv
   964 ;;                            ___ftmul
   965 ;;                             ___bmul
   966 ;;                            ___fttol (ARG)
   967 ;; ---------------------------------------------------------------------------------
   968 ;; (2) _fround                                              13    10      3    1215
   969 ;;                                             40 BANK0     10     7      3
   970 ;;                            ___lbmod
   971 ;;                             ___bmul
   972 ;;                            ___lbdiv
   973 ;;                            ___ftmul
   974 ;;                            ___ftadd (ARG)
   975 ;; ---------------------------------------------------------------------------------
   976 ;; (2) _lcd_write                                            1     1      0      90
   977 ;;                                              4 COMMON     1     1      0
   978 ;;                              _pause
   979 ;; ---------------------------------------------------------------------------------
   980 ;; (2) ___lltoft                                             5     1      4     278
   981 ;;                                              8 COMMON     5     1      4
   982 ;;                           ___ftpack
   983 ;; ---------------------------------------------------------------------------------
   984 ;; (1) ___awtoft                                             4     1      3     300
   985 ;;                                              8 COMMON     4     1      3
   986 ;;                           ___ftpack
   987 ;; ---------------------------------------------------------------------------------
   988 ;; (3) ___ftmul                                             15     9      6     535
   989 ;;                                             13 BANK0     15     9      6
   990 ;;                           ___ftpack
   991 ;;                           ___awtoft (ARG)
   992 ;;                            ___fttol (ARG)
   993 ;;                            ___awdiv (ARG)
   994 ;;                            ___awmod (ARG)
   995 ;;                             ___bmul (ARG)
   996 ;;                            ___lbdiv (ARG)
   997 ;;                            ___lbmod (ARG)
   998 ;; ---------------------------------------------------------------------------------
   999 ;; (3) ___ftadd                                             12     6      6    1049
  1000 ;;                                             28 BANK0     12     6      6
  1001 ;;                           ___ftpack
  1002 ;;                            ___lbmod (ARG)
  1003 ;;                             ___bmul (ARG)
  1004 ;;                            ___lbdiv (ARG)
  1005 ;;                            ___ftmul (ARG)
  1006 ;; ---------------------------------------------------------------------------------
  1007 ;; (1) _pause                                                4     2      2      46
  1008 ;;                                              0 COMMON     4     2      2
  1009 ;;                           _msecbase
  1010 ;; ---------------------------------------------------------------------------------
  1011 ;; (3) ___awmod                                              6     2      4     296
  1012 ;;                                              0 COMMON     6     2      4
  1013 ;; ---------------------------------------------------------------------------------
  1014 ;; (2) ___lldiv                                             13     5      8     162
  1015 ;;                                              0 COMMON    13     5      8
  1016 ;; ---------------------------------------------------------------------------------
  1017 ;; (2) ___ftge                                               6     0      6     136
  1018 ;;                                              0 COMMON     6     0      6
  1019 ;; ---------------------------------------------------------------------------------
  1020 ;; (2) ___ftneg                                              3     0      3      45
  1021 ;;                                              0 COMMON     3     0      3
  1022 ;; ---------------------------------------------------------------------------------
  1023 ;; (2) ___llmod                                              9     1      8     159
  1024 ;;                                             13 COMMON     1     1      0
  1025 ;;                                              0 BANK0      8     0      8
  1026 ;;                            ___lldiv (ARG)
  1027 ;; ---------------------------------------------------------------------------------
  1028 ;; (3) ___awdiv                                              8     4      4     300
  1029 ;;                                              6 COMMON     8     4      4
  1030 ;;                            ___awmod (ARG)
  1031 ;; ---------------------------------------------------------------------------------
  1032 ;; (2) ___fttol                                             13     9      4     252
  1033 ;;                                              0 BANK0     13     9      4
  1034 ;;                           ___ftpack (ARG)
  1035 ;;                            ___awmod (ARG)
  1036 ;;                            ___awdiv (ARG)
  1037 ;;                             ___bmul (ARG)
  1038 ;; ---------------------------------------------------------------------------------
  1039 ;; (4) ___ftpack                                             8     3      5     209
  1040 ;;                                              0 COMMON     8     3      5
  1041 ;; ---------------------------------------------------------------------------------
  1042 ;; (3) ___lbmod                                              5     4      1     159
  1043 ;;                                              0 COMMON     5     4      1
  1044 ;; ---------------------------------------------------------------------------------
  1045 ;; (3) ___lbdiv                                              4     3      1     162
  1046 ;;                                              5 COMMON     4     3      1
  1047 ;;                            ___lbmod (ARG)
  1048 ;; ---------------------------------------------------------------------------------
  1049 ;; (2) ___wmul                                               6     2      4      92
  1050 ;;                                              0 COMMON     6     2      4
  1051 ;; ---------------------------------------------------------------------------------
  1052 ;; (3) ___bmul                                               3     2      1      68
  1053 ;;                                              9 COMMON     3     2      1
  1054 ;;                            ___lbmod (ARG)
  1055 ;;                            ___lbdiv (ARG)
  1056 ;; ---------------------------------------------------------------------------------
  1057 ;; (2) __div_to_l_                                          20    14      6     446
  1058 ;;                                              0 COMMON    14     8      6
  1059 ;;                                              0 BANK0      6     6      0
  1060 ;; ---------------------------------------------------------------------------------
  1061 ;; (2) __tdiv_to_l_                                         15     9      6     303
  1062 ;;                                              0 COMMON     9     3      6
  1063 ;;                                              0 BANK0      6     6      0
  1064 ;; ---------------------------------------------------------------------------------
  1065 ;; (2) _isdigit                                              2     2      0      68
  1066 ;;                                              0 COMMON     2     2      0
  1067 ;; ---------------------------------------------------------------------------------
  1068 ;; (2) _msecbase                                             0     0      0       0
  1069 ;; ---------------------------------------------------------------------------------
  1070 ;; Estimated maximum stack depth 4
  1071 ;; ---------------------------------------------------------------------------------
  1072 ;; Call Graph Graphs:
  1073 ;; _main (ROOT)
  1074 ;;   _lcd_init
  1075 ;;     _pause
  1076 ;;       _msecbase
  1077 ;;     _lcd_write
  1078 ;;       _pause
  1079 ;;         _msecbase
  1080 ;;     _lcd_clear
  1081 ;;       _lcd_write
  1082 ;;         _pause
  1083 ;;           _msecbase
  1084 ;;       _pause
  1085 ;;         _msecbase
  1086 ;;   _lcd_clear
  1087 ;;     _lcd_write
  1088 ;;       _pause
  1089 ;;         _msecbase
  1090 ;;     _pause
  1091 ;;       _msecbase
  1092 ;;   ___awtoft
  1093 ;;     ___ftpack
  1094 ;;   ___ftmul
  1095 ;;     ___ftpack
  1096 ;;     ___awtoft (ARG)
  1097 ;;       ___ftpack
  1098 ;;     ___fttol (ARG)
  1099 ;;       ___ftpack (ARG)
  1100 ;;       ___awmod (ARG)
  1101 ;;       ___awdiv (ARG)
  1102 ;;         ___awmod (ARG)
  1103 ;;       ___bmul (ARG)
  1104 ;;         ___lbmod (ARG)
  1105 ;;         ___lbdiv (ARG)
  1106 ;;           ___lbmod (ARG)
  1107 ;;     ___awdiv (ARG)
  1108 ;;       ___awmod (ARG)
  1109 ;;     ___awmod (ARG)
  1110 ;;     ___bmul (ARG)
  1111 ;;       ___lbmod (ARG)
  1112 ;;       ___lbdiv (ARG)
  1113 ;;         ___lbmod (ARG)
  1114 ;;     ___lbdiv (ARG)
  1115 ;;       ___lbmod (ARG)
  1116 ;;     ___lbmod (ARG)
  1117 ;;   _sprintf
  1118 ;;     _isdigit
  1119 ;;     ___wmul
  1120 ;;     ___ftge
  1121 ;;     ___ftneg
  1122 ;;     ___awdiv
  1123 ;;       ___awmod (ARG)
  1124 ;;     _scale
  1125 ;;       ___awmod
  1126 ;;       ___awdiv
  1127 ;;         ___awmod (ARG)
  1128 ;;       ___ftmul
  1129 ;;         ___ftpack
  1130 ;;         ___awtoft (ARG)
  1131 ;;           ___ftpack
  1132 ;;         ___fttol (ARG)
  1133 ;;           ___ftpack (ARG)
  1134 ;;           ___awmod (ARG)
  1135 ;;           ___awdiv (ARG)
  1136 ;;             ___awmod (ARG)
  1137 ;;           ___bmul (ARG)
  1138 ;;             ___lbmod (ARG)
  1139 ;;             ___lbdiv (ARG)
  1140 ;;               ___lbmod (ARG)
  1141 ;;         ___awdiv (ARG)
  1142 ;;           ___awmod (ARG)
  1143 ;;         ___awmod (ARG)
  1144 ;;         ___bmul (ARG)
  1145 ;;           ___lbmod (ARG)
  1146 ;;           ___lbdiv (ARG)
  1147 ;;             ___lbmod (ARG)
  1148 ;;         ___lbdiv (ARG)
  1149 ;;           ___lbmod (ARG)
  1150 ;;         ___lbmod (ARG)
  1151 ;;       ___bmul
  1152 ;;         ___lbmod (ARG)
  1153 ;;         ___lbdiv (ARG)
  1154 ;;           ___lbmod (ARG)
  1155 ;;       ___fttol (ARG)
  1156 ;;         ___ftpack (ARG)
  1157 ;;         ___awmod (ARG)
  1158 ;;         ___awdiv (ARG)
  1159 ;;           ___awmod (ARG)
  1160 ;;         ___bmul (ARG)
  1161 ;;           ___lbmod (ARG)
  1162 ;;           ___lbdiv (ARG)
  1163 ;;             ___lbmod (ARG)
  1164 ;;     ___ftmul
  1165 ;;       ___ftpack
  1166 ;;       ___awtoft (ARG)
  1167 ;;         ___ftpack
  1168 ;;       ___fttol (ARG)
  1169 ;;         ___ftpack (ARG)
  1170 ;;         ___awmod (ARG)
  1171 ;;         ___awdiv (ARG)
  1172 ;;           ___awmod (ARG)
  1173 ;;         ___bmul (ARG)
  1174 ;;           ___lbmod (ARG)
  1175 ;;           ___lbdiv (ARG)
  1176 ;;             ___lbmod (ARG)
  1177 ;;       ___awdiv (ARG)
  1178 ;;         ___awmod (ARG)
  1179 ;;       ___awmod (ARG)
  1180 ;;       ___bmul (ARG)
  1181 ;;         ___lbmod (ARG)
  1182 ;;         ___lbdiv (ARG)
  1183 ;;           ___lbmod (ARG)
  1184 ;;       ___lbdiv (ARG)
  1185 ;;         ___lbmod (ARG)
  1186 ;;       ___lbmod (ARG)
  1187 ;;     _fround
  1188 ;;       ___lbmod
  1189 ;;       ___bmul
  1190 ;;         ___lbmod (ARG)
  1191 ;;         ___lbdiv (ARG)
  1192 ;;           ___lbmod (ARG)
  1193 ;;       ___lbdiv
  1194 ;;         ___lbmod (ARG)
  1195 ;;       ___ftmul
  1196 ;;         ___ftpack
  1197 ;;         ___awtoft (ARG)
  1198 ;;           ___ftpack
  1199 ;;         ___fttol (ARG)
  1200 ;;           ___ftpack (ARG)
  1201 ;;           ___awmod (ARG)
  1202 ;;           ___awdiv (ARG)
  1203 ;;             ___awmod (ARG)
  1204 ;;           ___bmul (ARG)
  1205 ;;             ___lbmod (ARG)
  1206 ;;             ___lbdiv (ARG)
  1207 ;;               ___lbmod (ARG)
  1208 ;;         ___awdiv (ARG)
  1209 ;;           ___awmod (ARG)
  1210 ;;         ___awmod (ARG)
  1211 ;;         ___bmul (ARG)
  1212 ;;           ___lbmod (ARG)
  1213 ;;           ___lbdiv (ARG)
  1214 ;;             ___lbmod (ARG)
  1215 ;;         ___lbdiv (ARG)
  1216 ;;           ___lbmod (ARG)
  1217 ;;         ___lbmod (ARG)
  1218 ;;       ___ftadd (ARG)
  1219 ;;         ___ftpack
  1220 ;;         ___lbmod (ARG)
  1221 ;;         ___bmul (ARG)
  1222 ;;           ___lbmod (ARG)
  1223 ;;           ___lbdiv (ARG)
  1224 ;;             ___lbmod (ARG)
  1225 ;;         ___lbdiv (ARG)
  1226 ;;           ___lbmod (ARG)
  1227 ;;         ___ftmul (ARG)
  1228 ;;           ___ftpack
  1229 ;;           ___awtoft (ARG)
  1230 ;;             ___ftpack
  1231 ;;           ___fttol (ARG)
  1232 ;;             ___ftpack (ARG)
  1233 ;;             ___awmod (ARG)
  1234 ;;             ___awdiv (ARG)
  1235 ;;               ___awmod (ARG)
  1236 ;;             ___bmul (ARG)
  1237 ;;               ___lbmod (ARG)
  1238 ;;               ___lbdiv (ARG)
  1239 ;;                 ___lbmod (ARG)
  1240 ;;           ___awdiv (ARG)
  1241 ;;             ___awmod (ARG)
  1242 ;;           ___awmod (ARG)
  1243 ;;           ___bmul (ARG)
  1244 ;;             ___lbmod (ARG)
  1245 ;;             ___lbdiv (ARG)
  1246 ;;               ___lbmod (ARG)
  1247 ;;           ___lbdiv (ARG)
  1248 ;;             ___lbmod (ARG)
  1249 ;;           ___lbmod (ARG)
  1250 ;;     ___ftadd
  1251 ;;       ___ftpack
  1252 ;;       ___lbmod (ARG)
  1253 ;;       ___bmul (ARG)
  1254 ;;         ___lbmod (ARG)
  1255 ;;         ___lbdiv (ARG)
  1256 ;;           ___lbmod (ARG)
  1257 ;;       ___lbdiv (ARG)
  1258 ;;         ___lbmod (ARG)
  1259 ;;       ___ftmul (ARG)
  1260 ;;         ___ftpack
  1261 ;;         ___awtoft (ARG)
  1262 ;;           ___ftpack
  1263 ;;         ___fttol (ARG)
  1264 ;;           ___ftpack (ARG)
  1265 ;;           ___awmod (ARG)
  1266 ;;           ___awdiv (ARG)
  1267 ;;             ___awmod (ARG)
  1268 ;;           ___bmul (ARG)
  1269 ;;             ___lbmod (ARG)
  1270 ;;             ___lbdiv (ARG)
  1271 ;;               ___lbmod (ARG)
  1272 ;;         ___awdiv (ARG)
  1273 ;;           ___awmod (ARG)
  1274 ;;         ___awmod (ARG)
  1275 ;;         ___bmul (ARG)
  1276 ;;           ___lbmod (ARG)
  1277 ;;           ___lbdiv (ARG)
  1278 ;;             ___lbmod (ARG)
  1279 ;;         ___lbdiv (ARG)
  1280 ;;           ___lbmod (ARG)
  1281 ;;         ___lbmod (ARG)
  1282 ;;     ___fttol
  1283 ;;       ___ftpack (ARG)
  1284 ;;       ___awmod (ARG)
  1285 ;;       ___awdiv (ARG)
  1286 ;;         ___awmod (ARG)
  1287 ;;       ___bmul (ARG)
  1288 ;;         ___lbmod (ARG)
  1289 ;;         ___lbdiv (ARG)
  1290 ;;           ___lbmod (ARG)
  1291 ;;     __div_to_l_
  1292 ;;     __tdiv_to_l_
  1293 ;;     ___lltoft
  1294 ;;       ___ftpack
  1295 ;;     ___ftsub
  1296 ;;       ___ftadd
  1297 ;;         ___ftpack
  1298 ;;         ___lbmod (ARG)
  1299 ;;         ___bmul (ARG)
  1300 ;;           ___lbmod (ARG)
  1301 ;;           ___lbdiv (ARG)
  1302 ;;             ___lbmod (ARG)
  1303 ;;         ___lbdiv (ARG)
  1304 ;;           ___lbmod (ARG)
  1305 ;;         ___ftmul (ARG)
  1306 ;;           ___ftpack
  1307 ;;           ___awtoft (ARG)
  1308 ;;             ___ftpack
  1309 ;;           ___fttol (ARG)
  1310 ;;             ___ftpack (ARG)
  1311 ;;             ___awmod (ARG)
  1312 ;;             ___awdiv (ARG)
  1313 ;;               ___awmod (ARG)
  1314 ;;             ___bmul (ARG)
  1315 ;;               ___lbmod (ARG)
  1316 ;;               ___lbdiv (ARG)
  1317 ;;                 ___lbmod (ARG)
  1318 ;;           ___awdiv (ARG)
  1319 ;;             ___awmod (ARG)
  1320 ;;           ___awmod (ARG)
  1321 ;;           ___bmul (ARG)
  1322 ;;             ___lbmod (ARG)
  1323 ;;             ___lbdiv (ARG)
  1324 ;;               ___lbmod (ARG)
  1325 ;;           ___lbdiv (ARG)
  1326 ;;             ___lbmod (ARG)
  1327 ;;           ___lbmod (ARG)
  1328 ;;       ___lltoft (ARG)
  1329 ;;         ___ftpack
  1330 ;;     ___lldiv
  1331 ;;     ___llmod
  1332 ;;       ___lldiv (ARG)
  1333 ;;   _lcd_goto
  1334 ;;     _lcd_write
  1335 ;;       _pause
  1336 ;;         _msecbase
  1337 ;;   _lcd_puts
  1338 ;;     _lcd_write
  1339 ;;       _pause
  1340 ;;         _msecbase
  1341 ;;   _pause
  1342 ;;     _msecbase
  1343 ;;
  1344 ;; Address spaces:
  1345 ;;Name               Size   Autos  Total    Cost      Usage
  1346 ;;BITCOMMON            E      0       0       0        0.0%
  1347 ;;EEDATA             100      0       0       0        0.0%
  1348 ;;NULL                 0      0       0       0        0.0%
  1349 ;;CODE                 0      0       0       0        0.0%
  1350 ;;COMMON               E      E       E       1      100.0%
  1351 ;;BITSFR0              0      0       0       1        0.0%
  1352 ;;SFR0                 0      0       0       1        0.0%
  1353 ;;BITSFR1              0      0       0       2        0.0%
  1354 ;;SFR1                 0      0       0       2        0.0%
  1355 ;;STACK                0      0       5       2        0.0%
  1356 ;;ABS                  0      0      72       3        0.0%
  1357 ;;BITBANK0            50      0       0       4        0.0%
  1358 ;;BITSFR3              0      0       0       4        0.0%
  1359 ;;SFR3                 0      0       0       4        0.0%
  1360 ;;BANK0               50     3B      4B       5       93.8%
  1361 ;;BITSFR2              0      0       0       5        0.0%
  1362 ;;SFR2                 0      0       0       5        0.0%
  1363 ;;BITBANK1            50      0       0       6        0.0%
  1364 ;;BANK1               50     19      19       7       31.3%
  1365 ;;BITBANK3            60      0       0       8        0.0%
  1366 ;;BANK3               60      0       0       9        0.0%
  1367 ;;BITBANK2            60      0       0      10        0.0%
  1368 ;;BANK2               60      0       0      11        0.0%
  1369 ;;DATA                 0      0      77      12        0.0%
  1370                           
  1371                           
  1372 ;; *************** function _main *****************
  1373 ;; Defined at:
  1374 ;;		line 32 in file "C:\Users\Jorge\OneDrive\Escritorio\PROGS C\PWMLCD\PWMLCD.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;		None
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;		None
  1379 ;; Return value:  Size  Location     Type
  1380 ;;		None               void
  1381 ;; Registers used:
  1382 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1383 ;; Tracked objects:
  1384 ;;		On entry : 17F/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: FFE00/0
  1387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1388 ;;      Params:         0       0       0       0       0
  1389 ;;      Locals:         0       0       0       0       0
  1390 ;;      Temps:          0       0       0       0       0
  1391 ;;      Totals:         0       0       0       0       0
  1392 ;;Total ram usage:        0 bytes
  1393 ;; Hardware stack levels required when called:    5
  1394 ;; This function calls:
  1395 ;;		_lcd_init
  1396 ;;		_lcd_clear
  1397 ;;		___awtoft
  1398 ;;		___ftmul
  1399 ;;		_sprintf
  1400 ;;		_lcd_goto
  1401 ;;		_lcd_puts
  1402 ;;		_pause
  1403 ;; This function is called by:
  1404 ;;		Startup code after reset
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407  0A58                     _main:	
  1408                           
  1409                           ;PWMLCD.c: 34: ANSEL = 0x00;
  1410                           
  1411                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1412  0A58  1683               	bsf	3,5	;RP0=1, select bank3
  1413  0A59  1703               	bsf	3,6	;RP1=1, select bank3
  1414  0A5A  0188               	clrf	8	;volatile
  1415                           
  1416                           ;PWMLCD.c: 35: ANSELH = 0x00;
  1417  0A5B  0189               	clrf	9	;volatile
  1418                           
  1419                           ;PWMLCD.c: 36: TRISA= 0x00;
  1420  0A5C  1303               	bcf	3,6	;RP1=0, select bank1
  1421  0A5D  0185               	clrf	5	;volatile
  1422                           
  1423                           ;PWMLCD.c: 37: TRISC = 0x00;
  1424  0A5E  0187               	clrf	7	;volatile
  1425                           
  1426                           ;PWMLCD.c: 38: TRISD = 0x0F;
  1427  0A5F  300F               	movlw	15
  1428  0A60  0088               	movwf	8	;volatile
  1429                           
  1430                           ;PWMLCD.c: 39: TRISE = 0x07;
  1431  0A61  3007               	movlw	7
  1432  0A62  0089               	movwf	9	;volatile
  1433                           
  1434                           ;PWMLCD.c: 40: ADCON1 = 0x80;
  1435  0A63  3080               	movlw	128
  1436  0A64  009F               	movwf	31	;volatile
  1437                           
  1438                           ;PWMLCD.c: 42: lcd_init();
  1439  0A65  160A  118A  278A   	fcall	_lcd_init
      +       120A  158A         
  1440                           
  1441                           ;PWMLCD.c: 43: lcd_clear();
  1442  0A6A  160A  118A  27EF   	fcall	_lcd_clear
      +       120A  158A         
  1443  0A6F                     l5800:	
  1444                           
  1445                           ;PWMLCD.c: 46: {
  1446                           ;PWMLCD.c: 47: ADCON0 = 0xD5;
  1447  0A6F  30D5               	movlw	213
  1448  0A70  1283               	bcf	3,5	;RP0=0, select bank0
  1449  0A71  1303               	bcf	3,6	;RP1=0, select bank0
  1450  0A72  009F               	movwf	31	;volatile
  1451                           
  1452                           ;PWMLCD.c: 48: GO_DONE = 1;
  1453  0A73  149F               	bsf	31,1
  1454  0A74                     l1050:	
  1455                           ;PWMLCD.c: 49: while(GO_DONE);
  1456                           
  1457  0A74  189F               	btfsc	31,1
  1458  0A75  2A74               	goto	l1050
  1459                           
  1460                           ;PWMLCD.c: 50: num = (ADRESH << 8)|ADRESL;
  1461  0A76  081E               	movf	30,w	;volatile
  1462  0A77  00E1               	movwf	_num+1
  1463  0A78  01E0               	clrf	_num
  1464  0A79  1683               	bsf	3,5	;RP0=1, select bank1
  1465  0A7A  081E               	movf	30,w	;volatile
  1466  0A7B  1283               	bcf	3,5	;RP0=0, select bank0
  1467  0A7C  04E0               	iorwf	_num,f
  1468                           
  1469                           ;PWMLCD.c: 51: adc=num;
  1470  0A7D  0861               	movf	_num+1,w
  1471  0A7E  00DF               	movwf	_adc+1
  1472  0A7F  0860               	movf	_num,w
  1473  0A80  00DE               	movwf	_adc
  1474                           
  1475                           ;PWMLCD.c: 52: pwm = num*0.0048875855327468;
  1476  0A81  3028               	movlw	40
  1477  0A82  00AD               	movwf	?___ftmul
  1478  0A83  30A0               	movlw	160
  1479  0A84  00AE               	movwf	?___ftmul+1
  1480  0A85  303B               	movlw	59
  1481  0A86  00AF               	movwf	?___ftmul+2
  1482  0A87  0861               	movf	_num+1,w
  1483  0A88  00F9               	movwf	?___awtoft+1
  1484  0A89  0860               	movf	_num,w
  1485  0A8A  00F8               	movwf	?___awtoft
  1486  0A8B  120A  158A  24BD   	fcall	___awtoft
      +       120A  158A         
  1487  0A90  0878               	movf	?___awtoft,w
  1488  0A91  00B0               	movwf	?___ftmul+3
  1489  0A92  0879               	movf	?___awtoft+1,w
  1490  0A93  00B1               	movwf	?___ftmul+4
  1491  0A94  087A               	movf	?___awtoft+2,w
  1492  0A95  00B2               	movwf	?___ftmul+5
  1493  0A96  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  1494  0A9B  082D               	movf	?___ftmul,w
  1495  0A9C  00DB               	movwf	_pwm
  1496  0A9D  082E               	movf	?___ftmul+1,w
  1497  0A9E  00DC               	movwf	_pwm+1
  1498  0A9F  082F               	movf	?___ftmul+2,w
  1499  0AA0  00DD               	movwf	_pwm+2
  1500                           
  1501                           ;PWMLCD.c: 53: sprintf(carac, "%1.1f",pwm);
  1502  0AA1  3083               	movlw	(STR_1-__stringbase)& (0+255)
  1503  0AA2  00D2               	movwf	?_sprintf
  1504  0AA3  085B               	movf	_pwm,w
  1505  0AA4  00D3               	movwf	?_sprintf+1
  1506  0AA5  085C               	movf	_pwm+1,w
  1507  0AA6  00D4               	movwf	?_sprintf+2
  1508  0AA7  085D               	movf	_pwm+2,w
  1509  0AA8  00D5               	movwf	?_sprintf+3
  1510  0AA9  3062               	movlw	_carac& (0+255)
  1511  0AAA  120A  118A  2062   	fcall	_sprintf
      +       120A  158A         
  1512                           
  1513                           ;PWMLCD.c: 55: lcd_goto(0x00);
  1514  0AAF  3000               	movlw	0
  1515  0AB0  160A  118A  2767   	fcall	_lcd_goto
      +       120A  158A         
  1516                           
  1517                           ;PWMLCD.c: 56: lcd_puts("PWM1:");
  1518  0AB5  3077               	movlw	low (STR_2-__stringbase)
  1519  0AB6  00F5               	movwf	?_lcd_puts
  1520  0AB7  3080               	movlw	128
  1521  0AB8  00F6               	movwf	?_lcd_puts+1
  1522  0AB9  160A  118A  276D   	fcall	_lcd_puts
      +       120A  158A         
  1523                           
  1524                           ;PWMLCD.c: 57: lcd_puts(carac);
  1525  0ABE  3062               	movlw	_carac& (0+255)
  1526  0ABF  00F5               	movwf	?_lcd_puts
  1527  0AC0  01F6               	clrf	?_lcd_puts+1
  1528  0AC1  160A  118A  276D   	fcall	_lcd_puts
      +       120A  158A         
  1529                           
  1530                           ;PWMLCD.c: 59: sprintf(carac2,"%d",adc);
  1531  0AC6  3091               	movlw	(STR_3-__stringbase)& (0+255)
  1532  0AC7  00D2               	movwf	?_sprintf
  1533  0AC8  085F               	movf	_adc+1,w
  1534  0AC9  00D4               	movwf	?_sprintf+2
  1535  0ACA  085E               	movf	_adc,w
  1536  0ACB  00D3               	movwf	?_sprintf+1
  1537  0ACC  3067               	movlw	_carac2& (0+255)
  1538  0ACD  120A  118A  2062   	fcall	_sprintf
      +       120A  158A         
  1539                           
  1540                           ;PWMLCD.c: 61: lcd_goto(0x09);
  1541  0AD2  3009               	movlw	9
  1542  0AD3  160A  118A  2767   	fcall	_lcd_goto
      +       120A  158A         
  1543                           
  1544                           ;PWMLCD.c: 62: lcd_puts("C5:");
  1545  0AD8  3089               	movlw	low (STR_4-__stringbase)
  1546  0AD9  00F5               	movwf	?_lcd_puts
  1547  0ADA  3080               	movlw	128
  1548  0ADB  00F6               	movwf	?_lcd_puts+1
  1549  0ADC  160A  118A  276D   	fcall	_lcd_puts
      +       120A  158A         
  1550                           
  1551                           ;PWMLCD.c: 63: lcd_puts(carac2);
  1552  0AE1  3067               	movlw	_carac2& (0+255)
  1553  0AE2  00F5               	movwf	?_lcd_puts
  1554  0AE3  3000               	movlw	0
  1555  0AE4  00F6               	movwf	?_lcd_puts+1
  1556  0AE5  160A  118A  276D   	fcall	_lcd_puts
      +       120A  158A         
  1557                           
  1558                           ;PWMLCD.c: 65: ADCON0 = 0xD9;
  1559  0AEA  30D9               	movlw	217
  1560  0AEB  009F               	movwf	31	;volatile
  1561                           
  1562                           ;PWMLCD.c: 66: GO_DONE = 1;
  1563  0AEC  149F               	bsf	31,1
  1564  0AED                     l1053:	
  1565                           ;PWMLCD.c: 67: while(GO_DONE);
  1566                           
  1567  0AED  189F               	btfsc	31,1
  1568  0AEE  2AED               	goto	l1053
  1569                           
  1570                           ;PWMLCD.c: 68: num= (ADRESH<< 8)|ADRESL;
  1571  0AEF  081E               	movf	30,w	;volatile
  1572  0AF0  00E1               	movwf	_num+1
  1573  0AF1  01E0               	clrf	_num
  1574  0AF2  1683               	bsf	3,5	;RP0=1, select bank1
  1575  0AF3  081E               	movf	30,w	;volatile
  1576  0AF4  1283               	bcf	3,5	;RP0=0, select bank0
  1577  0AF5  04E0               	iorwf	_num,f
  1578                           
  1579                           ;PWMLCD.c: 69: adc=num;
  1580  0AF6  0861               	movf	_num+1,w
  1581  0AF7  00DF               	movwf	_adc+1
  1582  0AF8  0860               	movf	_num,w
  1583  0AF9  00DE               	movwf	_adc
  1584                           
  1585                           ;PWMLCD.c: 70: pwm = num*0.0048875855327468;
  1586  0AFA  3028               	movlw	40
  1587  0AFB  00AD               	movwf	?___ftmul
  1588  0AFC  30A0               	movlw	160
  1589  0AFD  00AE               	movwf	?___ftmul+1
  1590  0AFE  303B               	movlw	59
  1591  0AFF  00AF               	movwf	?___ftmul+2
  1592  0B00  0861               	movf	_num+1,w
  1593  0B01  00F9               	movwf	?___awtoft+1
  1594  0B02  0860               	movf	_num,w
  1595  0B03  00F8               	movwf	?___awtoft
  1596  0B04  120A  158A  24BD   	fcall	___awtoft
      +       120A  158A         
  1597  0B09  0878               	movf	?___awtoft,w
  1598  0B0A  00B0               	movwf	?___ftmul+3
  1599  0B0B  0879               	movf	?___awtoft+1,w
  1600  0B0C  00B1               	movwf	?___ftmul+4
  1601  0B0D  087A               	movf	?___awtoft+2,w
  1602  0B0E  00B2               	movwf	?___ftmul+5
  1603  0B0F  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  1604  0B14  082D               	movf	?___ftmul,w
  1605  0B15  00DB               	movwf	_pwm
  1606  0B16  082E               	movf	?___ftmul+1,w
  1607  0B17  00DC               	movwf	_pwm+1
  1608  0B18  082F               	movf	?___ftmul+2,w
  1609  0B19  00DD               	movwf	_pwm+2
  1610                           
  1611                           ;PWMLCD.c: 71: sprintf(carac,"%1.1f",pwm);
  1612  0B1A  3083               	movlw	(STR_1-__stringbase)& (0+255)
  1613  0B1B  00D2               	movwf	?_sprintf
  1614  0B1C  085B               	movf	_pwm,w
  1615  0B1D  00D3               	movwf	?_sprintf+1
  1616  0B1E  085C               	movf	_pwm+1,w
  1617  0B1F  00D4               	movwf	?_sprintf+2
  1618  0B20  085D               	movf	_pwm+2,w
  1619  0B21  00D5               	movwf	?_sprintf+3
  1620  0B22  3062               	movlw	_carac& (0+255)
  1621  0B23  120A  118A  2062   	fcall	_sprintf
      +       120A  158A         
  1622                           
  1623                           ;PWMLCD.c: 73: lcd_goto(0x40);
  1624  0B28  3040               	movlw	64
  1625  0B29  160A  118A  2767   	fcall	_lcd_goto
      +       120A  158A         
  1626                           
  1627                           ;PWMLCD.c: 74: lcd_puts("PWM2:");
  1628  0B2E  307D               	movlw	low (STR_6-__stringbase)
  1629  0B2F  00F5               	movwf	?_lcd_puts
  1630  0B30  3080               	movlw	128
  1631  0B31  00F6               	movwf	?_lcd_puts+1
  1632  0B32  160A  118A  276D   	fcall	_lcd_puts
      +       120A  158A         
  1633                           
  1634                           ;PWMLCD.c: 75: lcd_puts(carac);
  1635  0B37  3062               	movlw	_carac& (0+255)
  1636  0B38  00F5               	movwf	?_lcd_puts
  1637  0B39  01F6               	clrf	?_lcd_puts+1
  1638  0B3A  160A  118A  276D   	fcall	_lcd_puts
      +       120A  158A         
  1639                           
  1640                           ;PWMLCD.c: 77: sprintf(carac2,"%d",adc);
  1641  0B3F  3091               	movlw	(STR_3-__stringbase)& (0+255)
  1642  0B40  00D2               	movwf	?_sprintf
  1643  0B41  085F               	movf	_adc+1,w
  1644  0B42  00D4               	movwf	?_sprintf+2
  1645  0B43  085E               	movf	_adc,w
  1646  0B44  00D3               	movwf	?_sprintf+1
  1647  0B45  3067               	movlw	_carac2& (0+255)
  1648  0B46  120A  118A  2062   	fcall	_sprintf
      +       120A  158A         
  1649                           
  1650                           ;PWMLCD.c: 79: lcd_goto(0x49);
  1651  0B4B  3049               	movlw	73
  1652  0B4C  160A  118A  2767   	fcall	_lcd_goto
      +       120A  158A         
  1653                           
  1654                           ;PWMLCD.c: 80: lcd_puts("C6:");
  1655  0B51  308D               	movlw	low (STR_8-__stringbase)
  1656  0B52  00F5               	movwf	?_lcd_puts
  1657  0B53  3080               	movlw	128
  1658  0B54  00F6               	movwf	?_lcd_puts+1
  1659  0B55  160A  118A  276D   	fcall	_lcd_puts
      +       120A  158A         
  1660                           
  1661                           ;PWMLCD.c: 81: lcd_puts(carac2);
  1662  0B5A  3067               	movlw	_carac2& (0+255)
  1663  0B5B  00F5               	movwf	?_lcd_puts
  1664  0B5C  01F6               	clrf	?_lcd_puts+1
  1665  0B5D  160A  118A  276D   	fcall	_lcd_puts
      +       120A  158A         
  1666                           
  1667                           ;PWMLCD.c: 83: pause(1);
  1668  0B62  01F0               	clrf	?_pause
  1669  0B63  0AF0               	incf	?_pause,f
  1670  0B64  01F1               	clrf	?_pause+1
  1671  0B65  160A  118A  27C1   	fcall	_pause
      +       120A  158A         
  1672  0B6A  2A6F               	goto	l5800
  1673  0B6B                     __end_of_main:	
  1674                           
  1675                           	psect	text501
  1676  1767                     __ptext501:	
  1677 ;; =============== function _lcd_puts ends ============
  1678                           
  1679                           
  1680 ;; *************** function _lcd_goto *****************
  1681 ;; Defined at:
  1682 ;;		line 117 in file "C:\Users\Jorge\OneDrive\Escritorio\PROGS C\PWMLCD\PWMLCD.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;  pos             1    wreg     unsigned char 
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;  pos             1    5[COMMON] unsigned char 
  1687 ;; Return value:  Size  Location     Type
  1688 ;;		None               void
  1689 ;; Registers used:
  1690 ;;		wreg, status,2, status,0, pclath, cstack
  1691 ;; Tracked objects:
  1692 ;;		On entry : 160/20
  1693 ;;		On exit  : 160/0
  1694 ;;		Unchanged: FFE9F/0
  1695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1696 ;;      Params:         0       0       0       0       0
  1697 ;;      Locals:         1       0       0       0       0
  1698 ;;      Temps:          0       0       0       0       0
  1699 ;;      Totals:         1       0       0       0       0
  1700 ;;Total ram usage:        1 bytes
  1701 ;; Hardware stack levels used:    1
  1702 ;; Hardware stack levels required when called:    3
  1703 ;; This function calls:
  1704 ;;		_lcd_write
  1705 ;; This function is called by:
  1706 ;;		_main
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709  1767                     _lcd_goto:	
  1710                           
  1711                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  1712                           ;lcd_goto@pos stored from wreg
  1713  1767  00F5               	movwf	lcd_goto@pos
  1714                           
  1715                           ;PWMLCD.c: 118: RC3 = 0;
  1716  1768  1283               	bcf	3,5	;RP0=0, select bank0
  1717  1769  1187               	bcf	7,3
  1718                           
  1719                           ;PWMLCD.c: 119: lcd_write(0x80+pos);
  1720  176A  0875               	movf	lcd_goto@pos,w
  1721  176B  3E80               	addlw	128
  1722  176C  2FD2               	ljmp	_lcd_write
  1723  176D                     __end_of_lcd_goto:	
  1724  176D                     __ptext500:	
  1725 ;; =============== function _lcd_init ends ============
  1726                           
  1727                           
  1728 ;; *************** function _lcd_puts *****************
  1729 ;; Defined at:
  1730 ;;		line 104 in file "C:\Users\Jorge\OneDrive\Escritorio\PROGS C\PWMLCD\PWMLCD.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;  s               2    5[COMMON] PTR const unsigned char 
  1733 ;;		 -> STR_8(4), STR_6(6), STR_4(4), carac2(4), 
  1734 ;;		 -> STR_2(6), carac(5), 
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;		None
  1737 ;; Return value:  Size  Location     Type
  1738 ;;		None               void
  1739 ;; Registers used:
  1740 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1741 ;; Tracked objects:
  1742 ;;		On entry : 60/0
  1743 ;;		On exit  : 60/0
  1744 ;;		Unchanged: FFE9F/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1746 ;;      Params:         2       0       0       0       0
  1747 ;;      Locals:         0       0       0       0       0
  1748 ;;      Temps:          0       0       0       0       0
  1749 ;;      Totals:         2       0       0       0       0
  1750 ;;Total ram usage:        2 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:    3
  1753 ;; This function calls:
  1754 ;;		_lcd_write
  1755 ;; This function is called by:
  1756 ;;		_main
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759  176D                     _lcd_puts:	
  1760                           
  1761                           ;PWMLCD.c: 105: RC3 = 1;
  1762                           
  1763                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1764  176D  1587               	bsf	7,3
  1765  176E                     l5744:	
  1766                           ;PWMLCD.c: 106: while(*s)
  1767                           
  1768  176E  0876               	movf	lcd_puts@s+1,w
  1769  176F  00FF               	movwf	127
  1770  1770  0875               	movf	lcd_puts@s,w
  1771  1771  0084               	movwf	4
  1772  1772  120A  158A  2000   	fcall	stringtab
      +       160A  118A         
  1773  1777  3800               	iorlw	0
  1774  1778  1903               	btfsc	3,2
  1775  1779  0008               	return
  1776                           
  1777                           ;PWMLCD.c: 107: lcd_write(*s++);
  1778  177A  0876               	movf	lcd_puts@s+1,w
  1779  177B  00FF               	movwf	127
  1780  177C  0875               	movf	lcd_puts@s,w
  1781  177D  0084               	movwf	4
  1782  177E  120A  158A  2000   	fcall	stringtab
      +       160A  118A         
  1783  1783  27D2  160A  118A   	fcall	_lcd_write
  1784  1786  0AF5               	incf	lcd_puts@s,f
  1785  1787  1903               	skipnz
  1786  1788  0AF6               	incf	lcd_puts@s+1,f
  1787  1789  2F6E               	goto	l5744
  1788  178A                     __end_of_lcd_puts:	
  1789  178A                     __ptext499:	
  1790 ;; =============== function _main ends ============
  1791                           
  1792                           
  1793 ;; *************** function _lcd_init *****************
  1794 ;; Defined at:
  1795 ;;		line 123 in file "C:\Users\Jorge\OneDrive\Escritorio\PROGS C\PWMLCD\PWMLCD.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;		None
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;  init_value      1    0        unsigned char 
  1800 ;; Return value:  Size  Location     Type
  1801 ;;		None               void
  1802 ;; Registers used:
  1803 ;;		wreg, status,2, status,0, pclath, cstack
  1804 ;; Tracked objects:
  1805 ;;		On entry : 17F/20
  1806 ;;		On exit  : 17F/0
  1807 ;;		Unchanged: FFE80/0
  1808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1809 ;;      Params:         0       0       0       0       0
  1810 ;;      Locals:         1       0       0       0       0
  1811 ;;      Temps:          0       0       0       0       0
  1812 ;;      Totals:         1       0       0       0       0
  1813 ;;Total ram usage:        1 bytes
  1814 ;; Hardware stack levels used:    1
  1815 ;; Hardware stack levels required when called:    4
  1816 ;; This function calls:
  1817 ;;		_pause
  1818 ;;		_lcd_write
  1819 ;;		_lcd_clear
  1820 ;; This function is called by:
  1821 ;;		_main
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824  178A                     _lcd_init:	
  1825                           
  1826                           ;PWMLCD.c: 127: TRISC = 0;
  1827                           
  1828                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1829  178A  0187               	clrf	7	;volatile
  1830                           
  1831                           ;PWMLCD.c: 128: TRISD = 0;
  1832  178B  0188               	clrf	8	;volatile
  1833                           
  1834                           ;PWMLCD.c: 129: RC3 = 0;
  1835  178C  1283               	bcf	3,5	;RP0=0, select bank0
  1836  178D  300F               	movlw	15
  1837  178E  1187               	bcf	7,3
  1838                           
  1839                           ;PWMLCD.c: 130: RC0 = 0;
  1840  178F  1007               	bcf	7,0
  1841                           
  1842                           ;PWMLCD.c: 131: RC4 = 0;
  1843  1790  1207               	bcf	7,4
  1844                           
  1845                           ;PWMLCD.c: 133: pause(15);
  1846  1791  00F0               	movwf	?_pause
  1847  1792  01F1               	clrf	?_pause+1
  1848  1793  27C1  160A  118A   	fcall	_pause
  1849                           
  1850                           ;PWMLCD.c: 134: PORTD = init_value;
  1851  1796  3003               	movlw	3
  1852  1797  1283               	bcf	3,5	;RP0=0, select bank0
  1853  1798  1303               	bcf	3,6	;RP1=0, select bank0
  1854  1799  0088               	movwf	8	;volatile
  1855  179A  300A               	movlw	10
  1856                           
  1857                           ;PWMLCD.c: 135: ((RC0 = 1 , RC0 = 0));
  1858  179B  1407               	bsf	7,0
  1859  179C  1007               	bcf	7,0
  1860                           
  1861                           ;PWMLCD.c: 136: pause(10);
  1862  179D  00F0               	movwf	?_pause
  1863  179E  01F1               	clrf	?_pause+1
  1864  179F  27C1  160A  118A   	fcall	_pause
  1865                           
  1866                           ;PWMLCD.c: 137: ((RC0 = 1 , RC0 = 0));
  1867                           
  1868                           ;PWMLCD.c: 138: pause(10);
  1869  17A2  27F8  160A  118A   	fcall	PL26	;call to abstracted procedure
  1870  17A5  27C1  160A  118A   	fcall	_pause
  1871                           
  1872                           ;PWMLCD.c: 139: ((RC0 = 1 , RC0 = 0));
  1873                           
  1874                           ;PWMLCD.c: 140: pause(10);
  1875  17A8  27F8  160A  118A   	fcall	PL26	;call to abstracted procedure
  1876  17AB  27C1  160A  118A   	fcall	_pause
  1877                           
  1878                           ;PWMLCD.c: 141: PORTD=2;
  1879  17AE  3002               	movlw	2
  1880  17AF  1283               	bcf	3,5	;RP0=0, select bank0
  1881  17B0  1303               	bcf	3,6	;RP1=0, select bank0
  1882  17B1  0088               	movwf	8	;volatile
  1883  17B2  3028               	movlw	40
  1884                           
  1885                           ;PWMLCD.c: 142: ((RC0 = 1 , RC0 = 0));
  1886  17B3  1407               	bsf	7,0
  1887  17B4  1007               	bcf	7,0
  1888                           
  1889                           ;PWMLCD.c: 144: lcd_write(0x28);
  1890  17B5  27D2  160A  118A   	fcall	_lcd_write
  1891                           
  1892                           ;PWMLCD.c: 146: lcd_write(0x0F);
  1893  17B8  300F               	movlw	15
  1894  17B9  27D2  160A  118A   	fcall	_lcd_write
  1895                           
  1896                           ;PWMLCD.c: 147: lcd_clear();
  1897  17BC  27EF  160A  118A   	fcall	_lcd_clear
  1898                           
  1899                           ;PWMLCD.c: 148: lcd_write(0x06);
  1900  17BF  3006               	movlw	6
  1901  17C0  2FD2               	ljmp	_lcd_write
  1902  17C1                     __end_of_lcd_init:	
  1903  17C1                     __ptext512:	
  1904 ;; =============== function ___ftadd ends ============
  1905                           
  1906                           
  1907 ;; *************** function _pause *****************
  1908 ;; Defined at:
  1909 ;;		line 153 in file "C:\Users\Jorge\OneDrive\Escritorio\PROGS C\PWMLCD\PWMLCD.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;  usvalue         2    0[COMMON] unsigned short 
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;  x               2    2[COMMON] unsigned short 
  1914 ;; Return value:  Size  Location     Type
  1915 ;;		None               void
  1916 ;; Registers used:
  1917 ;;		wreg, status,2, status,0, pclath, cstack
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: FFF9F/0
  1922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1923 ;;      Params:         2       0       0       0       0
  1924 ;;      Locals:         2       0       0       0       0
  1925 ;;      Temps:          0       0       0       0       0
  1926 ;;      Totals:         4       0       0       0       0
  1927 ;;Total ram usage:        4 bytes
  1928 ;; Hardware stack levels used:    1
  1929 ;; Hardware stack levels required when called:    1
  1930 ;; This function calls:
  1931 ;;		_msecbase
  1932 ;; This function is called by:
  1933 ;;		_main
  1934 ;;		_lcd_write
  1935 ;;		_lcd_clear
  1936 ;;		_lcd_init
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939  17C1                     _pause:	
  1940  17C1                     l5196:	
  1941                           ; Regs used in _pause: [wreg+status,2+status,0+pclath+cstack]
  1942                           
  1943                           
  1944                           ;PWMLCD.c: 154: unsigned short x;
  1945                           ;PWMLCD.c: 156: for (x=0; x<=usvalue; x++)
  1946  17C1  01F2               	clrf	pause@x
  1947  17C2  01F3               	clrf	pause@x+1
  1948  17C3                     l5202:	
  1949  17C3  0873               	movf	pause@x+1,w
  1950  17C4  0271               	subwf	pause@usvalue+1,w
  1951  17C5  1D03               	skipz
  1952  17C6  2FC9               	goto	u2365
  1953  17C7  0872               	movf	pause@x,w
  1954  17C8  0270               	subwf	pause@usvalue,w
  1955  17C9                     u2365:	
  1956  17C9  1C03               	btfss	3,0
  1957  17CA  0008               	return
  1958                           
  1959                           ;PWMLCD.c: 157: {
  1960                           ;PWMLCD.c: 158: msecbase();
  1961  17CB  27E4  160A  118A   	fcall	_msecbase
  1962  17CE  0AF2               	incf	pause@x,f
  1963  17CF  1903               	skipnz
  1964  17D0  0AF3               	incf	pause@x+1,f
  1965  17D1  2FC3               	goto	l5202
  1966  17D2                     __end_of_pause:	
  1967  17D2                     __ptext507:	
  1968 ;; =============== function _fround ends ============
  1969                           
  1970                           
  1971 ;; *************** function _lcd_write *****************
  1972 ;; Defined at:
  1973 ;;		line 88 in file "C:\Users\Jorge\OneDrive\Escritorio\PROGS C\PWMLCD\PWMLCD.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;  c               1    wreg     unsigned char 
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;  c               1    4[COMMON] unsigned char 
  1978 ;; Return value:  Size  Location     Type
  1979 ;;		None               void
  1980 ;; Registers used:
  1981 ;;		wreg, status,2, status,0, pclath, cstack
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 60/0
  1985 ;;		Unchanged: FFF9F/0
  1986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1987 ;;      Params:         0       0       0       0       0
  1988 ;;      Locals:         1       0       0       0       0
  1989 ;;      Temps:          0       0       0       0       0
  1990 ;;      Totals:         1       0       0       0       0
  1991 ;;Total ram usage:        1 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; Hardware stack levels required when called:    2
  1994 ;; This function calls:
  1995 ;;		_pause
  1996 ;; This function is called by:
  1997 ;;		_lcd_clear
  1998 ;;		_lcd_puts
  1999 ;;		_lcd_goto
  2000 ;;		_lcd_init
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003  17D2                     _lcd_write:	
  2004                           
  2005                           ; Regs used in _lcd_write: [wreg+status,2+status,0+pclath+cstack]
  2006                           ;lcd_write@c stored from wreg
  2007  17D2  00F4               	movwf	lcd_write@c
  2008                           
  2009                           ;PWMLCD.c: 89: pause(1);
  2010  17D3  01F0               	clrf	?_pause
  2011  17D4  0AF0               	incf	?_pause,f
  2012  17D5  01F1               	clrf	?_pause+1
  2013  17D6  27C1               	fcall	_pause
  2014                           
  2015                           ;PWMLCD.c: 90: PORTD = ( ( c >> 4) & 0x0F);
  2016  17D7  0E74               	swapf	lcd_write@c,w
  2017  17D8  390F               	andlw	15
  2018  17D9  1283               	bcf	3,5	;RP0=0, select bank0
  2019  17DA  1303               	bcf	3,6	;RP1=0, select bank0
  2020  17DB  0088               	movwf	8	;volatile
  2021                           
  2022                           ;PWMLCD.c: 91: ((RC0 = 1 , RC0 = 0));
  2023  17DC  1407               	bsf	7,0
  2024  17DD  1007               	bcf	7,0
  2025                           
  2026                           ;PWMLCD.c: 92: PORTD = (c & 0x0F);
  2027  17DE  0874               	movf	lcd_write@c,w
  2028  17DF  390F               	andlw	15
  2029  17E0  0088               	movwf	8	;volatile
  2030                           
  2031                           ;PWMLCD.c: 93: ((RC0 = 1 , RC0 = 0));
  2032  17E1  1407               	bsf	7,0
  2033  17E2  1007               	bcf	7,0
  2034  17E3  0008               	return
  2035  17E4                     __end_of_lcd_write:	
  2036  17E4                     __ptext528:	
  2037 ;; =============== function _isdigit ends ============
  2038                           
  2039                           
  2040 ;; *************** function _msecbase *****************
  2041 ;; Defined at:
  2042 ;;		line 163 in file "C:\Users\Jorge\OneDrive\Escritorio\PROGS C\PWMLCD\PWMLCD.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;		None
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;		None
  2047 ;; Return value:  Size  Location     Type
  2048 ;;		None               void
  2049 ;; Registers used:
  2050 ;;		wreg
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: FFF9F/0
  2055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2056 ;;      Params:         0       0       0       0       0
  2057 ;;      Locals:         0       0       0       0       0
  2058 ;;      Temps:          0       0       0       0       0
  2059 ;;      Totals:         0       0       0       0       0
  2060 ;;Total ram usage:        0 bytes
  2061 ;; Hardware stack levels used:    1
  2062 ;; This function calls:
  2063 ;;		Nothing
  2064 ;; This function is called by:
  2065 ;;		_pause
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068  17E4                     _msecbase:	
  2069                           
  2070                           ;PWMLCD.c: 164: OPTION_REG = 0b11010001;
  2071                           
  2072                           ; Regs used in _msecbase: [wreg]
  2073  17E4  30D1               	movlw	209
  2074  17E5  1683               	bsf	3,5	;RP0=1, select bank1
  2075  17E6  1303               	bcf	3,6	;RP1=0, select bank1
  2076  17E7  0081               	movwf	1	;volatile
  2077                           
  2078                           ;PWMLCD.c: 165: TMR0 = 0x0E;
  2079  17E8  300E               	movlw	14
  2080  17E9  1283               	bcf	3,5	;RP0=0, select bank0
  2081  17EA  0081               	movwf	1	;volatile
  2082  17EB                     l1088:	
  2083                           ;PWMLCD.c: 167: while(!T0IF);
  2084                           
  2085  17EB  1D0B               	btfss	11,2
  2086  17EC  2FEB               	goto	l1088
  2087                           
  2088                           ;PWMLCD.c: 168: T0IF = 0;
  2089  17ED  110B               	bcf	11,2
  2090  17EE  0008               	return
  2091  17EF                     __end_of_msecbase:	
  2092  17EF                     __ptext503:	
  2093 ;; =============== function _sprintf ends ============
  2094                           
  2095                           
  2096 ;; *************** function _lcd_clear *****************
  2097 ;; Defined at:
  2098 ;;		line 97 in file "C:\Users\Jorge\OneDrive\Escritorio\PROGS C\PWMLCD\PWMLCD.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;		None
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;		None
  2103 ;; Return value:  Size  Location     Type
  2104 ;;		None               void
  2105 ;; Registers used:
  2106 ;;		wreg, status,2, status,0, pclath, cstack
  2107 ;; Tracked objects:
  2108 ;;		On entry : 17F/0
  2109 ;;		On exit  : 11F/0
  2110 ;;		Unchanged: FFE80/0
  2111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2112 ;;      Params:         0       0       0       0       0
  2113 ;;      Locals:         0       0       0       0       0
  2114 ;;      Temps:          0       0       0       0       0
  2115 ;;      Totals:         0       0       0       0       0
  2116 ;;Total ram usage:        0 bytes
  2117 ;; Hardware stack levels used:    1
  2118 ;; Hardware stack levels required when called:    3
  2119 ;; This function calls:
  2120 ;;		_lcd_write
  2121 ;;		_pause
  2122 ;; This function is called by:
  2123 ;;		_main
  2124 ;;		_lcd_init
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127  17EF                     _lcd_clear:	
  2128  17EF  3001               	movlw	1
  2129                           
  2130                           ;PWMLCD.c: 98: RC3 = 0;
  2131                           
  2132                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  2133  17F0  1187               	bcf	7,3
  2134                           
  2135                           ;PWMLCD.c: 99: lcd_write(0x01);
  2136  17F1  27D2  160A  118A   	fcall	_lcd_write
  2137                           
  2138                           ;PWMLCD.c: 100: pause (2);
  2139  17F4  3002               	movlw	2
  2140  17F5  00F0               	movwf	?_pause
  2141  17F6  01F1               	clrf	?_pause+1
  2142  17F7  2FC1               	ljmp	l5196
  2143  17F8                     __end_of_lcd_clear:	
  2144  17F8                     PL26:	
  2145  17F8  1283               	bcf	3,5	;RP0=0, select bank0
  2146  17F9  1303               	bcf	3,6	;RP1=0, select bank0
  2147  17FA  300A               	movlw	10
  2148  17FB  1407               	bsf	7,0
  2149  17FC  1007               	bcf	7,0
  2150  17FD  00F0               	movwf	?_pause
  2151  17FE  01F1               	clrf	?_pause+1
  2152  17FF  0008               	return
  2153                           
  2154                           	psect	text502
  2155  0062                     __ptext502:	
  2156 ;; =============== function _lcd_goto ends ============
  2157                           
  2158                           
  2159 ;; *************** function _sprintf *****************
  2160 ;; Defined at:
  2161 ;;		line 488 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;  sp              1    wreg     PTR unsigned char 
  2164 ;;		 -> carac2(4), carac(5), 
  2165 ;;  f               1   50[BANK0 ] PTR const unsigned char 
  2166 ;;		 -> STR_7(3), STR_5(6), STR_3(3), STR_1(6), 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;  sp              1   21[BANK1 ] PTR unsigned char 
  2169 ;;		 -> carac2(4), carac(5), 
  2170 ;;  _val            4   12[BANK1 ] struct .
  2171 ;;  fval            3   18[BANK1 ] struct .
  2172 ;;  integ           3    5[BANK1 ] struct .
  2173 ;;  ival            3    0        struct .
  2174 ;;  prec            2   22[BANK1 ] int 
  2175 ;;  exp             2   16[BANK1 ] int 
  2176 ;;  width           2   10[BANK1 ] int 
  2177 ;;  flag            2    8[BANK1 ] unsigned short 
  2178 ;;  c               1   24[BANK1 ] char 
  2179 ;;  ap              1    4[BANK1 ] PTR void [1]
  2180 ;;		 -> ?_sprintf(2), 
  2181 ;;  d               1    0        unsigned char 
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  2   50[BANK0 ] int 
  2184 ;; Registers used:
  2185 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2186 ;; Tracked objects:
  2187 ;;		On entry : 60/0
  2188 ;;		On exit  : 160/20
  2189 ;;		Unchanged: FFE00/0
  2190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2191 ;;      Params:         0       4       0       0       0
  2192 ;;      Locals:         0       0      25       0       0
  2193 ;;      Temps:          0       5       0       0       0
  2194 ;;      Totals:         0       9      25       0       0
  2195 ;;Total ram usage:       34 bytes
  2196 ;; Hardware stack levels used:    1
  2197 ;; Hardware stack levels required when called:    3
  2198 ;; This function calls:
  2199 ;;		_isdigit
  2200 ;;		___wmul
  2201 ;;		___ftge
  2202 ;;		___ftneg
  2203 ;;		___awdiv
  2204 ;;		_scale
  2205 ;;		___ftmul
  2206 ;;		_fround
  2207 ;;		___ftadd
  2208 ;;		___fttol
  2209 ;;		__div_to_l_
  2210 ;;		__tdiv_to_l_
  2211 ;;		___lltoft
  2212 ;;		___ftsub
  2213 ;;		___lldiv
  2214 ;;		___llmod
  2215 ;; This function is called by:
  2216 ;;		_main
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219  0062                     _sprintf:	
  2220                           
  2221                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2222                           ;sprintf@sp stored from wreg
  2223  0062  1683               	bsf	3,5	;RP0=1, select bank1
  2224  0063  00B5               	movwf	sprintf@sp^(0+128)
  2225  0064  3053               	movlw	(?_sprintf+1)& (0+255)
  2226  0065  00A4               	movwf	sprintf@ap^(0+128)
  2227  0066                     l5728:	
  2228  0066  1283               	bcf	3,5	;RP0=0, select bank0
  2229  0067  0852               	movf	sprintf@f,w
  2230  0068  0AD2               	incf	sprintf@f,f
  2231  0069  0084               	movwf	4
  2232  006A  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2233  006F  1683               	bsf	3,5	;RP0=1, select bank1
  2234  0070  00B8               	movwf	sprintf@c^(0+128)
  2235  0071  08B8               	movf	sprintf@c^(0+128),f
  2236  0072  1903               	btfsc	3,2
  2237  0073  2D82               	goto	l5730
  2238  0074  0838               	movf	sprintf@c^(0+128),w
  2239  0075  3A25               	xorlw	37
  2240  0076  1903               	skipnz
  2241  0077  287F               	goto	l5454
  2242  0078  0835               	movf	sprintf@sp^(0+128),w
  2243  0079  0084               	movwf	4
  2244  007A  0838               	movf	sprintf@c^(0+128),w
  2245  007B  1383               	bcf	3,7	;select IRP bank0
  2246  007C  0080               	movwf	0
  2247  007D  0AB5               	incf	sprintf@sp^(0+128),f
  2248  007E  2866               	goto	l5728
  2249  007F                     l5454:	
  2250  007F  01AA               	clrf	sprintf@width^(0+128)
  2251  0080  01AB               	clrf	(sprintf@width+1)^(0+128)
  2252  0081  01A8               	clrf	sprintf@flag^(0+128)
  2253  0082  01A9               	clrf	(sprintf@flag+1)^(0+128)
  2254  0083  1283               	bcf	3,5	;RP0=0, select bank0
  2255  0084  0852               	movf	sprintf@f,w
  2256  0085  0084               	movwf	4
  2257  0086  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2258  008B  25F1  120A  118A   	fcall	_isdigit
  2259  008E  1C03               	btfss	3,0
  2260  008F  28B8               	goto	l5466
  2261  0090  1683               	bsf	3,5	;RP0=1, select bank1
  2262  0091  01AA               	clrf	sprintf@width^(0+128)
  2263  0092  01AB               	clrf	(sprintf@width+1)^(0+128)
  2264  0093                     l5460:	
  2265  0093  1683               	bsf	3,5	;RP0=1, select bank1
  2266  0094  082B               	movf	(sprintf@width+1)^(0+128),w
  2267  0095  00F1               	movwf	?___wmul+1
  2268  0096  082A               	movf	sprintf@width^(0+128),w
  2269  0097  00F0               	movwf	?___wmul
  2270  0098  300A               	movlw	10
  2271  0099  00F2               	movwf	?___wmul+2
  2272  009A  01F3               	clrf	?___wmul+3
  2273  009B  25FF               	fcall	___wmul
  2274  009C  1283               	bcf	3,5	;RP0=0, select bank0
  2275  009D  0852               	movf	sprintf@f,w
  2276  009E  0084               	movwf	4
  2277  009F  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2278  00A4  279D  120A  118A   	fcall	PL13	;call to abstracted procedure
  2279  00A7  00AA               	movwf	sprintf@width^(0+128)
  2280  00A8  27E1               	fcall	PL29	;call to abstracted procedure
  2281  00A9  00AB               	movwf	(sprintf@width+1)^(0+128)
  2282  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  2283  00AB  0AD2               	incf	sprintf@f,f
  2284  00AC  0852               	movf	sprintf@f,w
  2285  00AD  0084               	movwf	4
  2286  00AE  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2287  00B3  25F1  120A  118A   	fcall	_isdigit
  2288  00B6  1803               	btfsc	3,0
  2289  00B7  2893               	goto	l5460
  2290  00B8                     l5466:	
  2291  00B8  0852               	movf	sprintf@f,w
  2292  00B9  0084               	movwf	4
  2293  00BA  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2294  00BF  3A2E               	xorlw	46
  2295  00C0  1D03               	skipz
  2296  00C1  28F2               	goto	l5480
  2297  00C2  1683               	bsf	3,5	;RP0=1, select bank1
  2298  00C3  1729               	bsf	(sprintf@flag^(0+128)+1),6
  2299  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  2300  00C5  0AD2               	incf	sprintf@f,f
  2301  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  2302  00C7  01B6               	clrf	sprintf@prec^(0+128)
  2303  00C8  01B7               	clrf	(sprintf@prec+1)^(0+128)
  2304  00C9                     l5478:	
  2305  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  2306  00CA  0852               	movf	sprintf@f,w
  2307  00CB  0084               	movwf	4
  2308  00CC  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2309  00D1  25F1  120A  118A   	fcall	_isdigit
  2310  00D4  1C03               	btfss	3,0
  2311  00D5  28F9               	goto	l5486
  2312  00D6  1683               	bsf	3,5	;RP0=1, select bank1
  2313  00D7  0837               	movf	(sprintf@prec+1)^(0+128),w
  2314  00D8  00F1               	movwf	?___wmul+1
  2315  00D9  0836               	movf	sprintf@prec^(0+128),w
  2316  00DA  00F0               	movwf	?___wmul
  2317  00DB  300A               	movlw	10
  2318  00DC  00F2               	movwf	?___wmul+2
  2319  00DD  01F3               	clrf	?___wmul+3
  2320  00DE  25FF               	fcall	___wmul
  2321  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  2322  00E0  0852               	movf	sprintf@f,w
  2323  00E1  0084               	movwf	4
  2324  00E2  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2325  00E7  279D  120A  118A   	fcall	PL13	;call to abstracted procedure
  2326  00EA  00B6               	movwf	sprintf@prec^(0+128)
  2327  00EB  27E1  120A  118A   	fcall	PL29	;call to abstracted procedure
  2328  00EE  00B7               	movwf	(sprintf@prec+1)^(0+128)
  2329  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  2330  00F0  0AD2               	incf	sprintf@f,f
  2331  00F1  28C9               	goto	l5478
  2332  00F2                     l5480:	
  2333  00F2  1683               	bsf	3,5	;RP0=1, select bank1
  2334  00F3  01B6               	clrf	sprintf@prec^(0+128)
  2335  00F4  01B7               	clrf	(sprintf@prec+1)^(0+128)
  2336  00F5  1629               	bsf	(sprintf@flag^(0+128)+1),4
  2337  00F6  28F9               	goto	l5486
  2338  00F7                     l1140:	
  2339  00F7  1529               	bsf	(sprintf@flag^(0+128)+1),2
  2340  00F8  2911               	goto	l5488
  2341  00F9                     l5486:	
  2342  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  2343  00FA  0852               	movf	sprintf@f,w
  2344  00FB  0AD2               	incf	sprintf@f,f
  2345  00FC  0084               	movwf	4
  2346  00FD  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2347  0102  1683               	bsf	3,5	;RP0=1, select bank1
  2348  0103  00B8               	movwf	sprintf@c^(0+128)
  2349                           
  2350                           ; Switch size 1, requested type "space"
  2351                           ; Number of cases is 4, Range of values is 0 to 105
  2352                           ; switch strategies available:
  2353                           ; Name         Instructions Cycles
  2354                           ; simple_byte           13     7 (average)
  2355                           ; jumptable            260     6 (fixed)
  2356                           ; rangetable           110     6 (fixed)
  2357                           ; spacedrange          218     9 (fixed)
  2358                           ; locatedrange         106     3 (fixed)
  2359                           ;	Chosen strategy is simple_byte
  2360  0104  3A00               	xorlw	0	; case 0
  2361  0105  1903               	skipnz
  2362  0106  2D82               	goto	l5730
  2363  0107  3A64               	xorlw	100	; case 100
  2364  0108  1903               	skipnz
  2365  0109  2911               	goto	l5488
  2366  010A  3A02               	xorlw	2	; case 102
  2367  010B  1903               	skipnz
  2368  010C  28F7               	goto	l1140
  2369  010D  3A0F               	xorlw	15	; case 105
  2370  010E  1903               	skipnz
  2371  010F  2911               	goto	l5488
  2372  0110  2866               	goto	l5728
  2373  0111                     l5488:	
  2374  0111  1283               	bcf	3,5	;RP0=0, select bank0
  2375  0112  3007               	movlw	7
  2376  0113  01D6               	clrf	??_sprintf
  2377  0114  1683               	bsf	3,5	;RP0=1, select bank1
  2378  0115  0529               	andwf	(sprintf@flag+1)^(0+128),w
  2379  0116  1283               	bcf	3,5	;RP0=0, select bank0
  2380  0117  00D7               	movwf	??_sprintf+1
  2381  0118  0456               	iorwf	??_sprintf,w
  2382  0119  1903               	skipnz
  2383  011A  2C47               	goto	l5648
  2384  011B  1683               	bsf	3,5	;RP0=1, select bank1
  2385  011C  1E29               	btfss	(sprintf@flag+1)^(0+128),4
  2386  011D  2921               	goto	l5494
  2387  011E  3006               	movlw	6
  2388  011F  00B6               	movwf	sprintf@prec^(0+128)
  2389  0120  01B7               	clrf	(sprintf@prec+1)^(0+128)
  2390  0121                     l5494:	
  2391  0121  0824               	movf	sprintf@ap^(0+128),w
  2392  0122  0084               	movwf	4
  2393  0123  1383               	bcf	3,7	;select IRP bank0
  2394  0124  0800               	movf	0,w
  2395  0125  00B2               	movwf	sprintf@fval^(0+128)
  2396  0126  0A84               	incf	4,f
  2397  0127  0800               	movf	0,w
  2398  0128  00B3               	movwf	(sprintf@fval+1)^(0+128)
  2399  0129  0A84               	incf	4,f
  2400  012A  0800               	movf	0,w
  2401  012B  00B4               	movwf	(sprintf@fval+2)^(0+128)
  2402  012C  3003               	movlw	3
  2403  012D  07A4               	addwf	sprintf@ap^(0+128),f
  2404  012E  0832               	movf	sprintf@fval^(0+128),w
  2405  012F  00F0               	movwf	?___ftge
  2406  0130  0833               	movf	(sprintf@fval+1)^(0+128),w
  2407  0131  00F1               	movwf	?___ftge+1
  2408  0132  0834               	movf	(sprintf@fval+2)^(0+128),w
  2409  0133  00F2               	movwf	?___ftge+2
  2410  0134  01F3               	clrf	?___ftge+3
  2411  0135  01F4               	clrf	?___ftge+4
  2412  0136  01F5               	clrf	?___ftge+5
  2413  0137  25C5  120A  118A   	fcall	___ftge
  2414  013A  1803               	btfsc	3,0
  2415  013B  294D               	goto	l5504
  2416  013C  0832               	movf	sprintf@fval^(0+128),w
  2417  013D  00F0               	movwf	?___ftneg
  2418  013E  0833               	movf	(sprintf@fval+1)^(0+128),w
  2419  013F  00F1               	movwf	?___ftneg+1
  2420  0140  0834               	movf	(sprintf@fval+2)^(0+128),w
  2421  0141  00F2               	movwf	?___ftneg+2
  2422  0142  2733  120A  118A   	fcall	___ftneg
  2423  0145  0870               	movf	?___ftneg,w
  2424  0146  00B2               	movwf	sprintf@fval^(0+128)
  2425  0147  0871               	movf	?___ftneg+1,w
  2426  0148  00B3               	movwf	(sprintf@fval+1)^(0+128)
  2427  0149  0872               	movf	?___ftneg+2,w
  2428  014A  00B4               	movwf	(sprintf@fval+2)^(0+128)
  2429  014B  3003               	movlw	3
  2430  014C  04A8               	iorwf	sprintf@flag^(0+128),f
  2431  014D                     l5504:	
  2432  014D  01B0               	clrf	sprintf@exp^(0+128)
  2433  014E  01B1               	clrf	(sprintf@exp+1)^(0+128)
  2434  014F  0834               	movf	(sprintf@fval+2)^(0+128),w
  2435  0150  0433               	iorwf	(sprintf@fval+1)^(0+128),w
  2436  0151  0432               	iorwf	sprintf@fval^(0+128),w
  2437  0152  1903               	skipnz
  2438  0153  29E3               	goto	l5536
  2439  0154  30B2               	movlw	low sprintf@fval
  2440  0155  0084               	movwf	4
  2441  0156  27F6  120A  118A   	fcall	PL33	;call to abstracted procedure
  2442  0159  0A84               	incf	4,f
  2443  015A  0800               	movf	0,w
  2444  015B  00D8               	movwf	??_sprintf+2
  2445  015C  0A84               	incf	4,f
  2446  015D  0800               	movf	0,w
  2447  015E  00D9               	movwf	??_sprintf+3
  2448  015F  300F               	movlw	15
  2449  0160                     u2835:	
  2450  0160  1003               	clrc
  2451  0161  0CD9               	rrf	??_sprintf+3,f
  2452  0162  0CD8               	rrf	??_sprintf+2,f
  2453  0163  0CD7               	rrf	??_sprintf+1,f
  2454  0164  0CD6               	rrf	??_sprintf,f
  2455  0165  3EFF               	addlw	-1
  2456  0166  1D03               	skipz
  2457  0167  2960               	goto	u2835
  2458  0168  0857               	movf	??_sprintf+1,w
  2459  0169  1683               	bsf	3,5	;RP0=1, select bank1
  2460  016A  00B1               	movwf	(sprintf@exp+1)^(0+128)
  2461  016B  1283               	bcf	3,5	;RP0=0, select bank0
  2462  016C  0856               	movf	??_sprintf,w
  2463  016D  1683               	bsf	3,5	;RP0=1, select bank1
  2464  016E  00B0               	movwf	sprintf@exp^(0+128)
  2465  016F  3082               	movlw	-126
  2466  0170  01B1               	clrf	(sprintf@exp+1)^(0+128)
  2467  0171  07B0               	addwf	sprintf@exp^(0+128),f
  2468  0172  1C03               	skipc
  2469  0173  03B1               	decf	(sprintf@exp+1)^(0+128),f
  2470  0174  30FF               	movlw	-1
  2471  0175  07B0               	addwf	sprintf@exp^(0+128),f
  2472  0176  1C03               	skipc
  2473  0177  03B1               	decf	(sprintf@exp+1)^(0+128),f
  2474  0178  3003               	movlw	3
  2475  0179  00F0               	movwf	?___wmul
  2476  017A  01F1               	clrf	?___wmul+1
  2477  017B  0831               	movf	(sprintf@exp+1)^(0+128),w
  2478  017C  00F3               	movwf	?___wmul+3
  2479  017D  0830               	movf	sprintf@exp^(0+128),w
  2480  017E  00F2               	movwf	?___wmul+2
  2481  017F  25FF               	fcall	___wmul
  2482  0180  0871               	movf	?___wmul+1,w
  2483  0181  00B1               	movwf	(sprintf@exp+1)^(0+128)
  2484  0182  0870               	movf	?___wmul,w
  2485  0183  00B0               	movwf	sprintf@exp^(0+128)
  2486  0184  300A               	movlw	10
  2487  0185  00F6               	movwf	?___awdiv
  2488  0186  01F7               	clrf	?___awdiv+1
  2489  0187  0831               	movf	(sprintf@exp+1)^(0+128),w
  2490  0188  00F9               	movwf	?___awdiv+3
  2491  0189  0830               	movf	sprintf@exp^(0+128),w
  2492  018A  00F8               	movwf	?___awdiv+2
  2493  018B  120A  158A  266A   	fcall	___awdiv
      +       120A  118A         
  2494  0190  0877               	movf	?___awdiv+1,w
  2495  0191  00B1               	movwf	(sprintf@exp+1)^(0+128)
  2496  0192  0876               	movf	?___awdiv,w
  2497  0193  00B0               	movwf	sprintf@exp^(0+128)
  2498  0194  1FB1               	btfss	(sprintf@exp+1)^(0+128),7
  2499  0195  299A               	goto	l5524
  2500  0196  30FF               	movlw	-1
  2501  0197  07B0               	addwf	sprintf@exp^(0+128),f
  2502  0198  1C03               	skipc
  2503  0199  03B1               	decf	(sprintf@exp+1)^(0+128),f
  2504  019A                     l5524:	
  2505  019A  0330               	decf	sprintf@exp^(0+128),w
  2506  019B  3AFF               	xorlw	255
  2507  019C  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  2508  01A1  2790  120A  118A   	fcall	PL12	;call to abstracted procedure
  2509  01A4  27B3               	fcall	PL15	;call to abstracted procedure
  2510  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  2511  01A6  0825               	movf	sprintf@integ^(0+128),w
  2512  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  2513  01A8  00B0               	movwf	?___ftmul+3
  2514  01A9  1683               	bsf	3,5	;RP0=1, select bank1
  2515  01AA  0826               	movf	(sprintf@integ+1)^(0+128),w
  2516  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  2517  01AC  00B1               	movwf	?___ftmul+4
  2518  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  2519  01AE  0827               	movf	(sprintf@integ+2)^(0+128),w
  2520  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  2521  01B0  00B2               	movwf	?___ftmul+5
  2522  01B1  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2523  01B6  082D               	movf	?___ftmul,w
  2524  01B7  1683               	bsf	3,5	;RP0=1, select bank1
  2525  01B8  00A5               	movwf	sprintf@integ^(0+128)
  2526  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  2527  01BA  082E               	movf	?___ftmul+1,w
  2528  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  2529  01BC  00A6               	movwf	(sprintf@integ+1)^(0+128)
  2530  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  2531  01BE  082F               	movf	?___ftmul+2,w
  2532  01BF  1683               	bsf	3,5	;RP0=1, select bank1
  2533  01C0  00A7               	movwf	(sprintf@integ+2)^(0+128)
  2534  01C1  27DA  120A  118A   	fcall	PL22	;call to abstracted procedure
  2535  01C4  3080               	movlw	128
  2536  01C5  01F3               	clrf	?___ftge+3
  2537  01C6  00F4               	movwf	?___ftge+4
  2538  01C7  303F               	movlw	63
  2539  01C8  00F5               	movwf	?___ftge+5
  2540  01C9  25C5  120A  118A   	fcall	___ftge
  2541  01CC  1803               	btfsc	3,0
  2542  01CD  29D3               	goto	l5532
  2543  01CE  30FF               	movlw	-1
  2544  01CF  07B0               	addwf	sprintf@exp^(0+128),f
  2545  01D0  1C03               	skipc
  2546  01D1  03B1               	decf	(sprintf@exp+1)^(0+128),f
  2547  01D2  29E3               	goto	l5536
  2548  01D3                     l5532:	
  2549  01D3  27DA  120A  118A   	fcall	PL22	;call to abstracted procedure
  2550  01D6  3020               	movlw	32
  2551  01D7  01F3               	clrf	?___ftge+3
  2552  01D8  00F4               	movwf	?___ftge+4
  2553  01D9  3041               	movlw	65
  2554  01DA  00F5               	movwf	?___ftge+5
  2555  01DB  25C5  120A  118A   	fcall	___ftge
  2556  01DE  1C03               	btfss	3,0
  2557  01DF  29E3               	goto	l5536
  2558  01E0  0AB0               	incf	sprintf@exp^(0+128),f
  2559  01E1  1903               	skipnz
  2560  01E2  0AB1               	incf	(sprintf@exp+1)^(0+128),f
  2561  01E3                     l5536:	
  2562  01E3  0837               	movf	(sprintf@prec+1)^(0+128),w
  2563  01E4  3A80               	xorlw	128
  2564  01E5  00FF               	movwf	127
  2565  01E6  3080               	movlw	128
  2566  01E7  027F               	subwf	127,w
  2567  01E8  1D03               	skipz
  2568  01E9  29EC               	goto	u2875
  2569  01EA  300D               	movlw	13
  2570  01EB  0236               	subwf	sprintf@prec^(0+128),w
  2571  01EC                     u2875:	
  2572  01EC  1803               	skipnc
  2573  01ED  2A17               	goto	l5540
  2574  01EE  27FD               	call	PL34	;select bank 1
  2575  01EF  0836               	movf	sprintf@prec^(0+128),w
  2576  01F0  120A  158A  236B   	fcall	_fround
      +       120A  118A         
  2577  01F5  0848               	movf	?_fround,w
  2578  01F6  00BC               	movwf	?___ftadd
  2579  01F7  0849               	movf	?_fround+1,w
  2580  01F8  00BD               	movwf	?___ftadd+1
  2581  01F9  084A               	movf	?_fround+2,w
  2582  01FA  00BE               	movwf	?___ftadd+2
  2583  01FB  1683               	bsf	3,5	;RP0=1, select bank1
  2584  01FC  0832               	movf	sprintf@fval^(0+128),w
  2585  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  2586  01FE  00BF               	movwf	?___ftadd+3
  2587  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  2588  0200  0833               	movf	(sprintf@fval+1)^(0+128),w
  2589  0201  1283               	bcf	3,5	;RP0=0, select bank0
  2590  0202  00C0               	movwf	?___ftadd+4
  2591  0203  1683               	bsf	3,5	;RP0=1, select bank1
  2592  0204  0834               	movf	(sprintf@fval+2)^(0+128),w
  2593  0205  1283               	bcf	3,5	;RP0=0, select bank0
  2594  0206  00C1               	movwf	?___ftadd+5
  2595  0207  120A  158A  2196   	fcall	___ftadd
      +       120A  118A         
  2596  020C  083C               	movf	?___ftadd,w
  2597  020D  1683               	bsf	3,5	;RP0=1, select bank1
  2598  020E  00B2               	movwf	sprintf@fval^(0+128)
  2599  020F  1283               	bcf	3,5	;RP0=0, select bank0
  2600  0210  083D               	movf	?___ftadd+1,w
  2601  0211  1683               	bsf	3,5	;RP0=1, select bank1
  2602  0212  00B3               	movwf	(sprintf@fval+1)^(0+128)
  2603  0213  1283               	bcf	3,5	;RP0=0, select bank0
  2604  0214  083E               	movf	?___ftadd+2,w
  2605  0215  1683               	bsf	3,5	;RP0=1, select bank1
  2606  0216  00B4               	movwf	(sprintf@fval+2)^(0+128)
  2607  0217                     l5540:	
  2608  0217  27FD               	call	PL34	;select bank 1
  2609  0218  0831               	movf	(sprintf@exp+1)^(0+128),w
  2610  0219  3A80               	xorlw	128
  2611  021A  00FF               	movwf	127
  2612  021B  3080               	movlw	128
  2613  021C  027F               	subwf	127,w
  2614  021D  1D03               	skipz
  2615  021E  2A21               	goto	u2885
  2616  021F  300A               	movlw	10
  2617  0220  0230               	subwf	sprintf@exp^(0+128),w
  2618  0221                     u2885:	
  2619  0221  1803               	skipnc
  2620  0222  2A42               	goto	l5548
  2621  0223  27FD               	call	PL34	;select bank 1
  2622  0224  0834               	movf	(sprintf@fval+2)^(0+128),w
  2623  0225  0433               	iorwf	(sprintf@fval+1)^(0+128),w
  2624  0226  0432               	iorwf	sprintf@fval^(0+128),w
  2625  0227  1903               	skipnz
  2626  0228  2A83               	goto	l5564
  2627  0229  0832               	movf	sprintf@fval^(0+128),w
  2628  022A  27A8  120A  118A   	fcall	PL14	;call to abstracted procedure
  2629  022D  2618  120A  118A   	fcall	___fttol
  2630  0230  0823               	movf	?___fttol+3,w
  2631  0231  0422               	iorwf	?___fttol+2,w
  2632  0232  0421               	iorwf	?___fttol+1,w
  2633  0233  0420               	iorwf	?___fttol,w
  2634  0234  1D03               	skipz
  2635  0235  2A83               	goto	l5564
  2636  0236  1683               	bsf	3,5	;RP0=1, select bank1
  2637  0237  0831               	movf	(sprintf@exp+1)^(0+128),w
  2638  0238  3A80               	xorlw	128
  2639  0239  00FF               	movwf	127
  2640  023A  3080               	movlw	128
  2641  023B  027F               	subwf	127,w
  2642  023C  1D03               	skipz
  2643  023D  2A40               	goto	u2915
  2644  023E  3002               	movlw	2
  2645  023F  0230               	subwf	sprintf@exp^(0+128),w
  2646  0240                     u2915:	
  2647  0240  1C03               	skipc
  2648  0241  2A83               	goto	l5564
  2649  0242                     l5548:	
  2650  0242  27FD               	call	PL34	;select bank 1
  2651  0243  27DA  120A  118A   	fcall	PL22	;call to abstracted procedure
  2652  0246  3070               	movlw	112
  2653  0247  00F3               	movwf	?___ftge+3
  2654  0248  3089               	movlw	137
  2655  0249  00F4               	movwf	?___ftge+4
  2656  024A  3040               	movlw	64
  2657  024B  00F5               	movwf	?___ftge+5
  2658  024C  25C5  120A  118A   	fcall	___ftge
  2659  024F  1803               	btfsc	3,0
  2660  0250  2A53               	goto	l5552
  2661  0251  30F7               	movlw	-9
  2662  0252  2A54               	goto	L1
  2663  0253                     l5552:	
  2664  0253  30F8               	movlw	-8
  2665  0254                     L1:	
  2666  0254  07B0               	addwf	sprintf@exp^(0+128),f
  2667  0255  1C03               	skipc
  2668  0256  03B1               	decf	(sprintf@exp+1)^(0+128),f
  2669  0257  0830               	movf	sprintf@exp^(0+128),w
  2670  0258  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  2671  025D  2790  120A  118A   	fcall	PL12	;call to abstracted procedure
  2672  0260  00F0               	movwf	?__tdiv_to_l_
  2673  0261  0833               	movf	(sprintf@fval+1)^(0+128),w
  2674  0262  00F1               	movwf	?__tdiv_to_l_+1
  2675  0263  0834               	movf	(sprintf@fval+2)^(0+128),w
  2676  0264  00F2               	movwf	?__tdiv_to_l_+2
  2677  0265  0825               	movf	sprintf@integ^(0+128),w
  2678  0266  00F3               	movwf	?__tdiv_to_l_+3
  2679  0267  0826               	movf	(sprintf@integ+1)^(0+128),w
  2680  0268  00F4               	movwf	?__tdiv_to_l_+4
  2681  0269  0827               	movf	(sprintf@integ+2)^(0+128),w
  2682  026A  00F5               	movwf	?__tdiv_to_l_+5
  2683  026B  26BB  120A  118A   	fcall	__tdiv_to_l_
  2684  026E  0873               	movf	?__tdiv_to_l_+3,w
  2685  026F  1683               	bsf	3,5	;RP0=1, select bank1
  2686  0270  00A3               	movwf	(_sprintf$1897+3)^(0+128)
  2687  0271  0872               	movf	?__tdiv_to_l_+2,w
  2688  0272  00A2               	movwf	(_sprintf$1897+2)^(0+128)
  2689  0273  0871               	movf	?__tdiv_to_l_+1,w
  2690  0274  00A1               	movwf	(_sprintf$1897+1)^(0+128)
  2691  0275  0870               	movf	?__tdiv_to_l_,w
  2692  0276  00A0               	movwf	_sprintf$1897^(0+128)
  2693  0277  0823               	movf	(_sprintf$1897+3)^(0+128),w
  2694  0278  00AF               	movwf	(sprintf@_val+3)^(0+128)
  2695  0279  0822               	movf	(_sprintf$1897+2)^(0+128),w
  2696  027A  00AE               	movwf	(sprintf@_val+2)^(0+128)
  2697  027B  0821               	movf	(_sprintf$1897+1)^(0+128),w
  2698  027C  00AD               	movwf	(sprintf@_val+1)^(0+128)
  2699  027D  0820               	movf	_sprintf$1897^(0+128),w
  2700  027E  00AC               	movwf	sprintf@_val^(0+128)
  2701  027F  01B2               	clrf	sprintf@fval^(0+128)
  2702  0280  01B3               	clrf	(sprintf@fval+1)^(0+128)
  2703  0281  01B4               	clrf	(sprintf@fval+2)^(0+128)
  2704  0282  2ABE               	goto	l5568
  2705  0283                     l5564:	
  2706  0283  27FD               	call	PL34	;select bank 1
  2707  0284  0832               	movf	sprintf@fval^(0+128),w
  2708  0285  27A8  120A  118A   	fcall	PL14	;call to abstracted procedure
  2709  0288  2618  120A  118A   	fcall	___fttol
  2710  028B  2782  120A  118A   	fcall	PL7	;call to abstracted procedure
  2711  028E  1683               	bsf	3,5	;RP0=1, select bank1
  2712  028F  00AC               	movwf	sprintf@_val^(0+128)
  2713  0290  082F               	movf	(sprintf@_val+3)^(0+128),w
  2714  0291  00FB               	movwf	?___lltoft+3
  2715  0292  082E               	movf	(sprintf@_val+2)^(0+128),w
  2716  0293  00FA               	movwf	?___lltoft+2
  2717  0294  082D               	movf	(sprintf@_val+1)^(0+128),w
  2718  0295  00F9               	movwf	?___lltoft+1
  2719  0296  082C               	movf	sprintf@_val^(0+128),w
  2720  0297  00F8               	movwf	?___lltoft
  2721  0298  273B               	fcall	___lltoft
  2722  0299  0878               	movf	?___lltoft,w
  2723  029A  1283               	bcf	3,5	;RP0=0, select bank0
  2724  029B  00C8               	movwf	?___ftsub
  2725  029C  0879               	movf	?___lltoft+1,w
  2726  029D  00C9               	movwf	?___ftsub+1
  2727  029E  087A               	movf	?___lltoft+2,w
  2728  029F  00CA               	movwf	?___ftsub+2
  2729  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  2730  02A1  0832               	movf	sprintf@fval^(0+128),w
  2731  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  2732  02A3  00CB               	movwf	?___ftsub+3
  2733  02A4  1683               	bsf	3,5	;RP0=1, select bank1
  2734  02A5  0833               	movf	(sprintf@fval+1)^(0+128),w
  2735  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  2736  02A7  00CC               	movwf	?___ftsub+4
  2737  02A8  1683               	bsf	3,5	;RP0=1, select bank1
  2738  02A9  0834               	movf	(sprintf@fval+2)^(0+128),w
  2739  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  2740  02AB  00CD               	movwf	?___ftsub+5
  2741  02AC  120A  158A  2180   	fcall	___ftsub
      +       120A  118A         
  2742  02B1  0848               	movf	?___ftsub,w
  2743  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  2744  02B3  00B2               	movwf	sprintf@fval^(0+128)
  2745  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  2746  02B5  0849               	movf	?___ftsub+1,w
  2747  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  2748  02B7  00B3               	movwf	(sprintf@fval+1)^(0+128)
  2749  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  2750  02B9  084A               	movf	?___ftsub+2,w
  2751  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  2752  02BB  00B4               	movwf	(sprintf@fval+2)^(0+128)
  2753  02BC  01B0               	clrf	sprintf@exp^(0+128)
  2754  02BD  01B1               	clrf	(sprintf@exp+1)^(0+128)
  2755  02BE                     l5568:	
  2756  02BE  01B8               	clrf	sprintf@c^(0+128)
  2757  02BF  0AB8               	incf	sprintf@c^(0+128),f
  2758  02C0                     l5574:	
  2759  02C0  275B               	fcall	PL3	;call to abstracted procedure
  2760  02C1  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2761  02C6  00D7               	movwf	??_sprintf+1
  2762  02C7  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2763  02CC  00D8               	movwf	??_sprintf+2
  2764  02CD  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2765  02D2  00D9               	movwf	??_sprintf+3
  2766  02D3  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2767  02D8  00DA               	movwf	??_sprintf+4
  2768  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  2769  02DA  022F               	subwf	(sprintf@_val+3)^(0+128),w
  2770  02DB  1D03               	skipz
  2771  02DC  2AED               	goto	u2935
  2772  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  2773  02DE  0859               	movf	??_sprintf+3,w
  2774  02DF  1683               	bsf	3,5	;RP0=1, select bank1
  2775  02E0  022E               	subwf	(sprintf@_val+2)^(0+128),w
  2776  02E1  1D03               	skipz
  2777  02E2  2AED               	goto	u2935
  2778  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  2779  02E4  0858               	movf	??_sprintf+2,w
  2780  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  2781  02E6  022D               	subwf	(sprintf@_val+1)^(0+128),w
  2782  02E7  1D03               	skipz
  2783  02E8  2AED               	goto	u2935
  2784  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  2785  02EA  0857               	movf	??_sprintf+1,w
  2786  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  2787  02EC  022C               	subwf	sprintf@_val^(0+128),w
  2788  02ED                     u2935:	
  2789  02ED  1C03               	btfss	3,0
  2790  02EE  2AF4               	goto	l5582
  2791  02EF  0AB8               	incf	sprintf@c^(0+128),f
  2792  02F0  0838               	movf	sprintf@c^(0+128),w
  2793  02F1  3A0A               	xorlw	10
  2794  02F2  1D03               	skipz
  2795  02F3  2AC0               	goto	l5574
  2796  02F4                     l5582:	
  2797  02F4  0836               	movf	sprintf@prec^(0+128),w
  2798  02F5  0738               	addwf	sprintf@c^(0+128),w
  2799  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  2800  02F7  00D6               	movwf	??_sprintf
  2801  02F8  1683               	bsf	3,5	;RP0=1, select bank1
  2802  02F9  0837               	movf	(sprintf@prec+1)^(0+128),w
  2803  02FA  1803               	skipnc
  2804  02FB  0A37               	incf	(sprintf@prec+1)^(0+128),w
  2805  02FC  1BB8               	btfsc	sprintf@c^(0+128),7
  2806  02FD  3EFF               	addlw	255
  2807  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  2808  02FF  00D7               	movwf	??_sprintf+1
  2809  0300  1683               	bsf	3,5	;RP0=1, select bank1
  2810  0301  0830               	movf	sprintf@exp^(0+128),w
  2811  0302  1283               	bcf	3,5	;RP0=0, select bank0
  2812  0303  0756               	addwf	??_sprintf,w
  2813  0304  00D8               	movwf	??_sprintf+2
  2814  0305  1683               	bsf	3,5	;RP0=1, select bank1
  2815  0306  0831               	movf	(sprintf@exp+1)^(0+128),w
  2816  0307  1803               	skipnc
  2817  0308  0A31               	incf	(sprintf@exp+1)^(0+128),w
  2818  0309  1283               	bcf	3,5	;RP0=0, select bank0
  2819  030A  0757               	addwf	??_sprintf+1,w
  2820  030B  00D9               	movwf	??_sprintf+3
  2821  030C  0858               	movf	??_sprintf+2,w
  2822  030D  1683               	bsf	3,5	;RP0=1, select bank1
  2823  030E  02AA               	subwf	sprintf@width^(0+128),f
  2824  030F  1283               	bcf	3,5	;RP0=0, select bank0
  2825  0310  0859               	movf	??_sprintf+3,w
  2826  0311  1683               	bsf	3,5	;RP0=1, select bank1
  2827  0312  1C03               	skipc
  2828  0313  03AB               	decf	(sprintf@width+1)^(0+128),f
  2829  0314  02AB               	subwf	(sprintf@width+1)^(0+128),f
  2830  0315  0837               	movf	(sprintf@prec+1)^(0+128),w
  2831  0316  0436               	iorwf	sprintf@prec^(0+128),w
  2832  0317  1903               	skipnz
  2833  0318  2B1D               	goto	l5588
  2834  0319  30FF               	movlw	-1
  2835  031A  07AA               	addwf	sprintf@width^(0+128),f
  2836  031B  1C03               	skipc
  2837  031C  03AB               	decf	(sprintf@width+1)^(0+128),f
  2838  031D                     l5588:	
  2839  031D  0828               	movf	sprintf@flag^(0+128),w
  2840  031E  3903               	andlw	3
  2841  031F  1D03               	btfss	3,2
  2842  0320  2B33               	goto	l5590
  2843  0321                     l5598:	
  2844  0321  082B               	movf	(sprintf@width+1)^(0+128),w
  2845  0322  3A80               	xorlw	128
  2846  0323  00FF               	movwf	127
  2847  0324  3080               	movlw	128
  2848  0325  027F               	subwf	127,w
  2849  0326  1D03               	skipz
  2850  0327  2B2A               	goto	u2975
  2851  0328  3001               	movlw	1
  2852  0329  022A               	subwf	sprintf@width^(0+128),w
  2853  032A                     u2975:	
  2854  032A  1C03               	btfss	3,0
  2855  032B  2B38               	goto	l5600
  2856  032C  27FD               	call	PL34	;select bank 1
  2857  032D  0835               	movf	sprintf@sp^(0+128),w
  2858  032E  0084               	movwf	4
  2859  032F  3020               	movlw	32
  2860  0330  1383               	bcf	3,7	;select IRP bank0
  2861  0331  0080               	movwf	0
  2862  0332  0AB5               	incf	sprintf@sp^(0+128),f
  2863  0333                     l5590:	
  2864  0333  30FF               	movlw	-1
  2865  0334  07AA               	addwf	sprintf@width^(0+128),f
  2866  0335  1C03               	skipc
  2867  0336  03AB               	decf	(sprintf@width+1)^(0+128),f
  2868  0337  2B21               	goto	l5598
  2869  0338                     l5600:	
  2870  0338  27FD               	call	PL34	;select bank 1
  2871  0339  0828               	movf	sprintf@flag^(0+128),w
  2872  033A  3903               	andlw	3
  2873  033B  1903               	btfsc	3,2
  2874  033C  2B6F               	goto	l5610
  2875  033D  0835               	movf	sprintf@sp^(0+128),w
  2876  033E  0084               	movwf	4
  2877  033F  302D               	movlw	45
  2878  0340  2B6B               	goto	L4
  2879  0341                     l5606:	
  2880  0341  2765  120A  118A   	fcall	PL4	;call to abstracted procedure
  2881  0344  275B               	fcall	PL3	;call to abstracted procedure
  2882  0345  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2883  034A  00F0               	movwf	?___lldiv
  2884  034B  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2885  0350  00F1               	movwf	?___lldiv+1
  2886  0351  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2887  0356  00F2               	movwf	?___lldiv+2
  2888  0357  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2889  035C  276D  120A  118A   	fcall	PL5	;call to abstracted procedure
  2890  035F  2673  120A  118A   	fcall	___lldiv
  2891  0362  2778  120A  118A   	fcall	PL6	;call to abstracted procedure
  2892  0365  2587  120A  118A   	fcall	___llmod
  2893  0368  27C8  120A  118A   	fcall	PL20	;call to abstracted procedure
  2894  036B                     L4:	
  2895  036B  1383               	bcf	3,7	;select IRP bank0
  2896  036C  0080               	movwf	0
  2897  036D  1683               	bsf	3,5	;RP0=1, select bank1
  2898  036E  0AB5               	incf	sprintf@sp^(0+128),f
  2899  036F                     l5610:	
  2900  036F  03B8               	decf	sprintf@c^(0+128),f
  2901  0370  0F38               	incfsz	sprintf@c^(0+128),w
  2902  0371  2B41               	goto	l5606
  2903  0372                     l5618:	
  2904  0372  0831               	movf	(sprintf@exp+1)^(0+128),w
  2905  0373  3A80               	xorlw	128
  2906  0374  00FF               	movwf	127
  2907  0375  3080               	movlw	128
  2908  0376  027F               	subwf	127,w
  2909  0377  1D03               	skipz
  2910  0378  2B7B               	goto	u3005
  2911  0379  3001               	movlw	1
  2912  037A  0230               	subwf	sprintf@exp^(0+128),w
  2913  037B                     u3005:	
  2914  037B  1C03               	btfss	3,0
  2915  037C  2B86               	goto	l5620
  2916  037D  27FD               	call	PL34	;select bank 1
  2917  037E  0835               	movf	sprintf@sp^(0+128),w
  2918  037F  27EF  120A  118A   	fcall	PL32	;call to abstracted procedure
  2919  0382  07B0               	addwf	sprintf@exp^(0+128),f
  2920  0383  1C03               	skipc
  2921  0384  03B1               	decf	(sprintf@exp+1)^(0+128),f
  2922  0385  2B72               	goto	l5618
  2923  0386                     l5620:	
  2924  0386  27FD               	call	PL34	;select bank 1
  2925  0387  0837               	movf	(sprintf@prec+1)^(0+128),w
  2926  0388  3A80               	xorlw	128
  2927  0389  00FF               	movwf	127
  2928  038A  3080               	movlw	128
  2929  038B  027F               	subwf	127,w
  2930  038C  1D03               	skipz
  2931  038D  2B90               	goto	u3015
  2932  038E  3009               	movlw	9
  2933  038F  0236               	subwf	sprintf@prec^(0+128),w
  2934  0390                     u3015:	
  2935  0390  1C03               	skipc
  2936  0391  2B95               	goto	l5624
  2937  0392  3008               	movlw	8
  2938  0393  27FD               	call	PL34	;select bank 1
  2939  0394  2B97               	goto	L2
  2940  0395                     l5624:	
  2941  0395  27FD               	call	PL34	;select bank 1
  2942  0396  0836               	movf	sprintf@prec^(0+128),w
  2943  0397                     L2:	
  2944  0397  00B8               	movwf	sprintf@c^(0+128)
  2945  0398  1283               	bcf	3,5	;RP0=0, select bank0
  2946  0399  00D6               	movwf	??_sprintf
  2947  039A  01D7               	clrf	??_sprintf+1
  2948  039B  1BD6               	btfsc	??_sprintf,7
  2949  039C  03D7               	decf	??_sprintf+1,f
  2950  039D  1683               	bsf	3,5	;RP0=1, select bank1
  2951  039E  02B6               	subwf	sprintf@prec^(0+128),f
  2952  039F  1283               	bcf	3,5	;RP0=0, select bank0
  2953  03A0  0857               	movf	??_sprintf+1,w
  2954  03A1  1683               	bsf	3,5	;RP0=1, select bank1
  2955  03A2  1C03               	skipc
  2956  03A3  03B7               	decf	(sprintf@prec+1)^(0+128),f
  2957  03A4  02B7               	subwf	(sprintf@prec+1)^(0+128),f
  2958  03A5  0838               	movf	sprintf@c^(0+128),w
  2959  03A6  1903               	btfsc	3,2
  2960  03A7  2BAE               	goto	l5630
  2961  03A8  0835               	movf	sprintf@sp^(0+128),w
  2962  03A9  0084               	movwf	4
  2963  03AA  302E               	movlw	46
  2964  03AB  1383               	bcf	3,7	;select IRP bank0
  2965  03AC  0080               	movwf	0
  2966  03AD  0AB5               	incf	sprintf@sp^(0+128),f
  2967  03AE                     l5630:	
  2968  03AE  0838               	movf	sprintf@c^(0+128),w
  2969  03AF  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  2970  03B4  083C               	movf	?_scale,w
  2971  03B5  00B0               	movwf	?___ftmul+3
  2972  03B6  083D               	movf	?_scale+1,w
  2973  03B7  00B1               	movwf	?___ftmul+4
  2974  03B8  083E               	movf	?_scale+2,w
  2975  03B9  00B2               	movwf	?___ftmul+5
  2976  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  2977  03BB  0832               	movf	sprintf@fval^(0+128),w
  2978  03BC  27B3               	fcall	PL15	;call to abstracted procedure
  2979  03BD  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2980  03C2  082D               	movf	?___ftmul,w
  2981  03C3  00A0               	movwf	?___fttol
  2982  03C4  082E               	movf	?___ftmul+1,w
  2983  03C5  00A1               	movwf	?___fttol+1
  2984  03C6  082F               	movf	?___ftmul+2,w
  2985  03C7  00A2               	movwf	?___fttol+2
  2986  03C8  2618  120A  118A   	fcall	___fttol
  2987  03CB  2782  120A  118A   	fcall	PL7	;call to abstracted procedure
  2988  03CE  2C36               	goto	L3
  2989  03CF                     l5632:	
  2990  03CF  2765  120A  118A   	fcall	PL4	;call to abstracted procedure
  2991  03D2  275B               	fcall	PL3	;call to abstracted procedure
  2992  03D3  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2993  03D8  00F0               	movwf	?___lldiv
  2994  03D9  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2995  03DE  00F1               	movwf	?___lldiv+1
  2996  03DF  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2997  03E4  00F2               	movwf	?___lldiv+2
  2998  03E5  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2999  03EA  276D  120A  118A   	fcall	PL5	;call to abstracted procedure
  3000  03ED  2673  120A  118A   	fcall	___lldiv
  3001  03F0  2778  120A  118A   	fcall	PL6	;call to abstracted procedure
  3002  03F3  2587  120A  118A   	fcall	___llmod
  3003  03F6  27C8  120A  118A   	fcall	PL20	;call to abstracted procedure
  3004  03F9  1383               	bcf	3,7	;select IRP bank0
  3005  03FA  0080               	movwf	0
  3006  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  3007  03FC  0AB5               	incf	sprintf@sp^(0+128),f
  3008  03FD  275B               	fcall	PL3	;call to abstracted procedure
  3009  03FE  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3010  0403  00A0               	movwf	?___llmod
  3011  0404  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3012  0409  00A1               	movwf	?___llmod+1
  3013  040A  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3014  040F  00A2               	movwf	?___llmod+2
  3015  0410  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3016  0415  00A3               	movwf	?___llmod+3
  3017  0416  1683               	bsf	3,5	;RP0=1, select bank1
  3018  0417  082F               	movf	(sprintf@_val+3)^(0+128),w
  3019  0418  1283               	bcf	3,5	;RP0=0, select bank0
  3020  0419  00A7               	movwf	?___llmod+7
  3021  041A  1683               	bsf	3,5	;RP0=1, select bank1
  3022  041B  082E               	movf	(sprintf@_val+2)^(0+128),w
  3023  041C  1283               	bcf	3,5	;RP0=0, select bank0
  3024  041D  00A6               	movwf	?___llmod+6
  3025  041E  1683               	bsf	3,5	;RP0=1, select bank1
  3026  041F  082D               	movf	(sprintf@_val+1)^(0+128),w
  3027  0420  1283               	bcf	3,5	;RP0=0, select bank0
  3028  0421  00A5               	movwf	?___llmod+5
  3029  0422  1683               	bsf	3,5	;RP0=1, select bank1
  3030  0423  082C               	movf	sprintf@_val^(0+128),w
  3031  0424  1283               	bcf	3,5	;RP0=0, select bank0
  3032  0425  00A4               	movwf	?___llmod+4
  3033  0426  2587  120A  118A   	fcall	___llmod
  3034  0429  0823               	movf	?___llmod+3,w
  3035  042A  1683               	bsf	3,5	;RP0=1, select bank1
  3036  042B  00AF               	movwf	(sprintf@_val+3)^(0+128)
  3037  042C  1283               	bcf	3,5	;RP0=0, select bank0
  3038  042D  0822               	movf	?___llmod+2,w
  3039  042E  1683               	bsf	3,5	;RP0=1, select bank1
  3040  042F  00AE               	movwf	(sprintf@_val+2)^(0+128)
  3041  0430  1283               	bcf	3,5	;RP0=0, select bank0
  3042  0431  0821               	movf	?___llmod+1,w
  3043  0432  1683               	bsf	3,5	;RP0=1, select bank1
  3044  0433  00AD               	movwf	(sprintf@_val+1)^(0+128)
  3045  0434  1283               	bcf	3,5	;RP0=0, select bank0
  3046  0435  0820               	movf	?___llmod,w
  3047  0436                     L3:	
  3048  0436  1683               	bsf	3,5	;RP0=1, select bank1
  3049  0437  00AC               	movwf	sprintf@_val^(0+128)
  3050  0438  03B8               	decf	sprintf@c^(0+128),f
  3051  0439  0F38               	incfsz	sprintf@c^(0+128),w
  3052  043A  2BCF               	goto	l5632
  3053  043B                     l5646:	
  3054  043B  0837               	movf	(sprintf@prec+1)^(0+128),w
  3055  043C  0436               	iorwf	sprintf@prec^(0+128),w
  3056  043D  1903               	btfsc	3,2
  3057  043E  2866               	goto	l5728
  3058  043F  0835               	movf	sprintf@sp^(0+128),w
  3059  0440  27EF  120A  118A   	fcall	PL32	;call to abstracted procedure
  3060  0443  07B6               	addwf	sprintf@prec^(0+128),f
  3061  0444  1C03               	skipc
  3062  0445  03B7               	decf	(sprintf@prec+1)^(0+128),f
  3063  0446  2C3B               	goto	l5646
  3064  0447                     l5648:	
  3065  0447  1683               	bsf	3,5	;RP0=1, select bank1
  3066  0448  0824               	movf	sprintf@ap^(0+128),w
  3067  0449  0084               	movwf	4
  3068  044A  1383               	bcf	3,7	;select IRP bank0
  3069  044B  27F6  120A  118A   	fcall	PL33	;call to abstracted procedure
  3070  044E  0856               	movf	??_sprintf,w
  3071  044F  1683               	bsf	3,5	;RP0=1, select bank1
  3072  0450  00AC               	movwf	sprintf@_val^(0+128)
  3073  0451  1283               	bcf	3,5	;RP0=0, select bank0
  3074  0452  0857               	movf	??_sprintf+1,w
  3075  0453  1683               	bsf	3,5	;RP0=1, select bank1
  3076  0454  00AD               	movwf	(sprintf@_val+1)^(0+128)
  3077  0455  3000               	movlw	0
  3078  0456  1BAD               	btfsc	(sprintf@_val+1)^(0+128),7
  3079  0457  30FF               	movlw	255
  3080  0458  00AE               	movwf	(sprintf@_val+2)^(0+128)
  3081  0459  00AF               	movwf	(sprintf@_val+3)^(0+128)
  3082  045A  0AA4               	incf	sprintf@ap^(0+128),f
  3083  045B  0AA4               	incf	sprintf@ap^(0+128),f
  3084  045C  1FAF               	btfss	(sprintf@_val+3)^(0+128),7
  3085  045D  2C6B               	goto	l5658
  3086  045E  3003               	movlw	3
  3087  045F  04A8               	iorwf	sprintf@flag^(0+128),f
  3088  0460  09AC               	comf	sprintf@_val^(0+128),f
  3089  0461  09AD               	comf	(sprintf@_val+1)^(0+128),f
  3090  0462  09AE               	comf	(sprintf@_val+2)^(0+128),f
  3091  0463  09AF               	comf	(sprintf@_val+3)^(0+128),f
  3092  0464  0AAC               	incf	sprintf@_val^(0+128),f
  3093  0465  1903               	skipnz
  3094  0466  0AAD               	incf	(sprintf@_val+1)^(0+128),f
  3095  0467  1903               	skipnz
  3096  0468  0AAE               	incf	(sprintf@_val+2)^(0+128),f
  3097  0469  1903               	skipnz
  3098  046A  0AAF               	incf	(sprintf@_val+3)^(0+128),f
  3099  046B                     l5658:	
  3100  046B  0837               	movf	(sprintf@prec+1)^(0+128),w
  3101  046C  0436               	iorwf	sprintf@prec^(0+128),w
  3102  046D  1D03               	skipz
  3103  046E  2C77               	goto	l5664
  3104  046F  082F               	movf	(sprintf@_val+3)^(0+128),w
  3105  0470  042E               	iorwf	(sprintf@_val+2)^(0+128),w
  3106  0471  042D               	iorwf	(sprintf@_val+1)^(0+128),w
  3107  0472  042C               	iorwf	sprintf@_val^(0+128),w
  3108  0473  1903               	btfsc	3,2
  3109  0474  0AB6               	incf	sprintf@prec^(0+128),f
  3110  0475  1903               	skipnz
  3111  0476  0AB7               	incf	(sprintf@prec+1)^(0+128),f
  3112  0477                     l5664:	
  3113  0477  01B8               	clrf	sprintf@c^(0+128)
  3114  0478  0AB8               	incf	sprintf@c^(0+128),f
  3115  0479                     l5670:	
  3116  0479  275B               	fcall	PL3	;call to abstracted procedure
  3117  047A  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3118  047F  00D7               	movwf	??_sprintf+1
  3119  0480  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3120  0485  00D8               	movwf	??_sprintf+2
  3121  0486  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3122  048B  00D9               	movwf	??_sprintf+3
  3123  048C  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3124  0491  00DA               	movwf	??_sprintf+4
  3125  0492  1683               	bsf	3,5	;RP0=1, select bank1
  3126  0493  022F               	subwf	(sprintf@_val+3)^(0+128),w
  3127  0494  1D03               	skipz
  3128  0495  2CA6               	goto	u3085
  3129  0496  1283               	bcf	3,5	;RP0=0, select bank0
  3130  0497  0859               	movf	??_sprintf+3,w
  3131  0498  1683               	bsf	3,5	;RP0=1, select bank1
  3132  0499  022E               	subwf	(sprintf@_val+2)^(0+128),w
  3133  049A  1D03               	skipz
  3134  049B  2CA6               	goto	u3085
  3135  049C  1283               	bcf	3,5	;RP0=0, select bank0
  3136  049D  0858               	movf	??_sprintf+2,w
  3137  049E  1683               	bsf	3,5	;RP0=1, select bank1
  3138  049F  022D               	subwf	(sprintf@_val+1)^(0+128),w
  3139  04A0  1D03               	skipz
  3140  04A1  2CA6               	goto	u3085
  3141  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  3142  04A3  0857               	movf	??_sprintf+1,w
  3143  04A4  1683               	bsf	3,5	;RP0=1, select bank1
  3144  04A5  022C               	subwf	sprintf@_val^(0+128),w
  3145  04A6                     u3085:	
  3146  04A6  1C03               	btfss	3,0
  3147  04A7  2CAD               	goto	l5678
  3148  04A8  0AB8               	incf	sprintf@c^(0+128),f
  3149  04A9  0838               	movf	sprintf@c^(0+128),w
  3150  04AA  3A0A               	xorlw	10
  3151  04AB  1D03               	skipz
  3152  04AC  2C79               	goto	l5670
  3153  04AD                     l5678:	
  3154  04AD  0838               	movf	sprintf@c^(0+128),w
  3155  04AE  27BE  120A  118A   	fcall	PL19	;call to abstracted procedure
  3156  04B1  0837               	movf	(sprintf@prec+1)^(0+128),w
  3157  04B2  3A80               	xorlw	128
  3158  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  3159  04B4  0258               	subwf	??_sprintf+2,w
  3160  04B5  1D03               	skipz
  3161  04B6  2CBB               	goto	u3105
  3162  04B7  1683               	bsf	3,5	;RP0=1, select bank1
  3163  04B8  0836               	movf	sprintf@prec^(0+128),w
  3164  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  3165  04BA  0256               	subwf	??_sprintf,w
  3166  04BB                     u3105:	
  3167  04BB  1803               	skipnc
  3168  04BC  2CC1               	goto	l5682
  3169  04BD  27FD               	call	PL34	;select bank 1
  3170  04BE  0836               	movf	sprintf@prec^(0+128),w
  3171  04BF  00B8               	movwf	sprintf@c^(0+128)
  3172  04C0  2CD9               	goto	l5686
  3173  04C1                     l5682:	
  3174  04C1  1683               	bsf	3,5	;RP0=1, select bank1
  3175  04C2  27D1  120A  118A   	fcall	PL21	;call to abstracted procedure
  3176  04C5  0837               	movf	(sprintf@prec+1)^(0+128),w
  3177  04C6  3A80               	xorlw	128
  3178  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  3179  04C8  00D8               	movwf	??_sprintf+2
  3180  04C9  0857               	movf	??_sprintf+1,w
  3181  04CA  3A80               	xorlw	128
  3182  04CB  0258               	subwf	??_sprintf+2,w
  3183  04CC  1D03               	skipz
  3184  04CD  2CD1               	goto	u3115
  3185  04CE  0856               	movf	??_sprintf,w
  3186  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  3187  04D0  0236               	subwf	sprintf@prec^(0+128),w
  3188  04D1                     u3115:	
  3189  04D1  1803               	skipnc
  3190  04D2  2CD9               	goto	l5686
  3191  04D3  27FD               	call	PL34	;select bank 1
  3192  04D4  0838               	movf	sprintf@c^(0+128),w
  3193  04D5  00B6               	movwf	sprintf@prec^(0+128)
  3194  04D6  01B7               	clrf	(sprintf@prec+1)^(0+128)
  3195  04D7  1BB6               	btfsc	sprintf@prec^(0+128),7
  3196  04D8  03B7               	decf	(sprintf@prec+1)^(0+128),f
  3197  04D9                     l5686:	
  3198  04D9  27FD               	call	PL34	;select bank 1
  3199  04DA  082B               	movf	(sprintf@width+1)^(0+128),w
  3200  04DB  042A               	iorwf	sprintf@width^(0+128),w
  3201  04DC  1903               	skipnz
  3202  04DD  2CE6               	goto	l5692
  3203  04DE  0828               	movf	sprintf@flag^(0+128),w
  3204  04DF  3903               	andlw	3
  3205  04E0  1903               	btfsc	3,2
  3206  04E1  2CE6               	goto	l5692
  3207  04E2  30FF               	movlw	-1
  3208  04E3  07AA               	addwf	sprintf@width^(0+128),f
  3209  04E4  1C03               	skipc
  3210  04E5  03AB               	decf	(sprintf@width+1)^(0+128),f
  3211  04E6                     l5692:	
  3212  04E6  1F29               	btfss	(sprintf@flag+1)^(0+128),6
  3213  04E7  2D03               	goto	l5700
  3214  04E8  0837               	movf	(sprintf@prec+1)^(0+128),w
  3215  04E9  3A80               	xorlw	128
  3216  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  3217  04EB  00D6               	movwf	??_sprintf
  3218  04EC  1683               	bsf	3,5	;RP0=1, select bank1
  3219  04ED  082B               	movf	(sprintf@width+1)^(0+128),w
  3220  04EE  3A80               	xorlw	128
  3221  04EF  1283               	bcf	3,5	;RP0=0, select bank0
  3222  04F0  0256               	subwf	??_sprintf,w
  3223  04F1  1D03               	skipz
  3224  04F2  2CF6               	goto	u3155
  3225  04F3  1683               	bsf	3,5	;RP0=1, select bank1
  3226  04F4  082A               	movf	sprintf@width^(0+128),w
  3227  04F5  0236               	subwf	sprintf@prec^(0+128),w
  3228  04F6                     u3155:	
  3229  04F6  1803               	skipnc
  3230  04F7  2D00               	goto	l5698
  3231  04F8  27FD               	call	PL34	;select bank 1
  3232  04F9  0836               	movf	sprintf@prec^(0+128),w
  3233  04FA  02AA               	subwf	sprintf@width^(0+128),f
  3234  04FB  0837               	movf	(sprintf@prec+1)^(0+128),w
  3235  04FC  1C03               	skipc
  3236  04FD  03AB               	decf	(sprintf@width+1)^(0+128),f
  3237  04FE  02AB               	subwf	(sprintf@width+1)^(0+128),f
  3238  04FF  2D03               	goto	l5700
  3239  0500                     l5698:	
  3240  0500  27FD               	call	PL34	;select bank 1
  3241  0501  01AA               	clrf	sprintf@width^(0+128)
  3242  0502  01AB               	clrf	(sprintf@width+1)^(0+128)
  3243  0503                     l5700:	
  3244  0503  0838               	movf	sprintf@c^(0+128),w
  3245  0504  27BE  120A  118A   	fcall	PL19	;call to abstracted procedure
  3246  0507  082B               	movf	(sprintf@width+1)^(0+128),w
  3247  0508  3A80               	xorlw	128
  3248  0509  1283               	bcf	3,5	;RP0=0, select bank0
  3249  050A  0258               	subwf	??_sprintf+2,w
  3250  050B  1D03               	skipz
  3251  050C  2D11               	goto	u3165
  3252  050D  1683               	bsf	3,5	;RP0=1, select bank1
  3253  050E  082A               	movf	sprintf@width^(0+128),w
  3254  050F  1283               	bcf	3,5	;RP0=0, select bank0
  3255  0510  0256               	subwf	??_sprintf,w
  3256  0511                     u3165:	
  3257  0511  1803               	skipnc
  3258  0512  2D1F               	goto	l5704
  3259  0513  1683               	bsf	3,5	;RP0=1, select bank1
  3260  0514  27D1  120A  118A   	fcall	PL21	;call to abstracted procedure
  3261  0517  02AA               	subwf	sprintf@width^(0+128),f
  3262  0518  1283               	bcf	3,5	;RP0=0, select bank0
  3263  0519  0857               	movf	??_sprintf+1,w
  3264  051A  1683               	bsf	3,5	;RP0=1, select bank1
  3265  051B  1C03               	skipc
  3266  051C  03AB               	decf	(sprintf@width+1)^(0+128),f
  3267  051D  02AB               	subwf	(sprintf@width+1)^(0+128),f
  3268  051E  2D22               	goto	l5706
  3269  051F                     l5704:	
  3270  051F  27FD               	call	PL34	;select bank 1
  3271  0520  01AA               	clrf	sprintf@width^(0+128)
  3272  0521  01AB               	clrf	(sprintf@width+1)^(0+128)
  3273  0522                     l5706:	
  3274  0522  082B               	movf	(sprintf@width+1)^(0+128),w
  3275  0523  042A               	iorwf	sprintf@width^(0+128),w
  3276  0524  1903               	skipnz
  3277  0525  2D34               	goto	l5714
  3278  0526                     l5708:	
  3279  0526  0835               	movf	sprintf@sp^(0+128),w
  3280  0527  0084               	movwf	4
  3281  0528  3020               	movlw	32
  3282  0529  1383               	bcf	3,7	;select IRP bank0
  3283  052A  0080               	movwf	0
  3284  052B  30FF               	movlw	-1
  3285  052C  0AB5               	incf	sprintf@sp^(0+128),f
  3286  052D  07AA               	addwf	sprintf@width^(0+128),f
  3287  052E  1C03               	skipc
  3288  052F  03AB               	decf	(sprintf@width+1)^(0+128),f
  3289  0530  082B               	movf	(sprintf@width+1)^(0+128),w
  3290  0531  042A               	iorwf	sprintf@width^(0+128),w
  3291  0532  1D03               	skipz
  3292  0533  2D26               	goto	l5708
  3293  0534                     l5714:	
  3294  0534  0828               	movf	sprintf@flag^(0+128),w
  3295  0535  3903               	andlw	3
  3296  0536  1903               	btfsc	3,2
  3297  0537  2D3E               	goto	l5726
  3298  0538  0835               	movf	sprintf@sp^(0+128),w
  3299  0539  0084               	movwf	4
  3300  053A  302D               	movlw	45
  3301  053B                     L5:	
  3302  053B  1383               	bcf	3,7	;select IRP bank0
  3303  053C  0080               	movwf	0
  3304  053D  0AB5               	incf	sprintf@sp^(0+128),f
  3305  053E                     l5726:	
  3306  053E  30FF               	movlw	-1
  3307  053F  07B6               	addwf	sprintf@prec^(0+128),f
  3308  0540  1C03               	skipc
  3309  0541  03B7               	decf	(sprintf@prec+1)^(0+128),f
  3310  0542  0A36               	incf	sprintf@prec^(0+128),w
  3311  0543  1903               	skipnz
  3312  0544  0A37               	incf	(sprintf@prec+1)^(0+128),w
  3313  0545  1903               	btfsc	3,2
  3314  0546  2866               	goto	l5728
  3315  0547  300A               	movlw	10
  3316  0548  1283               	bcf	3,5	;RP0=0, select bank0
  3317  0549  00A0               	movwf	?___llmod
  3318  054A  01A1               	clrf	?___llmod+1
  3319  054B  01A2               	clrf	?___llmod+2
  3320  054C  01A3               	clrf	?___llmod+3
  3321  054D  1683               	bsf	3,5	;RP0=1, select bank1
  3322  054E  0836               	movf	sprintf@prec^(0+128),w
  3323  054F  1283               	bcf	3,5	;RP0=0, select bank0
  3324  0550  00D6               	movwf	??_sprintf
  3325  0551  1003               	clrc
  3326  0552  0DD6               	rlf	??_sprintf,f
  3327  0553  1003               	clrc
  3328  0554  0D56               	rlf	??_sprintf,w
  3329  0555  3E4F               	addlw	low (_dpowers-__stringbase)
  3330  0556  0084               	movwf	4
  3331  0557  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3332  055C  00F0               	movwf	?___lldiv
  3333  055D  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3334  0562  00F1               	movwf	?___lldiv+1
  3335  0563  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3336  0568  00F2               	movwf	?___lldiv+2
  3337  0569  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3338  056E  276D  120A  118A   	fcall	PL5	;call to abstracted procedure
  3339  0571  2673  120A  118A   	fcall	___lldiv
  3340  0574  2778  120A  118A   	fcall	PL6	;call to abstracted procedure
  3341  0577  2587  120A  118A   	fcall	___llmod
  3342  057A  0820               	movf	?___llmod,w
  3343  057B  3E30               	addlw	48
  3344  057C  1683               	bsf	3,5	;RP0=1, select bank1
  3345  057D  00B8               	movwf	sprintf@c^(0+128)
  3346  057E  0835               	movf	sprintf@sp^(0+128),w
  3347  057F  0084               	movwf	4
  3348  0580  0838               	movf	sprintf@c^(0+128),w
  3349  0581  2D3B               	goto	L5
  3350  0582                     l5730:	
  3351  0582  0835               	movf	sprintf@sp^(0+128),w
  3352  0583  0084               	movwf	4
  3353  0584  1383               	bcf	3,7	;select IRP bank0
  3354  0585  0180               	clrf	0
  3355  0586  0008               	return
  3356  0587                     __end_of_sprintf:	
  3357  0587                     __ptext517:	
  3358 ;; =============== function ___ftneg ends ============
  3359                           
  3360                           
  3361 ;; *************** function ___llmod *****************
  3362 ;; Defined at:
  3363 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\llmod.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;  divisor         4    0[BANK0 ] unsigned long 
  3366 ;;  dividend        4    4[BANK0 ] unsigned long 
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;  counter         1   13[COMMON] unsigned char 
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  4    0[BANK0 ] unsigned long 
  3371 ;; Registers used:
  3372 ;;		wreg, status,2, status,0
  3373 ;; Tracked objects:
  3374 ;;		On entry : 60/0
  3375 ;;		On exit  : 60/0
  3376 ;;		Unchanged: FFF9F/0
  3377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3378 ;;      Params:         0       8       0       0       0
  3379 ;;      Locals:         1       0       0       0       0
  3380 ;;      Temps:          0       0       0       0       0
  3381 ;;      Totals:         1       8       0       0       0
  3382 ;;Total ram usage:        9 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; This function calls:
  3385 ;;		Nothing
  3386 ;; This function is called by:
  3387 ;;		_sprintf
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390  0587                     ___llmod:	
  3391                           
  3392                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3393  0587  0823               	movf	___llmod@divisor+3,w
  3394  0588  0422               	iorwf	___llmod@divisor+2,w
  3395  0589  0421               	iorwf	___llmod@divisor+1,w
  3396  058A  0420               	iorwf	___llmod@divisor,w
  3397  058B  1903               	skipnz
  3398  058C  2DBC               	goto	l5102
  3399  058D  01FD               	clrf	___llmod@counter
  3400  058E                     L12:	
  3401  058E  0AFD               	incf	___llmod@counter,f
  3402  058F  1BA3               	btfsc	___llmod@divisor+3,7
  3403  0590  2D97               	goto	l5094
  3404  0591  1003               	clrc
  3405  0592  0DA0               	rlf	___llmod@divisor,f
  3406  0593  0DA1               	rlf	___llmod@divisor+1,f
  3407  0594  0DA2               	rlf	___llmod@divisor+2,f
  3408  0595  0DA3               	rlf	___llmod@divisor+3,f
  3409  0596  2D8E               	goto	L12
  3410  0597                     l5094:	
  3411  0597  0823               	movf	___llmod@divisor+3,w
  3412  0598  0227               	subwf	___llmod@dividend+3,w
  3413  0599  1D03               	skipz
  3414  059A  2DA5               	goto	u2195
  3415  059B  0822               	movf	___llmod@divisor+2,w
  3416  059C  0226               	subwf	___llmod@dividend+2,w
  3417  059D  1D03               	skipz
  3418  059E  2DA5               	goto	u2195
  3419  059F  0821               	movf	___llmod@divisor+1,w
  3420  05A0  0225               	subwf	___llmod@dividend+1,w
  3421  05A1  1D03               	skipz
  3422  05A2  2DA5               	goto	u2195
  3423  05A3  0820               	movf	___llmod@divisor,w
  3424  05A4  0224               	subwf	___llmod@dividend,w
  3425  05A5                     u2195:	
  3426  05A5  1C03               	skipc
  3427  05A6  2DB6               	goto	L13
  3428  05A7  0820               	movf	___llmod@divisor,w
  3429  05A8  02A4               	subwf	___llmod@dividend,f
  3430  05A9  0821               	movf	___llmod@divisor+1,w
  3431  05AA  1C03               	skipc
  3432  05AB  0F21               	incfsz	___llmod@divisor+1,w
  3433  05AC  02A5               	subwf	___llmod@dividend+1,f
  3434  05AD  0822               	movf	___llmod@divisor+2,w
  3435  05AE  1C03               	skipc
  3436  05AF  0F22               	incfsz	___llmod@divisor+2,w
  3437  05B0  02A6               	subwf	___llmod@dividend+2,f
  3438  05B1  0823               	movf	___llmod@divisor+3,w
  3439  05B2  1C03               	skipc
  3440  05B3  0F23               	incfsz	___llmod@divisor+3,w
  3441  05B4  02A7               	subwf	___llmod@dividend+3,f
  3442  05B5  1003               	clrc
  3443  05B6                     L13:	
  3444  05B6  0CA3               	rrf	___llmod@divisor+3,f
  3445  05B7  0CA2               	rrf	___llmod@divisor+2,f
  3446  05B8  0CA1               	rrf	___llmod@divisor+1,f
  3447  05B9  0CA0               	rrf	___llmod@divisor,f
  3448  05BA  0BFD               	decfsz	___llmod@counter,f
  3449  05BB  2D97               	goto	l5094
  3450  05BC                     l5102:	
  3451  05BC  0827               	movf	___llmod@dividend+3,w
  3452  05BD  00A3               	movwf	?___llmod+3
  3453  05BE  0826               	movf	___llmod@dividend+2,w
  3454  05BF  00A2               	movwf	?___llmod+2
  3455  05C0  0825               	movf	___llmod@dividend+1,w
  3456  05C1  00A1               	movwf	?___llmod+1
  3457  05C2  0824               	movf	___llmod@dividend,w
  3458  05C3  00A0               	movwf	?___llmod
  3459  05C4  0008               	return
  3460  05C5                     __end_of___llmod:	
  3461  05C5                     __ptext515:	
  3462 ;; =============== function ___lldiv ends ============
  3463                           
  3464                           
  3465 ;; *************** function ___ftge *****************
  3466 ;; Defined at:
  3467 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftge.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;  ff1             3    0[COMMON] float 
  3470 ;;  ff2             3    3[COMMON] float 
  3471 ;; Auto vars:     Size  Location     Type
  3472 ;;		None
  3473 ;; Return value:  Size  Location     Type
  3474 ;;		None               void
  3475 ;; Registers used:
  3476 ;;		wreg, status,2, status,0
  3477 ;; Tracked objects:
  3478 ;;		On entry : 60/20
  3479 ;;		On exit  : 60/20
  3480 ;;		Unchanged: FFF9F/0
  3481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3482 ;;      Params:         6       0       0       0       0
  3483 ;;      Locals:         0       0       0       0       0
  3484 ;;      Temps:          0       0       0       0       0
  3485 ;;      Totals:         6       0       0       0       0
  3486 ;;Total ram usage:        6 bytes
  3487 ;; Hardware stack levels used:    1
  3488 ;; This function calls:
  3489 ;;		Nothing
  3490 ;; This function is called by:
  3491 ;;		_sprintf
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494  05C5                     ___ftge:	
  3495                           
  3496                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3497  05C5  1FF2               	btfss	___ftge@ff1+2,7
  3498  05C6  2DD4               	goto	l5118
  3499  05C7  0870               	movf	___ftge@ff1,w
  3500  05C8  3C00               	sublw	0
  3501  05C9  00F0               	movwf	___ftge@ff1
  3502  05CA  0871               	movf	___ftge@ff1+1,w
  3503  05CB  1C03               	skipc
  3504  05CC  0F71               	incfsz	___ftge@ff1+1,w
  3505  05CD  3C00               	sublw	0
  3506  05CE  00F1               	movwf	___ftge@ff1+1
  3507  05CF  0872               	movf	___ftge@ff1+2,w
  3508  05D0  1C03               	skipc
  3509  05D1  0F72               	incfsz	___ftge@ff1+2,w
  3510  05D2  3C80               	sublw	128
  3511  05D3  00F2               	movwf	___ftge@ff1+2
  3512  05D4                     l5118:	
  3513  05D4  1FF5               	btfss	___ftge@ff2+2,7
  3514  05D5  2DE3               	goto	l5122
  3515  05D6  0873               	movf	___ftge@ff2,w
  3516  05D7  3C00               	sublw	0
  3517  05D8  00F3               	movwf	___ftge@ff2
  3518  05D9  0874               	movf	___ftge@ff2+1,w
  3519  05DA  1C03               	skipc
  3520  05DB  0F74               	incfsz	___ftge@ff2+1,w
  3521  05DC  3C00               	sublw	0
  3522  05DD  00F4               	movwf	___ftge@ff2+1
  3523  05DE  0875               	movf	___ftge@ff2+2,w
  3524  05DF  1C03               	skipc
  3525  05E0  0F75               	incfsz	___ftge@ff2+2,w
  3526  05E1  3C80               	sublw	128
  3527  05E2  00F5               	movwf	___ftge@ff2+2
  3528  05E3                     l5122:	
  3529  05E3  3080               	movlw	128
  3530  05E4  06F2               	xorwf	___ftge@ff1+2,f
  3531  05E5  06F5               	xorwf	___ftge@ff2+2,f
  3532  05E6  0875               	movf	___ftge@ff2+2,w
  3533  05E7  0272               	subwf	___ftge@ff1+2,w
  3534  05E8  1D03               	skipz
  3535  05E9  0008               	return
  3536  05EA  0874               	movf	___ftge@ff2+1,w
  3537  05EB  0271               	subwf	___ftge@ff1+1,w
  3538  05EC  1D03               	skipz
  3539  05ED  0008               	return
  3540  05EE  0873               	movf	___ftge@ff2,w
  3541  05EF  0270               	subwf	___ftge@ff1,w
  3542  05F0  0008               	return
  3543  05F1                     __end_of___ftge:	
  3544  05F1                     __ptext527:	
  3545 ;; =============== function __tdiv_to_l_ ends ============
  3546                           
  3547                           
  3548 ;; *************** function _isdigit *****************
  3549 ;; Defined at:
  3550 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\isdigit.c"
  3551 ;; Parameters:    Size  Location     Type
  3552 ;;  c               1    wreg     unsigned char 
  3553 ;; Auto vars:     Size  Location     Type
  3554 ;;  c               1    1[COMMON] unsigned char 
  3555 ;; Return value:  Size  Location     Type
  3556 ;;		None               void
  3557 ;; Registers used:
  3558 ;;		wreg, status,2, status,0
  3559 ;; Tracked objects:
  3560 ;;		On entry : 60/0
  3561 ;;		On exit  : 60/0
  3562 ;;		Unchanged: FFF9F/0
  3563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3564 ;;      Params:         0       0       0       0       0
  3565 ;;      Locals:         2       0       0       0       0
  3566 ;;      Temps:          0       0       0       0       0
  3567 ;;      Totals:         2       0       0       0       0
  3568 ;;Total ram usage:        2 bytes
  3569 ;; Hardware stack levels used:    1
  3570 ;; This function calls:
  3571 ;;		Nothing
  3572 ;; This function is called by:
  3573 ;;		_sprintf
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576  05F1                     _isdigit:	
  3577                           
  3578                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3579                           ;isdigit@c stored from wreg
  3580  05F1  00F1               	movwf	isdigit@c
  3581  05F2  303A               	movlw	58
  3582  05F3  01F0               	clrf	_isdigit$2405
  3583  05F4  0271               	subwf	isdigit@c,w
  3584  05F5  1803               	skipnc
  3585  05F6  2DFD               	goto	l4804
  3586  05F7  3030               	movlw	48
  3587  05F8  0271               	subwf	isdigit@c,w
  3588  05F9  1C03               	skipc
  3589  05FA  2DFD               	goto	l4804
  3590  05FB  01F0               	clrf	_isdigit$2405
  3591  05FC  0AF0               	incf	_isdigit$2405,f
  3592  05FD                     l4804:	
  3593  05FD  0C70               	rrf	_isdigit$2405,w
  3594  05FE  0008               	return
  3595  05FF                     __end_of_isdigit:	
  3596  05FF                     __ptext523:	
  3597 ;; =============== function ___lbdiv ends ============
  3598                           
  3599                           
  3600 ;; *************** function ___wmul *****************
  3601 ;; Defined at:
  3602 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\wmul.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;  multiplier      2    0[COMMON] unsigned int 
  3605 ;;  multiplicand    2    2[COMMON] unsigned int 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  product         2    4[COMMON] unsigned int 
  3608 ;; Return value:  Size  Location     Type
  3609 ;;                  2    0[COMMON] unsigned int 
  3610 ;; Registers used:
  3611 ;;		wreg, status,2, status,0
  3612 ;; Tracked objects:
  3613 ;;		On entry : 60/20
  3614 ;;		On exit  : 60/20
  3615 ;;		Unchanged: FFF9F/0
  3616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3617 ;;      Params:         4       0       0       0       0
  3618 ;;      Locals:         2       0       0       0       0
  3619 ;;      Temps:          0       0       0       0       0
  3620 ;;      Totals:         6       0       0       0       0
  3621 ;;Total ram usage:        6 bytes
  3622 ;; Hardware stack levels used:    1
  3623 ;; This function calls:
  3624 ;;		Nothing
  3625 ;; This function is called by:
  3626 ;;		_fround
  3627 ;;		_scale
  3628 ;;		_sprintf
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631  05FF                     ___wmul:	
  3632                           
  3633                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3634  05FF  01F4               	clrf	___wmul@product
  3635  0600  01F5               	clrf	___wmul@product+1
  3636  0601                     l4920:	
  3637  0601  1C70               	btfss	___wmul@multiplier,0
  3638  0602  2E09               	goto	l4924
  3639  0603  0872               	movf	___wmul@multiplicand,w
  3640  0604  07F4               	addwf	___wmul@product,f
  3641  0605  1803               	skipnc
  3642  0606  0AF5               	incf	___wmul@product+1,f
  3643  0607  0873               	movf	___wmul@multiplicand+1,w
  3644  0608  07F5               	addwf	___wmul@product+1,f
  3645  0609                     l4924:	
  3646  0609  1003               	clrc
  3647  060A  0DF2               	rlf	___wmul@multiplicand,f
  3648  060B  0DF3               	rlf	___wmul@multiplicand+1,f
  3649  060C  1003               	clrc
  3650  060D  0CF1               	rrf	___wmul@multiplier+1,f
  3651  060E  0CF0               	rrf	___wmul@multiplier,f
  3652  060F  0871               	movf	___wmul@multiplier+1,w
  3653  0610  0470               	iorwf	___wmul@multiplier,w
  3654  0611  1D03               	skipz
  3655  0612  2E01               	goto	l4920
  3656  0613  0875               	movf	___wmul@product+1,w
  3657  0614  00F1               	movwf	?___wmul+1
  3658  0615  0874               	movf	___wmul@product,w
  3659  0616  00F0               	movwf	?___wmul
  3660  0617  0008               	return
  3661  0618                     __end_of___wmul:	
  3662  0618                     __ptext519:	
  3663 ;; =============== function ___awdiv ends ============
  3664                           
  3665                           
  3666 ;; *************** function ___fttol *****************
  3667 ;; Defined at:
  3668 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\fttol.c"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;  f1              3    0[BANK0 ] float 
  3671 ;; Auto vars:     Size  Location     Type
  3672 ;;  lval            4    8[BANK0 ] unsigned long 
  3673 ;;  exp1            1   12[BANK0 ] unsigned char 
  3674 ;;  sign1           1    7[BANK0 ] unsigned char 
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  4    0[BANK0 ] long 
  3677 ;; Registers used:
  3678 ;;		wreg, status,2, status,0
  3679 ;; Tracked objects:
  3680 ;;		On entry : 60/0
  3681 ;;		On exit  : 60/0
  3682 ;;		Unchanged: FFF9F/0
  3683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3684 ;;      Params:         0       4       0       0       0
  3685 ;;      Locals:         0       6       0       0       0
  3686 ;;      Temps:          0       3       0       0       0
  3687 ;;      Totals:         0      13       0       0       0
  3688 ;;Total ram usage:       13 bytes
  3689 ;; Hardware stack levels used:    1
  3690 ;; This function calls:
  3691 ;;		Nothing
  3692 ;; This function is called by:
  3693 ;;		_sprintf
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696  0618                     ___fttol:	
  3697                           
  3698                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3699  0618  27E8  120A  118A   	fcall	PL30	;call to abstracted procedure
  3700  061B  1003               	clrc
  3701  061C  0D25               	rlf	??___fttol+1,w
  3702  061D  0D26               	rlf	??___fttol+2,w
  3703  061E  00AC               	movwf	___fttol@exp1
  3704  061F  08AC               	movf	___fttol@exp1,f
  3705  0620  1D03               	skipz
  3706  0621  2E27               	goto	l5008
  3707  0622                     l5006:	
  3708  0622  01A0               	clrf	?___fttol
  3709  0623  01A1               	clrf	?___fttol+1
  3710  0624  01A2               	clrf	?___fttol+2
  3711  0625  01A3               	clrf	?___fttol+3
  3712  0626  0008               	return
  3713  0627                     l5008:	
  3714  0627  27E8  120A  118A   	fcall	PL30	;call to abstracted procedure
  3715  062A  3017               	movlw	23
  3716  062B                     u2035:	
  3717  062B  1003               	clrc
  3718  062C  0CA6               	rrf	??___fttol+2,f
  3719  062D  0CA5               	rrf	??___fttol+1,f
  3720  062E  0CA4               	rrf	??___fttol,f
  3721  062F  3EFF               	addlw	-1
  3722  0630  1D03               	skipz
  3723  0631  2E2B               	goto	u2035
  3724  0632  0824               	movf	??___fttol,w
  3725  0633  00A7               	movwf	___fttol@sign1
  3726  0634  17A1               	bsf	___fttol@f1+1,7
  3727  0635  01A2               	clrf	___fttol@f1+2
  3728  0636  0820               	movf	___fttol@f1,w
  3729  0637  00A8               	movwf	___fttol@lval
  3730  0638  0821               	movf	___fttol@f1+1,w
  3731  0639  00A9               	movwf	___fttol@lval+1
  3732  063A  0822               	movf	___fttol@f1+2,w
  3733  063B  00AA               	movwf	___fttol@lval+2
  3734  063C  308E               	movlw	142
  3735  063D  01AB               	clrf	___fttol@lval+3
  3736  063E  02AC               	subwf	___fttol@exp1,f
  3737  063F  1FAC               	btfss	___fttol@exp1,7
  3738  0640  2E4E               	goto	l5028
  3739  0641  082C               	movf	___fttol@exp1,w
  3740  0642  3A80               	xorlw	128
  3741  0643  3E8F               	addlw	143
  3742  0644  1C03               	btfss	3,0
  3743  0645  2E22               	goto	l5006
  3744  0646                     l5024:	
  3745  0646  1003               	clrc
  3746  0647  0CAB               	rrf	___fttol@lval+3,f
  3747  0648  0CAA               	rrf	___fttol@lval+2,f
  3748  0649  0CA9               	rrf	___fttol@lval+1,f
  3749  064A  0CA8               	rrf	___fttol@lval,f
  3750  064B  0FAC               	incfsz	___fttol@exp1,f
  3751  064C  2E46               	goto	l5024
  3752  064D  2E5C               	goto	l5034
  3753  064E                     l5028:	
  3754  064E  3018               	movlw	24
  3755  064F  022C               	subwf	___fttol@exp1,w
  3756  0650  1803               	btfsc	3,0
  3757  0651  2E22               	goto	l5006
  3758  0652                     l2325:	
  3759  0652  08AC               	movf	___fttol@exp1,f
  3760  0653  1903               	btfsc	3,2
  3761  0654  2E5C               	goto	l5034
  3762  0655  1003               	clrc
  3763  0656  0DA8               	rlf	___fttol@lval,f
  3764  0657  0DA9               	rlf	___fttol@lval+1,f
  3765  0658  0DAA               	rlf	___fttol@lval+2,f
  3766  0659  0DAB               	rlf	___fttol@lval+3,f
  3767  065A  03AC               	decf	___fttol@exp1,f
  3768  065B  2E52               	goto	l2325
  3769  065C                     l5034:	
  3770  065C  0827               	movf	___fttol@sign1,w
  3771  065D  1903               	btfsc	3,2
  3772  065E  2E6A               	goto	l5038
  3773  065F  09A8               	comf	___fttol@lval,f
  3774  0660  09A9               	comf	___fttol@lval+1,f
  3775  0661  09AA               	comf	___fttol@lval+2,f
  3776  0662  09AB               	comf	___fttol@lval+3,f
  3777  0663  0AA8               	incf	___fttol@lval,f
  3778  0664  1903               	skipnz
  3779  0665  0AA9               	incf	___fttol@lval+1,f
  3780  0666  1903               	skipnz
  3781  0667  0AAA               	incf	___fttol@lval+2,f
  3782  0668  1903               	skipnz
  3783  0669  0AAB               	incf	___fttol@lval+3,f
  3784  066A                     l5038:	
  3785  066A  082B               	movf	___fttol@lval+3,w
  3786  066B  00A3               	movwf	?___fttol+3
  3787  066C  082A               	movf	___fttol@lval+2,w
  3788  066D  00A2               	movwf	?___fttol+2
  3789  066E  0829               	movf	___fttol@lval+1,w
  3790  066F  00A1               	movwf	?___fttol+1
  3791  0670  0828               	movf	___fttol@lval,w
  3792  0671  00A0               	movwf	?___fttol
  3793  0672  0008               	return
  3794  0673                     __end_of___fttol:	
  3795  0673                     __ptext514:	
  3796 ;; =============== function ___awmod ends ============
  3797                           
  3798                           
  3799 ;; *************** function ___lldiv *****************
  3800 ;; Defined at:
  3801 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lldiv.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  divisor         4    0[COMMON] unsigned long 
  3804 ;;  dividend        4    4[COMMON] unsigned long 
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;  quotient        4    8[COMMON] unsigned long 
  3807 ;;  counter         1   12[COMMON] unsigned char 
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  4    0[COMMON] unsigned long 
  3810 ;; Registers used:
  3811 ;;		wreg, status,2, status,0
  3812 ;; Tracked objects:
  3813 ;;		On entry : 60/20
  3814 ;;		On exit  : 60/20
  3815 ;;		Unchanged: FFF9F/0
  3816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3817 ;;      Params:         8       0       0       0       0
  3818 ;;      Locals:         5       0       0       0       0
  3819 ;;      Temps:          0       0       0       0       0
  3820 ;;      Totals:        13       0       0       0       0
  3821 ;;Total ram usage:       13 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; This function calls:
  3824 ;;		Nothing
  3825 ;; This function is called by:
  3826 ;;		_sprintf
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829  0673                     ___lldiv:	
  3830                           
  3831                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3832  0673  01F8               	clrf	___lldiv@quotient
  3833  0674  01F9               	clrf	___lldiv@quotient+1
  3834  0675  01FA               	clrf	___lldiv@quotient+2
  3835  0676  01FB               	clrf	___lldiv@quotient+3
  3836  0677  0873               	movf	___lldiv@divisor+3,w
  3837  0678  0472               	iorwf	___lldiv@divisor+2,w
  3838  0679  0471               	iorwf	___lldiv@divisor+1,w
  3839  067A  0470               	iorwf	___lldiv@divisor,w
  3840  067B  1903               	skipnz
  3841  067C  2EB2               	goto	l5156
  3842  067D  01FC               	clrf	___lldiv@counter
  3843  067E                     L9:	
  3844  067E  0AFC               	incf	___lldiv@counter,f
  3845  067F  1BF3               	btfsc	___lldiv@divisor+3,7
  3846  0680  2E87               	goto	l5144
  3847  0681  1003               	clrc
  3848  0682  0DF0               	rlf	___lldiv@divisor,f
  3849  0683  0DF1               	rlf	___lldiv@divisor+1,f
  3850  0684  0DF2               	rlf	___lldiv@divisor+2,f
  3851  0685  0DF3               	rlf	___lldiv@divisor+3,f
  3852  0686  2E7E               	goto	L9
  3853  0687                     l5144:	
  3854  0687  1003               	clrc
  3855  0688  0DF8               	rlf	___lldiv@quotient,f
  3856  0689  0DF9               	rlf	___lldiv@quotient+1,f
  3857  068A  0DFA               	rlf	___lldiv@quotient+2,f
  3858  068B  0DFB               	rlf	___lldiv@quotient+3,f
  3859  068C  0873               	movf	___lldiv@divisor+3,w
  3860  068D  0277               	subwf	___lldiv@dividend+3,w
  3861  068E  1D03               	skipz
  3862  068F  2E9A               	goto	u2275
  3863  0690  0872               	movf	___lldiv@divisor+2,w
  3864  0691  0276               	subwf	___lldiv@dividend+2,w
  3865  0692  1D03               	skipz
  3866  0693  2E9A               	goto	u2275
  3867  0694  0871               	movf	___lldiv@divisor+1,w
  3868  0695  0275               	subwf	___lldiv@dividend+1,w
  3869  0696  1D03               	skipz
  3870  0697  2E9A               	goto	u2275
  3871  0698  0870               	movf	___lldiv@divisor,w
  3872  0699  0274               	subwf	___lldiv@dividend,w
  3873  069A                     u2275:	
  3874  069A  1C03               	skipc
  3875  069B  2EAC               	goto	L10
  3876  069C  0870               	movf	___lldiv@divisor,w
  3877  069D  02F4               	subwf	___lldiv@dividend,f
  3878  069E  0871               	movf	___lldiv@divisor+1,w
  3879  069F  1C03               	skipc
  3880  06A0  0F71               	incfsz	___lldiv@divisor+1,w
  3881  06A1  02F5               	subwf	___lldiv@dividend+1,f
  3882  06A2  0872               	movf	___lldiv@divisor+2,w
  3883  06A3  1C03               	skipc
  3884  06A4  0F72               	incfsz	___lldiv@divisor+2,w
  3885  06A5  02F6               	subwf	___lldiv@dividend+2,f
  3886  06A6  0873               	movf	___lldiv@divisor+3,w
  3887  06A7  1C03               	skipc
  3888  06A8  0F73               	incfsz	___lldiv@divisor+3,w
  3889  06A9  02F7               	subwf	___lldiv@dividend+3,f
  3890  06AA  1478               	bsf	___lldiv@quotient,0
  3891  06AB  1003               	clrc
  3892  06AC                     L10:	
  3893  06AC  0CF3               	rrf	___lldiv@divisor+3,f
  3894  06AD  0CF2               	rrf	___lldiv@divisor+2,f
  3895  06AE  0CF1               	rrf	___lldiv@divisor+1,f
  3896  06AF  0CF0               	rrf	___lldiv@divisor,f
  3897  06B0  0BFC               	decfsz	___lldiv@counter,f
  3898  06B1  2E87               	goto	l5144
  3899  06B2                     l5156:	
  3900  06B2  087B               	movf	___lldiv@quotient+3,w
  3901  06B3  00F3               	movwf	?___lldiv+3
  3902  06B4  087A               	movf	___lldiv@quotient+2,w
  3903  06B5  00F2               	movwf	?___lldiv+2
  3904  06B6  0879               	movf	___lldiv@quotient+1,w
  3905  06B7  00F1               	movwf	?___lldiv+1
  3906  06B8  0878               	movf	___lldiv@quotient,w
  3907  06B9  00F0               	movwf	?___lldiv
  3908  06BA  0008               	return
  3909  06BB                     __end_of___lldiv:	
  3910  06BB                     __ptext526:	
  3911 ;; =============== function __div_to_l_ ends ============
  3912                           
  3913                           
  3914 ;; *************** function __tdiv_to_l_ *****************
  3915 ;; Defined at:
  3916 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftdivl.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;  f1              3    0[COMMON] float 
  3919 ;;  f2              3    3[COMMON] float 
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;  quot            4    0[BANK0 ] unsigned long 
  3922 ;;  exp1            1    5[BANK0 ] unsigned char 
  3923 ;;  cntr            1    4[BANK0 ] unsigned char 
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  4    0[COMMON] unsigned long 
  3926 ;; Registers used:
  3927 ;;		wreg, status,2, status,0
  3928 ;; Tracked objects:
  3929 ;;		On entry : 60/20
  3930 ;;		On exit  : 60/0
  3931 ;;		Unchanged: FFF9F/0
  3932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3933 ;;      Params:         6       0       0       0       0
  3934 ;;      Locals:         0       6       0       0       0
  3935 ;;      Temps:          3       0       0       0       0
  3936 ;;      Totals:         9       6       0       0       0
  3937 ;;Total ram usage:       15 bytes
  3938 ;; Hardware stack levels used:    1
  3939 ;; This function calls:
  3940 ;;		Nothing
  3941 ;; This function is called by:
  3942 ;;		_sprintf
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945  06BB                     __tdiv_to_l_:	
  3946                           
  3947                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  3948  06BB  0870               	movf	__tdiv_to_l_@f1,w
  3949  06BC  00F6               	movwf	??__tdiv_to_l_
  3950  06BD  0871               	movf	__tdiv_to_l_@f1+1,w
  3951  06BE  00F7               	movwf	??__tdiv_to_l_+1
  3952  06BF  0872               	movf	__tdiv_to_l_@f1+2,w
  3953  06C0  00F8               	movwf	??__tdiv_to_l_+2
  3954  06C1  1003               	clrc
  3955  06C2  0D77               	rlf	??__tdiv_to_l_+1,w
  3956  06C3  0D78               	rlf	??__tdiv_to_l_+2,w
  3957  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  3958  06C5  00A5               	movwf	__tdiv_to_l_@exp1
  3959  06C6  08A5               	movf	__tdiv_to_l_@exp1,f
  3960  06C7  1D03               	skipz
  3961  06C8  2ECE               	goto	l4812
  3962  06C9                     l4810:	
  3963  06C9  01F0               	clrf	?__tdiv_to_l_
  3964  06CA  01F1               	clrf	?__tdiv_to_l_+1
  3965  06CB  01F2               	clrf	?__tdiv_to_l_+2
  3966  06CC  01F3               	clrf	?__tdiv_to_l_+3
  3967  06CD  0008               	return
  3968  06CE                     l4812:	
  3969  06CE  0873               	movf	__tdiv_to_l_@f2,w
  3970  06CF  00F6               	movwf	??__tdiv_to_l_
  3971  06D0  0874               	movf	__tdiv_to_l_@f2+1,w
  3972  06D1  00F7               	movwf	??__tdiv_to_l_+1
  3973  06D2  0875               	movf	__tdiv_to_l_@f2+2,w
  3974  06D3  00F8               	movwf	??__tdiv_to_l_+2
  3975  06D4  1003               	clrc
  3976  06D5  0D77               	rlf	??__tdiv_to_l_+1,w
  3977  06D6  0D78               	rlf	??__tdiv_to_l_+2,w
  3978  06D7  00A4               	movwf	__tdiv_to_l_@cntr
  3979  06D8  08A4               	movf	__tdiv_to_l_@cntr,f
  3980  06D9  1903               	btfsc	3,2
  3981  06DA  2EC9               	goto	l4810
  3982  06DB  307F               	movlw	127
  3983  06DC  17F1               	bsf	__tdiv_to_l_@f1+1,7
  3984  06DD  01F2               	clrf	__tdiv_to_l_@f1+2
  3985  06DE  17F4               	bsf	__tdiv_to_l_@f2+1,7
  3986  06DF  01F5               	clrf	__tdiv_to_l_@f2+2
  3987  06E0  01A0               	clrf	__tdiv_to_l_@quot
  3988  06E1  01A1               	clrf	__tdiv_to_l_@quot+1
  3989  06E2  01A2               	clrf	__tdiv_to_l_@quot+2
  3990  06E3  01A3               	clrf	__tdiv_to_l_@quot+3
  3991  06E4  02A5               	subwf	__tdiv_to_l_@exp1,f
  3992  06E5  3098               	movlw	152
  3993  06E6  0724               	addwf	__tdiv_to_l_@cntr,w
  3994  06E7  00F6               	movwf	??__tdiv_to_l_
  3995  06E8  02A5               	subwf	__tdiv_to_l_@exp1,f
  3996  06E9  3018               	movlw	24
  3997  06EA  00A4               	movwf	__tdiv_to_l_@cntr
  3998  06EB                     l4826:	
  3999  06EB  1003               	clrc
  4000  06EC  0DA0               	rlf	__tdiv_to_l_@quot,f
  4001  06ED  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  4002  06EE  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  4003  06EF  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  4004  06F0  0875               	movf	__tdiv_to_l_@f2+2,w
  4005  06F1  0272               	subwf	__tdiv_to_l_@f1+2,w
  4006  06F2  1D03               	skipz
  4007  06F3  2EFA               	goto	u1685
  4008  06F4  0874               	movf	__tdiv_to_l_@f2+1,w
  4009  06F5  0271               	subwf	__tdiv_to_l_@f1+1,w
  4010  06F6  1D03               	skipz
  4011  06F7  2EFA               	goto	u1685
  4012  06F8  0873               	movf	__tdiv_to_l_@f2,w
  4013  06F9  0270               	subwf	__tdiv_to_l_@f1,w
  4014  06FA                     u1685:	
  4015  06FA  1C03               	skipc
  4016  06FB  2F08               	goto	L18
  4017  06FC  0873               	movf	__tdiv_to_l_@f2,w
  4018  06FD  02F0               	subwf	__tdiv_to_l_@f1,f
  4019  06FE  0874               	movf	__tdiv_to_l_@f2+1,w
  4020  06FF  1C03               	skipc
  4021  0700  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  4022  0701  02F1               	subwf	__tdiv_to_l_@f1+1,f
  4023  0702  0875               	movf	__tdiv_to_l_@f2+2,w
  4024  0703  1C03               	skipc
  4025  0704  0A75               	incf	__tdiv_to_l_@f2+2,w
  4026  0705  02F2               	subwf	__tdiv_to_l_@f1+2,f
  4027  0706  1420               	bsf	__tdiv_to_l_@quot,0
  4028  0707  1003               	clrc
  4029  0708                     L18:	
  4030  0708  0DF0               	rlf	__tdiv_to_l_@f1,f
  4031  0709  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  4032  070A  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  4033  070B  0BA4               	decfsz	__tdiv_to_l_@cntr,f
  4034  070C  2EEB               	goto	l4826
  4035  070D  1FA5               	btfss	__tdiv_to_l_@exp1,7
  4036  070E  2F1C               	goto	l4846
  4037  070F  0825               	movf	__tdiv_to_l_@exp1,w
  4038  0710  3A80               	xorlw	128
  4039  0711  3E97               	addlw	151
  4040  0712  1C03               	btfss	3,0
  4041  0713  2EC9               	goto	l4810
  4042  0714                     l4842:	
  4043  0714  1003               	clrc
  4044  0715  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  4045  0716  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  4046  0717  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  4047  0718  0CA0               	rrf	__tdiv_to_l_@quot,f
  4048  0719  0FA5               	incfsz	__tdiv_to_l_@exp1,f
  4049  071A  2F14               	goto	l4842
  4050  071B  2F2A               	goto	l4852
  4051  071C                     l4846:	
  4052  071C  3018               	movlw	24
  4053  071D  0225               	subwf	__tdiv_to_l_@exp1,w
  4054  071E  1803               	btfsc	3,0
  4055  071F  2EC9               	goto	l4810
  4056  0720                     l2463:	
  4057  0720  08A5               	movf	__tdiv_to_l_@exp1,f
  4058  0721  1903               	btfsc	3,2
  4059  0722  2F2A               	goto	l4852
  4060  0723  1003               	clrc
  4061  0724  0DA0               	rlf	__tdiv_to_l_@quot,f
  4062  0725  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  4063  0726  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  4064  0727  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  4065  0728  03A5               	decf	__tdiv_to_l_@exp1,f
  4066  0729  2F20               	goto	l2463
  4067  072A                     l4852:	
  4068  072A  0823               	movf	__tdiv_to_l_@quot+3,w
  4069  072B  00F3               	movwf	?__tdiv_to_l_+3
  4070  072C  0822               	movf	__tdiv_to_l_@quot+2,w
  4071  072D  00F2               	movwf	?__tdiv_to_l_+2
  4072  072E  0821               	movf	__tdiv_to_l_@quot+1,w
  4073  072F  00F1               	movwf	?__tdiv_to_l_+1
  4074  0730  0820               	movf	__tdiv_to_l_@quot,w
  4075  0731  00F0               	movwf	?__tdiv_to_l_
  4076  0732  0008               	return
  4077  0733                     __end_of__tdiv_to_l_:	
  4078  0733                     __ptext516:	
  4079 ;; =============== function ___ftge ends ============
  4080                           
  4081                           
  4082 ;; *************** function ___ftneg *****************
  4083 ;; Defined at:
  4084 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftneg.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;  f1              3    0[COMMON] float 
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;		None
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  3    0[COMMON] float 
  4091 ;; Registers used:
  4092 ;;		wreg
  4093 ;; Tracked objects:
  4094 ;;		On entry : 160/20
  4095 ;;		On exit  : 160/20
  4096 ;;		Unchanged: FFE9F/0
  4097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4098 ;;      Params:         3       0       0       0       0
  4099 ;;      Locals:         0       0       0       0       0
  4100 ;;      Temps:          0       0       0       0       0
  4101 ;;      Totals:         3       0       0       0       0
  4102 ;;Total ram usage:        3 bytes
  4103 ;; Hardware stack levels used:    1
  4104 ;; This function calls:
  4105 ;;		Nothing
  4106 ;; This function is called by:
  4107 ;;		_sprintf
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110  0733                     ___ftneg:	
  4111                           
  4112                           ; Regs used in ___ftneg: [wreg]
  4113  0733  0872               	movf	___ftneg@f1+2,w
  4114  0734  0471               	iorwf	___ftneg@f1+1,w
  4115  0735  0470               	iorwf	___ftneg@f1,w
  4116  0736  1903               	skipnz
  4117  0737  0008               	return
  4118  0738  3080               	movlw	128
  4119  0739  06F2               	xorwf	___ftneg@f1+2,f
  4120  073A  0008               	return
  4121  073B                     __end_of___ftneg:	
  4122  073B                     __ptext508:	
  4123 ;; =============== function _lcd_write ends ============
  4124                           
  4125                           
  4126 ;; *************** function ___lltoft *****************
  4127 ;; Defined at:
  4128 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lltoft.c"
  4129 ;; Parameters:    Size  Location     Type
  4130 ;;  c               4    8[COMMON] unsigned long 
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;  exp             1   12[COMMON] unsigned char 
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  3    8[COMMON] float 
  4135 ;; Registers used:
  4136 ;;		wreg, status,2, status,0, pclath, cstack
  4137 ;; Tracked objects:
  4138 ;;		On entry : 60/20
  4139 ;;		On exit  : 60/20
  4140 ;;		Unchanged: FFF9F/0
  4141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4142 ;;      Params:         4       0       0       0       0
  4143 ;;      Locals:         1       0       0       0       0
  4144 ;;      Temps:          0       0       0       0       0
  4145 ;;      Totals:         5       0       0       0       0
  4146 ;;Total ram usage:        5 bytes
  4147 ;; Hardware stack levels used:    1
  4148 ;; Hardware stack levels required when called:    1
  4149 ;; This function calls:
  4150 ;;		___ftpack
  4151 ;; This function is called by:
  4152 ;;		_sprintf
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155  073B                     ___lltoft:	
  4156                           
  4157                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  4158  073B  308E               	movlw	142
  4159  073C  00FC               	movwf	___lltoft@exp
  4160  073D                     l5354:	
  4161  073D  30FF               	movlw	255
  4162  073E  057B               	andwf	___lltoft@c+3,w
  4163  073F  1903               	btfsc	3,2
  4164  0740  2F48               	goto	l5356
  4165  0741  1003               	clrc
  4166  0742  0CFB               	rrf	___lltoft@c+3,f
  4167  0743  0CFA               	rrf	___lltoft@c+2,f
  4168  0744  0CF9               	rrf	___lltoft@c+1,f
  4169  0745  0CF8               	rrf	___lltoft@c,f
  4170  0746  0AFC               	incf	___lltoft@exp,f
  4171  0747  2F3D               	goto	l5354
  4172  0748                     l5356:	
  4173  0748  0878               	movf	___lltoft@c,w
  4174  0749  00F0               	movwf	?___ftpack
  4175  074A  0879               	movf	___lltoft@c+1,w
  4176  074B  00F1               	movwf	?___ftpack+1
  4177  074C  087A               	movf	___lltoft@c+2,w
  4178  074D  00F2               	movwf	?___ftpack+2
  4179  074E  087C               	movf	___lltoft@exp,w
  4180  074F  00F3               	movwf	?___ftpack+3
  4181  0750  01F4               	clrf	?___ftpack+4
  4182  0751  120A  158A  2769   	fcall	___ftpack
  4183  0754  0870               	movf	?___ftpack,w
  4184  0755  00F8               	movwf	?___lltoft
  4185  0756  0871               	movf	?___ftpack+1,w
  4186  0757  00F9               	movwf	?___lltoft+1
  4187  0758  0872               	movf	?___ftpack+2,w
  4188  0759  00FA               	movwf	?___lltoft+2
  4189  075A  0008               	return
  4190  075B                     __end_of___lltoft:	
  4191  075B                     PL3:	
  4192  075B  0838               	movf	sprintf@c^(0+128),w
  4193  075C  1283               	bcf	3,5	;RP0=0, select bank0
  4194  075D  00D6               	movwf	??_sprintf
  4195  075E  1003               	clrc
  4196  075F  0DD6               	rlf	??_sprintf,f
  4197  0760  1003               	clrc
  4198  0761  0D56               	rlf	??_sprintf,w
  4199  0762  3E4F               	addlw	low (_dpowers-__stringbase)
  4200  0763  0084               	movwf	4
  4201  0764  0008               	return
  4202  0765                     PL4:	
  4203  0765  300A               	movlw	10
  4204  0766  1283               	bcf	3,5	;RP0=0, select bank0
  4205  0767  00A0               	movwf	?___llmod
  4206  0768  01A1               	clrf	?___llmod+1
  4207  0769  01A2               	clrf	?___llmod+2
  4208  076A  01A3               	clrf	?___llmod+3
  4209  076B  1683               	bsf	3,5	;RP0=1, select bank1
  4210  076C  0008               	return
  4211  076D                     PL5:	
  4212  076D  00F3               	movwf	?___lldiv+3
  4213  076E  1683               	bsf	3,5	;RP0=1, select bank1
  4214  076F  082F               	movf	(sprintf@_val+3)^(0+128),w
  4215  0770  00F7               	movwf	?___lldiv+7
  4216  0771  082E               	movf	(sprintf@_val+2)^(0+128),w
  4217  0772  00F6               	movwf	?___lldiv+6
  4218  0773  082D               	movf	(sprintf@_val+1)^(0+128),w
  4219  0774  00F5               	movwf	?___lldiv+5
  4220  0775  082C               	movf	sprintf@_val^(0+128),w
  4221  0776  00F4               	movwf	?___lldiv+4
  4222  0777  0008               	return
  4223  0778                     PL6:	
  4224  0778  0873               	movf	?___lldiv+3,w
  4225  0779  1283               	bcf	3,5	;RP0=0, select bank0
  4226  077A  00A7               	movwf	?___llmod+7
  4227  077B  0872               	movf	?___lldiv+2,w
  4228  077C  00A6               	movwf	?___llmod+6
  4229  077D  0871               	movf	?___lldiv+1,w
  4230  077E  00A5               	movwf	?___llmod+5
  4231  077F  0870               	movf	?___lldiv,w
  4232  0780  00A4               	movwf	?___llmod+4
  4233  0781  0008               	return
  4234  0782                     PL7:	
  4235  0782  0823               	movf	?___fttol+3,w
  4236  0783  1683               	bsf	3,5	;RP0=1, select bank1
  4237  0784  00AF               	movwf	(sprintf@_val+3)^(0+128)
  4238  0785  1283               	bcf	3,5	;RP0=0, select bank0
  4239  0786  0822               	movf	?___fttol+2,w
  4240  0787  1683               	bsf	3,5	;RP0=1, select bank1
  4241  0788  00AE               	movwf	(sprintf@_val+2)^(0+128)
  4242  0789  1283               	bcf	3,5	;RP0=0, select bank0
  4243  078A  0821               	movf	?___fttol+1,w
  4244  078B  1683               	bsf	3,5	;RP0=1, select bank1
  4245  078C  00AD               	movwf	(sprintf@_val+1)^(0+128)
  4246  078D  1283               	bcf	3,5	;RP0=0, select bank0
  4247  078E  0820               	movf	?___fttol,w
  4248  078F  0008               	return
  4249  0790                     PL12:	
  4250  0790  083C               	movf	?_scale,w
  4251  0791  1683               	bsf	3,5	;RP0=1, select bank1
  4252  0792  00A5               	movwf	sprintf@integ^(0+128)
  4253  0793  1283               	bcf	3,5	;RP0=0, select bank0
  4254  0794  083D               	movf	?_scale+1,w
  4255  0795  1683               	bsf	3,5	;RP0=1, select bank1
  4256  0796  00A6               	movwf	(sprintf@integ+1)^(0+128)
  4257  0797  1283               	bcf	3,5	;RP0=0, select bank0
  4258  0798  083E               	movf	?_scale+2,w
  4259  0799  1683               	bsf	3,5	;RP0=1, select bank1
  4260  079A  00A7               	movwf	(sprintf@integ+2)^(0+128)
  4261  079B  0832               	movf	sprintf@fval^(0+128),w
  4262  079C  0008               	return
  4263  079D                     PL13:	
  4264  079D  0770               	addwf	?___wmul,w
  4265  079E  00D6               	movwf	??_sprintf
  4266  079F  3000               	movlw	0
  4267  07A0  1803               	skipnc
  4268  07A1  3001               	movlw	1
  4269  07A2  0771               	addwf	?___wmul+1,w
  4270  07A3  00D7               	movwf	??_sprintf+1
  4271  07A4  0856               	movf	??_sprintf,w
  4272  07A5  3ED0               	addlw	208
  4273  07A6  1683               	bsf	3,5	;RP0=1, select bank1
  4274  07A7  0008               	return
  4275  07A8                     PL14:	
  4276  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  4277  07A9  00A0               	movwf	?___fttol
  4278  07AA  1683               	bsf	3,5	;RP0=1, select bank1
  4279  07AB  0833               	movf	(sprintf@fval+1)^(0+128),w
  4280  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  4281  07AD  00A1               	movwf	?___fttol+1
  4282  07AE  1683               	bsf	3,5	;RP0=1, select bank1
  4283  07AF  0834               	movf	(sprintf@fval+2)^(0+128),w
  4284  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  4285  07B1  00A2               	movwf	?___fttol+2
  4286  07B2  0008               	return
  4287  07B3                     PL15:	
  4288  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  4289  07B4  00AD               	movwf	?___ftmul
  4290  07B5  1683               	bsf	3,5	;RP0=1, select bank1
  4291  07B6  0833               	movf	(sprintf@fval+1)^(0+128),w
  4292  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  4293  07B8  00AE               	movwf	?___ftmul+1
  4294  07B9  1683               	bsf	3,5	;RP0=1, select bank1
  4295  07BA  0834               	movf	(sprintf@fval+2)^(0+128),w
  4296  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  4297  07BC  00AF               	movwf	?___ftmul+2
  4298  07BD  0008               	return
  4299  07BE                     PL19:	
  4300  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  4301  07BF  00D6               	movwf	??_sprintf
  4302  07C0  01D7               	clrf	??_sprintf+1
  4303  07C1  1BD6               	btfsc	??_sprintf,7
  4304  07C2  03D7               	decf	??_sprintf+1,f
  4305  07C3  0857               	movf	??_sprintf+1,w
  4306  07C4  3A80               	xorlw	128
  4307  07C5  00D8               	movwf	??_sprintf+2
  4308  07C6  1683               	bsf	3,5	;RP0=1, select bank1
  4309  07C7  0008               	return
  4310  07C8                     PL20:	
  4311  07C8  0820               	movf	?___llmod,w
  4312  07C9  3E30               	addlw	48
  4313  07CA  00D7               	movwf	??_sprintf+1
  4314  07CB  1683               	bsf	3,5	;RP0=1, select bank1
  4315  07CC  0835               	movf	sprintf@sp^(0+128),w
  4316  07CD  0084               	movwf	4
  4317  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  4318  07CF  0857               	movf	??_sprintf+1,w
  4319  07D0  0008               	return
  4320  07D1                     PL21:	
  4321  07D1  1303               	bcf	3,6	;RP1=0, select bank1
  4322  07D2  0838               	movf	sprintf@c^(0+128),w
  4323  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  4324  07D4  00D6               	movwf	??_sprintf
  4325  07D5  01D7               	clrf	??_sprintf+1
  4326  07D6  1BD6               	btfsc	??_sprintf,7
  4327  07D7  03D7               	decf	??_sprintf+1,f
  4328  07D8  1683               	bsf	3,5	;RP0=1, select bank1
  4329  07D9  0008               	return
  4330  07DA                     PL22:	
  4331  07DA  0825               	movf	sprintf@integ^(0+128),w
  4332  07DB  00F0               	movwf	?___ftge
  4333  07DC  0826               	movf	(sprintf@integ+1)^(0+128),w
  4334  07DD  00F1               	movwf	?___ftge+1
  4335  07DE  0827               	movf	(sprintf@integ+2)^(0+128),w
  4336  07DF  00F2               	movwf	?___ftge+2
  4337  07E0  0008               	return
  4338  07E1                     PL29:	
  4339  07E1  1283               	bcf	3,5	;RP0=0, select bank0
  4340  07E2  0857               	movf	??_sprintf+1,w
  4341  07E3  1803               	skipnc
  4342  07E4  3E01               	addlw	1
  4343  07E5  3EFF               	addlw	255
  4344  07E6  1683               	bsf	3,5	;RP0=1, select bank1
  4345  07E7  0008               	return
  4346  07E8                     PL30:	
  4347  07E8  0820               	movf	___fttol@f1,w
  4348  07E9  00A4               	movwf	??___fttol
  4349  07EA  0821               	movf	___fttol@f1+1,w
  4350  07EB  00A5               	movwf	??___fttol+1
  4351  07EC  0822               	movf	___fttol@f1+2,w
  4352  07ED  00A6               	movwf	??___fttol+2
  4353  07EE  0008               	return
  4354  07EF                     PL32:	
  4355  07EF  0084               	movwf	4
  4356  07F0  3030               	movlw	48
  4357  07F1  1383               	bcf	3,7	;select IRP bank0
  4358  07F2  0080               	movwf	0
  4359  07F3  30FF               	movlw	-1
  4360  07F4  0AB5               	incf	sprintf@sp^(0+128),f
  4361  07F5  0008               	return
  4362  07F6                     PL33:	
  4363  07F6  0800               	movf	0,w
  4364  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  4365  07F8  00D6               	movwf	??_sprintf
  4366  07F9  0A84               	incf	4,f
  4367  07FA  0800               	movf	0,w
  4368  07FB  00D7               	movwf	??_sprintf+1
  4369  07FC  0008               	return
  4370  07FD                     PL34:	
  4371  07FD  1683               	bsf	3,5	;RP0=1, select bank1
  4372  07FE  1303               	bcf	3,6	;RP1=0, select bank1
  4373  07FF  0008               	return
  4374                           
  4375                           	psect	text504
  4376  0980                     __ptext504:	
  4377 ;; =============== function _lcd_clear ends ============
  4378                           
  4379                           
  4380 ;; *************** function ___ftsub *****************
  4381 ;; Defined at:
  4382 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftsub.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;  f2              3   40[BANK0 ] float 
  4385 ;;  f1              3   43[BANK0 ] float 
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;		None
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  3   40[BANK0 ] float 
  4390 ;; Registers used:
  4391 ;;		wreg, status,2, status,0, pclath, cstack
  4392 ;; Tracked objects:
  4393 ;;		On entry : 60/0
  4394 ;;		On exit  : 60/0
  4395 ;;		Unchanged: FFF9F/0
  4396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4397 ;;      Params:         0       6       0       0       0
  4398 ;;      Locals:         0       0       0       0       0
  4399 ;;      Temps:          0       0       0       0       0
  4400 ;;      Totals:         0       6       0       0       0
  4401 ;;Total ram usage:        6 bytes
  4402 ;; Hardware stack levels used:    1
  4403 ;; Hardware stack levels required when called:    2
  4404 ;; This function calls:
  4405 ;;		___ftadd
  4406 ;; This function is called by:
  4407 ;;		_sprintf
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410  0980                     ___ftsub:	
  4411                           
  4412                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  4413  0980  3080               	movlw	128
  4414  0981  06CA               	xorwf	___ftsub@f2+2,f
  4415  0982  084B               	movf	___ftsub@f1,w
  4416  0983  00BC               	movwf	?___ftadd
  4417  0984  084C               	movf	___ftsub@f1+1,w
  4418  0985  00BD               	movwf	?___ftadd+1
  4419  0986  084D               	movf	___ftsub@f1+2,w
  4420  0987  00BE               	movwf	?___ftadd+2
  4421  0988  0848               	movf	___ftsub@f2,w
  4422  0989  00BF               	movwf	?___ftadd+3
  4423  098A  0849               	movf	___ftsub@f2+1,w
  4424  098B  00C0               	movwf	?___ftadd+4
  4425  098C  084A               	movf	___ftsub@f2+2,w
  4426  098D  00C1               	movwf	?___ftadd+5
  4427  098E  2196               	fcall	___ftadd
  4428  098F  083C               	movf	?___ftadd,w
  4429  0990  00C8               	movwf	?___ftsub
  4430  0991  083D               	movf	?___ftadd+1,w
  4431  0992  00C9               	movwf	?___ftsub+1
  4432  0993  083E               	movf	?___ftadd+2,w
  4433  0994  00CA               	movwf	?___ftsub+2
  4434  0995  0008               	return
  4435  0996                     __end_of___ftsub:	
  4436  0996                     __ptext511:	
  4437 ;; =============== function ___ftmul ends ============
  4438                           
  4439                           
  4440 ;; *************** function ___ftadd *****************
  4441 ;; Defined at:
  4442 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftadd.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;  f1              3   28[BANK0 ] float 
  4445 ;;  f2              3   31[BANK0 ] float 
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;  exp1            1   39[BANK0 ] unsigned char 
  4448 ;;  exp2            1   38[BANK0 ] unsigned char 
  4449 ;;  sign            1   37[BANK0 ] unsigned char 
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  3   28[BANK0 ] float 
  4452 ;; Registers used:
  4453 ;;		wreg, status,2, status,0, pclath, cstack
  4454 ;; Tracked objects:
  4455 ;;		On entry : 60/0
  4456 ;;		On exit  : 60/0
  4457 ;;		Unchanged: FFF9F/0
  4458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4459 ;;      Params:         0       6       0       0       0
  4460 ;;      Locals:         0       3       0       0       0
  4461 ;;      Temps:          0       3       0       0       0
  4462 ;;      Totals:         0      12       0       0       0
  4463 ;;Total ram usage:       12 bytes
  4464 ;; Hardware stack levels used:    1
  4465 ;; Hardware stack levels required when called:    1
  4466 ;; This function calls:
  4467 ;;		___ftpack
  4468 ;; This function is called by:
  4469 ;;		_sprintf
  4470 ;;		___ftsub
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473  0996                     ___ftadd:	
  4474                           
  4475                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4476  0996  083C               	movf	___ftadd@f1,w
  4477  0997  00C2               	movwf	??___ftadd
  4478  0998  083D               	movf	___ftadd@f1+1,w
  4479  0999  00C3               	movwf	??___ftadd+1
  4480  099A  083E               	movf	___ftadd@f1+2,w
  4481  099B  00C4               	movwf	??___ftadd+2
  4482  099C  1003               	clrc
  4483  099D  0D43               	rlf	??___ftadd+1,w
  4484  099E  0D44               	rlf	??___ftadd+2,w
  4485  099F  00C7               	movwf	___ftadd@exp1
  4486  09A0  083F               	movf	___ftadd@f2,w
  4487  09A1  00C2               	movwf	??___ftadd
  4488  09A2  0840               	movf	___ftadd@f2+1,w
  4489  09A3  00C3               	movwf	??___ftadd+1
  4490  09A4  0841               	movf	___ftadd@f2+2,w
  4491  09A5  00C4               	movwf	??___ftadd+2
  4492  09A6  1003               	clrc
  4493  09A7  0D43               	rlf	??___ftadd+1,w
  4494  09A8  0D44               	rlf	??___ftadd+2,w
  4495  09A9  00C6               	movwf	___ftadd@exp2
  4496  09AA  0847               	movf	___ftadd@exp1,w
  4497  09AB  1903               	btfsc	3,2
  4498  09AC  29B9               	goto	l5212
  4499  09AD  0846               	movf	___ftadd@exp2,w
  4500  09AE  0247               	subwf	___ftadd@exp1,w
  4501  09AF  0846               	movf	___ftadd@exp2,w
  4502  09B0  1803               	skipnc
  4503  09B1  29C1               	goto	L6
  4504  09B2  00C2               	movwf	??___ftadd
  4505  09B3  0847               	movf	___ftadd@exp1,w
  4506  09B4  02C2               	subwf	??___ftadd,f
  4507  09B5  3019               	movlw	25
  4508  09B6  0242               	subwf	??___ftadd,w
  4509  09B7  1C03               	skipc
  4510  09B8  29C0               	goto	l5216
  4511  09B9                     l5212:	
  4512  09B9  083F               	movf	___ftadd@f2,w
  4513  09BA  00BC               	movwf	?___ftadd
  4514  09BB  0840               	movf	___ftadd@f2+1,w
  4515  09BC  00BD               	movwf	?___ftadd+1
  4516  09BD  0841               	movf	___ftadd@f2+2,w
  4517  09BE  00BE               	movwf	?___ftadd+2
  4518  09BF  0008               	return
  4519  09C0                     l5216:	
  4520  09C0  0846               	movf	___ftadd@exp2,w
  4521  09C1                     L6:	
  4522  09C1  1903               	btfsc	3,2
  4523  09C2  0008               	return
  4524  09C3  0847               	movf	___ftadd@exp1,w
  4525  09C4  0246               	subwf	___ftadd@exp2,w
  4526  09C5  1803               	skipnc
  4527  09C6  29CF               	goto	l5222
  4528  09C7  0847               	movf	___ftadd@exp1,w
  4529  09C8  00C2               	movwf	??___ftadd
  4530  09C9  0846               	movf	___ftadd@exp2,w
  4531  09CA  02C2               	subwf	??___ftadd,f
  4532  09CB  3019               	movlw	25
  4533  09CC  0242               	subwf	??___ftadd,w
  4534  09CD  1803               	btfsc	3,0
  4535  09CE  0008               	return
  4536  09CF                     l5222:	
  4537  09CF  3006               	movlw	6
  4538  09D0  00C5               	movwf	___ftadd@sign
  4539  09D1  1BBE               	btfsc	___ftadd@f1+2,7
  4540  09D2  17C5               	bsf	___ftadd@sign,7
  4541  09D3  1BC1               	btfsc	___ftadd@f2+2,7
  4542  09D4  1745               	bsf	___ftadd@sign,6
  4543  09D5  17BD               	bsf	___ftadd@f1+1,7
  4544  09D6  01BE               	clrf	___ftadd@f1+2
  4545  09D7  17C0               	bsf	___ftadd@f2+1,7
  4546  09D8  01C1               	clrf	___ftadd@f2+2
  4547  09D9  0846               	movf	___ftadd@exp2,w
  4548  09DA  0247               	subwf	___ftadd@exp1,w
  4549  09DB  1803               	skipnc
  4550  09DC  29F6               	goto	l5244
  4551  09DD                     l5234:	
  4552  09DD  1003               	clrc
  4553  09DE  0DBF               	rlf	___ftadd@f2,f
  4554  09DF  0DC0               	rlf	___ftadd@f2+1,f
  4555  09E0  0DC1               	rlf	___ftadd@f2+2,f
  4556  09E1  03C6               	decf	___ftadd@exp2,f
  4557  09E2  0846               	movf	___ftadd@exp2,w
  4558  09E3  0647               	xorwf	___ftadd@exp1,w
  4559  09E4  1903               	skipnz
  4560  09E5  29F1               	goto	l5242
  4561  09E6  03C5               	decf	___ftadd@sign,f
  4562  09E7  0845               	movf	___ftadd@sign,w
  4563  09E8  3907               	andlw	7
  4564  09E9  1903               	btfsc	3,2
  4565  09EA  29F1               	goto	l5242
  4566  09EB  29DD               	goto	l5234
  4567  09EC                     l5240:	
  4568  09EC  1003               	clrc
  4569  09ED  0CBE               	rrf	___ftadd@f1+2,f
  4570  09EE  0CBD               	rrf	___ftadd@f1+1,f
  4571  09EF  0CBC               	rrf	___ftadd@f1,f
  4572  09F0  0AC7               	incf	___ftadd@exp1,f
  4573  09F1                     l5242:	
  4574  09F1  0847               	movf	___ftadd@exp1,w
  4575  09F2  0646               	xorwf	___ftadd@exp2,w
  4576  09F3  1903               	btfsc	3,2
  4577  09F4  2A12               	goto	l2269
  4578  09F5  29EC               	goto	l5240
  4579  09F6                     l5244:	
  4580  09F6  0847               	movf	___ftadd@exp1,w
  4581  09F7  0246               	subwf	___ftadd@exp2,w
  4582  09F8  1803               	skipnc
  4583  09F9  2A12               	goto	l2269
  4584  09FA                     l5246:	
  4585  09FA  1003               	clrc
  4586  09FB  0DBC               	rlf	___ftadd@f1,f
  4587  09FC  0DBD               	rlf	___ftadd@f1+1,f
  4588  09FD  0DBE               	rlf	___ftadd@f1+2,f
  4589  09FE  03C7               	decf	___ftadd@exp1,f
  4590  09FF  0846               	movf	___ftadd@exp2,w
  4591  0A00  0647               	xorwf	___ftadd@exp1,w
  4592  0A01  1903               	skipnz
  4593  0A02  2A0E               	goto	l5254
  4594  0A03  03C5               	decf	___ftadd@sign,f
  4595  0A04  0845               	movf	___ftadd@sign,w
  4596  0A05  3907               	andlw	7
  4597  0A06  1903               	btfsc	3,2
  4598  0A07  2A0E               	goto	l5254
  4599  0A08  29FA               	goto	l5246
  4600  0A09                     l5252:	
  4601  0A09  1003               	clrc
  4602  0A0A  0CC1               	rrf	___ftadd@f2+2,f
  4603  0A0B  0CC0               	rrf	___ftadd@f2+1,f
  4604  0A0C  0CBF               	rrf	___ftadd@f2,f
  4605  0A0D  0AC6               	incf	___ftadd@exp2,f
  4606  0A0E                     l5254:	
  4607  0A0E  0847               	movf	___ftadd@exp1,w
  4608  0A0F  0646               	xorwf	___ftadd@exp2,w
  4609  0A10  1D03               	skipz
  4610  0A11  2A09               	goto	l5252
  4611  0A12                     l2269:	
  4612  0A12  1FC5               	btfss	___ftadd@sign,7
  4613  0A13  2A1D               	goto	l5260
  4614  0A14  30FF               	movlw	255
  4615  0A15  06BC               	xorwf	___ftadd@f1,f
  4616  0A16  06BD               	xorwf	___ftadd@f1+1,f
  4617  0A17  06BE               	xorwf	___ftadd@f1+2,f
  4618  0A18  0ABC               	incf	___ftadd@f1,f
  4619  0A19  1903               	skipnz
  4620  0A1A  0ABD               	incf	___ftadd@f1+1,f
  4621  0A1B  1903               	skipnz
  4622  0A1C  0ABE               	incf	___ftadd@f1+2,f
  4623  0A1D                     l5260:	
  4624  0A1D  1F45               	btfss	___ftadd@sign,6
  4625  0A1E  2A28               	goto	l5266
  4626  0A1F  30FF               	movlw	255
  4627  0A20  06BF               	xorwf	___ftadd@f2,f
  4628  0A21  06C0               	xorwf	___ftadd@f2+1,f
  4629  0A22  06C1               	xorwf	___ftadd@f2+2,f
  4630  0A23  0ABF               	incf	___ftadd@f2,f
  4631  0A24  1903               	skipnz
  4632  0A25  0AC0               	incf	___ftadd@f2+1,f
  4633  0A26  1903               	skipnz
  4634  0A27  0AC1               	incf	___ftadd@f2+2,f
  4635  0A28                     l5266:	
  4636  0A28  01C5               	clrf	___ftadd@sign
  4637  0A29  083C               	movf	___ftadd@f1,w
  4638  0A2A  07BF               	addwf	___ftadd@f2,f
  4639  0A2B  083D               	movf	___ftadd@f1+1,w
  4640  0A2C  1103               	clrz
  4641  0A2D  1803               	skipnc
  4642  0A2E  0A3D               	incf	___ftadd@f1+1,w
  4643  0A2F  1D03               	btfss	3,2
  4644  0A30  07C0               	addwf	___ftadd@f2+1,f
  4645  0A31  083E               	movf	___ftadd@f1+2,w
  4646  0A32  1103               	clrz
  4647  0A33  1803               	skipnc
  4648  0A34  0A3E               	incf	___ftadd@f1+2,w
  4649  0A35  1D03               	btfss	3,2
  4650  0A36  07C1               	addwf	___ftadd@f2+2,f
  4651  0A37  1FC1               	btfss	___ftadd@f2+2,7
  4652  0A38  2A44               	goto	l5278
  4653  0A39  30FF               	movlw	255
  4654  0A3A  06BF               	xorwf	___ftadd@f2,f
  4655  0A3B  06C0               	xorwf	___ftadd@f2+1,f
  4656  0A3C  06C1               	xorwf	___ftadd@f2+2,f
  4657  0A3D  0ABF               	incf	___ftadd@f2,f
  4658  0A3E  1903               	skipnz
  4659  0A3F  0AC0               	incf	___ftadd@f2+1,f
  4660  0A40  1903               	skipnz
  4661  0A41  0AC1               	incf	___ftadd@f2+2,f
  4662  0A42  01C5               	clrf	___ftadd@sign
  4663  0A43  0AC5               	incf	___ftadd@sign,f
  4664  0A44                     l5278:	
  4665  0A44  083F               	movf	___ftadd@f2,w
  4666  0A45  00F0               	movwf	?___ftpack
  4667  0A46  0840               	movf	___ftadd@f2+1,w
  4668  0A47  00F1               	movwf	?___ftpack+1
  4669  0A48  0841               	movf	___ftadd@f2+2,w
  4670  0A49  00F2               	movwf	?___ftpack+2
  4671  0A4A  0847               	movf	___ftadd@exp1,w
  4672  0A4B  00F3               	movwf	?___ftpack+3
  4673  0A4C  0845               	movf	___ftadd@sign,w
  4674  0A4D  00F4               	movwf	?___ftpack+4
  4675  0A4E  120A  158A  2769   	fcall	___ftpack
  4676  0A51  0870               	movf	?___ftpack,w
  4677  0A52  00BC               	movwf	?___ftadd
  4678  0A53  0871               	movf	?___ftpack+1,w
  4679  0A54  00BD               	movwf	?___ftadd+1
  4680  0A55  0872               	movf	?___ftpack+2,w
  4681  0A56  00BE               	movwf	?___ftadd+2
  4682  0A57  0008               	return
  4683  0A58                     __end_of___ftadd:	
  4684                           
  4685                           	psect	text506
  4686  0B6B                     __ptext506:	
  4687 ;; =============== function _scale ends ============
  4688                           
  4689                           
  4690 ;; *************** function _fround *****************
  4691 ;; Defined at:
  4692 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;  prec            1    wreg     unsigned char 
  4695 ;; Auto vars:     Size  Location     Type
  4696 ;;  prec            1   49[BANK0 ] unsigned char 
  4697 ;; Return value:  Size  Location     Type
  4698 ;;                  3   40[BANK0 ] unsigned char 
  4699 ;; Registers used:
  4700 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4701 ;; Tracked objects:
  4702 ;;		On entry : 60/20
  4703 ;;		On exit  : 60/0
  4704 ;;		Unchanged: FFF9F/0
  4705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4706 ;;      Params:         0       3       0       0       0
  4707 ;;      Locals:         0       7       0       0       0
  4708 ;;      Temps:          0       0       0       0       0
  4709 ;;      Totals:         0      10       0       0       0
  4710 ;;Total ram usage:       10 bytes
  4711 ;; Hardware stack levels used:    1
  4712 ;; Hardware stack levels required when called:    2
  4713 ;; This function calls:
  4714 ;;		___lbmod
  4715 ;;		___bmul
  4716 ;;		___lbdiv
  4717 ;;		___ftmul
  4718 ;; This function is called by:
  4719 ;;		_sprintf
  4720 ;; This function uses a non-reentrant model
  4721 ;;
  4722  0B6B                     _fround:	
  4723                           
  4724                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4725                           ;fround@prec stored from wreg
  4726  0B6B  1283               	bcf	3,5	;RP0=0, select bank0
  4727  0B6C  00D1               	movwf	fround@prec
  4728  0B6D  306E               	movlw	110
  4729  0B6E  0251               	subwf	fround@prec,w
  4730  0B6F  1C03               	skipc
  4731  0B70  2BF6               	goto	l5384
  4732  0B71  3003               	movlw	3
  4733  0B72  00F9               	movwf	?___bmul
  4734  0B73  300A               	movlw	10
  4735  0B74  00F5               	movwf	?___lbdiv
  4736  0B75  3064               	movlw	100
  4737  0B76  00F0               	movwf	?___lbmod
  4738  0B77  0851               	movf	fround@prec,w
  4739  0B78  248B  120A  158A   	fcall	___lbmod
  4740  0B7B  2470               	fcall	___lbdiv
  4741  0B7C  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4742  0B81  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4743  0B82  0084               	movwf	4
  4744  0B83  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4745  0B88  00AD               	movwf	?___ftmul
  4746  0B89  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4747  0B8E  00AE               	movwf	?___ftmul+1
  4748  0B8F  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4749  0B94  00AF               	movwf	?___ftmul+2
  4750  0B95  3003               	movlw	3
  4751  0B96  00F9               	movwf	?___bmul
  4752  0B97  3064               	movlw	100
  4753  0B98  00F5               	movwf	?___lbdiv
  4754  0B99  0851               	movf	fround@prec,w
  4755  0B9A  2470               	fcall	___lbdiv
  4756  0B9B  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4757  0BA0  3E37               	addlw	low ((__npowers_-__stringbase+54))
  4758  0BA1  0084               	movwf	4
  4759  0BA2  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4760  0BA7  00B0               	movwf	?___ftmul+3
  4761  0BA8  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4762  0BAD  00B1               	movwf	?___ftmul+4
  4763  0BAE  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4764  0BB3  00B2               	movwf	?___ftmul+5
  4765  0BB4  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4766  0BB9  24B6  120A  158A   	fcall	PL31	;call to abstracted procedure
  4767  0BBC  3003               	movlw	3
  4768  0BBD  00F9               	movwf	?___bmul
  4769  0BBE  300A               	movlw	10
  4770  0BBF  00F0               	movwf	?___lbmod
  4771  0BC0  0851               	movf	fround@prec,w
  4772  0BC1  248B               	fcall	___lbmod
  4773  0BC2  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4774  0BC7  3E01               	addlw	low (__npowers_-__stringbase)
  4775  0BC8  0084               	movwf	4
  4776  0BC9  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4777  0BCE  00AD               	movwf	?___ftmul
  4778  0BCF  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4779  0BD4  00AE               	movwf	?___ftmul+1
  4780  0BD5  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4781  0BDA  24AE               	fcall	PL27	;call to abstracted procedure
  4782  0BDB  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4783  0BE0  082D               	movf	?___ftmul,w
  4784  0BE1  00CB               	movwf	_fround$2834
  4785  0BE2  082E               	movf	?___ftmul+1,w
  4786  0BE3  00CC               	movwf	_fround$2834+1
  4787  0BE4  082F               	movf	?___ftmul+2,w
  4788  0BE5  00CD               	movwf	_fround$2834+2
  4789  0BE6  303F               	movlw	63
  4790  0BE7  01AD               	clrf	?___ftmul
  4791  0BE8  01AE               	clrf	?___ftmul+1
  4792  0BE9  00AF               	movwf	?___ftmul+2
  4793  0BEA  084B               	movf	_fround$2834,w
  4794  0BEB  00B0               	movwf	?___ftmul+3
  4795  0BEC  084C               	movf	_fround$2834+1,w
  4796  0BED  00B1               	movwf	?___ftmul+4
  4797  0BEE  084D               	movf	_fround$2834+2,w
  4798  0BEF  00B2               	movwf	?___ftmul+5
  4799  0BF0  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4800  0BF5  2CA7               	ljmp	PL17	;call to abstracted procedure
  4801  0BF6                     l5384:	
  4802  0BF6  300B               	movlw	11
  4803  0BF7  0251               	subwf	fround@prec,w
  4804  0BF8  1C03               	skipc
  4805  0BF9  2C4A               	goto	l5392
  4806  0BFA  3003               	movlw	3
  4807  0BFB  00F9               	movwf	?___bmul
  4808  0BFC  300A               	movlw	10
  4809  0BFD  00F0               	movwf	?___lbmod
  4810  0BFE  0851               	movf	fround@prec,w
  4811  0BFF  248B               	fcall	___lbmod
  4812  0C00  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4813  0C05  3E01               	addlw	low (__npowers_-__stringbase)
  4814  0C06  0084               	movwf	4
  4815  0C07  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4816  0C0C  00AD               	movwf	?___ftmul
  4817  0C0D  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4818  0C12  00AE               	movwf	?___ftmul+1
  4819  0C13  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4820  0C18  00AF               	movwf	?___ftmul+2
  4821  0C19  3003               	movlw	3
  4822  0C1A  00F9               	movwf	?___bmul
  4823  0C1B  300A               	movlw	10
  4824  0C1C  00F5               	movwf	?___lbdiv
  4825  0C1D  0851               	movf	fround@prec,w
  4826  0C1E  2470               	fcall	___lbdiv
  4827  0C1F  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4828  0C24  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4829  0C25  0084               	movwf	4
  4830  0C26  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4831  0C2B  00B0               	movwf	?___ftmul+3
  4832  0C2C  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4833  0C31  00B1               	movwf	?___ftmul+4
  4834  0C32  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4835  0C37  00B2               	movwf	?___ftmul+5
  4836  0C38  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4837  0C3D  24B6  120A  158A   	fcall	PL31	;call to abstracted procedure
  4838  0C40  303F               	movlw	63
  4839  0C41  01AD               	clrf	?___ftmul
  4840  0C42  01AE               	clrf	?___ftmul+1
  4841  0C43  24AE               	fcall	PL27	;call to abstracted procedure
  4842  0C44  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4843  0C49  2CA7               	ljmp	PL17	;call to abstracted procedure
  4844  0C4A                     l5392:	
  4845  0C4A  303F               	movlw	63
  4846  0C4B  01AD               	clrf	?___ftmul
  4847  0C4C  01AE               	clrf	?___ftmul+1
  4848  0C4D  00AF               	movwf	?___ftmul+2
  4849  0C4E  3003               	movlw	3
  4850  0C4F  00F9               	movwf	?___bmul
  4851  0C50  0851               	movf	fround@prec,w
  4852  0C51  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4853  0C56  3E01               	addlw	low (__npowers_-__stringbase)
  4854  0C57  0084               	movwf	4
  4855  0C58  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4856  0C5D  00B0               	movwf	?___ftmul+3
  4857  0C5E  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4858  0C63  00B1               	movwf	?___ftmul+4
  4859  0C64  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4860  0C69  00B2               	movwf	?___ftmul+5
  4861  0C6A  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4862  0C6F  2CA7               	ljmp	PL17	;call to abstracted procedure
  4863  0C70                     __end_of_fround:	
  4864  0C70                     __ptext522:	
  4865 ;; =============== function ___lbmod ends ============
  4866                           
  4867                           
  4868 ;; *************** function ___lbdiv *****************
  4869 ;; Defined at:
  4870 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lbdiv.c"
  4871 ;; Parameters:    Size  Location     Type
  4872 ;;  dividend        1    wreg     unsigned char 
  4873 ;;  divisor         1    5[COMMON] unsigned char 
  4874 ;; Auto vars:     Size  Location     Type
  4875 ;;  dividend        1    6[COMMON] unsigned char 
  4876 ;;  quotient        1    8[COMMON] unsigned char 
  4877 ;;  counter         1    7[COMMON] unsigned char 
  4878 ;; Return value:  Size  Location     Type
  4879 ;;                  1    wreg      unsigned char 
  4880 ;; Registers used:
  4881 ;;		wreg, status,2, status,0
  4882 ;; Tracked objects:
  4883 ;;		On entry : 60/0
  4884 ;;		On exit  : 60/0
  4885 ;;		Unchanged: FFF9F/0
  4886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4887 ;;      Params:         1       0       0       0       0
  4888 ;;      Locals:         3       0       0       0       0
  4889 ;;      Temps:          0       0       0       0       0
  4890 ;;      Totals:         4       0       0       0       0
  4891 ;;Total ram usage:        4 bytes
  4892 ;; Hardware stack levels used:    1
  4893 ;; This function calls:
  4894 ;;		Nothing
  4895 ;; This function is called by:
  4896 ;;		_fround
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899  0C70                     ___lbdiv:	
  4900                           
  4901                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  4902                           ;___lbdiv@dividend stored from wreg
  4903  0C70  00F6               	movwf	___lbdiv@dividend
  4904  0C71  01F8               	clrf	___lbdiv@quotient
  4905  0C72  0875               	movf	___lbdiv@divisor,w
  4906  0C73  1903               	btfsc	3,2
  4907  0C74  2C89               	goto	l4954
  4908  0C75  01F7               	clrf	___lbdiv@counter
  4909  0C76                     l4940:	
  4910  0C76  0AF7               	incf	___lbdiv@counter,f
  4911  0C77  1BF5               	btfsc	___lbdiv@divisor,7
  4912  0C78  2C7C               	goto	l2238
  4913  0C79  1003               	clrc
  4914  0C7A  0DF5               	rlf	___lbdiv@divisor,f
  4915  0C7B  2C76               	goto	l4940
  4916  0C7C                     l2238:	
  4917  0C7C  1003               	clrc
  4918  0C7D  0DF8               	rlf	___lbdiv@quotient,f
  4919  0C7E  0875               	movf	___lbdiv@divisor,w
  4920  0C7F  0276               	subwf	___lbdiv@dividend,w
  4921  0C80  1C03               	skipc
  4922  0C81  2C86               	goto	L17
  4923  0C82  0875               	movf	___lbdiv@divisor,w
  4924  0C83  02F6               	subwf	___lbdiv@dividend,f
  4925  0C84  1478               	bsf	___lbdiv@quotient,0
  4926  0C85  1003               	clrc
  4927  0C86                     L17:	
  4928  0C86  0CF5               	rrf	___lbdiv@divisor,f
  4929  0C87  0BF7               	decfsz	___lbdiv@counter,f
  4930  0C88  2C7C               	goto	l2238
  4931  0C89                     l4954:	
  4932  0C89  0878               	movf	___lbdiv@quotient,w
  4933  0C8A  0008               	return
  4934  0C8B                     __end_of___lbdiv:	
  4935  0C8B                     __ptext521:	
  4936 ;; =============== function ___ftpack ends ============
  4937                           
  4938                           
  4939 ;; *************** function ___lbmod *****************
  4940 ;; Defined at:
  4941 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lbmod.c"
  4942 ;; Parameters:    Size  Location     Type
  4943 ;;  dividend        1    wreg     unsigned char 
  4944 ;;  divisor         1    0[COMMON] unsigned char 
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;  dividend        1    2[COMMON] unsigned char 
  4947 ;;  rem             1    4[COMMON] unsigned char 
  4948 ;;  counter         1    3[COMMON] unsigned char 
  4949 ;; Return value:  Size  Location     Type
  4950 ;;                  1    wreg      unsigned char 
  4951 ;; Registers used:
  4952 ;;		wreg, status,2, status,0
  4953 ;; Tracked objects:
  4954 ;;		On entry : 60/0
  4955 ;;		On exit  : 60/0
  4956 ;;		Unchanged: FFF9F/0
  4957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4958 ;;      Params:         1       0       0       0       0
  4959 ;;      Locals:         3       0       0       0       0
  4960 ;;      Temps:          1       0       0       0       0
  4961 ;;      Totals:         5       0       0       0       0
  4962 ;;Total ram usage:        5 bytes
  4963 ;; Hardware stack levels used:    1
  4964 ;; This function calls:
  4965 ;;		Nothing
  4966 ;; This function is called by:
  4967 ;;		_fround
  4968 ;; This function uses a non-reentrant model
  4969 ;;
  4970  0C8B                     ___lbmod:	
  4971                           
  4972                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  4973                           ;___lbmod@dividend stored from wreg
  4974  0C8B  00F2               	movwf	___lbmod@dividend
  4975  0C8C  3008               	movlw	8
  4976  0C8D  00F3               	movwf	___lbmod@counter
  4977  0C8E  01F4               	clrf	___lbmod@rem
  4978  0C8F                     l4962:	
  4979  0C8F  0872               	movf	___lbmod@dividend,w
  4980  0C90  00F1               	movwf	??___lbmod
  4981  0C91  3007               	movlw	7
  4982  0C92  1003               	clrc
  4983  0C93                     L16:	
  4984  0C93  0CF1               	rrf	??___lbmod,f
  4985  0C94  3EFF               	addlw	-1
  4986  0C95  1003               	clrc
  4987  0C96  1D03               	skipz
  4988  0C97  2C93               	goto	L16
  4989  0C98  0D74               	rlf	___lbmod@rem,w
  4990  0C99  0471               	iorwf	??___lbmod,w
  4991  0C9A  00F4               	movwf	___lbmod@rem
  4992  0C9B  1003               	clrc
  4993  0C9C  0DF2               	rlf	___lbmod@dividend,f
  4994  0C9D  0870               	movf	___lbmod@divisor,w
  4995  0C9E  0274               	subwf	___lbmod@rem,w
  4996  0C9F  1C03               	skipc
  4997  0CA0  2CA3               	goto	l4970
  4998  0CA1  0870               	movf	___lbmod@divisor,w
  4999  0CA2  02F4               	subwf	___lbmod@rem,f
  5000  0CA3                     l4970:	
  5001  0CA3  0BF3               	decfsz	___lbmod@counter,f
  5002  0CA4  2C8F               	goto	l4962
  5003  0CA5  0874               	movf	___lbmod@rem,w
  5004  0CA6  0008               	return
  5005  0CA7                     __end_of___lbmod:	
  5006  0CA7                     PL17:	
  5007  0CA7  082D               	movf	?___ftmul,w
  5008  0CA8  00C8               	movwf	?_fround
  5009  0CA9  082E               	movf	?___ftmul+1,w
  5010  0CAA  00C9               	movwf	?_fround+1
  5011  0CAB  082F               	movf	?___ftmul+2,w
  5012  0CAC  00CA               	movwf	?_fround+2
  5013  0CAD  0008               	return
  5014  0CAE                     PL27:	
  5015  0CAE  00AF               	movwf	?___ftmul+2
  5016  0CAF  084E               	movf	_fround$2833,w
  5017  0CB0  00B0               	movwf	?___ftmul+3
  5018  0CB1  084F               	movf	_fround$2833+1,w
  5019  0CB2  00B1               	movwf	?___ftmul+4
  5020  0CB3  0850               	movf	_fround$2833+2,w
  5021  0CB4  00B2               	movwf	?___ftmul+5
  5022  0CB5  0008               	return
  5023  0CB6                     PL31:	
  5024  0CB6  082D               	movf	?___ftmul,w
  5025  0CB7  00CE               	movwf	_fround$2833
  5026  0CB8  082E               	movf	?___ftmul+1,w
  5027  0CB9  00CF               	movwf	_fround$2833+1
  5028  0CBA  082F               	movf	?___ftmul+2,w
  5029  0CBB  00D0               	movwf	_fround$2833+2
  5030  0CBC  0008               	return
  5031                           
  5032                           	psect	text509
  5033  0CBD                     __ptext509:	
  5034 ;; =============== function ___lltoft ends ============
  5035                           
  5036                           
  5037 ;; *************** function ___awtoft *****************
  5038 ;; Defined at:
  5039 ;;		line 33 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awtoft.c"
  5040 ;; Parameters:    Size  Location     Type
  5041 ;;  c               2    8[COMMON] int 
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;  sign            1   11[COMMON] unsigned char 
  5044 ;; Return value:  Size  Location     Type
  5045 ;;                  3    8[COMMON] float 
  5046 ;; Registers used:
  5047 ;;		wreg, status,2, status,0, pclath, cstack
  5048 ;; Tracked objects:
  5049 ;;		On entry : 60/0
  5050 ;;		On exit  : 60/0
  5051 ;;		Unchanged: FFF9F/0
  5052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5053 ;;      Params:         3       0       0       0       0
  5054 ;;      Locals:         1       0       0       0       0
  5055 ;;      Temps:          0       0       0       0       0
  5056 ;;      Totals:         4       0       0       0       0
  5057 ;;Total ram usage:        4 bytes
  5058 ;; Hardware stack levels used:    1
  5059 ;; Hardware stack levels required when called:    1
  5060 ;; This function calls:
  5061 ;;		___ftpack
  5062 ;; This function is called by:
  5063 ;;		_main
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066  0CBD                     ___awtoft:	
  5067                           
  5068                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5069  0CBD  01FB               	clrf	___awtoft@sign
  5070  0CBE  1FF9               	btfss	___awtoft@c+1,7
  5071  0CBF  2CC7               	goto	l5346
  5072  0CC0  09F8               	comf	___awtoft@c,f
  5073  0CC1  09F9               	comf	___awtoft@c+1,f
  5074  0CC2  0AF8               	incf	___awtoft@c,f
  5075  0CC3  1903               	skipnz
  5076  0CC4  0AF9               	incf	___awtoft@c+1,f
  5077  0CC5  01FB               	clrf	___awtoft@sign
  5078  0CC6  0AFB               	incf	___awtoft@sign,f
  5079  0CC7                     l5346:	
  5080  0CC7  0878               	movf	___awtoft@c,w
  5081  0CC8  00F0               	movwf	?___ftpack
  5082  0CC9  0879               	movf	___awtoft@c+1,w
  5083  0CCA  00F1               	movwf	?___ftpack+1
  5084  0CCB  308E               	movlw	142
  5085  0CCC  01F2               	clrf	?___ftpack+2
  5086  0CCD  00F3               	movwf	?___ftpack+3
  5087  0CCE  087B               	movf	___awtoft@sign,w
  5088  0CCF  00F4               	movwf	?___ftpack+4
  5089  0CD0  2769               	fcall	___ftpack
  5090  0CD1  0870               	movf	?___ftpack,w
  5091  0CD2  00F8               	movwf	?___awtoft
  5092  0CD3  0871               	movf	?___ftpack+1,w
  5093  0CD4  00F9               	movwf	?___awtoft+1
  5094  0CD5  0872               	movf	?___ftpack+2,w
  5095  0CD6  00FA               	movwf	?___awtoft+2
  5096  0CD7  0008               	return
  5097  0CD8                     __end_of___awtoft:	
  5098  0CD8                     __ptext505:	
  5099 ;; =============== function ___ftsub ends ============
  5100                           
  5101                           
  5102 ;; *************** function _scale *****************
  5103 ;; Defined at:
  5104 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  5105 ;; Parameters:    Size  Location     Type
  5106 ;;  scl             1    wreg     char 
  5107 ;; Auto vars:     Size  Location     Type
  5108 ;;  scl             1   38[BANK0 ] char 
  5109 ;; Return value:  Size  Location     Type
  5110 ;;                  3   28[BANK0 ] char 
  5111 ;; Registers used:
  5112 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5113 ;; Tracked objects:
  5114 ;;		On entry : 60/20
  5115 ;;		On exit  : 60/0
  5116 ;;		Unchanged: FFF9F/0
  5117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5118 ;;      Params:         0       3       0       0       0
  5119 ;;      Locals:         0       4       0       0       0
  5120 ;;      Temps:          0       4       0       0       0
  5121 ;;      Totals:         0      11       0       0       0
  5122 ;;Total ram usage:       11 bytes
  5123 ;; Hardware stack levels used:    1
  5124 ;; Hardware stack levels required when called:    2
  5125 ;; This function calls:
  5126 ;;		___awmod
  5127 ;;		___awdiv
  5128 ;;		___ftmul
  5129 ;;		___bmul
  5130 ;; This function is called by:
  5131 ;;		_sprintf
  5132 ;; This function uses a non-reentrant model
  5133 ;;
  5134  0CD8                     _scale:	
  5135                           
  5136                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5137                           ;scale@scl stored from wreg
  5138  0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  5139  0CD9  00C6               	movwf	scale@scl
  5140  0CDA  1FC6               	btfss	scale@scl,7
  5141  0CDB  2DA4               	goto	l5418
  5142  0CDC  09C6               	comf	scale@scl,f
  5143  0CDD  0AC6               	incf	scale@scl,f
  5144  0CDE  0846               	movf	scale@scl,w
  5145  0CDF  3A80               	xorlw	128
  5146  0CE0  3E12               	addlw	-238
  5147  0CE1  1C03               	skipc
  5148  0CE2  2D48               	goto	l5408
  5149  0CE3  300A               	movlw	10
  5150  0CE4  27CB  120A  158A   	fcall	PL16	;call to abstracted procedure
  5151  0CE7  26AF  120A  158A   	fcall	___awmod
  5152  0CEA  0871               	movf	?___awmod+1,w
  5153  0CEB  00F9               	movwf	?___awdiv+3
  5154  0CEC  0870               	movf	?___awmod,w
  5155  0CED  00F8               	movwf	?___awdiv+2
  5156  0CEE  266A  120A  158A   	fcall	___awdiv
  5157  0CF1  27E0               	fcall	PL23	;call to abstracted procedure
  5158  0CF2  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5159  0CF3  0084               	movwf	4
  5160  0CF4  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5161  0CF9  00AD               	movwf	?___ftmul
  5162  0CFA  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5163  0CFF  00AE               	movwf	?___ftmul+1
  5164  0D00  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5165  0D05  27E8  120A  158A   	fcall	PL24	;call to abstracted procedure
  5166  0D08  1BF8               	btfsc	?___awdiv+2,7
  5167  0D09  03F9               	decf	?___awdiv+3,f
  5168  0D0A  266A  120A  158A   	fcall	___awdiv
  5169  0D0D  27BC               	fcall	PL10	;call to abstracted procedure
  5170  0D0E  3E37               	addlw	low ((__npowers_-__stringbase+54))
  5171  0D0F  0084               	movwf	4
  5172  0D10  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5173  0D15  00B0               	movwf	?___ftmul+3
  5174  0D16  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5175  0D1B  00B1               	movwf	?___ftmul+4
  5176  0D1C  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5177  0D21  00B2               	movwf	?___ftmul+5
  5178  0D22  26EC  120A  158A   	fcall	___ftmul
  5179  0D25  27A7  120A  158A   	fcall	PL8	;call to abstracted procedure
  5180  0D28  1BF2               	btfsc	?___awmod+2,7
  5181  0D29  03F3               	decf	?___awmod+3,f
  5182  0D2A  26AF  120A  158A   	fcall	___awmod
  5183  0D2D  27B4               	fcall	PL9	;call to abstracted procedure
  5184  0D2E  3E01               	addlw	low (__npowers_-__stringbase)
  5185  0D2F  0084               	movwf	4
  5186  0D30  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5187  0D35  00AD               	movwf	?___ftmul
  5188  0D36  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5189  0D3B  00AE               	movwf	?___ftmul+1
  5190  0D3C  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5191  0D41  27F0  120A  158A   	fcall	PL25	;call to abstracted procedure
  5192  0D44  26EC  120A  158A   	fcall	___ftmul
  5193  0D47  2FC4               	ljmp	PL11	;call to abstracted procedure
  5194  0D48                     l5408:	
  5195  0D48  0846               	movf	scale@scl,w
  5196  0D49  3A80               	xorlw	128
  5197  0D4A  3E75               	addlw	-139
  5198  0D4B  1C03               	skipc
  5199  0D4C  2D8D               	goto	l5414
  5200  0D4D  300A               	movlw	10
  5201  0D4E  00F0               	movwf	?___awmod
  5202  0D4F  01F1               	clrf	?___awmod+1
  5203  0D50  0846               	movf	scale@scl,w
  5204  0D51  00F2               	movwf	?___awmod+2
  5205  0D52  01F3               	clrf	?___awmod+3
  5206  0D53  1BF2               	btfsc	?___awmod+2,7
  5207  0D54  03F3               	decf	?___awmod+3,f
  5208  0D55  26AF  120A  158A   	fcall	___awmod
  5209  0D58  27B4               	fcall	PL9	;call to abstracted procedure
  5210  0D59  3E01               	addlw	low (__npowers_-__stringbase)
  5211  0D5A  0084               	movwf	4
  5212  0D5B  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5213  0D60  00AD               	movwf	?___ftmul
  5214  0D61  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5215  0D66  00AE               	movwf	?___ftmul+1
  5216  0D67  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5217  0D6C  27F8  120A  158A   	fcall	PL28	;call to abstracted procedure
  5218  0D6F  1BF8               	btfsc	?___awdiv+2,7
  5219  0D70  03F9               	decf	?___awdiv+3,f
  5220  0D71  266A  120A  158A   	fcall	___awdiv
  5221  0D74  27BC               	fcall	PL10	;call to abstracted procedure
  5222  0D75  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5223  0D76  0084               	movwf	4
  5224  0D77  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5225  0D7C  00B0               	movwf	?___ftmul+3
  5226  0D7D  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5227  0D82  00B1               	movwf	?___ftmul+4
  5228  0D83  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5229  0D88  00B2               	movwf	?___ftmul+5
  5230  0D89  26EC  120A  158A   	fcall	___ftmul
  5231  0D8C  2FC4               	ljmp	PL11	;call to abstracted procedure
  5232  0D8D                     l5414:	
  5233  0D8D  3003               	movlw	3
  5234  0D8E  00F9               	movwf	?___bmul
  5235  0D8F  0846               	movf	scale@scl,w
  5236  0D90  275B               	fcall	___bmul
  5237  0D91  3E01               	addlw	low (__npowers_-__stringbase)
  5238  0D92  0084               	movwf	4
  5239  0D93  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5240  0D98  00BC               	movwf	?_scale
  5241  0D99  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5242  0D9E  00BD               	movwf	?_scale+1
  5243  0D9F  120A  158A  200A   	fcall	stringdir
  5244  0DA2  00BE               	movwf	?_scale+2
  5245  0DA3  0008               	return
  5246  0DA4                     l5418:	
  5247  0DA4  0846               	movf	scale@scl,w
  5248  0DA5  3A80               	xorlw	128
  5249  0DA6  3E12               	addlw	-238
  5250  0DA7  1C03               	skipc
  5251  0DA8  2E0E               	goto	l5426
  5252  0DA9  300A               	movlw	10
  5253  0DAA  27CB  120A  158A   	fcall	PL16	;call to abstracted procedure
  5254  0DAD  26AF  120A  158A   	fcall	___awmod
  5255  0DB0  0871               	movf	?___awmod+1,w
  5256  0DB1  00F9               	movwf	?___awdiv+3
  5257  0DB2  0870               	movf	?___awmod,w
  5258  0DB3  00F8               	movwf	?___awdiv+2
  5259  0DB4  266A  120A  158A   	fcall	___awdiv
  5260  0DB7  27E0               	fcall	PL23	;call to abstracted procedure
  5261  0DB8  3E43               	addlw	low ((__powers_-__stringbase+27))
  5262  0DB9  0084               	movwf	4
  5263  0DBA  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5264  0DBF  00AD               	movwf	?___ftmul
  5265  0DC0  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5266  0DC5  00AE               	movwf	?___ftmul+1
  5267  0DC6  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5268  0DCB  27E8  120A  158A   	fcall	PL24	;call to abstracted procedure
  5269  0DCE  1BF8               	btfsc	?___awdiv+2,7
  5270  0DCF  03F9               	decf	?___awdiv+3,f
  5271  0DD0  266A  120A  158A   	fcall	___awdiv
  5272  0DD3  27BC               	fcall	PL10	;call to abstracted procedure
  5273  0DD4  3E5E               	addlw	low ((__powers_-__stringbase+54))
  5274  0DD5  0084               	movwf	4
  5275  0DD6  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5276  0DDB  00B0               	movwf	?___ftmul+3
  5277  0DDC  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5278  0DE1  00B1               	movwf	?___ftmul+4
  5279  0DE2  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5280  0DE7  00B2               	movwf	?___ftmul+5
  5281  0DE8  26EC  120A  158A   	fcall	___ftmul
  5282  0DEB  27A7  120A  158A   	fcall	PL8	;call to abstracted procedure
  5283  0DEE  1BF2               	btfsc	?___awmod+2,7
  5284  0DEF  03F3               	decf	?___awmod+3,f
  5285  0DF0  26AF  120A  158A   	fcall	___awmod
  5286  0DF3  27B4               	fcall	PL9	;call to abstracted procedure
  5287  0DF4  3E28               	addlw	low (__powers_-__stringbase)
  5288  0DF5  0084               	movwf	4
  5289  0DF6  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5290  0DFB  00AD               	movwf	?___ftmul
  5291  0DFC  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5292  0E01  00AE               	movwf	?___ftmul+1
  5293  0E02  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5294  0E07  27F0  120A  158A   	fcall	PL25	;call to abstracted procedure
  5295  0E0A  26EC  120A  158A   	fcall	___ftmul
  5296  0E0D  2FC4               	ljmp	PL11	;call to abstracted procedure
  5297  0E0E                     l5426:	
  5298  0E0E  0846               	movf	scale@scl,w
  5299  0E0F  3A80               	xorlw	128
  5300  0E10  3E75               	addlw	-139
  5301  0E11  1C03               	skipc
  5302  0E12  2E53               	goto	l5432
  5303  0E13  300A               	movlw	10
  5304  0E14  00F0               	movwf	?___awmod
  5305  0E15  01F1               	clrf	?___awmod+1
  5306  0E16  0846               	movf	scale@scl,w
  5307  0E17  00F2               	movwf	?___awmod+2
  5308  0E18  01F3               	clrf	?___awmod+3
  5309  0E19  1BF2               	btfsc	?___awmod+2,7
  5310  0E1A  03F3               	decf	?___awmod+3,f
  5311  0E1B  26AF  120A  158A   	fcall	___awmod
  5312  0E1E  27B4               	fcall	PL9	;call to abstracted procedure
  5313  0E1F  3E28               	addlw	low (__powers_-__stringbase)
  5314  0E20  0084               	movwf	4
  5315  0E21  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5316  0E26  00AD               	movwf	?___ftmul
  5317  0E27  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5318  0E2C  00AE               	movwf	?___ftmul+1
  5319  0E2D  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5320  0E32  27F8  120A  158A   	fcall	PL28	;call to abstracted procedure
  5321  0E35  1BF8               	btfsc	?___awdiv+2,7
  5322  0E36  03F9               	decf	?___awdiv+3,f
  5323  0E37  266A  120A  158A   	fcall	___awdiv
  5324  0E3A  27BC               	fcall	PL10	;call to abstracted procedure
  5325  0E3B  3E43               	addlw	low ((__powers_-__stringbase+27))
  5326  0E3C  0084               	movwf	4
  5327  0E3D  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5328  0E42  00B0               	movwf	?___ftmul+3
  5329  0E43  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5330  0E48  00B1               	movwf	?___ftmul+4
  5331  0E49  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5332  0E4E  00B2               	movwf	?___ftmul+5
  5333  0E4F  26EC  120A  158A   	fcall	___ftmul
  5334  0E52  2FC4               	ljmp	PL11	;call to abstracted procedure
  5335  0E53                     l5432:	
  5336  0E53  3003               	movlw	3
  5337  0E54  00F9               	movwf	?___bmul
  5338  0E55  0846               	movf	scale@scl,w
  5339  0E56  275B               	fcall	___bmul
  5340  0E57  3E28               	addlw	low (__powers_-__stringbase)
  5341  0E58  0084               	movwf	4
  5342  0E59  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5343  0E5E  00BC               	movwf	?_scale
  5344  0E5F  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5345  0E64  00BD               	movwf	?_scale+1
  5346  0E65  120A  158A  200A   	fcall	stringdir
  5347  0E68  00BE               	movwf	?_scale+2
  5348  0E69  0008               	return
  5349  0E6A                     __end_of_scale:	
  5350  0E6A                     __ptext518:	
  5351 ;; =============== function ___llmod ends ============
  5352                           
  5353                           
  5354 ;; *************** function ___awdiv *****************
  5355 ;; Defined at:
  5356 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awdiv.c"
  5357 ;; Parameters:    Size  Location     Type
  5358 ;;  divisor         2    6[COMMON] int 
  5359 ;;  dividend        2    8[COMMON] int 
  5360 ;; Auto vars:     Size  Location     Type
  5361 ;;  quotient        2   12[COMMON] int 
  5362 ;;  sign            1   11[COMMON] unsigned char 
  5363 ;;  counter         1   10[COMMON] unsigned char 
  5364 ;; Return value:  Size  Location     Type
  5365 ;;                  2    6[COMMON] int 
  5366 ;; Registers used:
  5367 ;;		wreg, status,2, status,0
  5368 ;; Tracked objects:
  5369 ;;		On entry : 40/20
  5370 ;;		On exit  : 40/20
  5371 ;;		Unchanged: FFFBF/0
  5372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5373 ;;      Params:         4       0       0       0       0
  5374 ;;      Locals:         4       0       0       0       0
  5375 ;;      Temps:          0       0       0       0       0
  5376 ;;      Totals:         8       0       0       0       0
  5377 ;;Total ram usage:        8 bytes
  5378 ;; Hardware stack levels used:    1
  5379 ;; This function calls:
  5380 ;;		Nothing
  5381 ;; This function is called by:
  5382 ;;		_scale
  5383 ;;		_sprintf
  5384 ;; This function uses a non-reentrant model
  5385 ;;
  5386  0E6A                     ___awdiv:	
  5387                           
  5388                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5389  0E6A  01FB               	clrf	___awdiv@sign
  5390  0E6B  1FF7               	btfss	___awdiv@divisor+1,7
  5391  0E6C  2E74               	goto	l5050
  5392  0E6D  09F6               	comf	___awdiv@divisor,f
  5393  0E6E  09F7               	comf	___awdiv@divisor+1,f
  5394  0E6F  0AF6               	incf	___awdiv@divisor,f
  5395  0E70  1903               	skipnz
  5396  0E71  0AF7               	incf	___awdiv@divisor+1,f
  5397  0E72  01FB               	clrf	___awdiv@sign
  5398  0E73  0AFB               	incf	___awdiv@sign,f
  5399  0E74                     l5050:	
  5400  0E74  1FF9               	btfss	___awdiv@dividend+1,7
  5401  0E75  2E7D               	goto	l5056
  5402  0E76  09F8               	comf	___awdiv@dividend,f
  5403  0E77  09F9               	comf	___awdiv@dividend+1,f
  5404  0E78  0AF8               	incf	___awdiv@dividend,f
  5405  0E79  1903               	skipnz
  5406  0E7A  0AF9               	incf	___awdiv@dividend+1,f
  5407  0E7B  3001               	movlw	1
  5408  0E7C  06FB               	xorwf	___awdiv@sign,f
  5409  0E7D                     l5056:	
  5410  0E7D  01FC               	clrf	___awdiv@quotient
  5411  0E7E  01FD               	clrf	___awdiv@quotient+1
  5412  0E7F  0877               	movf	___awdiv@divisor+1,w
  5413  0E80  0476               	iorwf	___awdiv@divisor,w
  5414  0E81  1903               	skipnz
  5415  0E82  2EA2               	goto	l5078
  5416  0E83  01FA               	clrf	___awdiv@counter
  5417  0E84                     L14:	
  5418  0E84  0AFA               	incf	___awdiv@counter,f
  5419  0E85  1BF7               	btfsc	___awdiv@divisor+1,7
  5420  0E86  2E8B               	goto	l5066
  5421  0E87  1003               	clrc
  5422  0E88  0DF6               	rlf	___awdiv@divisor,f
  5423  0E89  0DF7               	rlf	___awdiv@divisor+1,f
  5424  0E8A  2E84               	goto	L14
  5425  0E8B                     l5066:	
  5426  0E8B  1003               	clrc
  5427  0E8C  0DFC               	rlf	___awdiv@quotient,f
  5428  0E8D  0DFD               	rlf	___awdiv@quotient+1,f
  5429  0E8E  0877               	movf	___awdiv@divisor+1,w
  5430  0E8F  0279               	subwf	___awdiv@dividend+1,w
  5431  0E90  1D03               	skipz
  5432  0E91  2E94               	goto	u2145
  5433  0E92  0876               	movf	___awdiv@divisor,w
  5434  0E93  0278               	subwf	___awdiv@dividend,w
  5435  0E94                     u2145:	
  5436  0E94  1C03               	skipc
  5437  0E95  2E9E               	goto	L15
  5438  0E96  0876               	movf	___awdiv@divisor,w
  5439  0E97  02F8               	subwf	___awdiv@dividend,f
  5440  0E98  0877               	movf	___awdiv@divisor+1,w
  5441  0E99  1C03               	skipc
  5442  0E9A  03F9               	decf	___awdiv@dividend+1,f
  5443  0E9B  02F9               	subwf	___awdiv@dividend+1,f
  5444  0E9C  147C               	bsf	___awdiv@quotient,0
  5445  0E9D  1003               	clrc
  5446  0E9E                     L15:	
  5447  0E9E  0CF7               	rrf	___awdiv@divisor+1,f
  5448  0E9F  0CF6               	rrf	___awdiv@divisor,f
  5449  0EA0  0BFA               	decfsz	___awdiv@counter,f
  5450  0EA1  2E8B               	goto	l5066
  5451  0EA2                     l5078:	
  5452  0EA2  087B               	movf	___awdiv@sign,w
  5453  0EA3  1903               	btfsc	3,2
  5454  0EA4  2EAA               	goto	l5082
  5455  0EA5  09FC               	comf	___awdiv@quotient,f
  5456  0EA6  09FD               	comf	___awdiv@quotient+1,f
  5457  0EA7  0AFC               	incf	___awdiv@quotient,f
  5458  0EA8  1903               	skipnz
  5459  0EA9  0AFD               	incf	___awdiv@quotient+1,f
  5460  0EAA                     l5082:	
  5461  0EAA  087D               	movf	___awdiv@quotient+1,w
  5462  0EAB  00F7               	movwf	?___awdiv+1
  5463  0EAC  087C               	movf	___awdiv@quotient,w
  5464  0EAD  00F6               	movwf	?___awdiv
  5465  0EAE  0008               	return
  5466  0EAF                     __end_of___awdiv:	
  5467  0EAF                     __ptext513:	
  5468 ;; =============== function _pause ends ============
  5469                           
  5470                           
  5471 ;; *************** function ___awmod *****************
  5472 ;; Defined at:
  5473 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awmod.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;  divisor         2    0[COMMON] int 
  5476 ;;  dividend        2    2[COMMON] int 
  5477 ;; Auto vars:     Size  Location     Type
  5478 ;;  sign            1    5[COMMON] unsigned char 
  5479 ;;  counter         1    4[COMMON] unsigned char 
  5480 ;; Return value:  Size  Location     Type
  5481 ;;                  2    0[COMMON] int 
  5482 ;; Registers used:
  5483 ;;		wreg, status,2, status,0
  5484 ;; Tracked objects:
  5485 ;;		On entry : 60/0
  5486 ;;		On exit  : 60/0
  5487 ;;		Unchanged: FFF9F/0
  5488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5489 ;;      Params:         4       0       0       0       0
  5490 ;;      Locals:         2       0       0       0       0
  5491 ;;      Temps:          0       0       0       0       0
  5492 ;;      Totals:         6       0       0       0       0
  5493 ;;Total ram usage:        6 bytes
  5494 ;; Hardware stack levels used:    1
  5495 ;; This function calls:
  5496 ;;		Nothing
  5497 ;; This function is called by:
  5498 ;;		_scale
  5499 ;; This function uses a non-reentrant model
  5500 ;;
  5501  0EAF                     ___awmod:	
  5502                           
  5503                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5504  0EAF  01F5               	clrf	___awmod@sign
  5505  0EB0  1FF3               	btfss	___awmod@dividend+1,7
  5506  0EB1  2EB9               	goto	l5168
  5507  0EB2  09F2               	comf	___awmod@dividend,f
  5508  0EB3  09F3               	comf	___awmod@dividend+1,f
  5509  0EB4  0AF2               	incf	___awmod@dividend,f
  5510  0EB5  1903               	skipnz
  5511  0EB6  0AF3               	incf	___awmod@dividend+1,f
  5512  0EB7  01F5               	clrf	___awmod@sign
  5513  0EB8  0AF5               	incf	___awmod@sign,f
  5514  0EB9                     l5168:	
  5515  0EB9  1FF1               	btfss	___awmod@divisor+1,7
  5516  0EBA  2EC0               	goto	l5172
  5517  0EBB  09F0               	comf	___awmod@divisor,f
  5518  0EBC  09F1               	comf	___awmod@divisor+1,f
  5519  0EBD  0AF0               	incf	___awmod@divisor,f
  5520  0EBE  1903               	skipnz
  5521  0EBF  0AF1               	incf	___awmod@divisor+1,f
  5522  0EC0                     l5172:	
  5523  0EC0  0871               	movf	___awmod@divisor+1,w
  5524  0EC1  0470               	iorwf	___awmod@divisor,w
  5525  0EC2  1903               	skipnz
  5526  0EC3  2EDF               	goto	l5188
  5527  0EC4  01F4               	clrf	___awmod@counter
  5528  0EC5                     L7:	
  5529  0EC5  0AF4               	incf	___awmod@counter,f
  5530  0EC6  1BF1               	btfsc	___awmod@divisor+1,7
  5531  0EC7  2ECC               	goto	l5180
  5532  0EC8  1003               	clrc
  5533  0EC9  0DF0               	rlf	___awmod@divisor,f
  5534  0ECA  0DF1               	rlf	___awmod@divisor+1,f
  5535  0ECB  2EC5               	goto	L7
  5536  0ECC                     l5180:	
  5537  0ECC  0871               	movf	___awmod@divisor+1,w
  5538  0ECD  0273               	subwf	___awmod@dividend+1,w
  5539  0ECE  1D03               	skipz
  5540  0ECF  2ED2               	goto	u2335
  5541  0ED0  0870               	movf	___awmod@divisor,w
  5542  0ED1  0272               	subwf	___awmod@dividend,w
  5543  0ED2                     u2335:	
  5544  0ED2  1C03               	skipc
  5545  0ED3  2EDB               	goto	L8
  5546  0ED4  0870               	movf	___awmod@divisor,w
  5547  0ED5  02F2               	subwf	___awmod@dividend,f
  5548  0ED6  0871               	movf	___awmod@divisor+1,w
  5549  0ED7  1C03               	skipc
  5550  0ED8  03F3               	decf	___awmod@dividend+1,f
  5551  0ED9  02F3               	subwf	___awmod@dividend+1,f
  5552  0EDA  1003               	clrc
  5553  0EDB                     L8:	
  5554  0EDB  0CF1               	rrf	___awmod@divisor+1,f
  5555  0EDC  0CF0               	rrf	___awmod@divisor,f
  5556  0EDD  0BF4               	decfsz	___awmod@counter,f
  5557  0EDE  2ECC               	goto	l5180
  5558  0EDF                     l5188:	
  5559  0EDF  0875               	movf	___awmod@sign,w
  5560  0EE0  1903               	btfsc	3,2
  5561  0EE1  2EE7               	goto	l5192
  5562  0EE2  09F2               	comf	___awmod@dividend,f
  5563  0EE3  09F3               	comf	___awmod@dividend+1,f
  5564  0EE4  0AF2               	incf	___awmod@dividend,f
  5565  0EE5  1903               	skipnz
  5566  0EE6  0AF3               	incf	___awmod@dividend+1,f
  5567  0EE7                     l5192:	
  5568  0EE7  0873               	movf	___awmod@dividend+1,w
  5569  0EE8  00F1               	movwf	?___awmod+1
  5570  0EE9  0872               	movf	___awmod@dividend,w
  5571  0EEA  00F0               	movwf	?___awmod
  5572  0EEB  0008               	return
  5573  0EEC                     __end_of___awmod:	
  5574  0EEC                     __ptext510:	
  5575 ;; =============== function ___awtoft ends ============
  5576                           
  5577                           
  5578 ;; *************** function ___ftmul *****************
  5579 ;; Defined at:
  5580 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftmul.c"
  5581 ;; Parameters:    Size  Location     Type
  5582 ;;  f1              3   13[BANK0 ] float 
  5583 ;;  f2              3   16[BANK0 ] float 
  5584 ;; Auto vars:     Size  Location     Type
  5585 ;;  f3_as_produc    3   23[BANK0 ] unsigned um
  5586 ;;  sign            1   27[BANK0 ] unsigned char 
  5587 ;;  cntr            1   26[BANK0 ] unsigned char 
  5588 ;;  exp             1   22[BANK0 ] unsigned char 
  5589 ;; Return value:  Size  Location     Type
  5590 ;;                  3   13[BANK0 ] float 
  5591 ;; Registers used:
  5592 ;;		wreg, status,2, status,0, pclath, cstack
  5593 ;; Tracked objects:
  5594 ;;		On entry : 60/0
  5595 ;;		On exit  : 60/0
  5596 ;;		Unchanged: FFF9F/0
  5597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5598 ;;      Params:         0       6       0       0       0
  5599 ;;      Locals:         0       6       0       0       0
  5600 ;;      Temps:          0       3       0       0       0
  5601 ;;      Totals:         0      15       0       0       0
  5602 ;;Total ram usage:       15 bytes
  5603 ;; Hardware stack levels used:    1
  5604 ;; Hardware stack levels required when called:    1
  5605 ;; This function calls:
  5606 ;;		___ftpack
  5607 ;; This function is called by:
  5608 ;;		_main
  5609 ;;		_fround
  5610 ;;		_scale
  5611 ;;		_sprintf
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614  0EEC                     ___ftmul:	
  5615                           
  5616                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5617  0EEC  082D               	movf	___ftmul@f1,w
  5618  0EED  00B3               	movwf	??___ftmul
  5619  0EEE  082E               	movf	___ftmul@f1+1,w
  5620  0EEF  00B4               	movwf	??___ftmul+1
  5621  0EF0  082F               	movf	___ftmul@f1+2,w
  5622  0EF1  00B5               	movwf	??___ftmul+2
  5623  0EF2  1003               	clrc
  5624  0EF3  0D34               	rlf	??___ftmul+1,w
  5625  0EF4  0D35               	rlf	??___ftmul+2,w
  5626  0EF5  00B6               	movwf	___ftmul@exp
  5627  0EF6  08B6               	movf	___ftmul@exp,f
  5628  0EF7  1D03               	skipz
  5629  0EF8  2EFD               	goto	l5288
  5630  0EF9  01AD               	clrf	?___ftmul
  5631  0EFA  01AE               	clrf	?___ftmul+1
  5632  0EFB  01AF               	clrf	?___ftmul+2
  5633  0EFC  0008               	return
  5634  0EFD                     l5288:	
  5635  0EFD  0830               	movf	___ftmul@f2,w
  5636  0EFE  00B3               	movwf	??___ftmul
  5637  0EFF  0831               	movf	___ftmul@f2+1,w
  5638  0F00  00B4               	movwf	??___ftmul+1
  5639  0F01  0832               	movf	___ftmul@f2+2,w
  5640  0F02  00B5               	movwf	??___ftmul+2
  5641  0F03  1003               	clrc
  5642  0F04  0D34               	rlf	??___ftmul+1,w
  5643  0F05  0D35               	rlf	??___ftmul+2,w
  5644  0F06  00BB               	movwf	___ftmul@sign
  5645  0F07  08BB               	movf	___ftmul@sign,f
  5646  0F08  1D03               	skipz
  5647  0F09  2F0E               	goto	l5294
  5648  0F0A  01AD               	clrf	?___ftmul
  5649  0F0B  01AE               	clrf	?___ftmul+1
  5650  0F0C  01AF               	clrf	?___ftmul+2
  5651  0F0D  0008               	return
  5652  0F0E                     l5294:	
  5653  0F0E  083B               	movf	___ftmul@sign,w
  5654  0F0F  3E7B               	addlw	123
  5655  0F10  07B6               	addwf	___ftmul@exp,f
  5656  0F11  082F               	movf	___ftmul@f1+2,w
  5657  0F12  00BB               	movwf	___ftmul@sign
  5658  0F13  0832               	movf	___ftmul@f2+2,w
  5659  0F14  06BB               	xorwf	___ftmul@sign,f
  5660  0F15  3080               	movlw	128
  5661  0F16  05BB               	andwf	___ftmul@sign,f
  5662  0F17  3007               	movlw	7
  5663  0F18  17AE               	bsf	___ftmul@f1+1,7
  5664  0F19  17B1               	bsf	___ftmul@f2+1,7
  5665  0F1A  01B2               	clrf	___ftmul@f2+2
  5666  0F1B  01B7               	clrf	___ftmul@f3_as_product
  5667  0F1C  01B8               	clrf	___ftmul@f3_as_product+1
  5668  0F1D  01B9               	clrf	___ftmul@f3_as_product+2
  5669  0F1E  00BA               	movwf	___ftmul@cntr
  5670  0F1F                     l5312:	
  5671  0F1F  1C2D               	btfss	___ftmul@f1,0
  5672  0F20  2F29               	goto	l5316
  5673  0F21  0830               	movf	___ftmul@f2,w
  5674  0F22  27D6  120A  158A   	fcall	PL18	;call to abstracted procedure
  5675  0F25  1803               	skipnc
  5676  0F26  0A32               	incf	___ftmul@f2+2,w
  5677  0F27  1D03               	btfss	3,2
  5678  0F28  07B9               	addwf	___ftmul@f3_as_product+2,f
  5679  0F29                     l5316:	
  5680  0F29  1003               	clrc
  5681  0F2A  0CAF               	rrf	___ftmul@f1+2,f
  5682  0F2B  0CAE               	rrf	___ftmul@f1+1,f
  5683  0F2C  0CAD               	rrf	___ftmul@f1,f
  5684  0F2D  1003               	clrc
  5685  0F2E  0DB0               	rlf	___ftmul@f2,f
  5686  0F2F  0DB1               	rlf	___ftmul@f2+1,f
  5687  0F30  0DB2               	rlf	___ftmul@f2+2,f
  5688  0F31  0BBA               	decfsz	___ftmul@cntr,f
  5689  0F32  2F1F               	goto	l5312
  5690  0F33  3009               	movlw	9
  5691  0F34  00BA               	movwf	___ftmul@cntr
  5692  0F35                     l5324:	
  5693  0F35  1C2D               	btfss	___ftmul@f1,0
  5694  0F36  2F3F               	goto	l5328
  5695  0F37  0830               	movf	___ftmul@f2,w
  5696  0F38  27D6  120A  158A   	fcall	PL18	;call to abstracted procedure
  5697  0F3B  1803               	skipnc
  5698  0F3C  0A32               	incf	___ftmul@f2+2,w
  5699  0F3D  1D03               	btfss	3,2
  5700  0F3E  07B9               	addwf	___ftmul@f3_as_product+2,f
  5701  0F3F                     l5328:	
  5702  0F3F  1003               	clrc
  5703  0F40  0CAF               	rrf	___ftmul@f1+2,f
  5704  0F41  0CAE               	rrf	___ftmul@f1+1,f
  5705  0F42  0CAD               	rrf	___ftmul@f1,f
  5706  0F43  1003               	clrc
  5707  0F44  0CB9               	rrf	___ftmul@f3_as_product+2,f
  5708  0F45  0CB8               	rrf	___ftmul@f3_as_product+1,f
  5709  0F46  0CB7               	rrf	___ftmul@f3_as_product,f
  5710  0F47  0BBA               	decfsz	___ftmul@cntr,f
  5711  0F48  2F35               	goto	l5324
  5712  0F49  0837               	movf	___ftmul@f3_as_product,w
  5713  0F4A  00F0               	movwf	?___ftpack
  5714  0F4B  0838               	movf	___ftmul@f3_as_product+1,w
  5715  0F4C  00F1               	movwf	?___ftpack+1
  5716  0F4D  0839               	movf	___ftmul@f3_as_product+2,w
  5717  0F4E  00F2               	movwf	?___ftpack+2
  5718  0F4F  0836               	movf	___ftmul@exp,w
  5719  0F50  00F3               	movwf	?___ftpack+3
  5720  0F51  083B               	movf	___ftmul@sign,w
  5721  0F52  00F4               	movwf	?___ftpack+4
  5722  0F53  2769               	fcall	___ftpack
  5723  0F54  0870               	movf	?___ftpack,w
  5724  0F55  00AD               	movwf	?___ftmul
  5725  0F56  0871               	movf	?___ftpack+1,w
  5726  0F57  00AE               	movwf	?___ftmul+1
  5727  0F58  0872               	movf	?___ftpack+2,w
  5728  0F59  00AF               	movwf	?___ftmul+2
  5729  0F5A  0008               	return
  5730  0F5B                     __end_of___ftmul:	
  5731  0F5B                     __ptext524:	
  5732 ;; =============== function ___wmul ends ============
  5733                           
  5734                           
  5735 ;; *************** function ___bmul *****************
  5736 ;; Defined at:
  5737 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\bmul.c"
  5738 ;; Parameters:    Size  Location     Type
  5739 ;;  multiplier      1    wreg     unsigned char 
  5740 ;;  multiplicand    1    9[COMMON] unsigned char 
  5741 ;; Auto vars:     Size  Location     Type
  5742 ;;  multiplier      1   11[COMMON] unsigned char 
  5743 ;;  product         1   10[COMMON] unsigned char 
  5744 ;; Return value:  Size  Location     Type
  5745 ;;                  1    wreg      unsigned char 
  5746 ;; Registers used:
  5747 ;;		wreg, status,2, status,0
  5748 ;; Tracked objects:
  5749 ;;		On entry : 60/0
  5750 ;;		On exit  : 60/0
  5751 ;;		Unchanged: FFF9F/0
  5752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5753 ;;      Params:         1       0       0       0       0
  5754 ;;      Locals:         2       0       0       0       0
  5755 ;;      Temps:          0       0       0       0       0
  5756 ;;      Totals:         3       0       0       0       0
  5757 ;;Total ram usage:        3 bytes
  5758 ;; Hardware stack levels used:    1
  5759 ;; This function calls:
  5760 ;;		Nothing
  5761 ;; This function is called by:
  5762 ;;		_fround
  5763 ;;		_scale
  5764 ;; This function uses a non-reentrant model
  5765 ;;
  5766  0F5B                     ___bmul:	
  5767                           
  5768                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5769                           ;___bmul@multiplier stored from wreg
  5770  0F5B  00FB               	movwf	___bmul@multiplier
  5771  0F5C  01FA               	clrf	___bmul@product
  5772  0F5D                     l4904:	
  5773  0F5D  0879               	movf	___bmul@multiplicand,w
  5774  0F5E  187B               	btfsc	___bmul@multiplier,0
  5775  0F5F  07FA               	addwf	___bmul@product,f
  5776  0F60  1003               	clrc
  5777  0F61  0DF9               	rlf	___bmul@multiplicand,f
  5778  0F62  1003               	clrc
  5779  0F63  0CFB               	rrf	___bmul@multiplier,f
  5780  0F64  08FB               	movf	___bmul@multiplier,f
  5781  0F65  1D03               	skipz
  5782  0F66  2F5D               	goto	l4904
  5783  0F67  087A               	movf	___bmul@product,w
  5784  0F68  0008               	return
  5785  0F69                     __end_of___bmul:	
  5786  0F69                     __ptext520:	
  5787 ;; =============== function ___fttol ends ============
  5788                           
  5789                           
  5790 ;; *************** function ___ftpack *****************
  5791 ;; Defined at:
  5792 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\float.c"
  5793 ;; Parameters:    Size  Location     Type
  5794 ;;  arg             3    0[COMMON] unsigned um
  5795 ;;  exp             1    3[COMMON] unsigned char 
  5796 ;;  sign            1    4[COMMON] unsigned char 
  5797 ;; Auto vars:     Size  Location     Type
  5798 ;;		None
  5799 ;; Return value:  Size  Location     Type
  5800 ;;                  3    0[COMMON] float 
  5801 ;; Registers used:
  5802 ;;		wreg, status,2, status,0
  5803 ;; Tracked objects:
  5804 ;;		On entry : 40/20
  5805 ;;		On exit  : 40/20
  5806 ;;		Unchanged: FFFBF/0
  5807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5808 ;;      Params:         5       0       0       0       0
  5809 ;;      Locals:         0       0       0       0       0
  5810 ;;      Temps:          3       0       0       0       0
  5811 ;;      Totals:         8       0       0       0       0
  5812 ;;Total ram usage:        8 bytes
  5813 ;; Hardware stack levels used:    1
  5814 ;; This function calls:
  5815 ;;		Nothing
  5816 ;; This function is called by:
  5817 ;;		___ftadd
  5818 ;;		___ftmul
  5819 ;;		___awtoft
  5820 ;;		___lltoft
  5821 ;; This function uses a non-reentrant model
  5822 ;;
  5823  0F69                     ___ftpack:	
  5824                           
  5825                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  5826  0F69  0873               	movf	___ftpack@exp,w
  5827  0F6A  1903               	btfsc	3,2
  5828  0F6B  2F71               	goto	l4980
  5829  0F6C  0872               	movf	___ftpack@arg+2,w
  5830  0F6D  0471               	iorwf	___ftpack@arg+1,w
  5831  0F6E  0470               	iorwf	___ftpack@arg,w
  5832  0F6F  1D03               	skipz
  5833  0F70  2F7A               	goto	l4986
  5834  0F71                     l4980:	
  5835  0F71  01F0               	clrf	?___ftpack
  5836  0F72  01F1               	clrf	?___ftpack+1
  5837  0F73  01F2               	clrf	?___ftpack+2
  5838  0F74  0008               	return
  5839  0F75                     l4984:	
  5840  0F75  0AF3               	incf	___ftpack@exp,f
  5841  0F76  1003               	clrc
  5842  0F77  0CF2               	rrf	___ftpack@arg+2,f
  5843  0F78  0CF1               	rrf	___ftpack@arg+1,f
  5844  0F79  0CF0               	rrf	___ftpack@arg,f
  5845  0F7A                     l4986:	
  5846  0F7A  30FE               	movlw	254
  5847  0F7B  0572               	andwf	___ftpack@arg+2,w
  5848  0F7C  1903               	btfsc	3,2
  5849  0F7D  2F89               	goto	l4990
  5850  0F7E  2F75               	goto	l4984
  5851  0F7F                     l4988:	
  5852  0F7F  0AF3               	incf	___ftpack@exp,f
  5853  0F80  0AF0               	incf	___ftpack@arg,f
  5854  0F81  1903               	skipnz
  5855  0F82  0AF1               	incf	___ftpack@arg+1,f
  5856  0F83  1903               	skipnz
  5857  0F84  0AF2               	incf	___ftpack@arg+2,f
  5858  0F85  1003               	clrc
  5859  0F86  0CF2               	rrf	___ftpack@arg+2,f
  5860  0F87  0CF1               	rrf	___ftpack@arg+1,f
  5861  0F88  0CF0               	rrf	___ftpack@arg,f
  5862  0F89                     l4990:	
  5863  0F89  30FF               	movlw	255
  5864  0F8A  0572               	andwf	___ftpack@arg+2,w
  5865  0F8B  1903               	btfsc	3,2
  5866  0F8C  2F93               	goto	l4994
  5867  0F8D  2F7F               	goto	l4988
  5868  0F8E                     l4992:	
  5869  0F8E  03F3               	decf	___ftpack@exp,f
  5870  0F8F  1003               	clrc
  5871  0F90  0DF0               	rlf	___ftpack@arg,f
  5872  0F91  0DF1               	rlf	___ftpack@arg+1,f
  5873  0F92  0DF2               	rlf	___ftpack@arg+2,f
  5874  0F93                     l4994:	
  5875  0F93  1FF1               	btfss	___ftpack@arg+1,7
  5876  0F94  2F8E               	goto	l4992
  5877  0F95  1C73               	btfss	___ftpack@exp,0
  5878  0F96  13F1               	bcf	___ftpack@arg+1,7
  5879  0F97  1003               	clrc
  5880  0F98  0CF3               	rrf	___ftpack@exp,f
  5881  0F99  0873               	movf	___ftpack@exp,w
  5882  0F9A  00F7               	movwf	??___ftpack+2
  5883  0F9B  01F6               	clrf	??___ftpack+1
  5884  0F9C  01F5               	clrf	??___ftpack
  5885  0F9D  0875               	movf	??___ftpack,w
  5886  0F9E  04F0               	iorwf	___ftpack@arg,f
  5887  0F9F  0876               	movf	??___ftpack+1,w
  5888  0FA0  04F1               	iorwf	___ftpack@arg+1,f
  5889  0FA1  0877               	movf	??___ftpack+2,w
  5890  0FA2  04F2               	iorwf	___ftpack@arg+2,f
  5891  0FA3  0874               	movf	___ftpack@sign,w
  5892  0FA4  1D03               	skipz
  5893  0FA5  17F2               	bsf	___ftpack@arg+2,7
  5894  0FA6  0008               	return
  5895  0FA7                     __end_of___ftpack:	
  5896  0FA7                     PL8:	
  5897  0FA7  082D               	movf	?___ftmul,w
  5898  0FA8  00C3               	movwf	_scale$2835
  5899  0FA9  082E               	movf	?___ftmul+1,w
  5900  0FAA  00C4               	movwf	_scale$2835+1
  5901  0FAB  082F               	movf	?___ftmul+2,w
  5902  0FAC  00C5               	movwf	_scale$2835+2
  5903  0FAD  300A               	movlw	10
  5904  0FAE  00F0               	movwf	?___awmod
  5905  0FAF  01F1               	clrf	?___awmod+1
  5906  0FB0  0846               	movf	scale@scl,w
  5907  0FB1  00F2               	movwf	?___awmod+2
  5908  0FB2  01F3               	clrf	?___awmod+3
  5909  0FB3  0008               	return
  5910  0FB4                     PL9:	
  5911  0FB4  0870               	movf	?___awmod,w
  5912  0FB5  00BF               	movwf	??_scale
  5913  0FB6  0871               	movf	?___awmod+1,w
  5914  0FB7  00C0               	movwf	??_scale+1
  5915  0FB8  083F               	movf	??_scale,w
  5916  0FB9  073F               	addwf	??_scale,w
  5917  0FBA  073F               	addwf	??_scale,w
  5918  0FBB  0008               	return
  5919  0FBC                     PL10:	
  5920  0FBC  0876               	movf	?___awdiv,w
  5921  0FBD  00C1               	movwf	??_scale+2
  5922  0FBE  0877               	movf	?___awdiv+1,w
  5923  0FBF  00C2               	movwf	??_scale+3
  5924  0FC0  0841               	movf	??_scale+2,w
  5925  0FC1  0741               	addwf	??_scale+2,w
  5926  0FC2  0741               	addwf	??_scale+2,w
  5927  0FC3  0008               	return
  5928  0FC4                     PL11:	
  5929  0FC4  082D               	movf	?___ftmul,w
  5930  0FC5  00BC               	movwf	?_scale
  5931  0FC6  082E               	movf	?___ftmul+1,w
  5932  0FC7  00BD               	movwf	?_scale+1
  5933  0FC8  082F               	movf	?___ftmul+2,w
  5934  0FC9  00BE               	movwf	?_scale+2
  5935  0FCA  0008               	return
  5936  0FCB                     PL16:	
  5937  0FCB  00F6               	movwf	?___awdiv
  5938  0FCC  01F7               	clrf	?___awdiv+1
  5939  0FCD  0846               	movf	scale@scl,w
  5940  0FCE  00F2               	movwf	?___awmod+2
  5941  0FCF  01F3               	clrf	?___awmod+3
  5942  0FD0  1BF2               	btfsc	?___awmod+2,7
  5943  0FD1  03F3               	decf	?___awmod+3,f
  5944  0FD2  3064               	movlw	100
  5945  0FD3  00F0               	movwf	?___awmod
  5946  0FD4  01F1               	clrf	?___awmod+1
  5947  0FD5  0008               	return
  5948  0FD6                     PL18:	
  5949  0FD6  07B7               	addwf	___ftmul@f3_as_product,f
  5950  0FD7  0831               	movf	___ftmul@f2+1,w
  5951  0FD8  1103               	clrz
  5952  0FD9  1803               	skipnc
  5953  0FDA  0A31               	incf	___ftmul@f2+1,w
  5954  0FDB  1D03               	btfss	3,2
  5955  0FDC  07B8               	addwf	___ftmul@f3_as_product+1,f
  5956  0FDD  0832               	movf	___ftmul@f2+2,w
  5957  0FDE  1103               	clrz
  5958  0FDF  0008               	return
  5959  0FE0                     PL23:	
  5960  0FE0  0876               	movf	?___awdiv,w
  5961  0FE1  00BF               	movwf	??_scale
  5962  0FE2  0877               	movf	?___awdiv+1,w
  5963  0FE3  00C0               	movwf	??_scale+1
  5964  0FE4  083F               	movf	??_scale,w
  5965  0FE5  073F               	addwf	??_scale,w
  5966  0FE6  073F               	addwf	??_scale,w
  5967  0FE7  0008               	return
  5968  0FE8                     PL24:	
  5969  0FE8  00AF               	movwf	?___ftmul+2
  5970  0FE9  3064               	movlw	100
  5971  0FEA  00F6               	movwf	?___awdiv
  5972  0FEB  01F7               	clrf	?___awdiv+1
  5973  0FEC  0846               	movf	scale@scl,w
  5974  0FED  00F8               	movwf	?___awdiv+2
  5975  0FEE  01F9               	clrf	?___awdiv+3
  5976  0FEF  0008               	return
  5977  0FF0                     PL25:	
  5978  0FF0  00AF               	movwf	?___ftmul+2
  5979  0FF1  0843               	movf	_scale$2835,w
  5980  0FF2  00B0               	movwf	?___ftmul+3
  5981  0FF3  0844               	movf	_scale$2835+1,w
  5982  0FF4  00B1               	movwf	?___ftmul+4
  5983  0FF5  0845               	movf	_scale$2835+2,w
  5984  0FF6  00B2               	movwf	?___ftmul+5
  5985  0FF7  0008               	return
  5986  0FF8                     PL28:	
  5987  0FF8  00AF               	movwf	?___ftmul+2
  5988  0FF9  300A               	movlw	10
  5989  0FFA  00F6               	movwf	?___awdiv
  5990  0FFB  01F7               	clrf	?___awdiv+1
  5991  0FFC  0846               	movf	scale@scl,w
  5992  0FFD  00F8               	movwf	?___awdiv+2
  5993  0FFE  01F9               	clrf	?___awdiv+3
  5994  0FFF  0008               	return
  5995                           
  5996                           	psect	text525
  5997  08BE                     __ptext525:	
  5998 ;; =============== function ___bmul ends ============
  5999                           
  6000                           
  6001 ;; *************** function __div_to_l_ *****************
  6002 ;; Defined at:
  6003 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\fldivl.c"
  6004 ;; Parameters:    Size  Location     Type
  6005 ;;  f1              3    0[COMMON] unsigned char 
  6006 ;;  f2              3    3[COMMON] unsigned char 
  6007 ;; Auto vars:     Size  Location     Type
  6008 ;;  quot            4    0[BANK0 ] unsigned long 
  6009 ;;  exp1            1    5[BANK0 ] unsigned char 
  6010 ;;  cntr            1    4[BANK0 ] unsigned char 
  6011 ;; Return value:  Size  Location     Type
  6012 ;;                  4    0[COMMON] unsigned long 
  6013 ;; Registers used:
  6014 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6015 ;; Tracked objects:
  6016 ;;		On entry : 0/0
  6017 ;;		On exit  : 60/0
  6018 ;;		Unchanged: FFF9F/0
  6019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6020 ;;      Params:         6       0       0       0       0
  6021 ;;      Locals:         0       6       0       0       0
  6022 ;;      Temps:          8       0       0       0       0
  6023 ;;      Totals:        14       6       0       0       0
  6024 ;;Total ram usage:       20 bytes
  6025 ;; Hardware stack levels used:    1
  6026 ;; This function calls:
  6027 ;;		Nothing
  6028 ;; This function is called by:
  6029 ;;		_sprintf
  6030 ;; This function uses a non-reentrant model
  6031 ;;
  6032  08BE                     __div_to_l_:	
  6033                           
  6034                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  6035  08BE  3070               	movlw	low __div_to_l_@f1
  6036  08BF  2173  120A  158A   	fcall	PL2	;call to abstracted procedure
  6037  08C2  1003               	clrc
  6038  08C3  0D78               	rlf	??__div_to_l_+2,w
  6039  08C4  0D79               	rlf	??__div_to_l_+3,w
  6040  08C5  1283               	bcf	3,5	;RP0=0, select bank0
  6041  08C6  1303               	bcf	3,6	;RP1=0, select bank0
  6042  08C7  00A5               	movwf	__div_to_l_@exp1
  6043  08C8  08A5               	movf	__div_to_l_@exp1,f
  6044  08C9  1D03               	skipz
  6045  08CA  28D0               	goto	l4860
  6046  08CB                     l4858:	
  6047  08CB  01F0               	clrf	?__div_to_l_
  6048  08CC  01F1               	clrf	?__div_to_l_+1
  6049  08CD  01F2               	clrf	?__div_to_l_+2
  6050  08CE  01F3               	clrf	?__div_to_l_+3
  6051  08CF  0008               	return
  6052  08D0                     l4860:	
  6053  08D0  3073               	movlw	low __div_to_l_@f2
  6054  08D1  2173  120A  158A   	fcall	PL2	;call to abstracted procedure
  6055  08D4  1003               	clrc
  6056  08D5  0D78               	rlf	??__div_to_l_+2,w
  6057  08D6  0D79               	rlf	??__div_to_l_+3,w
  6058  08D7  00A4               	movwf	__div_to_l_@cntr
  6059  08D8  08A4               	movf	__div_to_l_@cntr,f
  6060  08D9  1903               	btfsc	3,2
  6061  08DA  28CB               	goto	l4858
  6062  08DB  3070               	movlw	low __div_to_l_@f1
  6063  08DC  0084               	movwf	4
  6064  08DD  3080               	movlw	128
  6065  08DE  0A84               	incf	4,f
  6066  08DF  0A84               	incf	4,f
  6067  08E0  0480               	iorwf	0,f
  6068  08E1  3070               	movlw	low __div_to_l_@f1
  6069  08E2  0A84               	incf	4,f
  6070  08E3  0084               	movwf	4
  6071  08E4  3073               	movlw	low __div_to_l_@f2
  6072  08E5  0A84               	incf	4,f
  6073  08E6  0A84               	incf	4,f
  6074  08E7  0A84               	incf	4,f
  6075  08E8  0180               	clrf	0
  6076  08E9  0084               	movwf	4
  6077  08EA  3080               	movlw	128
  6078  08EB  0A84               	incf	4,f
  6079  08EC  0A84               	incf	4,f
  6080  08ED  0480               	iorwf	0,f
  6081  08EE  3073               	movlw	low __div_to_l_@f2
  6082  08EF  0A84               	incf	4,f
  6083  08F0  0084               	movwf	4
  6084  08F1  307F               	movlw	127
  6085  08F2  0A84               	incf	4,f
  6086  08F3  0A84               	incf	4,f
  6087  08F4  0A84               	incf	4,f
  6088  08F5  0180               	clrf	0
  6089  08F6  01A0               	clrf	__div_to_l_@quot
  6090  08F7  01A1               	clrf	__div_to_l_@quot+1
  6091  08F8  01A2               	clrf	__div_to_l_@quot+2
  6092  08F9  01A3               	clrf	__div_to_l_@quot+3
  6093  08FA  02A5               	subwf	__div_to_l_@exp1,f
  6094  08FB  30A0               	movlw	160
  6095  08FC  0724               	addwf	__div_to_l_@cntr,w
  6096  08FD  00F6               	movwf	??__div_to_l_
  6097  08FE  02A5               	subwf	__div_to_l_@exp1,f
  6098  08FF  3020               	movlw	32
  6099  0900  00A4               	movwf	__div_to_l_@cntr
  6100  0901                     l4874:	
  6101  0901  3073               	movlw	low __div_to_l_@f2
  6102  0902  1003               	clrc
  6103  0903  0DA0               	rlf	__div_to_l_@quot,f
  6104  0904  0DA1               	rlf	__div_to_l_@quot+1,f
  6105  0905  0DA2               	rlf	__div_to_l_@quot+2,f
  6106  0906  0DA3               	rlf	__div_to_l_@quot+3,f
  6107  0907  2173  120A  158A   	fcall	PL2	;call to abstracted procedure
  6108  090A  3070               	movlw	low __div_to_l_@f1
  6109  090B  0084               	movwf	4
  6110  090C  0800               	movf	0,w
  6111  090D  00FA               	movwf	??__div_to_l_+4
  6112  090E  0A84               	incf	4,f
  6113  090F  0800               	movf	0,w
  6114  0910  00FB               	movwf	??__div_to_l_+5
  6115  0911  0A84               	incf	4,f
  6116  0912  0800               	movf	0,w
  6117  0913  00FC               	movwf	??__div_to_l_+6
  6118  0914  0A84               	incf	4,f
  6119  0915  0800               	movf	0,w
  6120  0916  00FD               	movwf	??__div_to_l_+7
  6121  0917  0879               	movf	??__div_to_l_+3,w
  6122  0918  027D               	subwf	??__div_to_l_+7,w
  6123  0919  1D03               	skipz
  6124  091A  2925               	goto	u1775
  6125  091B  0878               	movf	??__div_to_l_+2,w
  6126  091C  027C               	subwf	??__div_to_l_+6,w
  6127  091D  1D03               	skipz
  6128  091E  2925               	goto	u1775
  6129  091F  0877               	movf	??__div_to_l_+1,w
  6130  0920  027B               	subwf	??__div_to_l_+5,w
  6131  0921  1D03               	skipz
  6132  0922  2925               	goto	u1775
  6133  0923  0876               	movf	??__div_to_l_,w
  6134  0924  027A               	subwf	??__div_to_l_+4,w
  6135  0925                     u1775:	
  6136  0925  1C03               	skipc
  6137  0926  2941               	goto	l2498
  6138  0927  3073               	movlw	low __div_to_l_@f2
  6139  0928  2173  120A  158A   	fcall	PL2	;call to abstracted procedure
  6140  092B  3070               	movlw	low __div_to_l_@f1
  6141  092C  0084               	movwf	4
  6142  092D  0876               	movf	??__div_to_l_,w
  6143  092E  0280               	subwf	0,f
  6144  092F  0A84               	incf	4,f
  6145  0930  0877               	movf	??__div_to_l_+1,w
  6146  0931  1C03               	skipc
  6147  0932  0F77               	incfsz	??__div_to_l_+1,w
  6148  0933  0280               	subwf	0,f
  6149  0934  0A84               	incf	4,f
  6150  0935  0878               	movf	??__div_to_l_+2,w
  6151  0936  1C03               	skipc
  6152  0937  0F78               	incfsz	??__div_to_l_+2,w
  6153  0938  0280               	subwf	0,f
  6154  0939  0A84               	incf	4,f
  6155  093A  0879               	movf	??__div_to_l_+3,w
  6156  093B  1C03               	skipc
  6157  093C  0A79               	incf	??__div_to_l_+3,w
  6158  093D  0280               	subwf	0,f
  6159  093E  3003               	movlw	3
  6160  093F  0284               	subwf	4,f
  6161  0940  1420               	bsf	__div_to_l_@quot,0
  6162  0941                     l2498:	
  6163  0941  3070               	movlw	low __div_to_l_@f1
  6164  0942  0084               	movwf	4
  6165  0943  1003               	clrc
  6166  0944  0D80               	rlf	0,f
  6167  0945  0A84               	incf	4,f
  6168  0946  0D80               	rlf	0,f
  6169  0947  0A84               	incf	4,f
  6170  0948  0D80               	rlf	0,f
  6171  0949  0A84               	incf	4,f
  6172  094A  0D80               	rlf	0,f
  6173  094B  0BA4               	decfsz	__div_to_l_@cntr,f
  6174  094C  2901               	goto	l4874
  6175  094D  1FA5               	btfss	__div_to_l_@exp1,7
  6176  094E  295C               	goto	l4892
  6177  094F  0825               	movf	__div_to_l_@exp1,w
  6178  0950  3A80               	xorlw	128
  6179  0951  3E9F               	addlw	159
  6180  0952  1C03               	btfss	3,0
  6181  0953  28CB               	goto	l4858
  6182  0954                     l4888:	
  6183  0954  1003               	clrc
  6184  0955  0CA3               	rrf	__div_to_l_@quot+3,f
  6185  0956  0CA2               	rrf	__div_to_l_@quot+2,f
  6186  0957  0CA1               	rrf	__div_to_l_@quot+1,f
  6187  0958  0CA0               	rrf	__div_to_l_@quot,f
  6188  0959  0FA5               	incfsz	__div_to_l_@exp1,f
  6189  095A  2954               	goto	l4888
  6190  095B  296A               	goto	l4898
  6191  095C                     l4892:	
  6192  095C  3020               	movlw	32
  6193  095D  0225               	subwf	__div_to_l_@exp1,w
  6194  095E  1803               	btfsc	3,0
  6195  095F  28CB               	goto	l4858
  6196  0960                     l2506:	
  6197  0960  08A5               	movf	__div_to_l_@exp1,f
  6198  0961  1903               	btfsc	3,2
  6199  0962  296A               	goto	l4898
  6200  0963  1003               	clrc
  6201  0964  0DA0               	rlf	__div_to_l_@quot,f
  6202  0965  0DA1               	rlf	__div_to_l_@quot+1,f
  6203  0966  0DA2               	rlf	__div_to_l_@quot+2,f
  6204  0967  0DA3               	rlf	__div_to_l_@quot+3,f
  6205  0968  03A5               	decf	__div_to_l_@exp1,f
  6206  0969  2960               	goto	l2506
  6207  096A                     l4898:	
  6208  096A  0823               	movf	__div_to_l_@quot+3,w
  6209  096B  00F3               	movwf	?__div_to_l_+3
  6210  096C  0822               	movf	__div_to_l_@quot+2,w
  6211  096D  00F2               	movwf	?__div_to_l_+2
  6212  096E  0821               	movf	__div_to_l_@quot+1,w
  6213  096F  00F1               	movwf	?__div_to_l_+1
  6214  0970  0820               	movf	__div_to_l_@quot,w
  6215  0971  00F0               	movwf	?__div_to_l_
  6216  0972  0008               	return
  6217  0973                     __end_of__div_to_l_:	
  6218  0973                     PL2:	
  6219  0973  0084               	movwf	4
  6220  0974  0800               	movf	0,w
  6221  0975  00F6               	movwf	??__div_to_l_
  6222  0976  0A84               	incf	4,f
  6223  0977  0800               	movf	0,w
  6224  0978  00F7               	movwf	??__div_to_l_+1
  6225  0979  0A84               	incf	4,f
  6226  097A  0800               	movf	0,w
  6227  097B  00F8               	movwf	??__div_to_l_+2
  6228  097C  0A84               	incf	4,f
  6229  097D  0800               	movf	0,w
  6230  097E  00F9               	movwf	??__div_to_l_+3
  6231  097F  0008               	return
  6232                           
  6233                           	psect	text529
  6234  0000                     __ptext529:	
  6235 ;; =============== function _msecbase ends ============
  6236                           
  6237  007E                     btemp	set	126	;btemp
  6238  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Wed May 11 08:07:24 2022

                    pc 0002         ___bmul@product 007A           ___awdiv@sign 007B                     fsr 0004  
  ___wmul@multiplicand 0072           ___ftadd@exp1 0047           ___ftadd@exp2 0046           ___ftadd@sign 0045  
                  _RC0 0038                    _RC3 003B                    _RC4 003C                    _adc 005E  
                  _num 0060                    fsr0 0004                    _pwm 005B                    indf 0000  
         ___awmod@sign 0075            lcd_goto@pos 0075                   l1210 0000                   l1050 0A74  
                 l1140 00F7                   l1061 0000                   l1053 0AED                   l1070 0000  
                 l1064 0000                   l1091 0000                   l2211 0000                   l1076 0000  
                 l2205 0000                   l1085 0000                   l1079 0000                   l1088 17EB  
                 l2241 0000                   l2325 0652                   l2238 0C7C                   l2247 0000  
                 l5000 0000                   l2345 0000                   l2506 0960                   l5002 0000  
                 l5010 0000                   l2426 0000                   l2195 0000                   l2291 0000  
                 l5012 0000                   l5004 0000                   l5100 0000                   l2372 0000  
                 l2269 0A12                   l5014 0000                   l5006 0622                   l2358 0000  
                 l5102 05BC                   l2463 0720                   l2456 0000                   l5024 0646  
                 l5016 0000                   l5008 0627                   l2368 0000                   l5200 0000  
                 l2448 0000                   l5034 065C                   l5026 0000                   l5018 0000  
                 l5050 0E74                   l5042 0000                   l5106 0000                   l5122 05E3  
                 l5114 0000                   l5202 17C3                   l2387 0000                   l5036 0000  
                 l5028 064E                   l5044 0000                   l5124 0000                   l5212 09B9  
                 l5204 0000                   l5300 0000                   l5038 066A                   l5054 0000  
                 l5126 0000                   l5118 05D4                   l5150 0000                   l5134 0000  
                 l5230 0000                   l5222 09CF                   l5206 0000                   l5310 0000  
                 l5302 0000                   l5080 0000                   l5072 0000                   l5056 0E7D  
                 l5048 0000                   l5144 0687                   l5136 0000                   l5160 0000  
                 l5240 09EC                   l5232 0000                   l5224 0000                   l5216 09C0  
                 l5208 0000                   l5320 0000                   l5312 0F1F                   l5304 0000  
                 l5400 0000                   l2498 0941                   l5082 0EAA                   l5066 0E8B  
                 l5058 0000                   l5154 0000                   l5146 0000                   l5162 0000  
                 l5242 09F1                   l5234 09DD                   l5218 0000                   l5330 0000  
                 l5322 0000                   l5306 0000                   l2499 0000                   l5076 0000  
                 l5068 0000                   l5156 06B2                   l5180 0ECC                   l5172 0EC0  
                 l5260 0A1D                   l5252 0A09                   l5236 0000                   l5244 09F6  
                 l5332 0000                   l5324 0F35                   l5316 0F29                   l5308 0000  
                 l5340 0000                   l5078 0EA2                   l5094 0597                   l5086 0000  
                 l5190 0000                   l5166 0000                   l5270 0000                   l5254 0A0E  
                 l5246 09FA                   l5334 0000                   l5318 0000                   l5350 0000  
                 l5414 0D8D                   l5510 0000                   l5502 0000                   l5192 0EE7  
                 l5168 0EB9                   l5264 0000                   l5248 0000                   l5328 0F3F  
                 l5344 0000                   l5360 0000                   l5432 0E53                   l5408 0D48  
                 l5600 0338                   l5520 0000                   l5512 0000                   l5504 014D  
                 l4810 06C9                   l5186 0000                   l5274 0000                   l5266 0A28  
                 l5258 0000                   l5282 0000                   l5346 0CC7                   l5338 0000  
                 l5354 073D                   l5370 0000                   l5362 0000                   l5426 0E0E  
                 l5418 0DA4                   l5442 0000                   l5610 036F                   l5514 0000  
                 l5506 0000                   l4804 05FD                   l4820 0000                   l4812 06CE  
                 l5188 0EDF                   l5196 17C1                   l5276 0000                   l5268 0000  
                 l5356 0748                   l5372 0000                   l5364 0000                   l5436 0000  
                 l5444 0000                   l5700 0503                   l5620 0386                   l5540 0217  
                 l5532 01D3                   l5524 019A                   l5516 0000                   l5460 0093  
                 l5452 0000                   l4822 0000                   l4910 0000                   l4902 0000  
                 l5278 0A44                   l5294 0F0E                   l5366 0000                   l5374 0000  
                 l5438 0000                   l5710 0000                   l5630 03AE                   l5614 0000  
                 l5606 0341                   l5526 0000                   l5518 0000                   l5470 0000  
                 l5462 0000                   l5454 007F                   l5446 0000                   l4832 0000  
                 l4824 0000                   l4816 0000                   l4808 0000                   l4912 0000  
                 l4904 0F5D                   l4920 0601                   l5296 0000                   l5288 0EFD  
                 l5368 0000                   l5392 0C4A                   l5384 0BF6                   l5712 0000  
                 l5704 051F                   l5632 03CF                   l5624 0395                   l5616 0000  
                 l5560 0000                   l5552 0253                   l5528 0000                   l5536 01E3  
                 l5472 0000                   l5480 00F2                   l5464 0000                   l5456 0000  
                 l5800 0A6F                   l4842 0714                   l4826 06EB                   l4818 0000  
                 l5298 0000                   l5378 0000                   l5722 0000                   l5714 0534  
                 l5706 0522                   l5650 0000                   l5642 0000                   l5634 0000  
                 l5626 0000                   l5618 0372                   l5562 0000                   l5730 0582  
                 l5482 0000                   l5466 00B8                   l5810 0000                   l5802 0000  
                 l4852 072A                   l4844 0000                   l4836 0000                   l4828 0000  
                 l4860 08D0                   l4924 0609                   l4940 0C76                   l5388 0000  
                 l5396 0000                   l5708 0526                   l5652 0000                   l5644 0000  
                 l5636 0000                   l5628 0000                   l5580 0000                   l5564 0283  
                 l5548 0242                   l5476 0000                   l5820 0000                   l5812 0000  
                 l4846 071C                   l4870 0000                   l4926 0000                   l4918 0000  
                 l4934 0000                   l5726 053E                   l5670 0479                   l5646 043B  
                 l5590 0333                   l5582 02F4                   l5574 02C0                   l5566 0000  
                 l5558 0000                   l5494 0121                   l5486 00F9                   l5478 00C9  
                 l5734 0000                   l5742 0000                   l5750 0000                   l5830 0000  
                 l5822 0000                   l5814 0000                   l5806 0000                   l4880 0000  
                 l4872 0000                   l4856 0000                   l4928 0000                   l4952 0000  
                 l4944 0000                   l4936 0000                   l4960 0000                   l5664 0477  
                 l5656 0000                   l5584 0000                   l5568 02BE                   l5496 0000  
                 l5648 0447                   l5488 0111                   l5728 0066                   l5736 0000  
                 l5744 176E                   l5760 0000                   l5752 0000                   l5840 0000  
                 l5832 0000                   l5824 0000                   l5816 0000                   l5808 0000  
                 l4794 0000                   l4890 0000                   l4882 0000                   l4874 0901  
                 l4866 0000                   l4858 08CB                   l4938 0000                   l4954 0C89  
                 l4970 0CA3                   l4962 0C8F                   l5682 04C1                   l5658 046B  
                 l5594 0000                   l5498 0000                   l5738 0000                   l5770 0000  
                 l5762 0000                   l5754 0000                   l5746 0000                   l5842 0000  
                 l5834 0000                   l5826 0000                   l5818 0000                   l4796 0000  
                 l4892 095C                   l4876 0000                   l4868 0000                   l4948 0000  
                 l4972 0000                   l4964 0000                   l4980 0F71                   l5692 04E6  
                 l5676 0000                   l5588 031D                   l5780 0000                   l5772 0000  
                 l5764 0000                   l5756 0000                   l5748 0000                   l5844 0000  
                 l5836 0000                   l4798 0000                   l4966 0000                   l4958 0000  
                 l4990 0F89                   l5686 04D9                   l5678 04AD                   l5598 0321  
                 l5782 0000                   l5774 0000                   l5766 0000                   l5758 0000  
                 l5846 0000                   l5838 0000                   l5790 0000                   l4888 0954  
                 l4992 0F8E                   l4984 0F75                   l4976 0000                   l5784 0000  
                 l5776 0000                   l5768 0000                   l5848 0000                   l5792 0000  
                 l4898 096A                   l4994 0F93                   l4986 0F7A                   l4978 0000  
                 l5698 0500                   l5786 0000                   l5778 0000                   l5794 0000  
                 l4988 0F7F                   l5796 0000                   l5788 0000                   l4998 0000  
                 l5798 0000                   STR_1 0892                   STR_2 0886                   STR_3 08A0  
                 STR_4 0898                   STR_5 0892                   STR_6 088C                   STR_7 08A0  
                 STR_8 089C                   _T0IF 005A                   u2030 0000                   u2035 062B  
                 u3005 037B                   u3015 0390                   u2145 0E94                   u3105 04BB  
                 u3115 04D1                   u2335 0ED2                   u2195 05A5                   u2275 069A  
                 u3155 04F6                   u2365 17C9                   u3165 0511                   u3085 04A6  
                 u1685 06FA                   u2830 0000                   u1775 0925                   u2915 0240  
                 u2835 0160                   u2935 02ED                   u2875 01EC                   u2885 0221  
                 u2975 032A                   _TMR0 0001                   _main 0A58           ___ftpack@arg 0070  
         ___ftpack@exp 0073                   btemp 007E                   start 0000           _sprintf$1897 00A0  
    ___bmul@multiplier 007B           ___ftmul@cntr 003A           ___ftmul@sign 003B           ___fttol@exp1 002C  
         ___fttol@lval 0028                  ?_main 0070        __end_of___awdiv 0EAF        __end_of___lbdiv 0C8B  
      __end_of___ftadd 0A58        __end_of___awmod 0EEC        __end_of___lbmod 0CA7        __end_of___ftneg 073B  
                _ANSEL 0188        __end_of___lldiv 06BB        __end_of___ftmul 0F5B        ___awdiv@divisor 0076  
      __end_of___llmod 05C5        __end_of___ftsub 0996        __end_of___fttol 0673        ___awdiv@counter 007A  
                _PORTD 0008                  _TRISA 0085                  _TRISC 0087                  _TRISD 0088  
                _TRISE 0089           ___lltoft@exp 007C                  _carac 0062          ___awtoft@sign 007B  
                _scale 0CD8        __end_of_isdigit 05FF                  _pause 17C1          ___ftpack@sign 0074  
                pclath 000A                  status 0003                  wtemp0 007E        __end_of_sprintf 0587  
      ___lbdiv@divisor 0075        ___lbdiv@counter 0077           __end_of_main 0B6B                 ??_main 007E  
        ___fttol@sign1 0027   __size_of__tdiv_to_l_ 0078                 _ADCON0 001F                 _ADCON1 009F  
     ___llmod@dividend 0024                 ?_scale 003C                 _ADRESH 001E                 _ADRESL 009E  
               ?_pause 0070       ___awdiv@dividend 0078       __end_of___awtoft 0CD8       __end_of___ftpack 0FA7  
               _ANSELH 0189       __end_of___lltoft 075B       __end_of_lcd_init 17C1       __end_of_lcd_goto 176D  
               ___bmul 0F5B       __end_of_lcd_puts 178A                 ___ftge 05C5                 _carac2 0067  
               ___wmul 05FF              ??___awdiv 007A              ??___lbdiv 0076              ??___ftadd 0042  
            ??___awmod 0074              ??___lbmod 0071              ??___ftneg 0073              ??___lldiv 0078  
            ??___ftmul 0033              ??___llmod 007D              ??___ftsub 007E              ??___fttol 0024  
               _fround 0B6B       ___awdiv@quotient 007C        ___awmod@divisor 0070        ___awmod@counter 0074  
     __end_of_msecbase 17EF                 clrloop 0050  ___ftmul@f3_as_product 0037              ??_isdigit 0070  
               pause@x 0072              ??_sprintf 0056       ___lbdiv@dividend 0076        ___lbmod@divisor 0070  
      ___lbmod@counter 0073             ___ftadd@f1 003C             ___ftadd@f2 003F             ___ftge@ff1 0070  
           ___ftge@ff2 0073             ___ftneg@f1 0070             ___awtoft@c 0078    ___bmul@multiplicand 0079  
           ___ftmul@f1 002D             ___ftmul@f2 0030             ___ftsub@f1 004B             ___ftsub@f2 0048  
           ___fttol@f1 0020         __pcstackCOMMON 0070             ___lltoft@c 0078          __end_of_scale 0E6A  
        __end_of_pause 17D2       ___lbdiv@quotient 0078             __div_to_l_ 08BE     __size_of_lcd_clear 0009  
      __div_to_l_@exp1 0025     __size_of_lcd_write 0012        __div_to_l_@cntr 0024           sprintf@integ 00A5  
              ??_scale 003F                ??_pause 0072        __div_to_l_@quot 0020           sprintf@width 00AA  
           __pbssBANK0 005B          __div_to_l_@f1 0070          __div_to_l_@f2 0073             __pmaintext 0A58  
              ?___bmul 0079                ?___ftge 0070                ?___wmul 0070                ?_fround 0048  
            ?___awtoft 0078              ?___ftpack 0070              ?___lltoft 0078                _GO_DONE 00F9  
            ?_lcd_init 0070              ?_lcd_goto 0070              ?_lcd_puts 0075              ?_msecbase 0070  
           _scale$2835 0043      __end_of_lcd_clear 17F8        __size_of___bmul 000E        __size_of___ftge 002C  
              ___awdiv 0E6A                ___lbdiv 0C70                ___ftadd 0996                ___awmod 0EAF  
              ___lbmod 0C8B      __end_of_lcd_write 17E4                ___ftneg 0733                ___lldiv 0673  
      __size_of___wmul 0019                ___ftmul 0EEC                ___llmod 0587                ___ftsub 0980  
              ___fttol 0618             ??___awtoft 007B             ??___ftpack 0075        __size_of_fround 0105  
           ??___lltoft 007C            ?__div_to_l_ 0070                _dpowers 085E                _isdigit 05F1  
     ___awmod@dividend 0072                _sprintf 0062             ??_lcd_init 0075             ??_lcd_goto 0075  
           ??_lcd_puts 0077   end_of_initialization 005E             ??_msecbase 0070        ___lldiv@divisor 0070  
      ___lldiv@counter 007C         __tdiv_to_l_@f1 0070         __tdiv_to_l_@f2 0073          ??__tdiv_to_l_ 0076  
     ___lbmod@dividend 0072            ___lbmod@rem 0074    __size_of__div_to_l_ 00B5             lcd_write@c 0074  
          ___ftmul@exp 0036         __end_of___bmul 0F69         __end_of___ftge 05F1         __end_of___wmul 0618  
       __end_of_fround 0C70    start_initialization 0057    __end_of__tdiv_to_l_ 0733        ___llmod@divisor 0020  
      ___llmod@counter 007D               ??___bmul 007A               ??___ftge 0076               ??___wmul 0074  
             ??_fround 007E             fround@prec 0051      __size_of___awtoft 001B      __size_of___ftpack 003E  
         pause@usvalue 0070      __size_of___lltoft 0020          __pcstackBANK0 0020          __pcstackBANK1 00A0  
         _isdigit$2405 0070      __size_of_lcd_init 0037      __size_of_lcd_goto 0006            sprintf@_val 00AC  
          sprintf@flag 00A8      __size_of_lcd_puts 001D            sprintf@fval 00B2            sprintf@prec 00B6  
    __size_of_msecbase 000B               ?___awdiv 0076               ?___lbdiv 0075               ?___ftadd 003C  
            __ptext500 176D              __ptext501 1767              __ptext510 0EEC              __ptext502 0062  
            __ptext511 0996              __ptext503 17EF              __ptext520 0F69              __ptext512 17C1  
            __ptext504 0980              __ptext521 0C8B              __ptext513 0EAF              __ptext505 0CD8  
            __ptext522 0C70              __ptext514 0673              __ptext506 0B6B              __ptext523 05FF  
            __ptext515 05C5              __ptext507 17D2               ?___awmod 0070              __ptext524 0F5B  
            __ptext516 0733              __ptext508 073B              __ptext525 08BE              __ptext517 0587  
            __ptext509 0CBD              __ptext526 06BB              __ptext518 0E6A              __ptext527 05F1  
            __ptext519 0618              __ptext528 17E4              __ptext529 0000               ?___lbmod 0070  
            __ptext499 178A               ?___ftneg 0070               ?___lldiv 0070               ?___ftmul 002D  
             ?___llmod 0020               ?___ftsub 0048              __npowers_ 0810               ?___fttol 0020  
            _lcd_clear 17EF              __pstrings 0800            __tdiv_to_l_ 06BB              _lcd_write 17D2  
         ??__div_to_l_ 0076               ?_isdigit 0070               ?_sprintf 0052         __size_of_scale 0192  
       __size_of_pause 0011         ___wmul@product 0074     __end_of__div_to_l_ 0973             ?_lcd_clear 0070  
          __stringbase 080F             ?_lcd_write 0070      ___wmul@multiplier 0070              lcd_puts@s 0075  
     __size_of___awdiv 0045       __size_of___lbdiv 001B       __size_of___ftadd 00C2       __size_of___awmod 003D  
     __size_of___lbmod 001C       __size_of___ftneg 0008       __size_of___lldiv 0048       __size_of___ftmul 006F  
     __size_of___llmod 003E       __size_of___ftsub 0016       __size_of___fttol 005B               ___awtoft 0CBD  
             ___ftpack 0F69            _fround$2833 004E            _fround$2834 004B               ___lltoft 073B  
           sprintf@exp 00B0       __size_of_isdigit 000E               __powers_ 0837               _lcd_init 178A  
             _lcd_goto 1767               _lcd_puts 176D       __size_of_sprintf 0525          __size_of_main 0113  
             _msecbase 17E4               clear_ram 004F            ??_lcd_clear 0075            ??_lcd_write 0074  
             isdigit@c 0071               scale@scl 0046              sprintf@ap 00A4       __tdiv_to_l_@exp1 0025  
     __tdiv_to_l_@cntr 0024              sprintf@sp 00B5       __tdiv_to_l_@quot 0020       ___lldiv@dividend 0074  
            stringcode 080A           ?__tdiv_to_l_ 0070             _OPTION_REG 0081               sprintf@c 00B8  
             sprintf@f 0052       ___lldiv@quotient 0078               stringdir 080A               stringtab 0800  
