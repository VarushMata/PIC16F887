

HI-TECH Software PIC PRO Macro Assembler V9.82 build 9453 
                                                                                               Sat May 14 22:12:10 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 9453
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	text60,local,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,delta=2
    10                           	psect	text61,local,class=CODE,delta=2
    11                           	psect	text64,local,class=CODE,delta=2
    12                           	psect	text65,local,class=CODE,delta=2
    13                           	psect	pa_nodes,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  000A                     	;#
    16                           
    17                           	psect	config
    18  2007  E0D4               	dw	57556	;#
    19  2008  FFFF               	dw	65535	;#
    20                           
    21                           	psect	text60
    22  0000                     __ptext60:	
    23  001F                     _ADCON0	set	31
    24  001E                     _ADRESH	set	30
    25  0017                     _CCP1CON	set	23
    26  001D                     _CCP2CON	set	29
    27  0015                     _CCPR1L	set	21
    28  001B                     _CCPR2L	set	27
    29  0012                     _T2CON	set	18
    30  0001                     _TMR0	set	1
    31  00F9                     _GO_DONE	set	249
    32  005A                     _T0IF	set	90
    33  009F                     _ADCON1	set	159
    34  0081                     _OPTION_REG	set	129
    35  0092                     _PR2	set	146
    36  0085                     _TRISA	set	133
    37  0086                     _TRISB	set	134
    38  0087                     _TRISC	set	135
    39  0088                     _TRISD	set	136
    40  0089                     _TRISE	set	137
    41  0188                     _ANSEL	set	392
    42  0189                     _ANSELH	set	393
    43  009E                     _ADRESL	set	158
    44                           
    45                           	psect	cinit
    46  0742                     start_initialization:	
    47                           
    48                           ; Clear objects allocated to COMMON
    49  0742  01F6               	clrf	__pbssCOMMON& (0+127)
    50  0743  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
    51  0744  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
    52  0745  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
    53  0746                     end_of_initialization:	
    54                           ;End of C runtime variable initialization code
    55                           
    56  0746  0183               	clrf	3
    57  0747  120A  118A  2F4A   	ljmp	_main	;jump to C main() function
    58                           
    59                           	psect	bssCOMMON
    60  0076                     __pbssCOMMON:	
    61  0076                     _vadc1:	
    62  0076                     	ds	2
    63  0078                     _vadc2:	
    64  0078                     	ds	2
    65                           
    66                           	psect	cstackCOMMON
    67  0070                     __pcstackCOMMON:	
    68  0070                     ?_ADC:	
    69  0070                     ??_ADC:	
    70                           ; 0 bytes @ 0x0
    71                           
    72  0070                     ?_PWM:	
    73                           ; 0 bytes @ 0x0
    74                           
    75  0070                     ?_pause:	
    76                           ; 0 bytes @ 0x0
    77                           
    78  0070                     ?_msecbase:	
    79                           ; 0 bytes @ 0x0
    80                           
    81  0070                     ??_msecbase:	
    82                           ; 0 bytes @ 0x0
    83                           
    84  0070                     ?_main:	
    85                           ; 0 bytes @ 0x0
    86                           
    87  0070                     pause@usvalue:	
    88                           ; 0 bytes @ 0x0
    89                           
    90                           
    91                           ; 2 bytes @ 0x0
    92  0070                     	ds	2
    93  0072                     ??_pause:	
    94  0072                     pause@x:	
    95                           ; 0 bytes @ 0x2
    96                           
    97                           
    98                           ; 2 bytes @ 0x2
    99  0072                     	ds	2
   100  0074                     ??_PWM:	
   101                           
   102                           ; 0 bytes @ 0x4
   103  0074                     	ds	2
   104  0076                     ??_main:	
   105                           
   106                           	psect	maintext
   107  074A                     __pmaintext:	
   108                           ; 0 bytes @ 0x6
   109 ;;Data sizes: Strings 0, constant 0, data 0, bss 4, persistent 0 stack 0
   110 ;;Auto spaces:   Size  Autos    Used
   111 ;; COMMON          14      6      10
   112 ;; BANK0           80      0       0
   113 ;; BANK1           80      0       0
   114 ;; BANK3           96      0       0
   115 ;; BANK2           96      0       0
   116 ;;
   117 ;; Pointer list with targets:
   118 ;;
   119 ;; Critical Paths under _main in COMMON
   120 ;;
   121 ;;   _main->_PWM
   122 ;;   _PWM->_pause
   123 ;;
   124 ;; Critical Paths under _main in BANK0
   125 ;;
   126 ;;   None.
   127 ;;
   128 ;; Critical Paths under _main in BANK1
   129 ;;
   130 ;;   None.
   131 ;;
   132 ;; Critical Paths under _main in BANK3
   133 ;;
   134 ;;   None.
   135 ;;
   136 ;; Critical Paths under _main in BANK2
   137 ;;
   138 ;;   None.
   139 ;;
   140 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   141 ;;
   142 ;;
   143 ;;Call Graph Tables:
   144 ;;
   145 ;; ---------------------------------------------------------------------------------
   146 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   147 ;; ---------------------------------------------------------------------------------
   148 ;; (0) _main                                                 0     0      0      30
   149 ;;                                _ADC
   150 ;;                                _PWM
   151 ;; ---------------------------------------------------------------------------------
   152 ;; (1) _PWM                                                  2     2      0      30
   153 ;;                                              4 COMMON     2     2      0
   154 ;;                              _pause
   155 ;; ---------------------------------------------------------------------------------
   156 ;; (2) _pause                                                4     2      2      30
   157 ;;                                              0 COMMON     4     2      2
   158 ;;                           _msecbase
   159 ;; ---------------------------------------------------------------------------------
   160 ;; (3) _msecbase                                             0     0      0       0
   161 ;; ---------------------------------------------------------------------------------
   162 ;; (1) _ADC                                                  1     1      0       0
   163 ;;                                              0 COMMON     1     1      0
   164 ;; ---------------------------------------------------------------------------------
   165 ;; Estimated maximum stack depth 3
   166 ;; ---------------------------------------------------------------------------------
   167 ;; Call Graph Graphs:
   168 ;; _main (ROOT)
   169 ;;   _ADC
   170 ;;   _PWM
   171 ;;     _pause
   172 ;;       _msecbase
   173 ;;
   174 ;; Address spaces:
   175 ;;Name               Size   Autos  Total    Cost      Usage
   176 ;;BITCOMMON            E      0       0       0        0.0%
   177 ;;EEDATA             100      0       0       0        0.0%
   178 ;;NULL                 0      0       0       0        0.0%
   179 ;;CODE                 0      0       0       0        0.0%
   180 ;;COMMON               E      6       A       1       71.4%
   181 ;;BITSFR0              0      0       0       1        0.0%
   182 ;;SFR0                 0      0       0       1        0.0%
   183 ;;BITSFR1              0      0       0       2        0.0%
   184 ;;SFR1                 0      0       0       2        0.0%
   185 ;;STACK                0      0       3       2        0.0%
   186 ;;ABS                  0      0       A       3        0.0%
   187 ;;BITBANK0            50      0       0       4        0.0%
   188 ;;BITSFR3              0      0       0       4        0.0%
   189 ;;SFR3                 0      0       0       4        0.0%
   190 ;;BANK0               50      0       0       5        0.0%
   191 ;;BITSFR2              0      0       0       5        0.0%
   192 ;;SFR2                 0      0       0       5        0.0%
   193 ;;BITBANK1            50      0       0       6        0.0%
   194 ;;BANK1               50      0       0       7        0.0%
   195 ;;BITBANK3            60      0       0       8        0.0%
   196 ;;BANK3               60      0       0       9        0.0%
   197 ;;BITBANK2            60      0       0      10        0.0%
   198 ;;BANK2               60      0       0      11        0.0%
   199 ;;DATA                 0      0       D      12        0.0%
   200                           
   201                           
   202 ;; *************** function _main *****************
   203 ;; Defined at:
   204 ;;		line 17 in file "C:\Users\Jorge\OneDrive\Escritorio\PRUEBAPWM\PRUEBAPWM.c"
   205 ;; Parameters:    Size  Location     Type
   206 ;;		None
   207 ;; Auto vars:     Size  Location     Type
   208 ;;		None
   209 ;; Return value:  Size  Location     Type
   210 ;;		None               void
   211 ;; Registers used:
   212 ;;		wreg, status,2, status,0, pclath, cstack
   213 ;; Tracked objects:
   214 ;;		On entry : 17F/0
   215 ;;		On exit  : 11F/0
   216 ;;		Unchanged: FFE80/0
   217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   218 ;;      Params:         0       0       0       0       0
   219 ;;      Locals:         0       0       0       0       0
   220 ;;      Temps:          0       0       0       0       0
   221 ;;      Totals:         0       0       0       0       0
   222 ;;Total ram usage:        0 bytes
   223 ;; Hardware stack levels required when called:    3
   224 ;; This function calls:
   225 ;;		_ADC
   226 ;;		_PWM
   227 ;; This function is called by:
   228 ;;		Startup code after reset
   229 ;; This function uses a non-reentrant model
   230 ;;
   231  074A                     _main:	
   232                           
   233                           ;PRUEBAPWM.c: 19: ANSEL = 0x00;
   234                           
   235                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   236  074A  1683               	bsf	3,5	;RP0=1, select bank3
   237  074B  1703               	bsf	3,6	;RP1=1, select bank3
   238  074C  0188               	clrf	8	;volatile
   239                           
   240                           ;PRUEBAPWM.c: 20: ANSELH = 0x00;
   241  074D  0189               	clrf	9	;volatile
   242                           
   243                           ;PRUEBAPWM.c: 21: TRISA= 0x00;
   244  074E  1303               	bcf	3,6	;RP1=0, select bank1
   245  074F  0185               	clrf	5	;volatile
   246                           
   247                           ;PRUEBAPWM.c: 22: TRISB = 0x00;
   248  0750  0186               	clrf	6	;volatile
   249                           
   250                           ;PRUEBAPWM.c: 23: TRISC = 0x00;
   251  0751  0187               	clrf	7	;volatile
   252                           
   253                           ;PRUEBAPWM.c: 24: TRISD = 0x0F;
   254  0752  300F               	movlw	15
   255  0753  0088               	movwf	8	;volatile
   256                           
   257                           ;PRUEBAPWM.c: 25: TRISE = 0x07;
   258  0754  3007               	movlw	7
   259  0755  0089               	movwf	9	;volatile
   260                           
   261                           ;PRUEBAPWM.c: 26: ADCON1 = 0x80;
   262  0756  3080               	movlw	128
   263  0757  009F               	movwf	31	;volatile
   264                           
   265                           ;PRUEBAPWM.c: 28: T2CON = 0x07;
   266  0758  3007               	movlw	7
   267  0759  1283               	bcf	3,5	;RP0=0, select bank0
   268  075A  0092               	movwf	18	;volatile
   269                           
   270                           ;PRUEBAPWM.c: 29: PR2 = 0xFF;
   271  075B  30FF               	movlw	255
   272  075C  1683               	bsf	3,5	;RP0=1, select bank1
   273  075D  0092               	movwf	18	;volatile
   274                           
   275                           ;PRUEBAPWM.c: 31: CCPR1L = 0x80;
   276  075E  3080               	movlw	128
   277  075F  1283               	bcf	3,5	;RP0=0, select bank0
   278  0760  0095               	movwf	21	;volatile
   279                           
   280                           ;PRUEBAPWM.c: 32: CCP1CON = 0x0C;
   281  0761  300C               	movlw	12
   282  0762  0097               	movwf	23	;volatile
   283  0763                     l2477:	
   284                           
   285                           ;PRUEBAPWM.c: 35: {
   286                           ;PRUEBAPWM.c: 37: ADC();
   287  0763  120A  118A  276E   	fcall	_ADC
      +       120A  118A         
   288                           
   289                           ;PRUEBAPWM.c: 39: PWM();
   290  0768  120A  118A  27A4   	fcall	_PWM
      +       120A  118A         
   291  076D  2F63               	goto	l2477
   292  076E                     __end_of_main:	
   293                           
   294                           	psect	text61
   295  07A4                     __ptext61:	
   296 ;; =============== function _main ends ============
   297                           
   298                           
   299 ;; *************** function _PWM *****************
   300 ;; Defined at:
   301 ;;		line 57 in file "C:\Users\Jorge\OneDrive\Escritorio\PRUEBAPWM\PRUEBAPWM.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;		None
   306 ;; Return value:  Size  Location     Type
   307 ;;		None               void
   308 ;; Registers used:
   309 ;;		wreg, status,2, status,0, pclath, cstack
   310 ;; Tracked objects:
   311 ;;		On entry : 17F/20
   312 ;;		On exit  : 11F/0
   313 ;;		Unchanged: FFE80/0
   314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   315 ;;      Params:         0       0       0       0       0
   316 ;;      Locals:         0       0       0       0       0
   317 ;;      Temps:          2       0       0       0       0
   318 ;;      Totals:         2       0       0       0       0
   319 ;;Total ram usage:        2 bytes
   320 ;; Hardware stack levels used:    1
   321 ;; Hardware stack levels required when called:    2
   322 ;; This function calls:
   323 ;;		_pause
   324 ;; This function is called by:
   325 ;;		_main
   326 ;; This function uses a non-reentrant model
   327 ;;
   328  07A4                     _PWM:	
   329                           
   330                           ;PRUEBAPWM.c: 58: ADRESH=vadc1>>2;
   331                           
   332                           ; Regs used in _PWM: [wreg+status,2+status,0+pclath+cstack]
   333  07A4  0877               	movf	_vadc1+1,w
   334  07A5  00F5               	movwf	??_PWM+1
   335  07A6  0876               	movf	_vadc1,w
   336  07A7  27F6  120A  118A   	fcall	PL3	;call to abstracted procedure
   337  07AA  009E               	movwf	30	;volatile
   338                           
   339                           ;PRUEBAPWM.c: 59: ADRESL=vadc1<<8;
   340  07AB  1683               	bsf	3,5	;RP0=1, select bank1
   341  07AC  019E               	clrf	30	;volatile
   342                           
   343                           ;PRUEBAPWM.c: 60: CCPR1L=ADRESH;
   344  07AD  1283               	bcf	3,5	;RP0=0, select bank0
   345  07AE  081E               	movf	30,w	;volatile
   346  07AF  0095               	movwf	21	;volatile
   347                           
   348                           ;PRUEBAPWM.c: 61: CCP1CON=0X0C|(ADRESL>>2);
   349  07B0  27EB  120A  118A   	fcall	PL2	;call to abstracted procedure
   350  07B3  0097               	movwf	23	;volatile
   351                           
   352                           ;PRUEBAPWM.c: 62: pause(1);
   353  07B4  01F0               	clrf	?_pause
   354  07B5  0AF0               	incf	?_pause,f
   355  07B6  01F1               	clrf	?_pause+1
   356  07B7  27CF  120A  118A   	fcall	_pause
   357                           
   358                           ;PRUEBAPWM.c: 64: ADRESH=vadc2>>2;
   359  07BA  0879               	movf	_vadc2+1,w
   360  07BB  00F5               	movwf	??_PWM+1
   361  07BC  0878               	movf	_vadc2,w
   362  07BD  27F6  120A  118A   	fcall	PL3	;call to abstracted procedure
   363  07C0  1303               	bcf	3,6	;RP1=0, select bank0
   364  07C1  009E               	movwf	30	;volatile
   365                           
   366                           ;PRUEBAPWM.c: 65: ADRESL=vadc2<<8;
   367  07C2  1683               	bsf	3,5	;RP0=1, select bank1
   368  07C3  019E               	clrf	30	;volatile
   369                           
   370                           ;PRUEBAPWM.c: 66: CCPR2L=ADRESH;
   371  07C4  1283               	bcf	3,5	;RP0=0, select bank0
   372  07C5  081E               	movf	30,w	;volatile
   373  07C6  009B               	movwf	27	;volatile
   374                           
   375                           ;PRUEBAPWM.c: 67: CCP2CON=0X0C|(ADRESL>>2);
   376  07C7  27EB  120A  118A   	fcall	PL2	;call to abstracted procedure
   377  07CA  009D               	movwf	29	;volatile
   378                           
   379                           ;PRUEBAPWM.c: 68: pause(1);
   380  07CB  01F0               	clrf	?_pause
   381  07CC  0AF0               	incf	?_pause,f
   382  07CD  01F1               	clrf	?_pause+1
   383  07CE  2FCF               	ljmp	l2435
   384  07CF                     __end_of_PWM:	
   385  07CF                     __ptext62:	
   386 ;; =============== function _PWM ends ============
   387                           
   388                           
   389 ;; *************** function _pause *****************
   390 ;; Defined at:
   391 ;;		line 73 in file "C:\Users\Jorge\OneDrive\Escritorio\PRUEBAPWM\PRUEBAPWM.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;  usvalue         2    0[COMMON] unsigned short 
   394 ;; Auto vars:     Size  Location     Type
   395 ;;  x               2    2[COMMON] unsigned short 
   396 ;; Return value:  Size  Location     Type
   397 ;;		None               void
   398 ;; Registers used:
   399 ;;		wreg, status,2, status,0, pclath, cstack
   400 ;; Tracked objects:
   401 ;;		On entry : 17F/0
   402 ;;		On exit  : 11F/0
   403 ;;		Unchanged: FFE80/0
   404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   405 ;;      Params:         2       0       0       0       0
   406 ;;      Locals:         2       0       0       0       0
   407 ;;      Temps:          0       0       0       0       0
   408 ;;      Totals:         4       0       0       0       0
   409 ;;Total ram usage:        4 bytes
   410 ;; Hardware stack levels used:    1
   411 ;; Hardware stack levels required when called:    1
   412 ;; This function calls:
   413 ;;		_msecbase
   414 ;; This function is called by:
   415 ;;		_PWM
   416 ;; This function uses a non-reentrant model
   417 ;;
   418  07CF                     _pause:	
   419  07CF                     l2435:	
   420                           ; Regs used in _pause: [wreg+status,2+status,0+pclath+cstack]
   421                           
   422                           
   423                           ;PRUEBAPWM.c: 74: unsigned short x;
   424                           ;PRUEBAPWM.c: 76: for (x=0; x<=usvalue; x++)
   425  07CF  01F2               	clrf	pause@x
   426  07D0  01F3               	clrf	pause@x+1
   427  07D1                     l2441:	
   428  07D1  0873               	movf	pause@x+1,w
   429  07D2  0271               	subwf	pause@usvalue+1,w
   430  07D3  1D03               	skipz
   431  07D4  2FD7               	goto	u65
   432  07D5  0872               	movf	pause@x,w
   433  07D6  0270               	subwf	pause@usvalue,w
   434  07D7                     u65:	
   435  07D7  1C03               	btfss	3,0
   436  07D8  0008               	return
   437                           
   438                           ;PRUEBAPWM.c: 77: {
   439                           ;PRUEBAPWM.c: 78: msecbase();
   440  07D9  27E0  120A  118A   	fcall	_msecbase
   441  07DC  0AF2               	incf	pause@x,f
   442  07DD  1903               	skipnz
   443  07DE  0AF3               	incf	pause@x+1,f
   444  07DF  2FD1               	goto	l2441
   445  07E0                     __end_of_pause:	
   446  07E0                     __ptext63:	
   447 ;; =============== function _pause ends ============
   448                           
   449                           
   450 ;; *************** function _msecbase *****************
   451 ;; Defined at:
   452 ;;		line 83 in file "C:\Users\Jorge\OneDrive\Escritorio\PRUEBAPWM\PRUEBAPWM.c"
   453 ;; Parameters:    Size  Location     Type
   454 ;;		None
   455 ;; Auto vars:     Size  Location     Type
   456 ;;		None
   457 ;; Return value:  Size  Location     Type
   458 ;;		None               void
   459 ;; Registers used:
   460 ;;		wreg
   461 ;; Tracked objects:
   462 ;;		On entry : 11F/0
   463 ;;		On exit  : 11F/0
   464 ;;		Unchanged: FFE80/0
   465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   466 ;;      Params:         0       0       0       0       0
   467 ;;      Locals:         0       0       0       0       0
   468 ;;      Temps:          0       0       0       0       0
   469 ;;      Totals:         0       0       0       0       0
   470 ;;Total ram usage:        0 bytes
   471 ;; Hardware stack levels used:    1
   472 ;; This function calls:
   473 ;;		Nothing
   474 ;; This function is called by:
   475 ;;		_pause
   476 ;; This function uses a non-reentrant model
   477 ;;
   478  07E0                     _msecbase:	
   479                           
   480                           ;PRUEBAPWM.c: 84: OPTION_REG = 0b11010001;
   481                           
   482                           ; Regs used in _msecbase: [wreg]
   483  07E0  30D1               	movlw	209
   484  07E1  1683               	bsf	3,5	;RP0=1, select bank1
   485  07E2  1303               	bcf	3,6	;RP1=0, select bank1
   486  07E3  0081               	movwf	1	;volatile
   487                           
   488                           ;PRUEBAPWM.c: 85: TMR0 = 0x0E;
   489  07E4  300E               	movlw	14
   490  07E5  1283               	bcf	3,5	;RP0=0, select bank0
   491  07E6  0081               	movwf	1	;volatile
   492  07E7                     l1061:	
   493                           ;PRUEBAPWM.c: 87: while(!T0IF);
   494                           
   495  07E7  1D0B               	btfss	11,2
   496  07E8  2FE7               	goto	l1061
   497                           
   498                           ;PRUEBAPWM.c: 88: T0IF = 0;
   499  07E9  110B               	bcf	11,2
   500  07EA  0008               	return
   501  07EB                     __end_of_msecbase:	
   502  07EB                     PL2:	
   503  07EB  1683               	bsf	3,5	;RP0=1, select bank1
   504  07EC  081E               	movf	30,w	;volatile
   505  07ED  00F4               	movwf	??_PWM
   506  07EE  1003               	clrc
   507  07EF  0CF4               	rrf	??_PWM,f
   508  07F0  1003               	clrc
   509  07F1  0CF4               	rrf	??_PWM,f
   510  07F2  0874               	movf	??_PWM,w
   511  07F3  380C               	iorlw	12
   512  07F4  1283               	bcf	3,5	;RP0=0, select bank0
   513  07F5  0008               	return
   514  07F6                     PL3:	
   515  07F6  00F4               	movwf	??_PWM
   516  07F7  1003               	clrc
   517  07F8  0CF5               	rrf	??_PWM+1,f
   518  07F9  0CF4               	rrf	??_PWM,f
   519  07FA  1003               	clrc
   520  07FB  0CF5               	rrf	??_PWM+1,f
   521  07FC  0CF4               	rrf	??_PWM,f
   522  07FD  0874               	movf	??_PWM,w
   523  07FE  1283               	bcf	3,5	;RP0=0, select bank0
   524  07FF  0008               	return
   525                           
   526                           	psect	text64
   527  076E                     __ptext64:	
   528 ;; =============== function _msecbase ends ============
   529                           
   530                           
   531 ;; *************** function _ADC *****************
   532 ;; Defined at:
   533 ;;		line 44 in file "C:\Users\Jorge\OneDrive\Escritorio\PRUEBAPWM\PRUEBAPWM.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;		None
   536 ;; Auto vars:     Size  Location     Type
   537 ;;		None
   538 ;; Return value:  Size  Location     Type
   539 ;;		None               void
   540 ;; Registers used:
   541 ;;		wreg, status,2, status,0
   542 ;; Tracked objects:
   543 ;;		On entry : 11F/0
   544 ;;		On exit  : 17F/20
   545 ;;		Unchanged: FFE80/0
   546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   547 ;;      Params:         0       0       0       0       0
   548 ;;      Locals:         0       0       0       0       0
   549 ;;      Temps:          1       0       0       0       0
   550 ;;      Totals:         1       0       0       0       0
   551 ;;Total ram usage:        1 bytes
   552 ;; Hardware stack levels used:    1
   553 ;; This function calls:
   554 ;;		Nothing
   555 ;; This function is called by:
   556 ;;		_main
   557 ;; This function uses a non-reentrant model
   558 ;;
   559  076E                     _ADC:	
   560                           
   561                           ;PRUEBAPWM.c: 45: ADCON0=0xD5;
   562                           
   563                           ; Regs used in _ADC: [wreg+status,2+status,0]
   564  076E  30D5               	movlw	213
   565  076F  1283               	bcf	3,5	;RP0=0, select bank0
   566  0770  1303               	bcf	3,6	;RP1=0, select bank0
   567  0771  009F               	movwf	31	;volatile
   568                           
   569                           ;PRUEBAPWM.c: 46: GO_DONE=1;
   570  0772  149F               	bsf	31,1
   571  0773                     l1043:	
   572                           ;PRUEBAPWM.c: 47: while(GO_DONE);
   573                           
   574  0773  189F               	btfsc	31,1
   575  0774  2F73               	goto	l1043
   576                           
   577                           ;PRUEBAPWM.c: 48: vadc1=(ADRESH<<2)|(ADRESL>>6);
   578  0775  081E               	movf	30,w	;volatile
   579  0776  00F6               	movwf	_vadc1
   580  0777  01F7               	clrf	_vadc1+1
   581  0778  1003               	clrc
   582  0779  0DF6               	rlf	_vadc1,f
   583  077A  0DF7               	rlf	_vadc1+1,f
   584  077B  1003               	clrc
   585  077C  0DF6               	rlf	_vadc1,f
   586  077D  0DF7               	rlf	_vadc1+1,f
   587  077E  1683               	bsf	3,5	;RP0=1, select bank1
   588  077F  081E               	movf	30,w	;volatile
   589  0780  00F0               	movwf	??_ADC
   590  0781  3006               	movlw	6
   591  0782                     u25:	
   592  0782  1003               	clrc
   593  0783  0CF0               	rrf	??_ADC,f
   594  0784  3EFF               	addlw	-1
   595  0785  1D03               	skipz
   596  0786  2F82               	goto	u25
   597  0787  0870               	movf	??_ADC,w
   598  0788  04F6               	iorwf	_vadc1,f
   599                           
   600                           ;PRUEBAPWM.c: 50: ADCON0=0xD9;
   601  0789  30D9               	movlw	217
   602  078A  1283               	bcf	3,5	;RP0=0, select bank0
   603  078B  009F               	movwf	31	;volatile
   604                           
   605                           ;PRUEBAPWM.c: 51: GO_DONE=1;
   606  078C  149F               	bsf	31,1
   607  078D                     l1046:	
   608                           ;PRUEBAPWM.c: 52: while(GO_DONE);
   609                           
   610  078D  189F               	btfsc	31,1
   611  078E  2F8D               	goto	l1046
   612                           
   613                           ;PRUEBAPWM.c: 53: vadc2=(ADRESH<<2)|(ADRESL>>6);
   614  078F  081E               	movf	30,w	;volatile
   615  0790  00F8               	movwf	_vadc2
   616  0791  01F9               	clrf	_vadc2+1
   617  0792  1003               	clrc
   618  0793  0DF8               	rlf	_vadc2,f
   619  0794  0DF9               	rlf	_vadc2+1,f
   620  0795  1003               	clrc
   621  0796  0DF8               	rlf	_vadc2,f
   622  0797  0DF9               	rlf	_vadc2+1,f
   623  0798  1683               	bsf	3,5	;RP0=1, select bank1
   624  0799  081E               	movf	30,w	;volatile
   625  079A  00F0               	movwf	??_ADC
   626  079B  3006               	movlw	6
   627  079C                     u45:	
   628  079C  1003               	clrc
   629  079D  0CF0               	rrf	??_ADC,f
   630  079E  3EFF               	addlw	-1
   631  079F  1D03               	skipz
   632  07A0  2F9C               	goto	u45
   633  07A1  0870               	movf	??_ADC,w
   634  07A2  04F8               	iorwf	_vadc2,f
   635  07A3  0008               	return
   636  07A4                     __end_of_ADC:	
   637                           
   638                           	psect	text65
   639  0000                     __ptext65:	
   640 ;; =============== function _ADC ends ============
   641                           
   642  007E                     btemp	set	126	;btemp
   643  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Sat May 14 22:12:10 2022

                  u25 0782                    u45 079C                    u65 07D7                   _ADC 076E  
                 _PR2 0092                   _PWM 07A4                  ?_ADC 0070                  ?_PWM 0070  
                l1043 0773                  l1052 0000                  l1061 07E7                  l1046 078D  
                l1064 0000                  l1049 0000                  l1058 0000                  l2431 0000  
                l2423 0000                  l2425 0000                  l2417 0000                  l2433 0000  
                l2441 07D1                  l2427 0000                  l2419 0000                  l2435 07CF  
                l2451 0000                  l2443 0000                  l2453 0000                  l2445 0000  
                l2461 0000                  l2439 0000                  l2455 0000                  l2447 0000  
                l2471 0000                  l2463 0000                  l2457 0000                  l2449 0000  
                l2473 0000                  l2465 0000                  l2459 0000                  l2475 0000  
                l2467 0000                  l2477 0763                  l2469 0000                  l2479 0000  
                _T0IF 005A                  _TMR0 0001                  _main 074A                  btemp 007E  
                start 0000                 ??_ADC 0070                 ??_PWM 0074                 ?_main 0070  
               _ANSEL 0188                 _T2CON 0012                 _TRISA 0085                 _TRISB 0086  
               _TRISC 0087                 _TRISD 0088                 _TRISE 0089                 _vadc1 0076  
               _vadc2 0078                 _pause 07CF                 status 0003                 wtemp0 007E  
        __end_of_main 076E                ??_main 0076                _ADCON0 001F                _ADCON1 009F  
              _ADRESH 001E                _ADRESL 009E                _CCPR1L 0015                ?_pause 0070  
              _CCPR2L 001B                _ANSELH 0189      __end_of_msecbase 07EB                pause@x 0072  
      __pcstackCOMMON 0070         __end_of_pause 07E0               ??_pause 0072            __pmaintext 074A  
             _CCP1CON 0017               _CCP2CON 001D               _GO_DONE 00F9             ?_msecbase 0070  
        __size_of_ADC 0036          __size_of_PWM 002B  end_of_initialization 0746            ??_msecbase 0070  
 start_initialization 0742           __end_of_ADC 07A4           __end_of_PWM 07CF          pause@usvalue 0070  
         __pbssCOMMON 0076     __size_of_msecbase 000B        __size_of_pause 0011              __ptext60 0000  
            __ptext61 07A4              __ptext62 07CF              __ptext63 07E0              __ptext64 076E  
            __ptext65 0000         __size_of_main 0024              _msecbase 07E0            _OPTION_REG 0081  
