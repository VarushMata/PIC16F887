

HI-TECH Software PIC PRO Macro Assembler V9.82 build 9453 
                                                                                               Wed May 18 19:19:52 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 9453
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,delta=2
    12                           	psect	text629,local,class=CODE,delta=2
    13                           	psect	text634,local,class=CODE,delta=2
    14                           	psect	text635,local,class=CODE,delta=2
    15                           	psect	text637,local,class=CODE,delta=2
    16                           	psect	text640,local,class=CODE,delta=2
    17                           	psect	text655,local,class=CODE,delta=2
    18                           	psect	text658,local,class=CODE,delta=2
    19                           	psect	text659,local,class=CODE,delta=2
    20                           	psect	text662,local,class=CODE,delta=2
    21                           	psect	text663,local,class=CODE,delta=2
    22                           	psect	text664,local,class=CODE,delta=2
    23                           	psect	text665,local,class=CODE,delta=2
    24                           	psect	functab,global,reloc=256,class=CODE,delta=2
    25                           	psect	pa_nodes,global,class=CODE,delta=2
    26                           	dabs	1,0x7E,2
    27  000A                     	;#
    28                           
    29                           	psect	config
    30  2007  E0F4               	dw	57588	;#
    31  2008  FFFF               	dw	65535	;#
    32                           
    33                           	psect	strings
    34  1000                     __pstrings:	
    35  1000                     stringtab:	
    36                           ;	global	stringdir,stringtab,__stringbase
    37                           
    38                           
    39                           ;	String table - string pointers are 1 byte each
    40  1000  1BFF               	btfsc	btemp+1,7
    41  1001  280A               	ljmp	stringcode
    42  1002  1383               	bcf	3,7
    43  1003  187F               	btfsc	btemp+1,0
    44  1004  1783               	bsf	3,7
    45  1005  0800               	movf	0,w
    46  1006  0A84               	incf	4,f
    47  1007  1903               	skipnz
    48  1008  0AFF               	incf	btemp+1,f
    49  1009  0008               	return
    50  100A                     stringcode:	
    51  100A                     stringdir:	
    52  100A  3010               	movlw	high stringdir
    53  100B  008A               	movwf	10
    54  100C  0804               	movf	4,w
    55  100D  0A84               	incf	4,f
    56  100E  0782               	addwf	2,f
    57  100F                     __stringbase:	
    58  100F  3400               	retlw	0
    59  1010                     __npowers_:	
    60  1010  3400               	retlw	0
    61  1011  3480               	retlw	128
    62  1012  343F               	retlw	63
    63  1013  34CD               	retlw	205
    64  1014  34CC               	retlw	204
    65  1015  343D               	retlw	61
    66  1016  34D7               	retlw	215
    67  1017  3423               	retlw	35
    68  1018  343C               	retlw	60
    69  1019  3412               	retlw	18
    70  101A  3483               	retlw	131
    71  101B  343A               	retlw	58
    72  101C  34B7               	retlw	183
    73  101D  34D1               	retlw	209
    74  101E  3438               	retlw	56
    75  101F  34C6               	retlw	198
    76  1020  3427               	retlw	39
    77  1021  3437               	retlw	55
    78  1022  3438               	retlw	56
    79  1023  3486               	retlw	134
    80  1024  3435               	retlw	53
    81  1025  34C0               	retlw	192
    82  1026  34D6               	retlw	214
    83  1027  3433               	retlw	51
    84  1028  34CC               	retlw	204
    85  1029  342B               	retlw	43
    86  102A  3432               	retlw	50
    87  102B  3470               	retlw	112
    88  102C  3489               	retlw	137
    89  102D  3430               	retlw	48
    90  102E  34E7               	retlw	231
    91  102F  34DB               	retlw	219
    92  1030  342E               	retlw	46
    93  1031  34E5               	retlw	229
    94  1032  343C               	retlw	60
    95  1033  341E               	retlw	30
    96  1034  3442               	retlw	66
    97  1035  34A2               	retlw	162
    98  1036  340D               	retlw	13
    99  1037                     __powers_:	
   100  1037  3400               	retlw	0
   101  1038  3480               	retlw	128
   102  1039  343F               	retlw	63
   103  103A  3400               	retlw	0
   104  103B  3420               	retlw	32
   105  103C  3441               	retlw	65
   106  103D  3400               	retlw	0
   107  103E  34C8               	retlw	200
   108  103F  3442               	retlw	66
   109  1040  3400               	retlw	0
   110  1041  347A               	retlw	122
   111  1042  3444               	retlw	68
   112  1043  3440               	retlw	64
   113  1044  341C               	retlw	28
   114  1045  3446               	retlw	70
   115  1046  3450               	retlw	80
   116  1047  34C3               	retlw	195
   117  1048  3447               	retlw	71
   118  1049  3424               	retlw	36
   119  104A  3474               	retlw	116
   120  104B  3449               	retlw	73
   121  104C  3497               	retlw	151
   122  104D  3418               	retlw	24
   123  104E  344B               	retlw	75
   124  104F  34BC               	retlw	188
   125  1050  34BE               	retlw	190
   126  1051  344C               	retlw	76
   127  1052  346B               	retlw	107
   128  1053  346E               	retlw	110
   129  1054  344E               	retlw	78
   130  1055  3403               	retlw	3
   131  1056  3415               	retlw	21
   132  1057  3450               	retlw	80
   133  1058  3479               	retlw	121
   134  1059  34AD               	retlw	173
   135  105A  3460               	retlw	96
   136  105B  34F3               	retlw	243
   137  105C  3449               	retlw	73
   138  105D  3471               	retlw	113
   139  105E                     _dpowers:	
   140  105E  3401               	retlw	1
   141  105F  3400               	retlw	0
   142  1060  3400               	retlw	0
   143  1061  3400               	retlw	0
   144  1062  340A               	retlw	10
   145  1063  3400               	retlw	0
   146  1064  3400               	retlw	0
   147  1065  3400               	retlw	0
   148  1066  3464               	retlw	100
   149  1067  3400               	retlw	0
   150  1068  3400               	retlw	0
   151  1069  3400               	retlw	0
   152  106A  34E8               	retlw	232
   153  106B  3403               	retlw	3
   154  106C  3400               	retlw	0
   155  106D  3400               	retlw	0
   156  106E  3410               	retlw	16
   157  106F  3427               	retlw	39
   158  1070  3400               	retlw	0
   159  1071  3400               	retlw	0
   160  1072  34A0               	retlw	160
   161  1073  3486               	retlw	134
   162  1074  3401               	retlw	1
   163  1075  3400               	retlw	0
   164  1076  3440               	retlw	64
   165  1077  3442               	retlw	66
   166  1078  340F               	retlw	15
   167  1079  3400               	retlw	0
   168  107A  3480               	retlw	128
   169  107B  3496               	retlw	150
   170  107C  3498               	retlw	152
   171  107D  3400               	retlw	0
   172  107E  3400               	retlw	0
   173  107F  34E1               	retlw	225
   174  1080  34F5               	retlw	245
   175  1081  3405               	retlw	5
   176  1082  3400               	retlw	0
   177  1083  34CA               	retlw	202
   178  1084  349A               	retlw	154
   179  1085  343B               	retlw	59
   180  0006                     _PORTB	set	6
   181  0008                     _PORTD	set	8
   182  001A                     _RCREG	set	26
   183  0018                     _RCSTA	set	24
   184  0010                     _T1CON	set	16
   185  0001                     _TMR0	set	1
   186  000F                     _TMR1H	set	15
   187  000E                     _TMR1L	set	14
   188  0019                     _TXREG	set	25
   189  0030                     _RB0	set	48
   190  0031                     _RB1	set	49
   191  0038                     _RC0	set	56
   192  003B                     _RC3	set	59
   193  003C                     _RC4	set	60
   194  0065                     _RCIF	set	101
   195  005A                     _T0IF	set	90
   196  0080                     _TMR1ON	set	128
   197  0064                     _TXIF	set	100
   198  0081                     _OPTION_REG	set	129
   199  008F                     _OSCCON	set	143
   200  0099                     _SPBRG	set	153
   201  0085                     _TRISA	set	133
   202  0087                     _TRISC	set	135
   203  0088                     _TRISD	set	136
   204  0089                     _TRISE	set	137
   205  0098                     _TXSTA	set	152
   206  0431                     _TRISB1	set	1073
   207  043E                     _TRISC6	set	1086
   208  043F                     _TRISC7	set	1087
   209  0188                     _ANSEL	set	392
   210  0189                     _ANSELH	set	393
   211  0187                     _BAUDCTL	set	391
   212  1086                     STR_1:	
   213  1086  3449               	retlw	73	;'I'
   214  1087  344E               	retlw	78	;'N'
   215  1088  3449               	retlw	73	;'I'
   216  1089  3443               	retlw	67	;'C'
   217  108A  3449               	retlw	73	;'I'
   218  108B  3441               	retlw	65	;'A'
   219  108C  344E               	retlw	78	;'N'
   220  108D  3444               	retlw	68	;'D'
   221  108E  344F               	retlw	79	;'O'
   222  108F  342E               	retlw	46	;'.'
   223  1090  342E               	retlw	46	;'.'
   224  1091  342E               	retlw	46	;'.'
   225  1092  3400               	retlw	0
   226  1093                     STR_2:	
   227  1093  3453               	retlw	83	;'S'
   228  1094  3469               	retlw	105	;'i'
   229  1095  346E               	retlw	110	;'n'
   230  1096  3420               	retlw	32	;' '
   231  1097  344C               	retlw	76	;'L'
   232  1098  3465               	retlw	101	;'e'
   233  1099  3463               	retlw	99	;'c'
   234  109A  3474               	retlw	116	;'t'
   235  109B  3475               	retlw	117	;'u'
   236  109C  3472               	retlw	114	;'r'
   237  109D  3461               	retlw	97	;'a'
   238  109E  3400               	retlw	0
   239  109F                     STR_5:	
   240  109F  3444               	retlw	68	;'D'
   241  10A0  3469               	retlw	105	;'i'
   242  10A1  3473               	retlw	115	;'s'
   243  10A2  3474               	retlw	116	;'t'
   244  10A3  343A               	retlw	58	;':'
   245  10A4  3400               	retlw	0
   246  10A5                     STR_8:	
   247  10A5  342D               	retlw	45	;'-'
   248  10A6  342D               	retlw	45	;'-'
   249  10A7  342D               	retlw	45	;'-'
   250  10A8  342D               	retlw	45	;'-'
   251  10A9  3400               	retlw	0
   252  10AA                     STR_4:	
   253  10AA  3425               	retlw	37	;'%'
   254  10AB  3433               	retlw	51	;'3'
   255  10AC  3466               	retlw	102	;'f'
   256  10AD  3400               	retlw	0
   257  10AE                     STR_7:	
   258  10AE  3425               	retlw	37	;'%'
   259  10AF  3464               	retlw	100	;'d'
   260  10B0  3400               	retlw	0
   261  10B1                     STR_6:	
   262  10B1  3463               	retlw	99	;'c'
   263  10B2  346D               	retlw	109	;'m'
   264  10B3  3400               	retlw	0
   265  10B4                     STR_3:	
   266  10B4  3430               	retlw	48	;'0'
   267  10B5  3400               	retlw	0
   268  10B4                     
   269                           	psect	cinit
   270  07F3                     start_initialization:	
   271                           
   272                           ; Clear objects allocated to BANK0
   273  07F3  01E3               	clrf	__pbssBANK0& (0+127)
   274  07F4  01E4               	clrf	(__pbssBANK0+1)& (0+127)
   275  07F5  01E5               	clrf	(__pbssBANK0+2)& (0+127)
   276  07F6  01E6               	clrf	(__pbssBANK0+3)& (0+127)
   277  07F7  01E7               	clrf	(__pbssBANK0+4)& (0+127)
   278  07F8                     end_of_initialization:	
   279                           ;End of C runtime variable initialization code
   280                           
   281  07F8  0183               	clrf	3
   282  07F9  120A  118A  2F09   	ljmp	_main	;jump to C main() function
   283                           
   284                           	psect	bssBANK0
   285  0063                     __pbssBANK0:	
   286  0063                     _carac1:	
   287  0063                     	ds	3
   288  0066                     _dist:	
   289  0066                     	ds	2
   290                           
   291                           	psect	cstackBANK1
   292  00A0                     __pcstackBANK1:	
   293  00A0                     __doprnt$1925:	
   294                           
   295                           ; 4 bytes @ 0x0
   296  00A0                     	ds	4
   297  00A4                     __doprnt@flag:	
   298                           
   299                           ; 2 bytes @ 0x4
   300  00A4                     	ds	2
   301  00A6                     __doprnt@integ:	
   302                           
   303                           ; 3 bytes @ 0x6
   304  00A6                     	ds	3
   305  00A9                     __doprnt@width:	
   306                           
   307                           ; 2 bytes @ 0x9
   308  00A9                     	ds	2
   309  00AB                     __doprnt@prec:	
   310                           
   311                           ; 2 bytes @ 0xB
   312  00AB                     	ds	2
   313  00AD                     __doprnt@_val:	
   314                           
   315                           ; 4 bytes @ 0xD
   316  00AD                     	ds	4
   317  00B1                     __doprnt@exp:	
   318                           
   319                           ; 2 bytes @ 0x11
   320  00B1                     	ds	2
   321  00B3                     __doprnt@fval:	
   322                           
   323                           ; 3 bytes @ 0x13
   324  00B3                     	ds	3
   325  00B6                     __doprnt@c:	
   326                           
   327                           ; 1 bytes @ 0x16
   328  00B6                     	ds	1
   329  00B7                     __doprnt@pb:	
   330                           
   331                           ; 1 bytes @ 0x17
   332  00B7                     	ds	1
   333                           
   334                           	psect	cstackCOMMON
   335  0070                     __pcstackCOMMON:	
   336  0070                     ?_lcd_init:	
   337  0070                     ?_lcd_goto:	
   338                           ; 0 bytes @ 0x0
   339                           
   340  0070                     ?_lcd_clear:	
   341                           ; 0 bytes @ 0x0
   342                           
   343  0070                     ?_pause:	
   344                           ; 0 bytes @ 0x0
   345                           
   346  0070                     ?_msecbase:	
   347                           ; 0 bytes @ 0x0
   348                           
   349  0070                     ??_msecbase:	
   350                           ; 0 bytes @ 0x0
   351                           
   352  0070                     ?_isdigit:	
   353                           ; 0 bytes @ 0x0
   354                           
   355  0070                     ??_isdigit:	
   356                           ; 1 bit 
   357                           
   358  0070                     ??_getch:	
   359                           ; 0 bytes @ 0x0
   360                           
   361  0070                     ?_init_comms:	
   362                           ; 0 bytes @ 0x0
   363                           
   364  0070                     ??_init_comms:	
   365                           ; 0 bytes @ 0x0
   366                           
   367  0070                     ?_main:	
   368                           ; 0 bytes @ 0x0
   369                           
   370  0070                     ?_lcd_write:	
   371                           ; 0 bytes @ 0x0
   372                           
   373  0070                     ?___ftge:	
   374                           ; 0 bytes @ 0x0
   375                           
   376  0070                     ?_getch:	
   377                           ; 1 bit 
   378                           
   379  0070                     ?___lbmod:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?_wait_sensor:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ?___wmul:	
   386                           ; 2 bytes @ 0x0
   387                           
   388  0070                     ?___lwdiv:	
   389                           ; 2 bytes @ 0x0
   390                           
   391  0070                     ?___awmod:	
   392                           ; 2 bytes @ 0x0
   393                           
   394  0070                     ?___ftpack:	
   395                           ; 2 bytes @ 0x0
   396                           
   397  0070                     ?___ftneg:	
   398                           ; 3 bytes @ 0x0
   399                           
   400  0070                     ?__tdiv_to_l_:	
   401                           ; 3 bytes @ 0x0
   402                           
   403  0070                     ?__div_to_l_:	
   404                           ; 4 bytes @ 0x0
   405                           
   406  0070                     ?___lldiv:	
   407                           ; 4 bytes @ 0x0
   408                           
   409  0070                     _isdigit$2433:	
   410                           ; 4 bytes @ 0x0
   411                           
   412  0070                     ___lbmod@divisor:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     pause@usvalue:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ___wmul@multiplier:	
   419                           ; 2 bytes @ 0x0
   420                           
   421  0070                     ___lwdiv@divisor:	
   422                           ; 2 bytes @ 0x0
   423                           
   424  0070                     ___awmod@divisor:	
   425                           ; 2 bytes @ 0x0
   426                           
   427  0070                     ___ftneg@f1:	
   428                           ; 2 bytes @ 0x0
   429                           
   430  0070                     ___ftge@ff1:	
   431                           ; 3 bytes @ 0x0
   432                           
   433  0070                     __tdiv_to_l_@f1:	
   434                           ; 3 bytes @ 0x0
   435                           
   436  0070                     __div_to_l_@f1:	
   437                           ; 3 bytes @ 0x0
   438                           
   439  0070                     ___ftpack@arg:	
   440                           ; 3 bytes @ 0x0
   441                           
   442  0070                     ___lldiv@divisor:	
   443                           ; 3 bytes @ 0x0
   444                           
   445                           
   446                           ; 4 bytes @ 0x0
   447  0070                     	ds	1
   448  0071                     ??___lbmod:	
   449  0071                     isdigit@c:	
   450                           ; 0 bytes @ 0x1
   451                           
   452                           
   453                           ; 1 bytes @ 0x1
   454  0071                     	ds	1
   455  0072                     ??_pause:	
   456  0072                     ??_wait_sensor:	
   457                           ; 0 bytes @ 0x2
   458                           
   459  0072                     ___lbmod@dividend:	
   460                           ; 0 bytes @ 0x2
   461                           
   462  0072                     wait_sensor@i:	
   463                           ; 1 bytes @ 0x2
   464                           
   465  0072                     pause@x:	
   466                           ; 2 bytes @ 0x2
   467                           
   468  0072                     ___wmul@multiplicand:	
   469                           ; 2 bytes @ 0x2
   470                           
   471  0072                     ___lwdiv@dividend:	
   472                           ; 2 bytes @ 0x2
   473                           
   474  0072                     ___awmod@dividend:	
   475                           ; 2 bytes @ 0x2
   476                           
   477                           
   478                           ; 2 bytes @ 0x2
   479  0072                     	ds	1
   480  0073                     ??___ftneg:	
   481  0073                     ___lbmod@counter:	
   482                           ; 0 bytes @ 0x3
   483                           
   484  0073                     ___ftpack@exp:	
   485                           ; 1 bytes @ 0x3
   486                           
   487  0073                     ___ftge@ff2:	
   488                           ; 1 bytes @ 0x3
   489                           
   490  0073                     __tdiv_to_l_@f2:	
   491                           ; 3 bytes @ 0x3
   492                           
   493  0073                     __div_to_l_@f2:	
   494                           ; 3 bytes @ 0x3
   495                           
   496                           
   497                           ; 3 bytes @ 0x3
   498  0073                     	ds	1
   499  0074                     ??_lcd_write:	
   500  0074                     ??___wmul:	
   501                           ; 0 bytes @ 0x4
   502                           
   503  0074                     ??___lwdiv:	
   504                           ; 0 bytes @ 0x4
   505                           
   506  0074                     ??___awmod:	
   507                           ; 0 bytes @ 0x4
   508                           
   509  0074                     lcd_write@c:	
   510                           ; 0 bytes @ 0x4
   511                           
   512  0074                     ___lbmod@rem:	
   513                           ; 1 bytes @ 0x4
   514                           
   515  0074                     ___awmod@counter:	
   516                           ; 1 bytes @ 0x4
   517                           
   518  0074                     ___ftpack@sign:	
   519                           ; 1 bytes @ 0x4
   520                           
   521  0074                     ___wmul@product:	
   522                           ; 1 bytes @ 0x4
   523                           
   524  0074                     ___lwdiv@quotient:	
   525                           ; 2 bytes @ 0x4
   526                           
   527  0074                     ___lldiv@dividend:	
   528                           ; 2 bytes @ 0x4
   529                           
   530                           
   531                           ; 4 bytes @ 0x4
   532  0074                     	ds	1
   533  0075                     ??_lcd_init:	
   534  0075                     ??_lcd_goto:	
   535                           ; 0 bytes @ 0x5
   536                           
   537  0075                     ?_lcd_puts:	
   538                           ; 0 bytes @ 0x5
   539                           
   540  0075                     ??_lcd_clear:	
   541                           ; 0 bytes @ 0x5
   542                           
   543  0075                     ??___ftpack:	
   544                           ; 0 bytes @ 0x5
   545                           
   546  0075                     ?___lbdiv:	
   547                           ; 0 bytes @ 0x5
   548                           
   549  0075                     lcd_goto@pos:	
   550                           ; 1 bytes @ 0x5
   551                           
   552  0075                     ___lbdiv@divisor:	
   553                           ; 1 bytes @ 0x5
   554                           
   555  0075                     ___awmod@sign:	
   556                           ; 1 bytes @ 0x5
   557                           
   558  0075                     lcd_puts@s:	
   559                           ; 1 bytes @ 0x5
   560                           
   561                           
   562                           ; 2 bytes @ 0x5
   563  0075                     	ds	1
   564  0076                     ??__tdiv_to_l_:	
   565  0076                     ??__div_to_l_:	
   566                           ; 0 bytes @ 0x6
   567                           
   568  0076                     ??___lbdiv:	
   569                           ; 0 bytes @ 0x6
   570                           
   571  0076                     ??___ftge:	
   572                           ; 0 bytes @ 0x6
   573                           
   574  0076                     ?___awdiv:	
   575                           ; 0 bytes @ 0x6
   576                           
   577  0076                     ___lwdiv@counter:	
   578                           ; 2 bytes @ 0x6
   579                           
   580  0076                     ___lbdiv@dividend:	
   581                           ; 1 bytes @ 0x6
   582                           
   583  0076                     ___awdiv@divisor:	
   584                           ; 1 bytes @ 0x6
   585                           
   586                           
   587                           ; 2 bytes @ 0x6
   588  0076                     	ds	1
   589  0077                     ??_lcd_puts:	
   590  0077                     ___lbdiv@counter:	
   591                           ; 0 bytes @ 0x7
   592                           
   593                           
   594                           ; 1 bytes @ 0x7
   595  0077                     	ds	1
   596  0078                     ??___lldiv:	
   597  0078                     ?___awtoft:	
   598                           ; 0 bytes @ 0x8
   599                           
   600  0078                     ?___lltoft:	
   601                           ; 3 bytes @ 0x8
   602                           
   603  0078                     ___lbdiv@quotient:	
   604                           ; 3 bytes @ 0x8
   605                           
   606  0078                     ___awtoft@c:	
   607                           ; 1 bytes @ 0x8
   608                           
   609  0078                     ___awdiv@dividend:	
   610                           ; 2 bytes @ 0x8
   611                           
   612  0078                     ___lldiv@quotient:	
   613                           ; 2 bytes @ 0x8
   614                           
   615  0078                     ___lltoft@c:	
   616                           ; 4 bytes @ 0x8
   617                           
   618                           
   619                           ; 4 bytes @ 0x8
   620  0078                     	ds	1
   621  0079                     ?___bmul:	
   622  0079                     ___bmul@multiplicand:	
   623                           ; 1 bytes @ 0x9
   624                           
   625                           
   626                           ; 1 bytes @ 0x9
   627  0079                     	ds	1
   628  007A                     ??___bmul:	
   629  007A                     ??___awdiv:	
   630                           ; 0 bytes @ 0xA
   631                           
   632  007A                     ___bmul@product:	
   633                           ; 0 bytes @ 0xA
   634                           
   635  007A                     ___awdiv@counter:	
   636                           ; 1 bytes @ 0xA
   637                           
   638                           
   639                           ; 1 bytes @ 0xA
   640  007A                     	ds	1
   641  007B                     ??___awtoft:	
   642  007B                     ___bmul@multiplier:	
   643                           ; 0 bytes @ 0xB
   644                           
   645  007B                     ___awtoft@sign:	
   646                           ; 1 bytes @ 0xB
   647                           
   648  007B                     ___awdiv@sign:	
   649                           ; 1 bytes @ 0xB
   650                           
   651                           
   652                           ; 1 bytes @ 0xB
   653  007B                     	ds	1
   654  007C                     ??___lltoft:	
   655  007C                     ?_distance:	
   656                           ; 0 bytes @ 0xC
   657                           
   658  007C                     ___lldiv@counter:	
   659                           ; 2 bytes @ 0xC
   660                           
   661  007C                     ___lltoft@exp:	
   662                           ; 1 bytes @ 0xC
   663                           
   664  007C                     ___awdiv@quotient:	
   665                           ; 1 bytes @ 0xC
   666                           
   667                           
   668                           ; 2 bytes @ 0xC
   669  007C                     	ds	1
   670  007D                     ??___llmod:	
   671  007D                     ___llmod@counter:	
   672                           ; 0 bytes @ 0xD
   673                           
   674                           
   675                           ; 1 bytes @ 0xD
   676  007D                     	ds	1
   677  007E                     ??_printf:	
   678  007E                     ??_sprintf:	
   679                           ; 0 bytes @ 0xE
   680                           
   681  007E                     ??_putch:	
   682                           ; 0 bytes @ 0xE
   683                           
   684  007E                     ??_distance:	
   685                           ; 0 bytes @ 0xE
   686                           
   687  007E                     ??_fround:	
   688                           ; 0 bytes @ 0xE
   689                           
   690  007E                     ??___ftsub:	
   691                           ; 0 bytes @ 0xE
   692                           
   693                           
   694                           	psect	cstackBANK0
   695  0020                     __pcstackBANK0:	
   696                           ; 0 bytes @ 0xE
   697                           
   698  0020                     ?___fttol:	
   699  0020                     ?___llmod:	
   700                           ; 4 bytes @ 0x0
   701                           
   702  0020                     distance@ticks:	
   703                           ; 4 bytes @ 0x0
   704                           
   705  0020                     ___fttol@f1:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0020                     ___llmod@divisor:	
   709                           ; 3 bytes @ 0x0
   710                           
   711  0020                     __tdiv_to_l_@quot:	
   712                           ; 4 bytes @ 0x0
   713                           
   714  0020                     __div_to_l_@quot:	
   715                           ; 4 bytes @ 0x0
   716                           
   717                           
   718                           ; 4 bytes @ 0x0
   719  0020                     	ds	4
   720  0024                     ??___fttol:	
   721  0024                     __tdiv_to_l_@cntr:	
   722                           ; 0 bytes @ 0x4
   723                           
   724  0024                     __div_to_l_@cntr:	
   725                           ; 1 bytes @ 0x4
   726                           
   727  0024                     ___llmod@dividend:	
   728                           ; 1 bytes @ 0x4
   729                           
   730                           
   731                           ; 4 bytes @ 0x4
   732  0024                     	ds	1
   733  0025                     __tdiv_to_l_@exp1:	
   734  0025                     __div_to_l_@exp1:	
   735                           ; 1 bytes @ 0x5
   736                           
   737                           
   738                           ; 1 bytes @ 0x5
   739  0025                     	ds	2
   740  0027                     ___fttol@sign1:	
   741                           
   742                           ; 1 bytes @ 0x7
   743  0027                     	ds	1
   744  0028                     ?_putch:	
   745  0028                     putch@byte:	
   746                           ; 0 bytes @ 0x8
   747                           
   748  0028                     ___fttol@lval:	
   749                           ; 1 bytes @ 0x8
   750                           
   751                           
   752                           ; 4 bytes @ 0x8
   753  0028                     	ds	4
   754  002C                     ___fttol@exp1:	
   755                           
   756                           ; 1 bytes @ 0xC
   757  002C                     	ds	1
   758  002D                     ?___ftmul:	
   759  002D                     ___ftmul@f1:	
   760                           ; 3 bytes @ 0xD
   761                           
   762                           
   763                           ; 3 bytes @ 0xD
   764  002D                     	ds	3
   765  0030                     ___ftmul@f2:	
   766                           
   767                           ; 3 bytes @ 0x10
   768  0030                     	ds	3
   769  0033                     ??___ftmul:	
   770                           
   771                           ; 0 bytes @ 0x13
   772  0033                     	ds	3
   773  0036                     ___ftmul@exp:	
   774                           
   775                           ; 1 bytes @ 0x16
   776  0036                     	ds	1
   777  0037                     ___ftmul@f3_as_product:	
   778                           
   779                           ; 3 bytes @ 0x17
   780  0037                     	ds	3
   781  003A                     ___ftmul@cntr:	
   782                           
   783                           ; 1 bytes @ 0x1A
   784  003A                     	ds	1
   785  003B                     ___ftmul@sign:	
   786                           
   787                           ; 1 bytes @ 0x1B
   788  003B                     	ds	1
   789  003C                     ?_scale:	
   790  003C                     ?___ftadd:	
   791                           ; 3 bytes @ 0x1C
   792                           
   793  003C                     ___ftadd@f1:	
   794                           ; 3 bytes @ 0x1C
   795                           
   796                           
   797                           ; 3 bytes @ 0x1C
   798  003C                     	ds	3
   799  003F                     ??_scale:	
   800  003F                     ___ftadd@f2:	
   801                           ; 0 bytes @ 0x1F
   802                           
   803                           
   804                           ; 3 bytes @ 0x1F
   805  003F                     	ds	3
   806  0042                     ??___ftadd:	
   807                           
   808                           ; 0 bytes @ 0x22
   809  0042                     	ds	1
   810  0043                     _scale$2923:	
   811                           
   812                           ; 3 bytes @ 0x23
   813  0043                     	ds	2
   814  0045                     ___ftadd@sign:	
   815                           
   816                           ; 1 bytes @ 0x25
   817  0045                     	ds	1
   818  0046                     scale@scl:	
   819  0046                     ___ftadd@exp2:	
   820                           ; 1 bytes @ 0x26
   821                           
   822                           
   823                           ; 1 bytes @ 0x26
   824  0046                     	ds	1
   825  0047                     ___ftadd@exp1:	
   826                           
   827                           ; 1 bytes @ 0x27
   828  0047                     	ds	1
   829  0048                     ?_fround:	
   830  0048                     ?___ftsub:	
   831                           ; 3 bytes @ 0x28
   832                           
   833  0048                     ___ftsub@f2:	
   834                           ; 3 bytes @ 0x28
   835                           
   836                           
   837                           ; 3 bytes @ 0x28
   838  0048                     	ds	3
   839  004B                     ___ftsub@f1:	
   840  004B                     _fround$2922:	
   841                           ; 3 bytes @ 0x2B
   842                           
   843                           
   844                           ; 3 bytes @ 0x2B
   845  004B                     	ds	3
   846  004E                     _fround$2921:	
   847                           
   848                           ; 3 bytes @ 0x2E
   849  004E                     	ds	3
   850  0051                     fround@prec:	
   851                           
   852                           ; 1 bytes @ 0x31
   853  0051                     	ds	1
   854  0052                     ?__doprnt:	
   855  0052                     __doprnt@f:	
   856                           ; 2 bytes @ 0x32
   857                           
   858                           
   859                           ; 1 bytes @ 0x32
   860  0052                     	ds	1
   861  0053                     __doprnt@ap:	
   862                           
   863                           ; 1 bytes @ 0x33
   864  0053                     	ds	1
   865  0054                     ??__doprnt:	
   866                           
   867                           ; 0 bytes @ 0x34
   868  0054                     	ds	5
   869  0059                     ?_printf:	
   870  0059                     ?_sprintf:	
   871                           ; 2 bytes @ 0x39
   872                           
   873  0059                     sprintf@f:	
   874                           ; 2 bytes @ 0x39
   875                           
   876                           
   877                           ; 1 bytes @ 0x39
   878  0059                     	ds	2
   879  005B                     printf@f:	
   880                           
   881                           ; 1 bytes @ 0x3B
   882  005B                     	ds	1
   883  005C                     printf@ap:	
   884  005C                     sprintf@wh:	
   885                           ; 1 bytes @ 0x3C
   886                           
   887                           
   888                           ; 1 bytes @ 0x3C
   889  005C                     	ds	1
   890  005D                     sprintf@ap:	
   891  005D                     printf@pb:	
   892                           ; 1 bytes @ 0x3D
   893                           
   894                           
   895                           ; 2 bytes @ 0x3D
   896  005D                     	ds	1
   897  005E                     sprintf@pb:	
   898                           
   899                           ; 2 bytes @ 0x3E
   900  005E                     	ds	2
   901  0060                     ??_main:	
   902                           
   903                           ; 0 bytes @ 0x40
   904  0060                     	ds	3
   905                           
   906                           	psect	maintext
   907  0709                     __pmaintext:	
   908 ;;Data sizes: Strings 48, constant 118, data 0, bss 5, persistent 0 stack 0
   909 ;;Auto spaces:   Size  Autos    Used
   910 ;; COMMON          14     14      14
   911 ;; BANK0           80     67      72
   912 ;; BANK1           80     24      24
   913 ;; BANK3           96      0       0
   914 ;; BANK2           96      0       0
   915 ;;
   916 ;; Pointer list with targets:
   917 ;; ?___ftpack	float  size(1) Largest target is 2
   918 ;;		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 
   919 ;;
   920 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   921 ;;
   922 ;; ?___llmod	unsigned long  size(1) Largest target is 2
   923 ;;		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 
   924 ;;
   925 ;; ?___ftsub	float  size(1) Largest target is 0
   926 ;;
   927 ;; ?___lltoft	float  size(1) Largest target is 0
   928 ;;
   929 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
   930 ;;
   931 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
   932 ;;
   933 ;; ?___fttol	long  size(1) Largest target is 2
   934 ;;		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 
   935 ;;
   936 ;; ?___ftadd	float  size(1) Largest target is 2
   937 ;;		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 
   938 ;;
   939 ;; ?___ftneg	float  size(1) Largest target is 2
   940 ;;		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 
   941 ;;
   942 ;; ?___awmod	int  size(2) Largest target is 40
   943 ;;		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), dpowers(CODE[40]), 
   944 ;;
   945 ;; ?___awdiv	int  size(1) Largest target is 0
   946 ;;
   947 ;; ?_scale	int  size(1) Largest target is 0
   948 ;;
   949 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   950 ;;
   951 ;; ?_fround	unsigned int  size(1) Largest target is 0
   952 ;;
   953 ;; ?___ftmul	float  size(1) Largest target is 0
   954 ;;
   955 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   956 ;;
   957 ;; ?___awtoft	float  size(1) Largest target is 0
   958 ;;
   959 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 4
   960 ;;		 -> STR_4(CODE[4]), 
   961 ;;
   962 ;; ?_sprintf	int  size(1) Largest target is 3
   963 ;;		 -> NULL(NULL[0]), carac1(BANK0[3]), 
   964 ;;
   965 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
   966 ;;		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 
   967 ;;
   968 ;; sprintf@wh	PTR unsigned char  size(1) Largest target is 3
   969 ;;		 -> carac1(BANK0[3]), 
   970 ;;
   971 ;; pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
   972 ;;		 -> Absolute function(), putch(), 
   973 ;;
   974 ;; pb.ptr	PTR unsigned char  size(1) Largest target is 3
   975 ;;		 -> NULL(NULL[0]), carac1(BANK0[3]), 
   976 ;;
   977 ;; printf@f	PTR const unsigned char  size(1) Largest target is 3
   978 ;;		 -> STR_9(CODE[2]), STR_7(CODE[3]), STR_3(CODE[2]), 
   979 ;;
   980 ;; ?_printf	int  size(1) Largest target is 0
   981 ;;
   982 ;; printf@ap	PTR void [1] size(1) Largest target is 2
   983 ;;		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 
   984 ;;
   985 ;; pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
   986 ;;		 -> Absolute function(), putch(), 
   987 ;;
   988 ;; pb.ptr	PTR unsigned char  size(1) Largest target is 3
   989 ;;		 -> NULL(NULL[0]), carac1(BANK0[3]), 
   990 ;;
   991 ;; _doprnt@ap	PTR PTR void  size(1) Largest target is 2
   992 ;;		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 
   993 ;;
   994 ;; _doprnt@f	PTR const unsigned char  size(1) Largest target is 4
   995 ;;		 -> STR_9(CODE[2]), STR_7(CODE[3]), STR_4(CODE[4]), STR_3(CODE[2]), 
   996 ;;
   997 ;; S1861__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
   998 ;;		 -> Absolute function(), putch(), 
   999 ;;
  1000 ;; _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
  1001 ;;		 -> Absolute function(), putch(), 
  1002 ;;
  1003 ;; S1861__prbuf$ptr	PTR unsigned char  size(1) Largest target is 3
  1004 ;;		 -> NULL(NULL[0]), carac1(BANK0[3]), 
  1005 ;;
  1006 ;; _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 3
  1007 ;;		 -> NULL(NULL[0]), carac1(BANK0[3]), 
  1008 ;;
  1009 ;; _doprnt@pb	PTR struct __prbuf size(1) Largest target is 3
  1010 ;;		 -> sprintf@pb(BANK0[2]), printf@pb(BANK0[2]), 
  1011 ;;
  1012 ;; S1907$_cp	PTR const unsigned char  size(1) Largest target is 0
  1013 ;;
  1014 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1015 ;;
  1016 ;; lcd_puts@s	PTR const unsigned char  size(2) Largest target is 13
  1017 ;;		 -> STR_8(CODE[5]), STR_6(CODE[3]), STR_5(CODE[6]), carac1(BANK0[3]), 
  1018 ;;		 -> STR_2(CODE[12]), STR_1(CODE[13]), 
  1019 ;;
  1020 ;; distance@ticks	PTR float  size(1) Largest target is 2
  1021 ;;		 -> dist(BANK0[2]), 
  1022 ;;
  1023 ;;
  1024 ;; Critical Paths under _main in COMMON
  1025 ;;
  1026 ;;   _main->_distance
  1027 ;;   _lcd_init->_lcd_write
  1028 ;;   __doprnt->___awdiv
  1029 ;;   __doprnt->__div_to_l_
  1030 ;;   __doprnt->___llmod
  1031 ;;   _lcd_clear->_lcd_write
  1032 ;;   _lcd_puts->_lcd_write
  1033 ;;   _lcd_goto->_lcd_write
  1034 ;;   _scale->___awdiv
  1035 ;;   _lcd_write->_pause
  1036 ;;   _distance->___awtoft
  1037 ;;   ___lltoft->___ftpack
  1038 ;;   ___awtoft->___ftpack
  1039 ;;   ___ftmul->___awdiv
  1040 ;;   ___llmod->___lldiv
  1041 ;;   ___awdiv->___awmod
  1042 ;;   ___fttol->___awdiv
  1043 ;;   ___lbdiv->___lbmod
  1044 ;;   ___bmul->___lbdiv
  1045 ;;   _putch->___llmod
  1046 ;;
  1047 ;; Critical Paths under _main in BANK0
  1048 ;;
  1049 ;;   _main->_sprintf
  1050 ;;   _sprintf->__doprnt
  1051 ;;   _printf->__doprnt
  1052 ;;   __doprnt->_fround
  1053 ;;   ___ftsub->___ftadd
  1054 ;;   _scale->___ftmul
  1055 ;;   _fround->___ftadd
  1056 ;;   ___ftmul->___fttol
  1057 ;;   ___ftadd->___ftmul
  1058 ;;   _putch->___llmod
  1059 ;;
  1060 ;; Critical Paths under _main in BANK1
  1061 ;;
  1062 ;;   _sprintf->__doprnt
  1063 ;;   _printf->__doprnt
  1064 ;;
  1065 ;; Critical Paths under _main in BANK3
  1066 ;;
  1067 ;;   None.
  1068 ;;
  1069 ;; Critical Paths under _main in BANK2
  1070 ;;
  1071 ;;   None.
  1072 ;;
  1073 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1074 ;;
  1075 ;;
  1076 ;;Call Graph Tables:
  1077 ;;
  1078 ;; ---------------------------------------------------------------------------------
  1079 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1080 ;; ---------------------------------------------------------------------------------
  1081 ;; (0) _main                                                 3     3      0   23559
  1082 ;;                                             64 BANK0      3     3      0
  1083 ;;                           _lcd_init
  1084 ;;                         _init_comms
  1085 ;;                           _lcd_goto
  1086 ;;                           _lcd_puts
  1087 ;;                              _getch
  1088 ;;                          _lcd_clear
  1089 ;;                        _wait_sensor
  1090 ;;                           _distance
  1091 ;;                             _printf
  1092 ;;                            ___lwdiv
  1093 ;;                            _sprintf
  1094 ;; ---------------------------------------------------------------------------------
  1095 ;; (1) _sprintf                                              7     4      3   11102
  1096 ;;                                             57 BANK0      7     4      3
  1097 ;;                            __doprnt
  1098 ;; ---------------------------------------------------------------------------------
  1099 ;; (1) _printf                                               6     4      2   11046
  1100 ;;                                             57 BANK0      6     4      2
  1101 ;;                            __doprnt
  1102 ;; ---------------------------------------------------------------------------------
  1103 ;; (1) _lcd_init                                             1     1      0     295
  1104 ;;                                              5 COMMON     1     1      0
  1105 ;;                              _pause
  1106 ;;                          _lcd_write
  1107 ;;                          _lcd_clear
  1108 ;; ---------------------------------------------------------------------------------
  1109 ;; (2) __doprnt                                             35    33      2   10895
  1110 ;;                                             50 BANK0      7     5      2
  1111 ;;                                              0 BANK1     24    24      0
  1112 ;;                   Absolute function
  1113 ;;                              _putch
  1114 ;;                            _isdigit
  1115 ;;                             ___wmul
  1116 ;;                             ___ftge
  1117 ;;                            ___ftneg
  1118 ;;                            ___awdiv
  1119 ;;                              _scale
  1120 ;;                            ___ftmul
  1121 ;;                             _fround
  1122 ;;                            ___ftadd
  1123 ;;                            ___fttol
  1124 ;;                         __div_to_l_
  1125 ;;                        __tdiv_to_l_
  1126 ;;                           ___lltoft
  1127 ;;                            ___ftsub
  1128 ;;                            ___lldiv
  1129 ;;                            ___llmod
  1130 ;; ---------------------------------------------------------------------------------
  1131 ;; (1) _lcd_clear                                            0     0      0     136
  1132 ;;                          _lcd_write
  1133 ;;                              _pause
  1134 ;; ---------------------------------------------------------------------------------
  1135 ;; (1) _lcd_puts                                             2     0      2     135
  1136 ;;                                              5 COMMON     2     0      2
  1137 ;;                          _lcd_write
  1138 ;; ---------------------------------------------------------------------------------
  1139 ;; (1) _lcd_goto                                             1     1      0     112
  1140 ;;                                              5 COMMON     1     1      0
  1141 ;;                          _lcd_write
  1142 ;; ---------------------------------------------------------------------------------
  1143 ;; (3) ___ftsub                                              6     0      6    1094
  1144 ;;                                             40 BANK0      6     0      6
  1145 ;;                            ___ftadd
  1146 ;;                           ___lltoft (ARG)
  1147 ;; ---------------------------------------------------------------------------------
  1148 ;; (3) _scale                                               14    11      3    1688
  1149 ;;                                             28 BANK0     11     8      3
  1150 ;;                            ___awmod
  1151 ;;                            ___awdiv
  1152 ;;                            ___ftmul
  1153 ;;                             ___bmul
  1154 ;;                            ___fttol (ARG)
  1155 ;; ---------------------------------------------------------------------------------
  1156 ;; (3) _fround                                              13    10      3    1215
  1157 ;;                                             40 BANK0     10     7      3
  1158 ;;                            ___lbmod
  1159 ;;                             ___bmul
  1160 ;;                            ___lbdiv
  1161 ;;                            ___ftmul
  1162 ;;                            ___ftadd (ARG)
  1163 ;; ---------------------------------------------------------------------------------
  1164 ;; (2) _lcd_write                                            1     1      0      90
  1165 ;;                                              4 COMMON     1     1      0
  1166 ;;                              _pause
  1167 ;; ---------------------------------------------------------------------------------
  1168 ;; (1) _distance                                             3     1      2     524
  1169 ;;                                             12 COMMON     2     0      2
  1170 ;;                                              0 BANK0      1     1      0
  1171 ;;                           ___awtoft
  1172 ;;                             ___ftge
  1173 ;; ---------------------------------------------------------------------------------
  1174 ;; (3) ___lltoft                                             5     1      4     278
  1175 ;;                                              8 COMMON     5     1      4
  1176 ;;                           ___ftpack
  1177 ;; ---------------------------------------------------------------------------------
  1178 ;; (2) ___awtoft                                             4     1      3     300
  1179 ;;                                              8 COMMON     4     1      3
  1180 ;;                           ___ftpack
  1181 ;; ---------------------------------------------------------------------------------
  1182 ;; (4) ___ftmul                                             15     9      6     535
  1183 ;;                                             13 BANK0     15     9      6
  1184 ;;                           ___ftpack
  1185 ;;                            ___fttol (ARG)
  1186 ;;                            ___awdiv (ARG)
  1187 ;;                            ___awmod (ARG)
  1188 ;;                             ___bmul (ARG)
  1189 ;;                            ___lbdiv (ARG)
  1190 ;;                            ___lbmod (ARG)
  1191 ;; ---------------------------------------------------------------------------------
  1192 ;; (4) ___ftadd                                             12     6      6    1049
  1193 ;;                                             28 BANK0     12     6      6
  1194 ;;                           ___ftpack
  1195 ;;                            ___lbmod (ARG)
  1196 ;;                             ___bmul (ARG)
  1197 ;;                            ___lbdiv (ARG)
  1198 ;;                            ___ftmul (ARG)
  1199 ;; ---------------------------------------------------------------------------------
  1200 ;; (2) _pause                                                4     2      2      46
  1201 ;;                                              0 COMMON     4     2      2
  1202 ;;                           _msecbase
  1203 ;; ---------------------------------------------------------------------------------
  1204 ;; (4) ___awmod                                              6     2      4     296
  1205 ;;                                              0 COMMON     6     2      4
  1206 ;; ---------------------------------------------------------------------------------
  1207 ;; (3) ___lldiv                                             13     5      8     162
  1208 ;;                                              0 COMMON    13     5      8
  1209 ;; ---------------------------------------------------------------------------------
  1210 ;; (3) ___ftge                                               6     0      6     136
  1211 ;;                                              0 COMMON     6     0      6
  1212 ;; ---------------------------------------------------------------------------------
  1213 ;; (3) ___ftneg                                              3     0      3      45
  1214 ;;                                              0 COMMON     3     0      3
  1215 ;; ---------------------------------------------------------------------------------
  1216 ;; (3) ___llmod                                              9     1      8     159
  1217 ;;                                             13 COMMON     1     1      0
  1218 ;;                                              0 BANK0      8     0      8
  1219 ;;                            ___lldiv (ARG)
  1220 ;; ---------------------------------------------------------------------------------
  1221 ;; (4) ___awdiv                                              8     4      4     300
  1222 ;;                                              6 COMMON     8     4      4
  1223 ;;                            ___awmod (ARG)
  1224 ;; ---------------------------------------------------------------------------------
  1225 ;; (3) ___fttol                                             13     9      4     252
  1226 ;;                                              0 BANK0     13     9      4
  1227 ;;                           ___ftpack (ARG)
  1228 ;;                            ___awmod (ARG)
  1229 ;;                            ___awdiv (ARG)
  1230 ;;                             ___bmul (ARG)
  1231 ;; ---------------------------------------------------------------------------------
  1232 ;; (5) ___ftpack                                             8     3      5     209
  1233 ;;                                              0 COMMON     8     3      5
  1234 ;; ---------------------------------------------------------------------------------
  1235 ;; (4) ___lbmod                                              5     4      1     159
  1236 ;;                                              0 COMMON     5     4      1
  1237 ;; ---------------------------------------------------------------------------------
  1238 ;; (4) ___lbdiv                                              4     3      1     162
  1239 ;;                                              5 COMMON     4     3      1
  1240 ;;                            ___lbmod (ARG)
  1241 ;; ---------------------------------------------------------------------------------
  1242 ;; (1) ___lwdiv                                              7     3      4     162
  1243 ;;                                              0 COMMON     7     3      4
  1244 ;; ---------------------------------------------------------------------------------
  1245 ;; (3) ___wmul                                               6     2      4      92
  1246 ;;                                              0 COMMON     6     2      4
  1247 ;; ---------------------------------------------------------------------------------
  1248 ;; (4) ___bmul                                               3     2      1      68
  1249 ;;                                              9 COMMON     3     2      1
  1250 ;;                            ___lbmod (ARG)
  1251 ;;                            ___lbdiv (ARG)
  1252 ;; ---------------------------------------------------------------------------------
  1253 ;; (3) __div_to_l_                                          20    14      6     446
  1254 ;;                                              0 COMMON    14     8      6
  1255 ;;                                              0 BANK0      6     6      0
  1256 ;; ---------------------------------------------------------------------------------
  1257 ;; (3) __tdiv_to_l_                                         15     9      6     303
  1258 ;;                                              0 COMMON     9     3      6
  1259 ;;                                              0 BANK0      6     6      0
  1260 ;; ---------------------------------------------------------------------------------
  1261 ;; (3) _isdigit                                              2     2      0      68
  1262 ;;                                              0 COMMON     2     2      0
  1263 ;; ---------------------------------------------------------------------------------
  1264 ;; (3) Absolute function(Fake)                               1     0      1       0
  1265 ;;                                              0 COMMON     1     0      1
  1266 ;; ---------------------------------------------------------------------------------
  1267 ;; (3) _msecbase                                             0     0      0       0
  1268 ;; ---------------------------------------------------------------------------------
  1269 ;; (1) _wait_sensor                                          4     2      2      47
  1270 ;;                                              0 COMMON     4     2      2
  1271 ;; ---------------------------------------------------------------------------------
  1272 ;; (1) _init_comms                                           0     0      0       0
  1273 ;; ---------------------------------------------------------------------------------
  1274 ;; (1) _getch                                                0     0      0       0
  1275 ;; ---------------------------------------------------------------------------------
  1276 ;; (3) _putch                                                1     0      1      22
  1277 ;;                                              8 BANK0      1     0      1
  1278 ;;                            ___llmod (ARG)
  1279 ;;                            ___lldiv (ARG)
  1280 ;; ---------------------------------------------------------------------------------
  1281 ;; Estimated maximum stack depth 5
  1282 ;; ---------------------------------------------------------------------------------
  1283 ;; Call Graph Graphs:
  1284 ;; _main (ROOT)
  1285 ;;   _lcd_init
  1286 ;;     _pause
  1287 ;;       _msecbase
  1288 ;;     _lcd_write
  1289 ;;       _pause
  1290 ;;         _msecbase
  1291 ;;     _lcd_clear
  1292 ;;       _lcd_write
  1293 ;;         _pause
  1294 ;;           _msecbase
  1295 ;;       _pause
  1296 ;;         _msecbase
  1297 ;;   _init_comms
  1298 ;;   _lcd_goto
  1299 ;;     _lcd_write
  1300 ;;       _pause
  1301 ;;         _msecbase
  1302 ;;   _lcd_puts
  1303 ;;     _lcd_write
  1304 ;;       _pause
  1305 ;;         _msecbase
  1306 ;;   _getch
  1307 ;;   _lcd_clear
  1308 ;;     _lcd_write
  1309 ;;       _pause
  1310 ;;         _msecbase
  1311 ;;     _pause
  1312 ;;       _msecbase
  1313 ;;   _wait_sensor
  1314 ;;   _distance
  1315 ;;     ___awtoft
  1316 ;;       ___ftpack
  1317 ;;     ___ftge
  1318 ;;   _printf
  1319 ;;     __doprnt
  1320 ;;       Absolute function(Fake)
  1321 ;;       _putch
  1322 ;;         ___llmod (ARG)
  1323 ;;           ___lldiv (ARG)
  1324 ;;         ___lldiv (ARG)
  1325 ;;       _isdigit
  1326 ;;       ___wmul
  1327 ;;       ___ftge
  1328 ;;       ___ftneg
  1329 ;;       ___awdiv
  1330 ;;         ___awmod (ARG)
  1331 ;;       _scale
  1332 ;;         ___awmod
  1333 ;;         ___awdiv
  1334 ;;           ___awmod (ARG)
  1335 ;;         ___ftmul
  1336 ;;           ___ftpack
  1337 ;;           ___fttol (ARG)
  1338 ;;             ___ftpack (ARG)
  1339 ;;             ___awmod (ARG)
  1340 ;;             ___awdiv (ARG)
  1341 ;;               ___awmod (ARG)
  1342 ;;             ___bmul (ARG)
  1343 ;;               ___lbmod (ARG)
  1344 ;;               ___lbdiv (ARG)
  1345 ;;                 ___lbmod (ARG)
  1346 ;;           ___awdiv (ARG)
  1347 ;;             ___awmod (ARG)
  1348 ;;           ___awmod (ARG)
  1349 ;;           ___bmul (ARG)
  1350 ;;             ___lbmod (ARG)
  1351 ;;             ___lbdiv (ARG)
  1352 ;;               ___lbmod (ARG)
  1353 ;;           ___lbdiv (ARG)
  1354 ;;             ___lbmod (ARG)
  1355 ;;           ___lbmod (ARG)
  1356 ;;         ___bmul
  1357 ;;           ___lbmod (ARG)
  1358 ;;           ___lbdiv (ARG)
  1359 ;;             ___lbmod (ARG)
  1360 ;;         ___fttol (ARG)
  1361 ;;           ___ftpack (ARG)
  1362 ;;           ___awmod (ARG)
  1363 ;;           ___awdiv (ARG)
  1364 ;;             ___awmod (ARG)
  1365 ;;           ___bmul (ARG)
  1366 ;;             ___lbmod (ARG)
  1367 ;;             ___lbdiv (ARG)
  1368 ;;               ___lbmod (ARG)
  1369 ;;       ___ftmul
  1370 ;;         ___ftpack
  1371 ;;         ___fttol (ARG)
  1372 ;;           ___ftpack (ARG)
  1373 ;;           ___awmod (ARG)
  1374 ;;           ___awdiv (ARG)
  1375 ;;             ___awmod (ARG)
  1376 ;;           ___bmul (ARG)
  1377 ;;             ___lbmod (ARG)
  1378 ;;             ___lbdiv (ARG)
  1379 ;;               ___lbmod (ARG)
  1380 ;;         ___awdiv (ARG)
  1381 ;;           ___awmod (ARG)
  1382 ;;         ___awmod (ARG)
  1383 ;;         ___bmul (ARG)
  1384 ;;           ___lbmod (ARG)
  1385 ;;           ___lbdiv (ARG)
  1386 ;;             ___lbmod (ARG)
  1387 ;;         ___lbdiv (ARG)
  1388 ;;           ___lbmod (ARG)
  1389 ;;         ___lbmod (ARG)
  1390 ;;       _fround
  1391 ;;         ___lbmod
  1392 ;;         ___bmul
  1393 ;;           ___lbmod (ARG)
  1394 ;;           ___lbdiv (ARG)
  1395 ;;             ___lbmod (ARG)
  1396 ;;         ___lbdiv
  1397 ;;           ___lbmod (ARG)
  1398 ;;         ___ftmul
  1399 ;;           ___ftpack
  1400 ;;           ___fttol (ARG)
  1401 ;;             ___ftpack (ARG)
  1402 ;;             ___awmod (ARG)
  1403 ;;             ___awdiv (ARG)
  1404 ;;               ___awmod (ARG)
  1405 ;;             ___bmul (ARG)
  1406 ;;               ___lbmod (ARG)
  1407 ;;               ___lbdiv (ARG)
  1408 ;;                 ___lbmod (ARG)
  1409 ;;           ___awdiv (ARG)
  1410 ;;             ___awmod (ARG)
  1411 ;;           ___awmod (ARG)
  1412 ;;           ___bmul (ARG)
  1413 ;;             ___lbmod (ARG)
  1414 ;;             ___lbdiv (ARG)
  1415 ;;               ___lbmod (ARG)
  1416 ;;           ___lbdiv (ARG)
  1417 ;;             ___lbmod (ARG)
  1418 ;;           ___lbmod (ARG)
  1419 ;;         ___ftadd (ARG)
  1420 ;;           ___ftpack
  1421 ;;           ___lbmod (ARG)
  1422 ;;           ___bmul (ARG)
  1423 ;;             ___lbmod (ARG)
  1424 ;;             ___lbdiv (ARG)
  1425 ;;               ___lbmod (ARG)
  1426 ;;           ___lbdiv (ARG)
  1427 ;;             ___lbmod (ARG)
  1428 ;;           ___ftmul (ARG)
  1429 ;;             ___ftpack
  1430 ;;             ___fttol (ARG)
  1431 ;;               ___ftpack (ARG)
  1432 ;;               ___awmod (ARG)
  1433 ;;               ___awdiv (ARG)
  1434 ;;                 ___awmod (ARG)
  1435 ;;               ___bmul (ARG)
  1436 ;;                 ___lbmod (ARG)
  1437 ;;                 ___lbdiv (ARG)
  1438 ;;                   ___lbmod (ARG)
  1439 ;;             ___awdiv (ARG)
  1440 ;;               ___awmod (ARG)
  1441 ;;             ___awmod (ARG)
  1442 ;;             ___bmul (ARG)
  1443 ;;               ___lbmod (ARG)
  1444 ;;               ___lbdiv (ARG)
  1445 ;;                 ___lbmod (ARG)
  1446 ;;             ___lbdiv (ARG)
  1447 ;;               ___lbmod (ARG)
  1448 ;;             ___lbmod (ARG)
  1449 ;;       ___ftadd
  1450 ;;         ___ftpack
  1451 ;;         ___lbmod (ARG)
  1452 ;;         ___bmul (ARG)
  1453 ;;           ___lbmod (ARG)
  1454 ;;           ___lbdiv (ARG)
  1455 ;;             ___lbmod (ARG)
  1456 ;;         ___lbdiv (ARG)
  1457 ;;           ___lbmod (ARG)
  1458 ;;         ___ftmul (ARG)
  1459 ;;           ___ftpack
  1460 ;;           ___fttol (ARG)
  1461 ;;             ___ftpack (ARG)
  1462 ;;             ___awmod (ARG)
  1463 ;;             ___awdiv (ARG)
  1464 ;;               ___awmod (ARG)
  1465 ;;             ___bmul (ARG)
  1466 ;;               ___lbmod (ARG)
  1467 ;;               ___lbdiv (ARG)
  1468 ;;                 ___lbmod (ARG)
  1469 ;;           ___awdiv (ARG)
  1470 ;;             ___awmod (ARG)
  1471 ;;           ___awmod (ARG)
  1472 ;;           ___bmul (ARG)
  1473 ;;             ___lbmod (ARG)
  1474 ;;             ___lbdiv (ARG)
  1475 ;;               ___lbmod (ARG)
  1476 ;;           ___lbdiv (ARG)
  1477 ;;             ___lbmod (ARG)
  1478 ;;           ___lbmod (ARG)
  1479 ;;       ___fttol
  1480 ;;         ___ftpack (ARG)
  1481 ;;         ___awmod (ARG)
  1482 ;;         ___awdiv (ARG)
  1483 ;;           ___awmod (ARG)
  1484 ;;         ___bmul (ARG)
  1485 ;;           ___lbmod (ARG)
  1486 ;;           ___lbdiv (ARG)
  1487 ;;             ___lbmod (ARG)
  1488 ;;       __div_to_l_
  1489 ;;       __tdiv_to_l_
  1490 ;;       ___lltoft
  1491 ;;         ___ftpack
  1492 ;;       ___ftsub
  1493 ;;         ___ftadd
  1494 ;;           ___ftpack
  1495 ;;           ___lbmod (ARG)
  1496 ;;           ___bmul (ARG)
  1497 ;;             ___lbmod (ARG)
  1498 ;;             ___lbdiv (ARG)
  1499 ;;               ___lbmod (ARG)
  1500 ;;           ___lbdiv (ARG)
  1501 ;;             ___lbmod (ARG)
  1502 ;;           ___ftmul (ARG)
  1503 ;;             ___ftpack
  1504 ;;             ___fttol (ARG)
  1505 ;;               ___ftpack (ARG)
  1506 ;;               ___awmod (ARG)
  1507 ;;               ___awdiv (ARG)
  1508 ;;                 ___awmod (ARG)
  1509 ;;               ___bmul (ARG)
  1510 ;;                 ___lbmod (ARG)
  1511 ;;                 ___lbdiv (ARG)
  1512 ;;                   ___lbmod (ARG)
  1513 ;;             ___awdiv (ARG)
  1514 ;;               ___awmod (ARG)
  1515 ;;             ___awmod (ARG)
  1516 ;;             ___bmul (ARG)
  1517 ;;               ___lbmod (ARG)
  1518 ;;               ___lbdiv (ARG)
  1519 ;;                 ___lbmod (ARG)
  1520 ;;             ___lbdiv (ARG)
  1521 ;;               ___lbmod (ARG)
  1522 ;;             ___lbmod (ARG)
  1523 ;;         ___lltoft (ARG)
  1524 ;;           ___ftpack
  1525 ;;       ___lldiv
  1526 ;;       ___llmod
  1527 ;;         ___lldiv (ARG)
  1528 ;;   ___lwdiv
  1529 ;;   _sprintf
  1530 ;;     __doprnt
  1531 ;;       Absolute function(Fake)
  1532 ;;       _putch
  1533 ;;         ___llmod (ARG)
  1534 ;;           ___lldiv (ARG)
  1535 ;;         ___lldiv (ARG)
  1536 ;;       _isdigit
  1537 ;;       ___wmul
  1538 ;;       ___ftge
  1539 ;;       ___ftneg
  1540 ;;       ___awdiv
  1541 ;;         ___awmod (ARG)
  1542 ;;       _scale
  1543 ;;         ___awmod
  1544 ;;         ___awdiv
  1545 ;;           ___awmod (ARG)
  1546 ;;         ___ftmul
  1547 ;;           ___ftpack
  1548 ;;           ___fttol (ARG)
  1549 ;;             ___ftpack (ARG)
  1550 ;;             ___awmod (ARG)
  1551 ;;             ___awdiv (ARG)
  1552 ;;               ___awmod (ARG)
  1553 ;;             ___bmul (ARG)
  1554 ;;               ___lbmod (ARG)
  1555 ;;               ___lbdiv (ARG)
  1556 ;;                 ___lbmod (ARG)
  1557 ;;           ___awdiv (ARG)
  1558 ;;             ___awmod (ARG)
  1559 ;;           ___awmod (ARG)
  1560 ;;           ___bmul (ARG)
  1561 ;;             ___lbmod (ARG)
  1562 ;;             ___lbdiv (ARG)
  1563 ;;               ___lbmod (ARG)
  1564 ;;           ___lbdiv (ARG)
  1565 ;;             ___lbmod (ARG)
  1566 ;;           ___lbmod (ARG)
  1567 ;;         ___bmul
  1568 ;;           ___lbmod (ARG)
  1569 ;;           ___lbdiv (ARG)
  1570 ;;             ___lbmod (ARG)
  1571 ;;         ___fttol (ARG)
  1572 ;;           ___ftpack (ARG)
  1573 ;;           ___awmod (ARG)
  1574 ;;           ___awdiv (ARG)
  1575 ;;             ___awmod (ARG)
  1576 ;;           ___bmul (ARG)
  1577 ;;             ___lbmod (ARG)
  1578 ;;             ___lbdiv (ARG)
  1579 ;;               ___lbmod (ARG)
  1580 ;;       ___ftmul
  1581 ;;         ___ftpack
  1582 ;;         ___fttol (ARG)
  1583 ;;           ___ftpack (ARG)
  1584 ;;           ___awmod (ARG)
  1585 ;;           ___awdiv (ARG)
  1586 ;;             ___awmod (ARG)
  1587 ;;           ___bmul (ARG)
  1588 ;;             ___lbmod (ARG)
  1589 ;;             ___lbdiv (ARG)
  1590 ;;               ___lbmod (ARG)
  1591 ;;         ___awdiv (ARG)
  1592 ;;           ___awmod (ARG)
  1593 ;;         ___awmod (ARG)
  1594 ;;         ___bmul (ARG)
  1595 ;;           ___lbmod (ARG)
  1596 ;;           ___lbdiv (ARG)
  1597 ;;             ___lbmod (ARG)
  1598 ;;         ___lbdiv (ARG)
  1599 ;;           ___lbmod (ARG)
  1600 ;;         ___lbmod (ARG)
  1601 ;;       _fround
  1602 ;;         ___lbmod
  1603 ;;         ___bmul
  1604 ;;           ___lbmod (ARG)
  1605 ;;           ___lbdiv (ARG)
  1606 ;;             ___lbmod (ARG)
  1607 ;;         ___lbdiv
  1608 ;;           ___lbmod (ARG)
  1609 ;;         ___ftmul
  1610 ;;           ___ftpack
  1611 ;;           ___fttol (ARG)
  1612 ;;             ___ftpack (ARG)
  1613 ;;             ___awmod (ARG)
  1614 ;;             ___awdiv (ARG)
  1615 ;;               ___awmod (ARG)
  1616 ;;             ___bmul (ARG)
  1617 ;;               ___lbmod (ARG)
  1618 ;;               ___lbdiv (ARG)
  1619 ;;                 ___lbmod (ARG)
  1620 ;;           ___awdiv (ARG)
  1621 ;;             ___awmod (ARG)
  1622 ;;           ___awmod (ARG)
  1623 ;;           ___bmul (ARG)
  1624 ;;             ___lbmod (ARG)
  1625 ;;             ___lbdiv (ARG)
  1626 ;;               ___lbmod (ARG)
  1627 ;;           ___lbdiv (ARG)
  1628 ;;             ___lbmod (ARG)
  1629 ;;           ___lbmod (ARG)
  1630 ;;         ___ftadd (ARG)
  1631 ;;           ___ftpack
  1632 ;;           ___lbmod (ARG)
  1633 ;;           ___bmul (ARG)
  1634 ;;             ___lbmod (ARG)
  1635 ;;             ___lbdiv (ARG)
  1636 ;;               ___lbmod (ARG)
  1637 ;;           ___lbdiv (ARG)
  1638 ;;             ___lbmod (ARG)
  1639 ;;           ___ftmul (ARG)
  1640 ;;             ___ftpack
  1641 ;;             ___fttol (ARG)
  1642 ;;               ___ftpack (ARG)
  1643 ;;               ___awmod (ARG)
  1644 ;;               ___awdiv (ARG)
  1645 ;;                 ___awmod (ARG)
  1646 ;;               ___bmul (ARG)
  1647 ;;                 ___lbmod (ARG)
  1648 ;;                 ___lbdiv (ARG)
  1649 ;;                   ___lbmod (ARG)
  1650 ;;             ___awdiv (ARG)
  1651 ;;               ___awmod (ARG)
  1652 ;;             ___awmod (ARG)
  1653 ;;             ___bmul (ARG)
  1654 ;;               ___lbmod (ARG)
  1655 ;;               ___lbdiv (ARG)
  1656 ;;                 ___lbmod (ARG)
  1657 ;;             ___lbdiv (ARG)
  1658 ;;               ___lbmod (ARG)
  1659 ;;             ___lbmod (ARG)
  1660 ;;       ___ftadd
  1661 ;;         ___ftpack
  1662 ;;         ___lbmod (ARG)
  1663 ;;         ___bmul (ARG)
  1664 ;;           ___lbmod (ARG)
  1665 ;;           ___lbdiv (ARG)
  1666 ;;             ___lbmod (ARG)
  1667 ;;         ___lbdiv (ARG)
  1668 ;;           ___lbmod (ARG)
  1669 ;;         ___ftmul (ARG)
  1670 ;;           ___ftpack
  1671 ;;           ___fttol (ARG)
  1672 ;;             ___ftpack (ARG)
  1673 ;;             ___awmod (ARG)
  1674 ;;             ___awdiv (ARG)
  1675 ;;               ___awmod (ARG)
  1676 ;;             ___bmul (ARG)
  1677 ;;               ___lbmod (ARG)
  1678 ;;               ___lbdiv (ARG)
  1679 ;;                 ___lbmod (ARG)
  1680 ;;           ___awdiv (ARG)
  1681 ;;             ___awmod (ARG)
  1682 ;;           ___awmod (ARG)
  1683 ;;           ___bmul (ARG)
  1684 ;;             ___lbmod (ARG)
  1685 ;;             ___lbdiv (ARG)
  1686 ;;               ___lbmod (ARG)
  1687 ;;           ___lbdiv (ARG)
  1688 ;;             ___lbmod (ARG)
  1689 ;;           ___lbmod (ARG)
  1690 ;;       ___fttol
  1691 ;;         ___ftpack (ARG)
  1692 ;;         ___awmod (ARG)
  1693 ;;         ___awdiv (ARG)
  1694 ;;           ___awmod (ARG)
  1695 ;;         ___bmul (ARG)
  1696 ;;           ___lbmod (ARG)
  1697 ;;           ___lbdiv (ARG)
  1698 ;;             ___lbmod (ARG)
  1699 ;;       __div_to_l_
  1700 ;;       __tdiv_to_l_
  1701 ;;       ___lltoft
  1702 ;;         ___ftpack
  1703 ;;       ___ftsub
  1704 ;;         ___ftadd
  1705 ;;           ___ftpack
  1706 ;;           ___lbmod (ARG)
  1707 ;;           ___bmul (ARG)
  1708 ;;             ___lbmod (ARG)
  1709 ;;             ___lbdiv (ARG)
  1710 ;;               ___lbmod (ARG)
  1711 ;;           ___lbdiv (ARG)
  1712 ;;             ___lbmod (ARG)
  1713 ;;           ___ftmul (ARG)
  1714 ;;             ___ftpack
  1715 ;;             ___fttol (ARG)
  1716 ;;               ___ftpack (ARG)
  1717 ;;               ___awmod (ARG)
  1718 ;;               ___awdiv (ARG)
  1719 ;;                 ___awmod (ARG)
  1720 ;;               ___bmul (ARG)
  1721 ;;                 ___lbmod (ARG)
  1722 ;;                 ___lbdiv (ARG)
  1723 ;;                   ___lbmod (ARG)
  1724 ;;             ___awdiv (ARG)
  1725 ;;               ___awmod (ARG)
  1726 ;;             ___awmod (ARG)
  1727 ;;             ___bmul (ARG)
  1728 ;;               ___lbmod (ARG)
  1729 ;;               ___lbdiv (ARG)
  1730 ;;                 ___lbmod (ARG)
  1731 ;;             ___lbdiv (ARG)
  1732 ;;               ___lbmod (ARG)
  1733 ;;             ___lbmod (ARG)
  1734 ;;         ___lltoft (ARG)
  1735 ;;           ___ftpack
  1736 ;;       ___lldiv
  1737 ;;       ___llmod
  1738 ;;         ___lldiv (ARG)
  1739 ;;
  1740 ;; Address spaces:
  1741 ;;Name               Size   Autos  Total    Cost      Usage
  1742 ;;BITCOMMON            E      0       0       0        0.0%
  1743 ;;EEDATA             100      0       0       0        0.0%
  1744 ;;NULL                 0      0       0       0        0.0%
  1745 ;;CODE                 0      0       0       0        0.0%
  1746 ;;COMMON               E      E       E       1      100.0%
  1747 ;;BITSFR0              0      0       0       1        0.0%
  1748 ;;SFR0                 0      0       0       1        0.0%
  1749 ;;BITSFR1              0      0       0       2        0.0%
  1750 ;;SFR1                 0      0       0       2        0.0%
  1751 ;;STACK                0      0       5       2        0.0%
  1752 ;;ABS                  0      0      6E       3        0.0%
  1753 ;;BITBANK0            50      0       0       4        0.0%
  1754 ;;BITSFR3              0      0       0       4        0.0%
  1755 ;;SFR3                 0      0       0       4        0.0%
  1756 ;;BANK0               50     43      48       5       90.0%
  1757 ;;BITSFR2              0      0       0       5        0.0%
  1758 ;;SFR2                 0      0       0       5        0.0%
  1759 ;;BITBANK1            50      0       0       6        0.0%
  1760 ;;BANK1               50     18      18       7       30.0%
  1761 ;;BITBANK3            60      0       0       8        0.0%
  1762 ;;BANK3               60      0       0       9        0.0%
  1763 ;;BITBANK2            60      0       0      10        0.0%
  1764 ;;BANK2               60      0       0      11        0.0%
  1765 ;;DATA                 0      0      73      12        0.0%
  1766                           
  1767                           
  1768 ;; *************** function _main *****************
  1769 ;; Defined at:
  1770 ;;		line 115 in file "C:\Users\Jorge\OneDrive\Escritorio\SRPROG\SRPROG.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;		None
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;		None
  1775 ;; Return value:  Size  Location     Type
  1776 ;;		None               void
  1777 ;; Registers used:
  1778 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1779 ;; Tracked objects:
  1780 ;;		On entry : 17F/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1784 ;;      Params:         0       0       0       0       0
  1785 ;;      Locals:         0       0       0       0       0
  1786 ;;      Temps:          0       3       0       0       0
  1787 ;;      Totals:         0       3       0       0       0
  1788 ;;Total ram usage:        3 bytes
  1789 ;; Hardware stack levels required when called:    5
  1790 ;; This function calls:
  1791 ;;		_lcd_init
  1792 ;;		_init_comms
  1793 ;;		_lcd_goto
  1794 ;;		_lcd_puts
  1795 ;;		_getch
  1796 ;;		_lcd_clear
  1797 ;;		_wait_sensor
  1798 ;;		_distance
  1799 ;;		_printf
  1800 ;;		___lwdiv
  1801 ;;		_sprintf
  1802 ;; This function is called by:
  1803 ;;		Startup code after reset
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806  0709                     _main:	
  1807                           
  1808                           ;SRPROG.c: 117: OSCCON=0x70;
  1809                           
  1810                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1811  0709  3070               	movlw	112
  1812  070A  1683               	bsf	3,5	;RP0=1, select bank1
  1813  070B  008F               	movwf	15	;volatile
  1814                           
  1815                           ;SRPROG.c: 119: ANSEL = 0x60;
  1816  070C  3060               	movlw	96
  1817  070D  1703               	bsf	3,6	;RP1=1, select bank3
  1818  070E  0088               	movwf	8	;volatile
  1819                           
  1820                           ;SRPROG.c: 120: ANSELH = 0x00;
  1821  070F  0189               	clrf	9	;volatile
  1822                           
  1823                           ;SRPROG.c: 121: PORTB=0;
  1824  0710  1283               	bcf	3,5	;RP0=0, select bank0
  1825  0711  1303               	bcf	3,6	;RP1=0, select bank0
  1826  0712  0186               	clrf	6	;volatile
  1827                           
  1828                           ;SRPROG.c: 122: TRISB1=0;
  1829  0713  1683               	bsf	3,5	;RP0=1, select bank1
  1830  0714  1086               	bcf	6,1
  1831                           
  1832                           ;SRPROG.c: 123: TRISA = 0x00;
  1833  0715  0185               	clrf	5	;volatile
  1834                           
  1835                           ;SRPROG.c: 124: TRISD = 0x00;
  1836  0716  0188               	clrf	8	;volatile
  1837                           
  1838                           ;SRPROG.c: 125: TRISC = 0x00;
  1839  0717  0187               	clrf	7	;volatile
  1840                           
  1841                           ;SRPROG.c: 126: TRISE = 0x00;
  1842  0718  0189               	clrf	9	;volatile
  1843                           
  1844                           ;SRPROG.c: 128: T1CON = 0x10;
  1845  0719  3010               	movlw	16
  1846  071A  1283               	bcf	3,5	;RP0=0, select bank0
  1847  071B  0090               	movwf	16	;volatile
  1848                           
  1849                           ;SRPROG.c: 129: TMR1H=0x00;
  1850  071C  018F               	clrf	15	;volatile
  1851                           
  1852                           ;SRPROG.c: 130: TMR1L=0x00;
  1853  071D  018E               	clrf	14	;volatile
  1854                           
  1855                           ;SRPROG.c: 132: lcd_init();
  1856  071E  160A  118A  2785   	fcall	_lcd_init
      +       120A  118A         
  1857                           
  1858                           ;SRPROG.c: 134: init_comms();
  1859  0723  120A  118A  27E5   	fcall	_init_comms
      +       120A  118A         
  1860                           
  1861                           ;SRPROG.c: 136: lcd_goto(0x00);
  1862  0728  3000               	movlw	0
  1863  0729  160A  118A  2762   	fcall	_lcd_goto
      +       120A  118A         
  1864                           
  1865                           ;SRPROG.c: 137: lcd_puts("INICIANDO...");
  1866  072E  3077               	movlw	low (STR_1-__stringbase)
  1867  072F  00F5               	movwf	?_lcd_puts
  1868  0730  3080               	movlw	128
  1869  0731  00F6               	movwf	?_lcd_puts+1
  1870  0732  160A  118A  2768   	fcall	_lcd_puts
      +       120A  118A         
  1871                           
  1872                           ;SRPROG.c: 139: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1873  0737  300B               	movlw	11
  1874  0738  00E2               	movwf	??_main+2
  1875  0739  3026               	movlw	38
  1876  073A  00E1               	movwf	??_main+1
  1877  073B  3066               	movlw	102
  1878  073C  00E0               	movwf	??_main
  1879  073D                     u3517:	
  1880  073D  0BE0               	decfsz	??_main,f
  1881  073E  2F3D               	goto	u3517
  1882  073F  0BE1               	decfsz	??_main+1,f
  1883  0740  2F3D               	goto	u3517
  1884  0741  0BE2               	decfsz	??_main+2,f
  1885  0742  2F3D               	goto	u3517
  1886  0743  2F44               	nop2
  1887  0744                     l6310:	
  1888                           
  1889                           ;SRPROG.c: 143: getch();
  1890  0744  120A  118A  201B   	fcall	_getch
      +       120A  118A         
  1891                           
  1892                           ;SRPROG.c: 145: lcd_clear();
  1893  0749  160A  118A  27EC   	fcall	_lcd_clear
      +       120A  118A         
  1894                           
  1895                           ;SRPROG.c: 147: RB1=0;
  1896  074E  1283               	bcf	3,5	;RP0=0, select bank0
  1897  074F  1303               	bcf	3,6	;RP1=0, select bank0
  1898  0750  1086               	bcf	6,1
  1899                           
  1900                           ;SRPROG.c: 149: _delay((unsigned long)((2)*(8000000/4000000.0)));
  1901  0751  2F52               	nop2	;2 cycle nop
  1902  0752  2F53               	nop2	;2 cycle nop
  1903                           
  1904                           ;SRPROG.c: 151: RB1=1;
  1905  0753  1283               	bcf	3,5	;RP0=0, select bank0
  1906  0754  1303               	bcf	3,6	;RP1=0, select bank0
  1907  0755  3006               	movlw	6
  1908  0756  1486               	bsf	6,1
  1909                           
  1910                           ;SRPROG.c: 153: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1911  0757  00E0               	movwf	??_main
  1912  0758                     u3527:	
  1913  0758  0BE0               	decfsz	??_main,f
  1914  0759  2F58               	goto	u3527
  1915  075A  0064               	clrwdt
  1916                           
  1917                           ;SRPROG.c: 155: RB1=0;
  1918  075B  1283               	bcf	3,5	;RP0=0, select bank0
  1919  075C  1303               	bcf	3,6	;RP1=0, select bank0
  1920  075D  1086               	bcf	6,1
  1921                           
  1922                           ;SRPROG.c: 157: if(wait_sensor()){
  1923  075E  120A  118A  2021   	fcall	_wait_sensor
      +       120A  118A         
  1924  0763  0871               	movf	?_wait_sensor+1,w
  1925  0764  0470               	iorwf	?_wait_sensor,w
  1926  0765  1903               	skipnz
  1927  0766  2FC3               	goto	l6348
  1928  0767  3066               	movlw	_dist& (0+255)
  1929                           
  1930                           ;SRPROG.c: 159: dist=0;
  1931  0768  01E6               	clrf	_dist
  1932  0769  01E7               	clrf	_dist+1
  1933                           
  1934                           ;SRPROG.c: 161: if(distance(&dist)){
  1935  076A  120A  118A  2376   	fcall	_distance
      +       120A  118A         
  1936  076F  087D               	movf	?_distance+1,w
  1937  0770  047C               	iorwf	?_distance,w
  1938  0771  1903               	skipnz
  1939  0772  2F7B               	goto	l6336
  1940                           
  1941                           ;SRPROG.c: 162: lcd_goto(0x00);
  1942  0773  3000               	movlw	0
  1943  0774  160A  118A  2762   	fcall	_lcd_goto
      +       120A  118A         
  1944                           
  1945                           ;SRPROG.c: 163: lcd_puts("Sin Lectura");
  1946  0779  3084               	movlw	low (STR_2-__stringbase)
  1947  077A  2FCA               	goto	L2
  1948  077B                     l6336:	
  1949                           ;SRPROG.c: 167: }else{
  1950                           
  1951                           ;SRPROG.c: 165: printf("0");
  1952                           
  1953                           
  1954                           ;SRPROG.c: 168: dist = dist / 58;
  1955  077B  303A               	movlw	58
  1956  077C  00F0               	movwf	?___lwdiv
  1957  077D  01F1               	clrf	?___lwdiv+1
  1958  077E  0867               	movf	_dist+1,w
  1959  077F  00F3               	movwf	?___lwdiv+3
  1960  0780  0866               	movf	_dist,w
  1961  0781  00F2               	movwf	?___lwdiv+2
  1962  0782  120A  118A  2042   	fcall	___lwdiv
      +       120A  118A         
  1963  0787  0871               	movf	?___lwdiv+1,w
  1964  0788  00E7               	movwf	_dist+1
  1965  0789  0870               	movf	?___lwdiv,w
  1966  078A  00E6               	movwf	_dist
  1967                           
  1968                           ;SRPROG.c: 170: sprintf(carac1, "%3f",dist);
  1969  078B  309B               	movlw	(STR_4-__stringbase)& (0+255)
  1970  078C  00D9               	movwf	?_sprintf
  1971  078D  0867               	movf	_dist+1,w
  1972  078E  00DB               	movwf	?_sprintf+2
  1973  078F  0866               	movf	_dist,w
  1974  0790  00DA               	movwf	?_sprintf+1
  1975  0791  3063               	movlw	_carac1& (0+255)
  1976  0792  120A  158A  2059   	fcall	_sprintf
      +       120A  118A         
  1977                           
  1978                           ;SRPROG.c: 171: lcd_goto(0x00);
  1979  0797  3000               	movlw	0
  1980  0798  160A  118A  2762   	fcall	_lcd_goto
      +       120A  118A         
  1981                           
  1982                           ;SRPROG.c: 172: lcd_puts("Dist:");
  1983  079D  3090               	movlw	low (STR_5-__stringbase)
  1984  079E  00F5               	movwf	?_lcd_puts
  1985  079F  3080               	movlw	128
  1986  07A0  00F6               	movwf	?_lcd_puts+1
  1987  07A1  160A  118A  2768   	fcall	_lcd_puts
      +       120A  118A         
  1988                           
  1989                           ;SRPROG.c: 173: lcd_puts(carac1);
  1990  07A6  3063               	movlw	_carac1& (0+255)
  1991  07A7  00F5               	movwf	?_lcd_puts
  1992  07A8  01F6               	clrf	?_lcd_puts+1
  1993  07A9  160A  118A  2768   	fcall	_lcd_puts
      +       120A  118A         
  1994                           
  1995                           ;SRPROG.c: 174: lcd_goto(0x0A);
  1996  07AE  300A               	movlw	10
  1997  07AF  160A  118A  2762   	fcall	_lcd_goto
      +       120A  118A         
  1998                           
  1999                           ;SRPROG.c: 175: lcd_puts("cm");
  2000  07B4  30A2               	movlw	low (STR_6-__stringbase)
  2001  07B5  00F5               	movwf	?_lcd_puts
  2002  07B6  3080               	movlw	128
  2003  07B7  00F6               	movwf	?_lcd_puts+1
  2004  07B8  160A  118A  2768   	fcall	_lcd_puts
      +       120A  118A         
  2005                           
  2006                           ;SRPROG.c: 177: printf("%d",dist);
  2007  07BD  0867               	movf	_dist+1,w
  2008  07BE  00DA               	movwf	?_printf+1
  2009  07BF  0866               	movf	_dist,w
  2010  07C0  00D9               	movwf	?_printf
  2011  07C1  309F               	movlw	(STR_7-__stringbase)& (0+255)
  2012  07C2  2FD3               	goto	L1
  2013  07C3                     l6348:	
  2014                           
  2015                           ;SRPROG.c: 183: lcd_goto(0x00);
  2016  07C3  3000               	movlw	0
  2017  07C4  160A  118A  2762   	fcall	_lcd_goto
      +       120A  118A         
  2018                           
  2019                           ;SRPROG.c: 184: lcd_puts("----");
  2020  07C9  3096               	movlw	low (STR_8-__stringbase)
  2021  07CA                     L2:	
  2022  07CA  00F5               	movwf	?_lcd_puts
  2023  07CB  3080               	movlw	128
  2024  07CC  00F6               	movwf	?_lcd_puts+1
  2025  07CD  160A  118A  2768   	fcall	_lcd_puts
      +       120A  118A         
  2026                           
  2027                           ;SRPROG.c: 186: printf("0");
  2028  07D2  30A5               	movlw	(STR_3-__stringbase)& (0+255)
  2029  07D3                     L1:	
  2030  07D3  120A  158A  204D   	fcall	_printf
      +       120A  118A         
  2031                           
  2032                           ;SRPROG.c: 188: }
  2033                           ;SRPROG.c: 190: _delay((unsigned long)((200)*(8000000/4000.0)));
  2034  07D8  3003               	movlw	3
  2035  07D9  00E2               	movwf	??_main+2
  2036  07DA  3008               	movlw	8
  2037  07DB  00E1               	movwf	??_main+1
  2038  07DC  3078               	movlw	120
  2039  07DD  00E0               	movwf	??_main
  2040  07DE                     u3537:	
  2041  07DE  0BE0               	decfsz	??_main,f
  2042  07DF  2FDE               	goto	u3537
  2043  07E0  0BE1               	decfsz	??_main+1,f
  2044  07E1  2FDE               	goto	u3537
  2045  07E2  0BE2               	decfsz	??_main+2,f
  2046  07E3  2FDE               	goto	u3537
  2047  07E4  2F44               	goto	l6310
  2048  07E5                     __end_of_main:	
  2049                           
  2050                           	psect	text629
  2051  084D                     __ptext629:	
  2052 ;; =============== function _sprintf ends ============
  2053                           
  2054                           
  2055 ;; *************** function _printf *****************
  2056 ;; Defined at:
  2057 ;;		line 14 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\printf.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  f               1    wreg     PTR const unsigned char 
  2060 ;;		 -> STR_9(2), STR_7(3), STR_3(2), 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  f               1   59[BANK0 ] PTR const unsigned char 
  2063 ;;		 -> STR_9(2), STR_7(3), STR_3(2), 
  2064 ;;  pb              2   61[BANK0 ] struct __prbuf
  2065 ;;  ap              1   60[BANK0 ] PTR void [1]
  2066 ;;		 -> ?_sprintf(2), ?_printf(2), 
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  2   57[BANK0 ] int 
  2069 ;; Registers used:
  2070 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2071 ;; Tracked objects:
  2072 ;;		On entry : 60/0
  2073 ;;		On exit  : 60/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2076 ;;      Params:         0       2       0       0       0
  2077 ;;      Locals:         0       4       0       0       0
  2078 ;;      Temps:          0       0       0       0       0
  2079 ;;      Totals:         0       6       0       0       0
  2080 ;;Total ram usage:        6 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; Hardware stack levels required when called:    4
  2083 ;; This function calls:
  2084 ;;		__doprnt
  2085 ;; This function is called by:
  2086 ;;		_main
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089  084D                     _printf:	
  2090                           
  2091                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2092                           ;printf@f stored from wreg
  2093  084D  00DB               	movwf	printf@f
  2094  084E  3001               	movlw	(fp__putch-fpbase)& (0+255)
  2095  084F  01DD               	clrf	printf@pb
  2096  0850  00DE               	movwf	printf@pb+1
  2097  0851  3059               	movlw	?_printf& (0+255)
  2098  0852  00DC               	movwf	printf@ap
  2099                           
  2100                           ;	Return value of _printf is never used
  2101  0853  085B               	movf	printf@f,w
  2102  0854  00D2               	movwf	?__doprnt
  2103  0855  305C               	movlw	printf@ap& (0+255)
  2104  0856  00D3               	movwf	?__doprnt+1
  2105  0857  305D               	movlw	printf@pb& (0+255)
  2106  0858  2869               	ljmp	__doprnt
  2107  0859                     __end_of_printf:	
  2108  0859                     __ptext628:	
  2109 ;; =============== function _main ends ============
  2110                           
  2111                           
  2112 ;; *************** function _sprintf *****************
  2113 ;; Defined at:
  2114 ;;		line 14 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\sprintf.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;  wh              1    wreg     PTR unsigned char 
  2117 ;;		 -> carac1(3), 
  2118 ;;  f               1   57[BANK0 ] PTR const unsigned char 
  2119 ;;		 -> STR_4(4), 
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  wh              1   60[BANK0 ] PTR unsigned char 
  2122 ;;		 -> carac1(3), 
  2123 ;;  pb              2   62[BANK0 ] struct __prbuf
  2124 ;;  ap              1   61[BANK0 ] PTR void [1]
  2125 ;;		 -> ?_sprintf(2), ?_printf(2), 
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  2   57[BANK0 ] int 
  2128 ;; Registers used:
  2129 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2130 ;; Tracked objects:
  2131 ;;		On entry : 160/0
  2132 ;;		On exit  : 160/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2135 ;;      Params:         0       3       0       0       0
  2136 ;;      Locals:         0       4       0       0       0
  2137 ;;      Temps:          0       0       0       0       0
  2138 ;;      Totals:         0       7       0       0       0
  2139 ;;Total ram usage:        7 bytes
  2140 ;; Hardware stack levels used:    1
  2141 ;; Hardware stack levels required when called:    4
  2142 ;; This function calls:
  2143 ;;		__doprnt
  2144 ;; This function is called by:
  2145 ;;		_main
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148  0859                     _sprintf:	
  2149                           
  2150                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2151                           ;sprintf@wh stored from wreg
  2152  0859  00DC               	movwf	sprintf@wh
  2153  085A  00DE               	movwf	sprintf@pb
  2154  085B  305A               	movlw	(?_sprintf+1)& (0+255)
  2155  085C  01DF               	clrf	sprintf@pb+1
  2156  085D  00DD               	movwf	sprintf@ap
  2157  085E  0859               	movf	sprintf@f,w
  2158  085F  00D2               	movwf	?__doprnt
  2159  0860  305D               	movlw	sprintf@ap& (0+255)
  2160  0861  00D3               	movwf	?__doprnt+1
  2161  0862  305E               	movlw	sprintf@pb& (0+255)
  2162  0863  2069               	fcall	__doprnt
  2163  0864  085E               	movf	sprintf@pb,w
  2164  0865  0084               	movwf	4
  2165  0866  1383               	bcf	3,7	;select IRP bank0
  2166  0867  0180               	clrf	0
  2167  0868  0008               	return
  2168  0869                     __end_of_sprintf:	
  2169  0869                     __ptext631:	
  2170 ;; =============== function _lcd_init ends ============
  2171                           
  2172                           
  2173 ;; *************** function __doprnt *****************
  2174 ;; Defined at:
  2175 ;;		line 455 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;  pb              1    wreg     PTR struct __prbuf
  2178 ;;		 -> sprintf@pb(2), printf@pb(2), 
  2179 ;;  f               1   50[BANK0 ] PTR const unsigned char 
  2180 ;;		 -> STR_9(2), STR_7(3), STR_4(4), STR_3(2), 
  2181 ;;  ap              1   51[BANK0 ] PTR PTR void 
  2182 ;;		 -> sprintf@ap(1), printf@ap(1), 
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;  pb              1   23[BANK1 ] PTR struct __prbuf
  2185 ;;		 -> sprintf@pb(2), printf@pb(2), 
  2186 ;;  _val            4   13[BANK1 ] struct .
  2187 ;;  fval            3   19[BANK1 ] struct .
  2188 ;;  integ           3    6[BANK1 ] struct .
  2189 ;;  ival            3    0        struct .
  2190 ;;  exp             2   17[BANK1 ] int 
  2191 ;;  prec            2   11[BANK1 ] int 
  2192 ;;  width           2    9[BANK1 ] int 
  2193 ;;  flag            2    4[BANK1 ] unsigned short 
  2194 ;;  c               1   22[BANK1 ] char 
  2195 ;;  d               1    0        unsigned char 
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  2   50[BANK0 ] int 
  2198 ;; Registers used:
  2199 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2200 ;; Tracked objects:
  2201 ;;		On entry : 60/0
  2202 ;;		On exit  : 60/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2205 ;;      Params:         0       2       0       0       0
  2206 ;;      Locals:         0       0      24       0       0
  2207 ;;      Temps:          0       5       0       0       0
  2208 ;;      Totals:         0       7      24       0       0
  2209 ;;Total ram usage:       31 bytes
  2210 ;; Hardware stack levels used:    1
  2211 ;; Hardware stack levels required when called:    3
  2212 ;; This function calls:
  2213 ;;		Absolute function
  2214 ;;		_putch
  2215 ;;		_isdigit
  2216 ;;		___wmul
  2217 ;;		___ftge
  2218 ;;		___ftneg
  2219 ;;		___awdiv
  2220 ;;		_scale
  2221 ;;		___ftmul
  2222 ;;		_fround
  2223 ;;		___ftadd
  2224 ;;		___fttol
  2225 ;;		__div_to_l_
  2226 ;;		__tdiv_to_l_
  2227 ;;		___lltoft
  2228 ;;		___ftsub
  2229 ;;		___lldiv
  2230 ;;		___llmod
  2231 ;; This function is called by:
  2232 ;;		_printf
  2233 ;;		_sprintf
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236  0869                     __doprnt:	
  2237                           
  2238                           ; Regs used in __doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2239                           ;__doprnt@pb stored from wreg
  2240  0869  1683               	bsf	3,5	;RP0=1, select bank1
  2241  086A  00B7               	movwf	__doprnt@pb^(0+128)
  2242  086B                     l6212:	
  2243  086B  1283               	bcf	3,5	;RP0=0, select bank0
  2244  086C  1303               	bcf	3,6	;RP1=0, select bank0
  2245  086D  0852               	movf	__doprnt@f,w
  2246  086E  0AD2               	incf	__doprnt@f,f
  2247  086F  0084               	movwf	4
  2248  0870  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  2249  0875  1683               	bsf	3,5	;RP0=1, select bank1
  2250  0876  00B6               	movwf	__doprnt@c^(0+128)
  2251  0877  08B6               	movf	__doprnt@c^(0+128),f
  2252  0878  1903               	btfsc	3,2
  2253  0879  2E06               	goto	l6214
  2254  087A  0836               	movf	__doprnt@c^(0+128),w
  2255  087B  3A25               	xorlw	37
  2256  087C  1903               	skipnz
  2257  087D  2894               	goto	l5944
  2258  087E  0837               	movf	__doprnt@pb^(0+128),w
  2259  087F  3E01               	addlw	1
  2260  0880  0084               	movwf	4
  2261  0881  1383               	bcf	3,7	;select IRP bank0
  2262  0882  0880               	movf	0,f
  2263  0883  1903               	skipnz
  2264  0884  288D               	goto	l5940
  2265  0885  0836               	movf	__doprnt@c^(0+128),w
  2266  0886  270F               	fcall	PL6	;call to abstracted procedure
  2267  0887  120A  118A  2700   	fcall	fptable
      +       120A  158A         
  2268  088C  286B               	goto	l6212
  2269  088D                     l5940:	
  2270  088D  0837               	movf	__doprnt@pb^(0+128),w
  2271  088E  0084               	movwf	4
  2272  088F  0800               	movf	0,w
  2273  0890  2780  120A  158A   	fcall	PL32	;call to abstracted procedure
  2274  0893  286B               	goto	l6212
  2275  0894                     l5944:	
  2276  0894  01A9               	clrf	__doprnt@width^(0+128)
  2277  0895  01AA               	clrf	(__doprnt@width+1)^(0+128)
  2278  0896  01A4               	clrf	__doprnt@flag^(0+128)
  2279  0897  01A5               	clrf	(__doprnt@flag+1)^(0+128)
  2280  0898  1283               	bcf	3,5	;RP0=0, select bank0
  2281  0899  0852               	movf	__doprnt@f,w
  2282  089A  0084               	movwf	4
  2283  089B  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  2284  08A0  26BC  120A  158A   	fcall	_isdigit
  2285  08A3  1C03               	btfss	3,0
  2286  08A4  28DC               	goto	l5958
  2287  08A5  1683               	bsf	3,5	;RP0=1, select bank1
  2288  08A6  01A9               	clrf	__doprnt@width^(0+128)
  2289  08A7  01AA               	clrf	(__doprnt@width+1)^(0+128)
  2290  08A8                     l5950:	
  2291  08A8  1683               	bsf	3,5	;RP0=1, select bank1
  2292  08A9  082A               	movf	(__doprnt@width+1)^(0+128),w
  2293  08AA  00F1               	movwf	?___wmul+1
  2294  08AB  0829               	movf	__doprnt@width^(0+128),w
  2295  08AC  00F0               	movwf	?___wmul
  2296  08AD  300A               	movlw	10
  2297  08AE  00F2               	movwf	?___wmul+2
  2298  08AF  01F3               	clrf	?___wmul+3
  2299  08B0  26CA               	fcall	___wmul
  2300  08B1  1283               	bcf	3,5	;RP0=0, select bank0
  2301  08B2  0852               	movf	__doprnt@f,w
  2302  08B3  0084               	movwf	4
  2303  08B4  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  2304  08B9  0770               	addwf	?___wmul,w
  2305  08BA  00D4               	movwf	??__doprnt
  2306  08BB  3000               	movlw	0
  2307  08BC  1803               	skipnc
  2308  08BD  3001               	movlw	1
  2309  08BE  0771               	addwf	?___wmul+1,w
  2310  08BF  00D5               	movwf	??__doprnt+1
  2311  08C0  0854               	movf	??__doprnt,w
  2312  08C1  3ED0               	addlw	208
  2313  08C2  1683               	bsf	3,5	;RP0=1, select bank1
  2314  08C3  00A9               	movwf	__doprnt@width^(0+128)
  2315  08C4  1283               	bcf	3,5	;RP0=0, select bank0
  2316  08C5  0855               	movf	??__doprnt+1,w
  2317  08C6  1803               	skipnc
  2318  08C7  3E01               	addlw	1
  2319  08C8  3EFF               	addlw	255
  2320  08C9  1683               	bsf	3,5	;RP0=1, select bank1
  2321  08CA  00AA               	movwf	(__doprnt@width+1)^(0+128)
  2322  08CB  1283               	bcf	3,5	;RP0=0, select bank0
  2323  08CC  0AD2               	incf	__doprnt@f,f
  2324  08CD  0852               	movf	__doprnt@f,w
  2325  08CE  0084               	movwf	4
  2326  08CF  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  2327  08D4  26BC  120A  158A   	fcall	_isdigit
  2328  08D7  1C03               	btfss	3,0
  2329  08D8  28DC               	goto	l5958
  2330  08D9  28A8               	goto	l5950
  2331  08DA                     l1168:	
  2332  08DA  1525               	bsf	(__doprnt@flag^(0+128)+1),2
  2333  08DB  28F3               	goto	l5960
  2334  08DC                     l5958:	
  2335  08DC  0852               	movf	__doprnt@f,w
  2336  08DD  0AD2               	incf	__doprnt@f,f
  2337  08DE  0084               	movwf	4
  2338  08DF  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  2339  08E4  1683               	bsf	3,5	;RP0=1, select bank1
  2340  08E5  00B6               	movwf	__doprnt@c^(0+128)
  2341                           
  2342                           ; Switch size 1, requested type "space"
  2343                           ; Number of cases is 4, Range of values is 0 to 105
  2344                           ; switch strategies available:
  2345                           ; Name         Instructions Cycles
  2346                           ; simple_byte           13     7 (average)
  2347                           ; jumptable            260     6 (fixed)
  2348                           ; rangetable           110     6 (fixed)
  2349                           ; spacedrange          218     9 (fixed)
  2350                           ; locatedrange         106     3 (fixed)
  2351                           ;	Chosen strategy is simple_byte
  2352  08E6  3A00               	xorlw	0	; case 0
  2353  08E7  1903               	skipnz
  2354  08E8  2E06               	goto	l6214
  2355  08E9  3A64               	xorlw	100	; case 100
  2356  08EA  1903               	skipnz
  2357  08EB  28F3               	goto	l5960
  2358  08EC  3A02               	xorlw	2	; case 102
  2359  08ED  1903               	skipnz
  2360  08EE  28DA               	goto	l1168
  2361  08EF  3A0F               	xorlw	15	; case 105
  2362  08F0  1903               	skipnz
  2363  08F1  28F3               	goto	l5960
  2364  08F2  286B               	goto	l6212
  2365  08F3                     l5960:	
  2366  08F3  1283               	bcf	3,5	;RP0=0, select bank0
  2367  08F4  3007               	movlw	7
  2368  08F5  01D4               	clrf	??__doprnt
  2369  08F6  1683               	bsf	3,5	;RP0=1, select bank1
  2370  08F7  0525               	andwf	(__doprnt@flag+1)^(0+128),w
  2371  08F8  1283               	bcf	3,5	;RP0=0, select bank0
  2372  08F9  00D5               	movwf	??__doprnt+1
  2373  08FA  0454               	iorwf	??__doprnt,w
  2374  08FB  1903               	skipnz
  2375  08FC  2CDA               	goto	l6144
  2376  08FD  3006               	movlw	6
  2377  08FE  1683               	bsf	3,5	;RP0=1, select bank1
  2378  08FF  00AB               	movwf	__doprnt@prec^(0+128)
  2379  0900  01AC               	clrf	(__doprnt@prec+1)^(0+128)
  2380  0901  1283               	bcf	3,5	;RP0=0, select bank0
  2381  0902  0853               	movf	__doprnt@ap,w
  2382  0903  0084               	movwf	4
  2383  0904  1383               	bcf	3,7	;select IRP bank0
  2384  0905  0800               	movf	0,w
  2385  0906  00D4               	movwf	??__doprnt
  2386  0907  3003               	movlw	3
  2387  0908  0780               	addwf	0,f
  2388  0909  0854               	movf	??__doprnt,w
  2389  090A  0084               	movwf	4
  2390  090B  0800               	movf	0,w
  2391  090C  1683               	bsf	3,5	;RP0=1, select bank1
  2392  090D  00B3               	movwf	__doprnt@fval^(0+128)
  2393  090E  0A84               	incf	4,f
  2394  090F  0800               	movf	0,w
  2395  0910  00B4               	movwf	(__doprnt@fval+1)^(0+128)
  2396  0911  0A84               	incf	4,f
  2397  0912  0800               	movf	0,w
  2398  0913  00B5               	movwf	(__doprnt@fval+2)^(0+128)
  2399  0914  0833               	movf	__doprnt@fval^(0+128),w
  2400  0915  00F0               	movwf	?___ftge
  2401  0916  0834               	movf	(__doprnt@fval+1)^(0+128),w
  2402  0917  00F1               	movwf	?___ftge+1
  2403  0918  0835               	movf	(__doprnt@fval+2)^(0+128),w
  2404  0919  00F2               	movwf	?___ftge+2
  2405  091A  01F3               	clrf	?___ftge+3
  2406  091B  01F4               	clrf	?___ftge+4
  2407  091C  01F5               	clrf	?___ftge+5
  2408  091D  2690  120A  158A   	fcall	___ftge
  2409  0920  1803               	btfsc	3,0
  2410  0921  2933               	goto	l5972
  2411  0922  0833               	movf	__doprnt@fval^(0+128),w
  2412  0923  00F0               	movwf	?___ftneg
  2413  0924  0834               	movf	(__doprnt@fval+1)^(0+128),w
  2414  0925  00F1               	movwf	?___ftneg+1
  2415  0926  0835               	movf	(__doprnt@fval+2)^(0+128),w
  2416  0927  00F2               	movwf	?___ftneg+2
  2417  0928  26E3  120A  158A   	fcall	___ftneg
  2418  092B  0870               	movf	?___ftneg,w
  2419  092C  00B3               	movwf	__doprnt@fval^(0+128)
  2420  092D  0871               	movf	?___ftneg+1,w
  2421  092E  00B4               	movwf	(__doprnt@fval+1)^(0+128)
  2422  092F  0872               	movf	?___ftneg+2,w
  2423  0930  00B5               	movwf	(__doprnt@fval+2)^(0+128)
  2424  0931  3003               	movlw	3
  2425  0932  04A4               	iorwf	__doprnt@flag^(0+128),f
  2426  0933                     l5972:	
  2427  0933  01B1               	clrf	__doprnt@exp^(0+128)
  2428  0934  01B2               	clrf	(__doprnt@exp+1)^(0+128)
  2429  0935  0835               	movf	(__doprnt@fval+2)^(0+128),w
  2430  0936  0434               	iorwf	(__doprnt@fval+1)^(0+128),w
  2431  0937  0433               	iorwf	__doprnt@fval^(0+128),w
  2432  0938  1903               	skipnz
  2433  0939  29CC               	goto	l6006
  2434  093A  30B3               	movlw	low __doprnt@fval
  2435  093B  0084               	movwf	4
  2436  093C  0800               	movf	0,w
  2437  093D  1283               	bcf	3,5	;RP0=0, select bank0
  2438  093E  00D4               	movwf	??__doprnt
  2439  093F  0A84               	incf	4,f
  2440  0940  0800               	movf	0,w
  2441  0941  00D5               	movwf	??__doprnt+1
  2442  0942  0A84               	incf	4,f
  2443  0943  0800               	movf	0,w
  2444  0944  00D6               	movwf	??__doprnt+2
  2445  0945  0A84               	incf	4,f
  2446  0946  0800               	movf	0,w
  2447  0947  00D7               	movwf	??__doprnt+3
  2448  0948  300F               	movlw	15
  2449  0949                     u3075:	
  2450  0949  1003               	clrc
  2451  094A  0CD7               	rrf	??__doprnt+3,f
  2452  094B  0CD6               	rrf	??__doprnt+2,f
  2453  094C  0CD5               	rrf	??__doprnt+1,f
  2454  094D  0CD4               	rrf	??__doprnt,f
  2455  094E  3EFF               	addlw	-1
  2456  094F  1D03               	skipz
  2457  0950  2949               	goto	u3075
  2458  0951  0855               	movf	??__doprnt+1,w
  2459  0952  1683               	bsf	3,5	;RP0=1, select bank1
  2460  0953  00B2               	movwf	(__doprnt@exp+1)^(0+128)
  2461  0954  1283               	bcf	3,5	;RP0=0, select bank0
  2462  0955  0854               	movf	??__doprnt,w
  2463  0956  1683               	bsf	3,5	;RP0=1, select bank1
  2464  0957  00B1               	movwf	__doprnt@exp^(0+128)
  2465  0958  3082               	movlw	-126
  2466  0959  01B2               	clrf	(__doprnt@exp+1)^(0+128)
  2467  095A  07B1               	addwf	__doprnt@exp^(0+128),f
  2468  095B  1C03               	skipc
  2469  095C  03B2               	decf	(__doprnt@exp+1)^(0+128),f
  2470  095D  30FF               	movlw	-1
  2471  095E  07B1               	addwf	__doprnt@exp^(0+128),f
  2472  095F  1C03               	skipc
  2473  0960  03B2               	decf	(__doprnt@exp+1)^(0+128),f
  2474  0961  3003               	movlw	3
  2475  0962  00F0               	movwf	?___wmul
  2476  0963  01F1               	clrf	?___wmul+1
  2477  0964  0832               	movf	(__doprnt@exp+1)^(0+128),w
  2478  0965  00F3               	movwf	?___wmul+3
  2479  0966  0831               	movf	__doprnt@exp^(0+128),w
  2480  0967  00F2               	movwf	?___wmul+2
  2481  0968  26CA               	fcall	___wmul
  2482  0969  0871               	movf	?___wmul+1,w
  2483  096A  00B2               	movwf	(__doprnt@exp+1)^(0+128)
  2484  096B  0870               	movf	?___wmul,w
  2485  096C  00B1               	movwf	__doprnt@exp^(0+128)
  2486  096D  300A               	movlw	10
  2487  096E  00F6               	movwf	?___awdiv
  2488  096F  01F7               	clrf	?___awdiv+1
  2489  0970  0832               	movf	(__doprnt@exp+1)^(0+128),w
  2490  0971  00F9               	movwf	?___awdiv+3
  2491  0972  0831               	movf	__doprnt@exp^(0+128),w
  2492  0973  00F8               	movwf	?___awdiv+2
  2493  0974  120A  118A  2559   	fcall	___awdiv
      +       120A  158A         
  2494  0979  0877               	movf	?___awdiv+1,w
  2495  097A  00B2               	movwf	(__doprnt@exp+1)^(0+128)
  2496  097B  0876               	movf	?___awdiv,w
  2497  097C  00B1               	movwf	__doprnt@exp^(0+128)
  2498  097D  1FB2               	btfss	(__doprnt@exp+1)^(0+128),7
  2499  097E  2983               	goto	l5992
  2500  097F  30FF               	movlw	-1
  2501  0980  07B1               	addwf	__doprnt@exp^(0+128),f
  2502  0981  1C03               	skipc
  2503  0982  03B2               	decf	(__doprnt@exp+1)^(0+128),f
  2504  0983                     l5992:	
  2505  0983  0331               	decf	__doprnt@exp^(0+128),w
  2506  0984  3AFF               	xorlw	255
  2507  0985  120A  118A  23C7   	fcall	_scale
      +       120A  158A         
  2508  098A  2736  120A  158A   	fcall	PL15	;call to abstracted procedure
  2509  098D  274E               	fcall	PL18	;call to abstracted procedure
  2510  098E  1683               	bsf	3,5	;RP0=1, select bank1
  2511  098F  0826               	movf	__doprnt@integ^(0+128),w
  2512  0990  1283               	bcf	3,5	;RP0=0, select bank0
  2513  0991  00B0               	movwf	?___ftmul+3
  2514  0992  1683               	bsf	3,5	;RP0=1, select bank1
  2515  0993  0827               	movf	(__doprnt@integ+1)^(0+128),w
  2516  0994  1283               	bcf	3,5	;RP0=0, select bank0
  2517  0995  00B1               	movwf	?___ftmul+4
  2518  0996  1683               	bsf	3,5	;RP0=1, select bank1
  2519  0997  0828               	movf	(__doprnt@integ+2)^(0+128),w
  2520  0998  1283               	bcf	3,5	;RP0=0, select bank0
  2521  0999  00B2               	movwf	?___ftmul+5
  2522  099A  120A  118A  25DB   	fcall	___ftmul
      +       120A  158A         
  2523  099F  082D               	movf	?___ftmul,w
  2524  09A0  1683               	bsf	3,5	;RP0=1, select bank1
  2525  09A1  00A6               	movwf	__doprnt@integ^(0+128)
  2526  09A2  1283               	bcf	3,5	;RP0=0, select bank0
  2527  09A3  082E               	movf	?___ftmul+1,w
  2528  09A4  1683               	bsf	3,5	;RP0=1, select bank1
  2529  09A5  00A7               	movwf	(__doprnt@integ+1)^(0+128)
  2530  09A6  1283               	bcf	3,5	;RP0=0, select bank0
  2531  09A7  082F               	movf	?___ftmul+2,w
  2532  09A8  1683               	bsf	3,5	;RP0=1, select bank1
  2533  09A9  00A8               	movwf	(__doprnt@integ+2)^(0+128)
  2534  09AA  2764  120A  158A   	fcall	PL22	;call to abstracted procedure
  2535  09AD  3080               	movlw	128
  2536  09AE  01F3               	clrf	?___ftge+3
  2537  09AF  00F4               	movwf	?___ftge+4
  2538  09B0  303F               	movlw	63
  2539  09B1  00F5               	movwf	?___ftge+5
  2540  09B2  2690  120A  158A   	fcall	___ftge
  2541  09B5  1803               	btfsc	3,0
  2542  09B6  29BC               	goto	l6000
  2543  09B7  30FF               	movlw	-1
  2544  09B8  07B1               	addwf	__doprnt@exp^(0+128),f
  2545  09B9  1C03               	skipc
  2546  09BA  03B2               	decf	(__doprnt@exp+1)^(0+128),f
  2547  09BB  29CC               	goto	l6006
  2548  09BC                     l6000:	
  2549  09BC  2764  120A  158A   	fcall	PL22	;call to abstracted procedure
  2550  09BF  3020               	movlw	32
  2551  09C0  01F3               	clrf	?___ftge+3
  2552  09C1  00F4               	movwf	?___ftge+4
  2553  09C2  3041               	movlw	65
  2554  09C3  00F5               	movwf	?___ftge+5
  2555  09C4  2690  120A  158A   	fcall	___ftge
  2556  09C7  1C03               	btfss	3,0
  2557  09C8  29CC               	goto	l6006
  2558  09C9  0AB1               	incf	__doprnt@exp^(0+128),f
  2559  09CA  1903               	skipnz
  2560  09CB  0AB2               	incf	(__doprnt@exp+1)^(0+128),f
  2561  09CC                     l6006:	
  2562  09CC  3006               	movlw	6
  2563  09CD  120A  118A  2206   	fcall	_fround
      +       120A  158A         
  2564  09D2  0848               	movf	?_fround,w
  2565  09D3  00BC               	movwf	?___ftadd
  2566  09D4  0849               	movf	?_fround+1,w
  2567  09D5  00BD               	movwf	?___ftadd+1
  2568  09D6  084A               	movf	?_fround+2,w
  2569  09D7  00BE               	movwf	?___ftadd+2
  2570  09D8  1683               	bsf	3,5	;RP0=1, select bank1
  2571  09D9  0833               	movf	__doprnt@fval^(0+128),w
  2572  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  2573  09DB  00BF               	movwf	?___ftadd+3
  2574  09DC  1683               	bsf	3,5	;RP0=1, select bank1
  2575  09DD  0834               	movf	(__doprnt@fval+1)^(0+128),w
  2576  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  2577  09DF  00C0               	movwf	?___ftadd+4
  2578  09E0  1683               	bsf	3,5	;RP0=1, select bank1
  2579  09E1  0835               	movf	(__doprnt@fval+2)^(0+128),w
  2580  09E2  1283               	bcf	3,5	;RP0=0, select bank0
  2581  09E3  00C1               	movwf	?___ftadd+5
  2582  09E4  120A  118A  2144   	fcall	___ftadd
      +       120A  158A         
  2583  09E9  083C               	movf	?___ftadd,w
  2584  09EA  1683               	bsf	3,5	;RP0=1, select bank1
  2585  09EB  00B3               	movwf	__doprnt@fval^(0+128)
  2586  09EC  1283               	bcf	3,5	;RP0=0, select bank0
  2587  09ED  083D               	movf	?___ftadd+1,w
  2588  09EE  1683               	bsf	3,5	;RP0=1, select bank1
  2589  09EF  00B4               	movwf	(__doprnt@fval+1)^(0+128)
  2590  09F0  1283               	bcf	3,5	;RP0=0, select bank0
  2591  09F1  083E               	movf	?___ftadd+2,w
  2592  09F2  1683               	bsf	3,5	;RP0=1, select bank1
  2593  09F3  00B5               	movwf	(__doprnt@fval+2)^(0+128)
  2594  09F4  0832               	movf	(__doprnt@exp+1)^(0+128),w
  2595  09F5  3A80               	xorlw	128
  2596  09F6  00FF               	movwf	127
  2597  09F7  3080               	movlw	128
  2598  09F8  027F               	subwf	127,w
  2599  09F9  1D03               	skipz
  2600  09FA  29FD               	goto	u3115
  2601  09FB  300A               	movlw	10
  2602  09FC  0231               	subwf	__doprnt@exp^(0+128),w
  2603  09FD                     u3115:	
  2604  09FD  1803               	skipnc
  2605  09FE  2A1E               	goto	l6016
  2606  09FF  279B               	call	PL38	;select bank 1
  2607  0A00  0835               	movf	(__doprnt@fval+2)^(0+128),w
  2608  0A01  0434               	iorwf	(__doprnt@fval+1)^(0+128),w
  2609  0A02  0433               	iorwf	__doprnt@fval^(0+128),w
  2610  0A03  1903               	skipnz
  2611  0A04  2A5F               	goto	l6032
  2612  0A05  0833               	movf	__doprnt@fval^(0+128),w
  2613  0A06  2743  120A  158A   	fcall	PL17	;call to abstracted procedure
  2614  0A09  279E  120A  158A   	fcall	___fttol
  2615  0A0C  0823               	movf	?___fttol+3,w
  2616  0A0D  0422               	iorwf	?___fttol+2,w
  2617  0A0E  0421               	iorwf	?___fttol+1,w
  2618  0A0F  0420               	iorwf	?___fttol,w
  2619  0A10  1D03               	skipz
  2620  0A11  2A5F               	goto	l6032
  2621  0A12  1683               	bsf	3,5	;RP0=1, select bank1
  2622  0A13  0832               	movf	(__doprnt@exp+1)^(0+128),w
  2623  0A14  3A80               	xorlw	128
  2624  0A15  00FF               	movwf	127
  2625  0A16  3080               	movlw	128
  2626  0A17  027F               	subwf	127,w
  2627  0A18  1D03               	skipz
  2628  0A19  2A1C               	goto	u3145
  2629  0A1A  3002               	movlw	2
  2630  0A1B  0231               	subwf	__doprnt@exp^(0+128),w
  2631  0A1C                     u3145:	
  2632  0A1C  1C03               	skipc
  2633  0A1D  2A5F               	goto	l6032
  2634  0A1E                     l6016:	
  2635  0A1E  279B               	call	PL38	;select bank 1
  2636  0A1F  2764  120A  158A   	fcall	PL22	;call to abstracted procedure
  2637  0A22  3070               	movlw	112
  2638  0A23  00F3               	movwf	?___ftge+3
  2639  0A24  3089               	movlw	137
  2640  0A25  00F4               	movwf	?___ftge+4
  2641  0A26  3040               	movlw	64
  2642  0A27  00F5               	movwf	?___ftge+5
  2643  0A28  2690  120A  158A   	fcall	___ftge
  2644  0A2B  1803               	btfsc	3,0
  2645  0A2C  2A2F               	goto	l6020
  2646  0A2D  30F7               	movlw	-9
  2647  0A2E  2A30               	goto	L3
  2648  0A2F                     l6020:	
  2649  0A2F  30F8               	movlw	-8
  2650  0A30                     L3:	
  2651  0A30  07B1               	addwf	__doprnt@exp^(0+128),f
  2652  0A31  1C03               	skipc
  2653  0A32  03B2               	decf	(__doprnt@exp+1)^(0+128),f
  2654  0A33  0831               	movf	__doprnt@exp^(0+128),w
  2655  0A34  120A  118A  23C7   	fcall	_scale
      +       120A  158A         
  2656  0A39  2736               	fcall	PL15	;call to abstracted procedure
  2657  0A3A  00F0               	movwf	?__tdiv_to_l_
  2658  0A3B  0834               	movf	(__doprnt@fval+1)^(0+128),w
  2659  0A3C  00F1               	movwf	?__tdiv_to_l_+1
  2660  0A3D  0835               	movf	(__doprnt@fval+2)^(0+128),w
  2661  0A3E  00F2               	movwf	?__tdiv_to_l_+2
  2662  0A3F  0826               	movf	__doprnt@integ^(0+128),w
  2663  0A40  00F3               	movwf	?__tdiv_to_l_+3
  2664  0A41  0827               	movf	(__doprnt@integ+1)^(0+128),w
  2665  0A42  00F4               	movwf	?__tdiv_to_l_+4
  2666  0A43  0828               	movf	(__doprnt@integ+2)^(0+128),w
  2667  0A44  00F5               	movwf	?__tdiv_to_l_+5
  2668  0A45  160A  118A  26EA   	fcall	__tdiv_to_l_
      +       120A  158A         
  2669  0A4A  0873               	movf	?__tdiv_to_l_+3,w
  2670  0A4B  1683               	bsf	3,5	;RP0=1, select bank1
  2671  0A4C  00A3               	movwf	(__doprnt$1925+3)^(0+128)
  2672  0A4D  0872               	movf	?__tdiv_to_l_+2,w
  2673  0A4E  00A2               	movwf	(__doprnt$1925+2)^(0+128)
  2674  0A4F  0871               	movf	?__tdiv_to_l_+1,w
  2675  0A50  00A1               	movwf	(__doprnt$1925+1)^(0+128)
  2676  0A51  0870               	movf	?__tdiv_to_l_,w
  2677  0A52  00A0               	movwf	__doprnt$1925^(0+128)
  2678  0A53  0823               	movf	(__doprnt$1925+3)^(0+128),w
  2679  0A54  00B0               	movwf	(__doprnt@_val+3)^(0+128)
  2680  0A55  0822               	movf	(__doprnt$1925+2)^(0+128),w
  2681  0A56  00AF               	movwf	(__doprnt@_val+2)^(0+128)
  2682  0A57  0821               	movf	(__doprnt$1925+1)^(0+128),w
  2683  0A58  00AE               	movwf	(__doprnt@_val+1)^(0+128)
  2684  0A59  0820               	movf	__doprnt$1925^(0+128),w
  2685  0A5A  00AD               	movwf	__doprnt@_val^(0+128)
  2686  0A5B  01B3               	clrf	__doprnt@fval^(0+128)
  2687  0A5C  01B4               	clrf	(__doprnt@fval+1)^(0+128)
  2688  0A5D  01B5               	clrf	(__doprnt@fval+2)^(0+128)
  2689  0A5E  2A9C               	goto	l6036
  2690  0A5F                     l6032:	
  2691  0A5F  279B               	call	PL38	;select bank 1
  2692  0A60  0833               	movf	__doprnt@fval^(0+128),w
  2693  0A61  2743  120A  158A   	fcall	PL17	;call to abstracted procedure
  2694  0A64  279E  120A  158A   	fcall	___fttol
  2695  0A67  2728               	fcall	PL10	;call to abstracted procedure
  2696  0A68  1683               	bsf	3,5	;RP0=1, select bank1
  2697  0A69  00AD               	movwf	__doprnt@_val^(0+128)
  2698  0A6A  0830               	movf	(__doprnt@_val+3)^(0+128),w
  2699  0A6B  00FB               	movwf	?___lltoft+3
  2700  0A6C  082F               	movf	(__doprnt@_val+2)^(0+128),w
  2701  0A6D  00FA               	movwf	?___lltoft+2
  2702  0A6E  082E               	movf	(__doprnt@_val+1)^(0+128),w
  2703  0A6F  00F9               	movwf	?___lltoft+1
  2704  0A70  082D               	movf	__doprnt@_val^(0+128),w
  2705  0A71  00F8               	movwf	?___lltoft
  2706  0A72  120A  118A  2358   	fcall	___lltoft
      +       120A  158A         
  2707  0A77  0878               	movf	?___lltoft,w
  2708  0A78  1283               	bcf	3,5	;RP0=0, select bank0
  2709  0A79  00C8               	movwf	?___ftsub
  2710  0A7A  0879               	movf	?___lltoft+1,w
  2711  0A7B  00C9               	movwf	?___ftsub+1
  2712  0A7C  087A               	movf	?___lltoft+2,w
  2713  0A7D  00CA               	movwf	?___ftsub+2
  2714  0A7E  1683               	bsf	3,5	;RP0=1, select bank1
  2715  0A7F  0833               	movf	__doprnt@fval^(0+128),w
  2716  0A80  1283               	bcf	3,5	;RP0=0, select bank0
  2717  0A81  00CB               	movwf	?___ftsub+3
  2718  0A82  1683               	bsf	3,5	;RP0=1, select bank1
  2719  0A83  0834               	movf	(__doprnt@fval+1)^(0+128),w
  2720  0A84  1283               	bcf	3,5	;RP0=0, select bank0
  2721  0A85  00CC               	movwf	?___ftsub+4
  2722  0A86  1683               	bsf	3,5	;RP0=1, select bank1
  2723  0A87  0835               	movf	(__doprnt@fval+2)^(0+128),w
  2724  0A88  1283               	bcf	3,5	;RP0=0, select bank0
  2725  0A89  00CD               	movwf	?___ftsub+5
  2726  0A8A  120A  118A  212E   	fcall	___ftsub
      +       120A  158A         
  2727  0A8F  0848               	movf	?___ftsub,w
  2728  0A90  1683               	bsf	3,5	;RP0=1, select bank1
  2729  0A91  00B3               	movwf	__doprnt@fval^(0+128)
  2730  0A92  1283               	bcf	3,5	;RP0=0, select bank0
  2731  0A93  0849               	movf	?___ftsub+1,w
  2732  0A94  1683               	bsf	3,5	;RP0=1, select bank1
  2733  0A95  00B4               	movwf	(__doprnt@fval+1)^(0+128)
  2734  0A96  1283               	bcf	3,5	;RP0=0, select bank0
  2735  0A97  084A               	movf	?___ftsub+2,w
  2736  0A98  1683               	bsf	3,5	;RP0=1, select bank1
  2737  0A99  00B5               	movwf	(__doprnt@fval+2)^(0+128)
  2738  0A9A  01B1               	clrf	__doprnt@exp^(0+128)
  2739  0A9B  01B2               	clrf	(__doprnt@exp+1)^(0+128)
  2740  0A9C                     l6036:	
  2741  0A9C  01B6               	clrf	__doprnt@c^(0+128)
  2742  0A9D  0AB6               	incf	__doprnt@c^(0+128),f
  2743  0A9E                     l6042:	
  2744  0A9E  26FA               	fcall	PL3	;call to abstracted procedure
  2745  0A9F  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  2746  0AA4  00D5               	movwf	??__doprnt+1
  2747  0AA5  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  2748  0AAA  00D6               	movwf	??__doprnt+2
  2749  0AAB  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  2750  0AB0  00D7               	movwf	??__doprnt+3
  2751  0AB1  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  2752  0AB6  00D8               	movwf	??__doprnt+4
  2753  0AB7  1683               	bsf	3,5	;RP0=1, select bank1
  2754  0AB8  0230               	subwf	(__doprnt@_val+3)^(0+128),w
  2755  0AB9  1D03               	skipz
  2756  0ABA  2ACB               	goto	u3165
  2757  0ABB  1283               	bcf	3,5	;RP0=0, select bank0
  2758  0ABC  0857               	movf	??__doprnt+3,w
  2759  0ABD  1683               	bsf	3,5	;RP0=1, select bank1
  2760  0ABE  022F               	subwf	(__doprnt@_val+2)^(0+128),w
  2761  0ABF  1D03               	skipz
  2762  0AC0  2ACB               	goto	u3165
  2763  0AC1  1283               	bcf	3,5	;RP0=0, select bank0
  2764  0AC2  0856               	movf	??__doprnt+2,w
  2765  0AC3  1683               	bsf	3,5	;RP0=1, select bank1
  2766  0AC4  022E               	subwf	(__doprnt@_val+1)^(0+128),w
  2767  0AC5  1D03               	skipz
  2768  0AC6  2ACB               	goto	u3165
  2769  0AC7  1283               	bcf	3,5	;RP0=0, select bank0
  2770  0AC8  0855               	movf	??__doprnt+1,w
  2771  0AC9  1683               	bsf	3,5	;RP0=1, select bank1
  2772  0ACA  022D               	subwf	__doprnt@_val^(0+128),w
  2773  0ACB                     u3165:	
  2774  0ACB  1C03               	btfss	3,0
  2775  0ACC  2AD2               	goto	l6050
  2776  0ACD  0AB6               	incf	__doprnt@c^(0+128),f
  2777  0ACE  0836               	movf	__doprnt@c^(0+128),w
  2778  0ACF  3A0A               	xorlw	10
  2779  0AD0  1D03               	skipz
  2780  0AD1  2A9E               	goto	l6042
  2781  0AD2                     l6050:	
  2782  0AD2  082B               	movf	__doprnt@prec^(0+128),w
  2783  0AD3  0736               	addwf	__doprnt@c^(0+128),w
  2784  0AD4  1283               	bcf	3,5	;RP0=0, select bank0
  2785  0AD5  00D4               	movwf	??__doprnt
  2786  0AD6  1683               	bsf	3,5	;RP0=1, select bank1
  2787  0AD7  082C               	movf	(__doprnt@prec+1)^(0+128),w
  2788  0AD8  1803               	skipnc
  2789  0AD9  0A2C               	incf	(__doprnt@prec+1)^(0+128),w
  2790  0ADA  1BB6               	btfsc	__doprnt@c^(0+128),7
  2791  0ADB  3EFF               	addlw	255
  2792  0ADC  1283               	bcf	3,5	;RP0=0, select bank0
  2793  0ADD  00D5               	movwf	??__doprnt+1
  2794  0ADE  1683               	bsf	3,5	;RP0=1, select bank1
  2795  0ADF  0831               	movf	__doprnt@exp^(0+128),w
  2796  0AE0  1283               	bcf	3,5	;RP0=0, select bank0
  2797  0AE1  0754               	addwf	??__doprnt,w
  2798  0AE2  00D6               	movwf	??__doprnt+2
  2799  0AE3  1683               	bsf	3,5	;RP0=1, select bank1
  2800  0AE4  0832               	movf	(__doprnt@exp+1)^(0+128),w
  2801  0AE5  1803               	skipnc
  2802  0AE6  0A32               	incf	(__doprnt@exp+1)^(0+128),w
  2803  0AE7  1283               	bcf	3,5	;RP0=0, select bank0
  2804  0AE8  0755               	addwf	??__doprnt+1,w
  2805  0AE9  00D7               	movwf	??__doprnt+3
  2806  0AEA  0856               	movf	??__doprnt+2,w
  2807  0AEB  1683               	bsf	3,5	;RP0=1, select bank1
  2808  0AEC  02A9               	subwf	__doprnt@width^(0+128),f
  2809  0AED  1283               	bcf	3,5	;RP0=0, select bank0
  2810  0AEE  0857               	movf	??__doprnt+3,w
  2811  0AEF  1683               	bsf	3,5	;RP0=1, select bank1
  2812  0AF0  1C03               	skipc
  2813  0AF1  03AA               	decf	(__doprnt@width+1)^(0+128),f
  2814  0AF2  02AA               	subwf	(__doprnt@width+1)^(0+128),f
  2815  0AF3  082C               	movf	(__doprnt@prec+1)^(0+128),w
  2816  0AF4  042B               	iorwf	__doprnt@prec^(0+128),w
  2817  0AF5  1903               	skipnz
  2818  0AF6  2AFB               	goto	l6056
  2819  0AF7  30FF               	movlw	-1
  2820  0AF8  07A9               	addwf	__doprnt@width^(0+128),f
  2821  0AF9  1C03               	skipc
  2822  0AFA  03AA               	decf	(__doprnt@width+1)^(0+128),f
  2823  0AFB                     l6056:	
  2824  0AFB  0824               	movf	__doprnt@flag^(0+128),w
  2825  0AFC  3903               	andlw	3
  2826  0AFD  1D03               	btfss	3,2
  2827  0AFE  2B1E               	goto	l6058
  2828  0AFF                     l6070:	
  2829  0AFF  082A               	movf	(__doprnt@width+1)^(0+128),w
  2830  0B00  3A80               	xorlw	128
  2831  0B01  00FF               	movwf	127
  2832  0B02  3080               	movlw	128
  2833  0B03  027F               	subwf	127,w
  2834  0B04  1D03               	skipz
  2835  0B05  2B08               	goto	u3215
  2836  0B06  3001               	movlw	1
  2837  0B07  0229               	subwf	__doprnt@width^(0+128),w
  2838  0B08                     u3215:	
  2839  0B08  1C03               	btfss	3,0
  2840  0B09  2B24               	goto	l6072
  2841  0B0A  1683               	bsf	3,5	;RP0=1, select bank1
  2842  0B0B  276B  120A  158A   	fcall	PL29	;call to abstracted procedure
  2843  0B0E  1903               	skipnz
  2844  0B0F  2B18               	goto	l6064
  2845  0B10  3020               	movlw	32
  2846  0B11  270F               	fcall	PL6	;call to abstracted procedure
  2847  0B12  120A  118A  2700   	fcall	fptable
      +       120A  158A         
  2848  0B17  2B1E               	goto	l6058
  2849  0B18                     l6064:	
  2850  0B18  0837               	movf	__doprnt@pb^(0+128),w
  2851  0B19  0084               	movwf	4
  2852  0B1A  0800               	movf	0,w
  2853  0B1B  2772  120A  158A   	fcall	PL30	;call to abstracted procedure
  2854  0B1E                     l6058:	
  2855  0B1E  30FF               	movlw	-1
  2856  0B1F  279B               	call	PL38	;select bank 1
  2857  0B20  07A9               	addwf	__doprnt@width^(0+128),f
  2858  0B21  1C03               	skipc
  2859  0B22  03AA               	decf	(__doprnt@width+1)^(0+128),f
  2860  0B23  2AFF               	goto	l6070
  2861  0B24                     l6072:	
  2862  0B24  279B               	call	PL38	;select bank 1
  2863  0B25  0824               	movf	__doprnt@flag^(0+128),w
  2864  0B26  3903               	andlw	3
  2865  0B27  1903               	btfsc	3,2
  2866  0B28  2B9C               	goto	l6090
  2867  0B29  0837               	movf	__doprnt@pb^(0+128),w
  2868  0B2A  3E01               	addlw	1
  2869  0B2B  0084               	movwf	4
  2870  0B2C  1383               	bcf	3,7	;select IRP bank0
  2871  0B2D  0880               	movf	0,f
  2872  0B2E  1903               	skipnz
  2873  0B2F  2B38               	goto	l6078
  2874  0B30  302D               	movlw	45
  2875  0B31  270F               	fcall	PL6	;call to abstracted procedure
  2876  0B32  120A  118A  2700   	fcall	fptable
      +       120A  158A         
  2877  0B37  2B9C               	goto	l6090
  2878  0B38                     l6078:	
  2879  0B38  0837               	movf	__doprnt@pb^(0+128),w
  2880  0B39  0084               	movwf	4
  2881  0B3A  0800               	movf	0,w
  2882  0B3B  0084               	movwf	4
  2883  0B3C  302D               	movlw	45
  2884  0B3D  2B99               	goto	L6
  2885  0B3E                     l6082:	
  2886  0B3E  278E  120A  158A   	fcall	PL36	;call to abstracted procedure
  2887  0B41  1903               	skipnz
  2888  0B42  2B71               	goto	L7
  2889  0B43  1283               	bcf	3,5	;RP0=0, select bank0
  2890  0B44  26EB               	fcall	PL2	;call to abstracted procedure
  2891  0B45  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  2892  0B4A  00F0               	movwf	?___lldiv
  2893  0B4B  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  2894  0B50  00F1               	movwf	?___lldiv+1
  2895  0B51  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  2896  0B56  00F2               	movwf	?___lldiv+2
  2897  0B57  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  2898  0B5C  2704  120A  158A   	fcall	PL5	;call to abstracted procedure
  2899  0B5F  2648  120A  158A   	fcall	___lldiv
  2900  0B62  2717  120A  158A   	fcall	PL7	;call to abstracted procedure
  2901  0B65  260A  120A  158A   	fcall	___llmod
  2902  0B68  0820               	movf	?___llmod,w
  2903  0B69  3E30               	addlw	48
  2904  0B6A  2721               	fcall	PL8	;call to abstracted procedure
  2905  0B6B  120A  118A  2700   	fcall	fptable
      +       120A  158A         
  2906  0B70  2B9C               	goto	l6090
  2907  0B71                     L7:	
  2908  0B71  1283               	bcf	3,5	;RP0=0, select bank0
  2909  0B72  26EB               	fcall	PL2	;call to abstracted procedure
  2910  0B73  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  2911  0B78  00F0               	movwf	?___lldiv
  2912  0B79  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  2913  0B7E  00F1               	movwf	?___lldiv+1
  2914  0B7F  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  2915  0B84  00F2               	movwf	?___lldiv+2
  2916  0B85  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  2917  0B8A  2704  120A  158A   	fcall	PL5	;call to abstracted procedure
  2918  0B8D  2648  120A  158A   	fcall	___lldiv
  2919  0B90  2717  120A  158A   	fcall	PL7	;call to abstracted procedure
  2920  0B93  260A  120A  158A   	fcall	___llmod
  2921  0B96  2759  120A  158A   	fcall	PL19	;call to abstracted procedure
  2922  0B99                     L6:	
  2923  0B99  2795  120A  158A   	fcall	PL37	;call to abstracted procedure
  2924  0B9C                     l6090:	
  2925  0B9C  279B               	call	PL38	;select bank 1
  2926  0B9D  03B6               	decf	__doprnt@c^(0+128),f
  2927  0B9E  0F36               	incfsz	__doprnt@c^(0+128),w
  2928  0B9F  2B3E               	goto	l6082
  2929  0BA0                     l6102:	
  2930  0BA0  0832               	movf	(__doprnt@exp+1)^(0+128),w
  2931  0BA1  3A80               	xorlw	128
  2932  0BA2  00FF               	movwf	127
  2933  0BA3  3080               	movlw	128
  2934  0BA4  027F               	subwf	127,w
  2935  0BA5  1D03               	skipz
  2936  0BA6  2BA9               	goto	u3275
  2937  0BA7  3001               	movlw	1
  2938  0BA8  0231               	subwf	__doprnt@exp^(0+128),w
  2939  0BA9                     u3275:	
  2940  0BA9  1C03               	btfss	3,0
  2941  0BAA  2BC5               	goto	l6104
  2942  0BAB  1683               	bsf	3,5	;RP0=1, select bank1
  2943  0BAC  276B  120A  158A   	fcall	PL29	;call to abstracted procedure
  2944  0BAF  1903               	skipnz
  2945  0BB0  2BB9               	goto	l6096
  2946  0BB1  3030               	movlw	48
  2947  0BB2  270F               	fcall	PL6	;call to abstracted procedure
  2948  0BB3  120A  118A  2700   	fcall	fptable
      +       120A  158A         
  2949  0BB8  2BBF               	goto	l6100
  2950  0BB9                     l6096:	
  2951  0BB9  0837               	movf	__doprnt@pb^(0+128),w
  2952  0BBA  0084               	movwf	4
  2953  0BBB  0800               	movf	0,w
  2954  0BBC  2779  120A  158A   	fcall	PL31	;call to abstracted procedure
  2955  0BBF                     l6100:	
  2956  0BBF  30FF               	movlw	-1
  2957  0BC0  279B               	call	PL38	;select bank 1
  2958  0BC1  07B1               	addwf	__doprnt@exp^(0+128),f
  2959  0BC2  1C03               	skipc
  2960  0BC3  03B2               	decf	(__doprnt@exp+1)^(0+128),f
  2961  0BC4  2BA0               	goto	l6102
  2962  0BC5                     l6104:	
  2963  0BC5  279B               	call	PL38	;select bank 1
  2964  0BC6  082C               	movf	(__doprnt@prec+1)^(0+128),w
  2965  0BC7  3A80               	xorlw	128
  2966  0BC8  00FF               	movwf	127
  2967  0BC9  3080               	movlw	128
  2968  0BCA  027F               	subwf	127,w
  2969  0BCB  1D03               	skipz
  2970  0BCC  2BCF               	goto	u3285
  2971  0BCD  3009               	movlw	9
  2972  0BCE  022B               	subwf	__doprnt@prec^(0+128),w
  2973  0BCF                     u3285:	
  2974  0BCF  1C03               	skipc
  2975  0BD0  2BD4               	goto	l6108
  2976  0BD1  3008               	movlw	8
  2977  0BD2  279B               	call	PL38	;select bank 1
  2978  0BD3  2BD6               	goto	L4
  2979  0BD4                     l6108:	
  2980  0BD4  279B               	call	PL38	;select bank 1
  2981  0BD5  082B               	movf	__doprnt@prec^(0+128),w
  2982  0BD6                     L4:	
  2983  0BD6  00B6               	movwf	__doprnt@c^(0+128)
  2984  0BD7  2787  120A  158A   	fcall	PL34	;call to abstracted procedure
  2985  0BDA  02AB               	subwf	__doprnt@prec^(0+128),f
  2986  0BDB  1283               	bcf	3,5	;RP0=0, select bank0
  2987  0BDC  0855               	movf	??__doprnt+1,w
  2988  0BDD  1683               	bsf	3,5	;RP0=1, select bank1
  2989  0BDE  1C03               	skipc
  2990  0BDF  03AC               	decf	(__doprnt@prec+1)^(0+128),f
  2991  0BE0  02AC               	subwf	(__doprnt@prec+1)^(0+128),f
  2992  0BE1  0836               	movf	__doprnt@c^(0+128),w
  2993  0BE2  1903               	btfsc	3,2
  2994  0BE3  2BFC               	goto	l6118
  2995  0BE4  0837               	movf	__doprnt@pb^(0+128),w
  2996  0BE5  3E01               	addlw	1
  2997  0BE6  0084               	movwf	4
  2998  0BE7  1383               	bcf	3,7	;select IRP bank0
  2999  0BE8  0880               	movf	0,f
  3000  0BE9  1903               	skipnz
  3001  0BEA  2BF3               	goto	l6114
  3002  0BEB  302E               	movlw	46
  3003  0BEC  270F               	fcall	PL6	;call to abstracted procedure
  3004  0BED  120A  118A  2700   	fcall	fptable
      +       120A  158A         
  3005  0BF2  2BFC               	goto	l6118
  3006  0BF3                     l6114:	
  3007  0BF3  0837               	movf	__doprnt@pb^(0+128),w
  3008  0BF4  0084               	movwf	4
  3009  0BF5  0800               	movf	0,w
  3010  0BF6  0084               	movwf	4
  3011  0BF7  302E               	movlw	46
  3012  0BF8  0080               	movwf	0
  3013  0BF9  0837               	movf	__doprnt@pb^(0+128),w
  3014  0BFA  0084               	movwf	4
  3015  0BFB  0A80               	incf	0,f
  3016  0BFC                     l6118:	
  3017  0BFC  279B               	call	PL38	;select bank 1
  3018  0BFD  0836               	movf	__doprnt@c^(0+128),w
  3019  0BFE  120A  118A  23C7   	fcall	_scale
      +       120A  158A         
  3020  0C03  083C               	movf	?_scale,w
  3021  0C04  00B0               	movwf	?___ftmul+3
  3022  0C05  083D               	movf	?_scale+1,w
  3023  0C06  00B1               	movwf	?___ftmul+4
  3024  0C07  083E               	movf	?_scale+2,w
  3025  0C08  00B2               	movwf	?___ftmul+5
  3026  0C09  1683               	bsf	3,5	;RP0=1, select bank1
  3027  0C0A  0833               	movf	__doprnt@fval^(0+128),w
  3028  0C0B  274E               	fcall	PL18	;call to abstracted procedure
  3029  0C0C  120A  118A  25DB   	fcall	___ftmul
      +       120A  158A         
  3030  0C11  082D               	movf	?___ftmul,w
  3031  0C12  00A0               	movwf	?___fttol
  3032  0C13  082E               	movf	?___ftmul+1,w
  3033  0C14  00A1               	movwf	?___fttol+1
  3034  0C15  082F               	movf	?___ftmul+2,w
  3035  0C16  00A2               	movwf	?___fttol+2
  3036  0C17  279E  120A  158A   	fcall	___fttol
  3037  0C1A  2728  120A  158A   	fcall	PL10	;call to abstracted procedure
  3038  0C1D  2CB6               	goto	L5
  3039  0C1E                     l6120:	
  3040  0C1E  278E  120A  158A   	fcall	PL36	;call to abstracted procedure
  3041  0C21  1903               	skipnz
  3042  0C22  2C51               	goto	L8
  3043  0C23  1283               	bcf	3,5	;RP0=0, select bank0
  3044  0C24  26EB               	fcall	PL2	;call to abstracted procedure
  3045  0C25  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  3046  0C2A  00F0               	movwf	?___lldiv
  3047  0C2B  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  3048  0C30  00F1               	movwf	?___lldiv+1
  3049  0C31  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  3050  0C36  00F2               	movwf	?___lldiv+2
  3051  0C37  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  3052  0C3C  2704  120A  158A   	fcall	PL5	;call to abstracted procedure
  3053  0C3F  2648  120A  158A   	fcall	___lldiv
  3054  0C42  2717  120A  158A   	fcall	PL7	;call to abstracted procedure
  3055  0C45  260A  120A  158A   	fcall	___llmod
  3056  0C48  0820               	movf	?___llmod,w
  3057  0C49  3E30               	addlw	48
  3058  0C4A  2721               	fcall	PL8	;call to abstracted procedure
  3059  0C4B  120A  118A  2700   	fcall	fptable
      +       120A  158A         
  3060  0C50  2C7C               	goto	l6128
  3061  0C51                     L8:	
  3062  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  3063  0C52  26EB               	fcall	PL2	;call to abstracted procedure
  3064  0C53  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  3065  0C58  00F0               	movwf	?___lldiv
  3066  0C59  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  3067  0C5E  00F1               	movwf	?___lldiv+1
  3068  0C5F  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  3069  0C64  00F2               	movwf	?___lldiv+2
  3070  0C65  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  3071  0C6A  2704  120A  158A   	fcall	PL5	;call to abstracted procedure
  3072  0C6D  2648  120A  158A   	fcall	___lldiv
  3073  0C70  2717  120A  158A   	fcall	PL7	;call to abstracted procedure
  3074  0C73  260A  120A  158A   	fcall	___llmod
  3075  0C76  2759  120A  158A   	fcall	PL19	;call to abstracted procedure
  3076  0C79  2795  120A  158A   	fcall	PL37	;call to abstracted procedure
  3077  0C7C                     l6128:	
  3078  0C7C  279B               	call	PL38	;select bank 1
  3079  0C7D  26FA               	fcall	PL3	;call to abstracted procedure
  3080  0C7E  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  3081  0C83  00A0               	movwf	?___llmod
  3082  0C84  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  3083  0C89  00A1               	movwf	?___llmod+1
  3084  0C8A  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  3085  0C8F  00A2               	movwf	?___llmod+2
  3086  0C90  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  3087  0C95  00A3               	movwf	?___llmod+3
  3088  0C96  1683               	bsf	3,5	;RP0=1, select bank1
  3089  0C97  0830               	movf	(__doprnt@_val+3)^(0+128),w
  3090  0C98  1283               	bcf	3,5	;RP0=0, select bank0
  3091  0C99  00A7               	movwf	?___llmod+7
  3092  0C9A  1683               	bsf	3,5	;RP0=1, select bank1
  3093  0C9B  082F               	movf	(__doprnt@_val+2)^(0+128),w
  3094  0C9C  1283               	bcf	3,5	;RP0=0, select bank0
  3095  0C9D  00A6               	movwf	?___llmod+6
  3096  0C9E  1683               	bsf	3,5	;RP0=1, select bank1
  3097  0C9F  082E               	movf	(__doprnt@_val+1)^(0+128),w
  3098  0CA0  1283               	bcf	3,5	;RP0=0, select bank0
  3099  0CA1  00A5               	movwf	?___llmod+5
  3100  0CA2  1683               	bsf	3,5	;RP0=1, select bank1
  3101  0CA3  082D               	movf	__doprnt@_val^(0+128),w
  3102  0CA4  1283               	bcf	3,5	;RP0=0, select bank0
  3103  0CA5  00A4               	movwf	?___llmod+4
  3104  0CA6  260A  120A  158A   	fcall	___llmod
  3105  0CA9  0823               	movf	?___llmod+3,w
  3106  0CAA  1683               	bsf	3,5	;RP0=1, select bank1
  3107  0CAB  00B0               	movwf	(__doprnt@_val+3)^(0+128)
  3108  0CAC  1283               	bcf	3,5	;RP0=0, select bank0
  3109  0CAD  0822               	movf	?___llmod+2,w
  3110  0CAE  1683               	bsf	3,5	;RP0=1, select bank1
  3111  0CAF  00AF               	movwf	(__doprnt@_val+2)^(0+128)
  3112  0CB0  1283               	bcf	3,5	;RP0=0, select bank0
  3113  0CB1  0821               	movf	?___llmod+1,w
  3114  0CB2  1683               	bsf	3,5	;RP0=1, select bank1
  3115  0CB3  00AE               	movwf	(__doprnt@_val+1)^(0+128)
  3116  0CB4  1283               	bcf	3,5	;RP0=0, select bank0
  3117  0CB5  0820               	movf	?___llmod,w
  3118  0CB6                     L5:	
  3119  0CB6  1683               	bsf	3,5	;RP0=1, select bank1
  3120  0CB7  00AD               	movwf	__doprnt@_val^(0+128)
  3121  0CB8  03B6               	decf	__doprnt@c^(0+128),f
  3122  0CB9  0F36               	incfsz	__doprnt@c^(0+128),w
  3123  0CBA  2C1E               	goto	l6120
  3124  0CBB                     l6142:	
  3125  0CBB  082C               	movf	(__doprnt@prec+1)^(0+128),w
  3126  0CBC  042B               	iorwf	__doprnt@prec^(0+128),w
  3127  0CBD  1903               	btfsc	3,2
  3128  0CBE  286B               	goto	l6212
  3129  0CBF  0837               	movf	__doprnt@pb^(0+128),w
  3130  0CC0  3E01               	addlw	1
  3131  0CC1  0084               	movwf	4
  3132  0CC2  1383               	bcf	3,7	;select IRP bank0
  3133  0CC3  0880               	movf	0,f
  3134  0CC4  1903               	skipnz
  3135  0CC5  2CCE               	goto	l6136
  3136  0CC6  3030               	movlw	48
  3137  0CC7  270F               	fcall	PL6	;call to abstracted procedure
  3138  0CC8  120A  118A  2700   	fcall	fptable
      +       120A  158A         
  3139  0CCD  2CD4               	goto	l6140
  3140  0CCE                     l6136:	
  3141  0CCE  0837               	movf	__doprnt@pb^(0+128),w
  3142  0CCF  0084               	movwf	4
  3143  0CD0  0800               	movf	0,w
  3144  0CD1  2779  120A  158A   	fcall	PL31	;call to abstracted procedure
  3145  0CD4                     l6140:	
  3146  0CD4  30FF               	movlw	-1
  3147  0CD5  279B               	call	PL38	;select bank 1
  3148  0CD6  07AB               	addwf	__doprnt@prec^(0+128),f
  3149  0CD7  1C03               	skipc
  3150  0CD8  03AC               	decf	(__doprnt@prec+1)^(0+128),f
  3151  0CD9  2CBB               	goto	l6142
  3152  0CDA                     l6144:	
  3153  0CDA  0853               	movf	__doprnt@ap,w
  3154  0CDB  0084               	movwf	4
  3155  0CDC  1383               	bcf	3,7	;select IRP bank0
  3156  0CDD  0800               	movf	0,w
  3157  0CDE  00D4               	movwf	??__doprnt
  3158  0CDF  3002               	movlw	2
  3159  0CE0  0780               	addwf	0,f
  3160  0CE1  0854               	movf	??__doprnt,w
  3161  0CE2  0084               	movwf	4
  3162  0CE3  0800               	movf	0,w
  3163  0CE4  00D5               	movwf	??__doprnt+1
  3164  0CE5  0A84               	incf	4,f
  3165  0CE6  0800               	movf	0,w
  3166  0CE7  00D6               	movwf	??__doprnt+2
  3167  0CE8  0855               	movf	??__doprnt+1,w
  3168  0CE9  1683               	bsf	3,5	;RP0=1, select bank1
  3169  0CEA  00AD               	movwf	__doprnt@_val^(0+128)
  3170  0CEB  1283               	bcf	3,5	;RP0=0, select bank0
  3171  0CEC  0856               	movf	??__doprnt+2,w
  3172  0CED  1683               	bsf	3,5	;RP0=1, select bank1
  3173  0CEE  00AE               	movwf	(__doprnt@_val+1)^(0+128)
  3174  0CEF  3000               	movlw	0
  3175  0CF0  1BAE               	btfsc	(__doprnt@_val+1)^(0+128),7
  3176  0CF1  30FF               	movlw	255
  3177  0CF2  00AF               	movwf	(__doprnt@_val+2)^(0+128)
  3178  0CF3  00B0               	movwf	(__doprnt@_val+3)^(0+128)
  3179  0CF4  1FB0               	btfss	(__doprnt@_val+3)^(0+128),7
  3180  0CF5  2D03               	goto	l6152
  3181  0CF6  3003               	movlw	3
  3182  0CF7  04A4               	iorwf	__doprnt@flag^(0+128),f
  3183  0CF8  09AD               	comf	__doprnt@_val^(0+128),f
  3184  0CF9  09AE               	comf	(__doprnt@_val+1)^(0+128),f
  3185  0CFA  09AF               	comf	(__doprnt@_val+2)^(0+128),f
  3186  0CFB  09B0               	comf	(__doprnt@_val+3)^(0+128),f
  3187  0CFC  0AAD               	incf	__doprnt@_val^(0+128),f
  3188  0CFD  1903               	skipnz
  3189  0CFE  0AAE               	incf	(__doprnt@_val+1)^(0+128),f
  3190  0CFF  1903               	skipnz
  3191  0D00  0AAF               	incf	(__doprnt@_val+2)^(0+128),f
  3192  0D01  1903               	skipnz
  3193  0D02  0AB0               	incf	(__doprnt@_val+3)^(0+128),f
  3194  0D03                     l6152:	
  3195  0D03  01B6               	clrf	__doprnt@c^(0+128)
  3196  0D04  0AB6               	incf	__doprnt@c^(0+128),f
  3197  0D05                     l6156:	
  3198  0D05  26FA               	fcall	PL3	;call to abstracted procedure
  3199  0D06  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  3200  0D0B  00D5               	movwf	??__doprnt+1
  3201  0D0C  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  3202  0D11  00D6               	movwf	??__doprnt+2
  3203  0D12  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  3204  0D17  00D7               	movwf	??__doprnt+3
  3205  0D18  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  3206  0D1D  00D8               	movwf	??__doprnt+4
  3207  0D1E  1683               	bsf	3,5	;RP0=1, select bank1
  3208  0D1F  0230               	subwf	(__doprnt@_val+3)^(0+128),w
  3209  0D20  1D03               	skipz
  3210  0D21  2D32               	goto	u3365
  3211  0D22  1283               	bcf	3,5	;RP0=0, select bank0
  3212  0D23  0857               	movf	??__doprnt+3,w
  3213  0D24  1683               	bsf	3,5	;RP0=1, select bank1
  3214  0D25  022F               	subwf	(__doprnt@_val+2)^(0+128),w
  3215  0D26  1D03               	skipz
  3216  0D27  2D32               	goto	u3365
  3217  0D28  1283               	bcf	3,5	;RP0=0, select bank0
  3218  0D29  0856               	movf	??__doprnt+2,w
  3219  0D2A  1683               	bsf	3,5	;RP0=1, select bank1
  3220  0D2B  022E               	subwf	(__doprnt@_val+1)^(0+128),w
  3221  0D2C  1D03               	skipz
  3222  0D2D  2D32               	goto	u3365
  3223  0D2E  1283               	bcf	3,5	;RP0=0, select bank0
  3224  0D2F  0855               	movf	??__doprnt+1,w
  3225  0D30  1683               	bsf	3,5	;RP0=1, select bank1
  3226  0D31  022D               	subwf	__doprnt@_val^(0+128),w
  3227  0D32                     u3365:	
  3228  0D32  1C03               	btfss	3,0
  3229  0D33  2D39               	goto	l6164
  3230  0D34  0AB6               	incf	__doprnt@c^(0+128),f
  3231  0D35  0836               	movf	__doprnt@c^(0+128),w
  3232  0D36  3A0A               	xorlw	10
  3233  0D37  1D03               	skipz
  3234  0D38  2D05               	goto	l6156
  3235  0D39                     l6164:	
  3236  0D39  082A               	movf	(__doprnt@width+1)^(0+128),w
  3237  0D3A  0429               	iorwf	__doprnt@width^(0+128),w
  3238  0D3B  1903               	skipnz
  3239  0D3C  2D45               	goto	l6170
  3240  0D3D  0824               	movf	__doprnt@flag^(0+128),w
  3241  0D3E  3903               	andlw	3
  3242  0D3F  1903               	btfsc	3,2
  3243  0D40  2D45               	goto	l6170
  3244  0D41  30FF               	movlw	-1
  3245  0D42  07A9               	addwf	__doprnt@width^(0+128),f
  3246  0D43  1C03               	skipc
  3247  0D44  03AA               	decf	(__doprnt@width+1)^(0+128),f
  3248  0D45                     l6170:	
  3249  0D45  0836               	movf	__doprnt@c^(0+128),w
  3250  0D46  1283               	bcf	3,5	;RP0=0, select bank0
  3251  0D47  00D4               	movwf	??__doprnt
  3252  0D48  01D5               	clrf	??__doprnt+1
  3253  0D49  1BD4               	btfsc	??__doprnt,7
  3254  0D4A  03D5               	decf	??__doprnt+1,f
  3255  0D4B  0855               	movf	??__doprnt+1,w
  3256  0D4C  3A80               	xorlw	128
  3257  0D4D  00D6               	movwf	??__doprnt+2
  3258  0D4E  1683               	bsf	3,5	;RP0=1, select bank1
  3259  0D4F  082A               	movf	(__doprnt@width+1)^(0+128),w
  3260  0D50  3A80               	xorlw	128
  3261  0D51  1283               	bcf	3,5	;RP0=0, select bank0
  3262  0D52  0256               	subwf	??__doprnt+2,w
  3263  0D53  1D03               	skipz
  3264  0D54  2D59               	goto	u3405
  3265  0D55  1683               	bsf	3,5	;RP0=1, select bank1
  3266  0D56  0829               	movf	__doprnt@width^(0+128),w
  3267  0D57  1283               	bcf	3,5	;RP0=0, select bank0
  3268  0D58  0254               	subwf	??__doprnt,w
  3269  0D59                     u3405:	
  3270  0D59  1803               	skipnc
  3271  0D5A  2D68               	goto	l6174
  3272  0D5B  279B               	call	PL38	;select bank 1
  3273  0D5C  0836               	movf	__doprnt@c^(0+128),w
  3274  0D5D  2787  120A  158A   	fcall	PL34	;call to abstracted procedure
  3275  0D60  02A9               	subwf	__doprnt@width^(0+128),f
  3276  0D61  1283               	bcf	3,5	;RP0=0, select bank0
  3277  0D62  0855               	movf	??__doprnt+1,w
  3278  0D63  1683               	bsf	3,5	;RP0=1, select bank1
  3279  0D64  1C03               	skipc
  3280  0D65  03AA               	decf	(__doprnt@width+1)^(0+128),f
  3281  0D66  02AA               	subwf	(__doprnt@width+1)^(0+128),f
  3282  0D67  2D6B               	goto	l6176
  3283  0D68                     l6174:	
  3284  0D68  279B               	call	PL38	;select bank 1
  3285  0D69  01A9               	clrf	__doprnt@width^(0+128)
  3286  0D6A  01AA               	clrf	(__doprnt@width+1)^(0+128)
  3287  0D6B                     l6176:	
  3288  0D6B  082A               	movf	(__doprnt@width+1)^(0+128),w
  3289  0D6C  0429               	iorwf	__doprnt@width^(0+128),w
  3290  0D6D  1903               	skipnz
  3291  0D6E  2D8D               	goto	l6188
  3292  0D6F                     l6178:	
  3293  0D6F  0837               	movf	__doprnt@pb^(0+128),w
  3294  0D70  3E01               	addlw	1
  3295  0D71  0084               	movwf	4
  3296  0D72  1383               	bcf	3,7	;select IRP bank0
  3297  0D73  0880               	movf	0,f
  3298  0D74  1903               	skipnz
  3299  0D75  2D7E               	goto	l6182
  3300  0D76  3020               	movlw	32
  3301  0D77  270F               	fcall	PL6	;call to abstracted procedure
  3302  0D78  120A  118A  2700   	fcall	fptable
      +       120A  158A         
  3303  0D7D  2D84               	goto	l6186
  3304  0D7E                     l6182:	
  3305  0D7E  0837               	movf	__doprnt@pb^(0+128),w
  3306  0D7F  0084               	movwf	4
  3307  0D80  0800               	movf	0,w
  3308  0D81  2772  120A  158A   	fcall	PL30	;call to abstracted procedure
  3309  0D84                     l6186:	
  3310  0D84  30FF               	movlw	-1
  3311  0D85  279B               	call	PL38	;select bank 1
  3312  0D86  07A9               	addwf	__doprnt@width^(0+128),f
  3313  0D87  1C03               	skipc
  3314  0D88  03AA               	decf	(__doprnt@width+1)^(0+128),f
  3315  0D89  082A               	movf	(__doprnt@width+1)^(0+128),w
  3316  0D8A  0429               	iorwf	__doprnt@width^(0+128),w
  3317  0D8B  1D03               	skipz
  3318  0D8C  2D6F               	goto	l6178
  3319  0D8D                     l6188:	
  3320  0D8D  0824               	movf	__doprnt@flag^(0+128),w
  3321  0D8E  3903               	andlw	3
  3322  0D8F  1903               	btfsc	3,2
  3323  0D90  2DA9               	goto	l6198
  3324  0D91  0837               	movf	__doprnt@pb^(0+128),w
  3325  0D92  3E01               	addlw	1
  3326  0D93  0084               	movwf	4
  3327  0D94  1383               	bcf	3,7	;select IRP bank0
  3328  0D95  0880               	movf	0,f
  3329  0D96  1903               	skipnz
  3330  0D97  2DA0               	goto	l6194
  3331  0D98  302D               	movlw	45
  3332  0D99  270F               	fcall	PL6	;call to abstracted procedure
  3333  0D9A  120A  118A  2700   	fcall	fptable
      +       120A  158A         
  3334  0D9F  2DA9               	goto	l6198
  3335  0DA0                     l6194:	
  3336  0DA0  0837               	movf	__doprnt@pb^(0+128),w
  3337  0DA1  0084               	movwf	4
  3338  0DA2  0800               	movf	0,w
  3339  0DA3  0084               	movwf	4
  3340  0DA4  302D               	movlw	45
  3341  0DA5  0080               	movwf	0
  3342  0DA6  0837               	movf	__doprnt@pb^(0+128),w
  3343  0DA7  0084               	movwf	4
  3344  0DA8  0A80               	incf	0,f
  3345  0DA9                     l6198:	
  3346  0DA9  279B               	call	PL38	;select bank 1
  3347  0DAA  0836               	movf	__doprnt@c^(0+128),w
  3348  0DAB  00AB               	movwf	__doprnt@prec^(0+128)
  3349  0DAC  01AC               	clrf	(__doprnt@prec+1)^(0+128)
  3350  0DAD  1BAB               	btfsc	__doprnt@prec^(0+128),7
  3351  0DAE  03AC               	decf	(__doprnt@prec+1)^(0+128),f
  3352  0DAF                     l6210:	
  3353  0DAF  30FF               	movlw	-1
  3354  0DB0  279B               	call	PL38	;select bank 1
  3355  0DB1  07AB               	addwf	__doprnt@prec^(0+128),f
  3356  0DB2  1C03               	skipc
  3357  0DB3  03AC               	decf	(__doprnt@prec+1)^(0+128),f
  3358  0DB4  0A2B               	incf	__doprnt@prec^(0+128),w
  3359  0DB5  1903               	skipnz
  3360  0DB6  0A2C               	incf	(__doprnt@prec+1)^(0+128),w
  3361  0DB7  1903               	btfsc	3,2
  3362  0DB8  286B               	goto	l6212
  3363  0DB9  300A               	movlw	10
  3364  0DBA  1283               	bcf	3,5	;RP0=0, select bank0
  3365  0DBB  00A0               	movwf	?___llmod
  3366  0DBC  01A1               	clrf	?___llmod+1
  3367  0DBD  01A2               	clrf	?___llmod+2
  3368  0DBE  01A3               	clrf	?___llmod+3
  3369  0DBF  1683               	bsf	3,5	;RP0=1, select bank1
  3370  0DC0  082B               	movf	__doprnt@prec^(0+128),w
  3371  0DC1  1283               	bcf	3,5	;RP0=0, select bank0
  3372  0DC2  00D4               	movwf	??__doprnt
  3373  0DC3  1003               	clrc
  3374  0DC4  0DD4               	rlf	??__doprnt,f
  3375  0DC5  1003               	clrc
  3376  0DC6  0D54               	rlf	??__doprnt,w
  3377  0DC7  3E4F               	addlw	low (_dpowers-__stringbase)
  3378  0DC8  0084               	movwf	4
  3379  0DC9  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  3380  0DCE  00F0               	movwf	?___lldiv
  3381  0DCF  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  3382  0DD4  00F1               	movwf	?___lldiv+1
  3383  0DD5  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  3384  0DDA  00F2               	movwf	?___lldiv+2
  3385  0DDB  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  3386  0DE0  2704  120A  158A   	fcall	PL5	;call to abstracted procedure
  3387  0DE3  2648  120A  158A   	fcall	___lldiv
  3388  0DE6  2717  120A  158A   	fcall	PL7	;call to abstracted procedure
  3389  0DE9  260A  120A  158A   	fcall	___llmod
  3390  0DEC  0820               	movf	?___llmod,w
  3391  0DED  3E30               	addlw	48
  3392  0DEE  1683               	bsf	3,5	;RP0=1, select bank1
  3393  0DEF  00B6               	movwf	__doprnt@c^(0+128)
  3394  0DF0  0837               	movf	__doprnt@pb^(0+128),w
  3395  0DF1  3E01               	addlw	1
  3396  0DF2  0084               	movwf	4
  3397  0DF3  1383               	bcf	3,7	;select IRP bank0
  3398  0DF4  0880               	movf	0,f
  3399  0DF5  1903               	skipnz
  3400  0DF6  2DFF               	goto	l6206
  3401  0DF7  0836               	movf	__doprnt@c^(0+128),w
  3402  0DF8  270F               	fcall	PL6	;call to abstracted procedure
  3403  0DF9  120A  118A  2700   	fcall	fptable
      +       120A  158A         
  3404  0DFE  2DAF               	goto	l6210
  3405  0DFF                     l6206:	
  3406  0DFF  0837               	movf	__doprnt@pb^(0+128),w
  3407  0E00  0084               	movwf	4
  3408  0E01  0800               	movf	0,w
  3409  0E02  2780  120A  158A   	fcall	PL32	;call to abstracted procedure
  3410  0E05  2DAF               	goto	l6210
  3411  0E06                     l6214:	
  3412  0E06  1283               	bcf	3,5	;RP0=0, select bank0
  3413  0E07  01D2               	clrf	?__doprnt
  3414  0E08  01D3               	clrf	?__doprnt+1
  3415  0E09  0008               	return
  3416  0E0A                     __end_of__doprnt:	
  3417  0E0A                     __ptext649:	
  3418 ;; =============== function ___ftneg ends ============
  3419                           
  3420                           
  3421 ;; *************** function ___llmod *****************
  3422 ;; Defined at:
  3423 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\llmod.c"
  3424 ;; Parameters:    Size  Location     Type
  3425 ;;  divisor         4    0[BANK0 ] unsigned long 
  3426 ;;  dividend        4    4[BANK0 ] unsigned long 
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;  counter         1   13[COMMON] unsigned char 
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  4    0[BANK0 ] unsigned long 
  3431 ;; Registers used:
  3432 ;;		wreg, status,2, status,0
  3433 ;; Tracked objects:
  3434 ;;		On entry : 60/0
  3435 ;;		On exit  : 60/0
  3436 ;;		Unchanged: FFF9F/0
  3437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3438 ;;      Params:         0       8       0       0       0
  3439 ;;      Locals:         1       0       0       0       0
  3440 ;;      Temps:          0       0       0       0       0
  3441 ;;      Totals:         1       8       0       0       0
  3442 ;;Total ram usage:        9 bytes
  3443 ;; Hardware stack levels used:    1
  3444 ;; This function calls:
  3445 ;;		Nothing
  3446 ;; This function is called by:
  3447 ;;		__doprnt
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450  0E0A                     ___llmod:	
  3451                           
  3452                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3453  0E0A  0823               	movf	___llmod@divisor+3,w
  3454  0E0B  0422               	iorwf	___llmod@divisor+2,w
  3455  0E0C  0421               	iorwf	___llmod@divisor+1,w
  3456  0E0D  0420               	iorwf	___llmod@divisor,w
  3457  0E0E  1903               	skipnz
  3458  0E0F  2E3F               	goto	l5552
  3459  0E10  01FD               	clrf	___llmod@counter
  3460  0E11                     L16:	
  3461  0E11  0AFD               	incf	___llmod@counter,f
  3462  0E12  1BA3               	btfsc	___llmod@divisor+3,7
  3463  0E13  2E1A               	goto	l5544
  3464  0E14  1003               	clrc
  3465  0E15  0DA0               	rlf	___llmod@divisor,f
  3466  0E16  0DA1               	rlf	___llmod@divisor+1,f
  3467  0E17  0DA2               	rlf	___llmod@divisor+2,f
  3468  0E18  0DA3               	rlf	___llmod@divisor+3,f
  3469  0E19  2E11               	goto	L16
  3470  0E1A                     l5544:	
  3471  0E1A  0823               	movf	___llmod@divisor+3,w
  3472  0E1B  0227               	subwf	___llmod@dividend+3,w
  3473  0E1C  1D03               	skipz
  3474  0E1D  2E28               	goto	u2415
  3475  0E1E  0822               	movf	___llmod@divisor+2,w
  3476  0E1F  0226               	subwf	___llmod@dividend+2,w
  3477  0E20  1D03               	skipz
  3478  0E21  2E28               	goto	u2415
  3479  0E22  0821               	movf	___llmod@divisor+1,w
  3480  0E23  0225               	subwf	___llmod@dividend+1,w
  3481  0E24  1D03               	skipz
  3482  0E25  2E28               	goto	u2415
  3483  0E26  0820               	movf	___llmod@divisor,w
  3484  0E27  0224               	subwf	___llmod@dividend,w
  3485  0E28                     u2415:	
  3486  0E28  1C03               	skipc
  3487  0E29  2E39               	goto	L17
  3488  0E2A  0820               	movf	___llmod@divisor,w
  3489  0E2B  02A4               	subwf	___llmod@dividend,f
  3490  0E2C  0821               	movf	___llmod@divisor+1,w
  3491  0E2D  1C03               	skipc
  3492  0E2E  0F21               	incfsz	___llmod@divisor+1,w
  3493  0E2F  02A5               	subwf	___llmod@dividend+1,f
  3494  0E30  0822               	movf	___llmod@divisor+2,w
  3495  0E31  1C03               	skipc
  3496  0E32  0F22               	incfsz	___llmod@divisor+2,w
  3497  0E33  02A6               	subwf	___llmod@dividend+2,f
  3498  0E34  0823               	movf	___llmod@divisor+3,w
  3499  0E35  1C03               	skipc
  3500  0E36  0F23               	incfsz	___llmod@divisor+3,w
  3501  0E37  02A7               	subwf	___llmod@dividend+3,f
  3502  0E38  1003               	clrc
  3503  0E39                     L17:	
  3504  0E39  0CA3               	rrf	___llmod@divisor+3,f
  3505  0E3A  0CA2               	rrf	___llmod@divisor+2,f
  3506  0E3B  0CA1               	rrf	___llmod@divisor+1,f
  3507  0E3C  0CA0               	rrf	___llmod@divisor,f
  3508  0E3D  0BFD               	decfsz	___llmod@counter,f
  3509  0E3E  2E1A               	goto	l5544
  3510  0E3F                     l5552:	
  3511  0E3F  0827               	movf	___llmod@dividend+3,w
  3512  0E40  00A3               	movwf	?___llmod+3
  3513  0E41  0826               	movf	___llmod@dividend+2,w
  3514  0E42  00A2               	movwf	?___llmod+2
  3515  0E43  0825               	movf	___llmod@dividend+1,w
  3516  0E44  00A1               	movwf	?___llmod+1
  3517  0E45  0824               	movf	___llmod@dividend,w
  3518  0E46  00A0               	movwf	?___llmod
  3519  0E47  0008               	return
  3520  0E48                     __end_of___llmod:	
  3521  0E48                     __ptext646:	
  3522 ;; =============== function ___awmod ends ============
  3523                           
  3524                           
  3525 ;; *************** function ___lldiv *****************
  3526 ;; Defined at:
  3527 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lldiv.c"
  3528 ;; Parameters:    Size  Location     Type
  3529 ;;  divisor         4    0[COMMON] unsigned long 
  3530 ;;  dividend        4    4[COMMON] unsigned long 
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;  quotient        4    8[COMMON] unsigned long 
  3533 ;;  counter         1   12[COMMON] unsigned char 
  3534 ;; Return value:  Size  Location     Type
  3535 ;;                  4    0[COMMON] unsigned long 
  3536 ;; Registers used:
  3537 ;;		wreg, status,2, status,0
  3538 ;; Tracked objects:
  3539 ;;		On entry : 60/20
  3540 ;;		On exit  : 60/20
  3541 ;;		Unchanged: FFF9F/0
  3542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3543 ;;      Params:         8       0       0       0       0
  3544 ;;      Locals:         5       0       0       0       0
  3545 ;;      Temps:          0       0       0       0       0
  3546 ;;      Totals:        13       0       0       0       0
  3547 ;;Total ram usage:       13 bytes
  3548 ;; Hardware stack levels used:    1
  3549 ;; This function calls:
  3550 ;;		Nothing
  3551 ;; This function is called by:
  3552 ;;		__doprnt
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555  0E48                     ___lldiv:	
  3556                           
  3557                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3558  0E48  01F8               	clrf	___lldiv@quotient
  3559  0E49  01F9               	clrf	___lldiv@quotient+1
  3560  0E4A  01FA               	clrf	___lldiv@quotient+2
  3561  0E4B  01FB               	clrf	___lldiv@quotient+3
  3562  0E4C  0873               	movf	___lldiv@divisor+3,w
  3563  0E4D  0472               	iorwf	___lldiv@divisor+2,w
  3564  0E4E  0471               	iorwf	___lldiv@divisor+1,w
  3565  0E4F  0470               	iorwf	___lldiv@divisor,w
  3566  0E50  1903               	skipnz
  3567  0E51  2E87               	goto	l5606
  3568  0E52  01FC               	clrf	___lldiv@counter
  3569  0E53                     L13:	
  3570  0E53  0AFC               	incf	___lldiv@counter,f
  3571  0E54  1BF3               	btfsc	___lldiv@divisor+3,7
  3572  0E55  2E5C               	goto	l5594
  3573  0E56  1003               	clrc
  3574  0E57  0DF0               	rlf	___lldiv@divisor,f
  3575  0E58  0DF1               	rlf	___lldiv@divisor+1,f
  3576  0E59  0DF2               	rlf	___lldiv@divisor+2,f
  3577  0E5A  0DF3               	rlf	___lldiv@divisor+3,f
  3578  0E5B  2E53               	goto	L13
  3579  0E5C                     l5594:	
  3580  0E5C  1003               	clrc
  3581  0E5D  0DF8               	rlf	___lldiv@quotient,f
  3582  0E5E  0DF9               	rlf	___lldiv@quotient+1,f
  3583  0E5F  0DFA               	rlf	___lldiv@quotient+2,f
  3584  0E60  0DFB               	rlf	___lldiv@quotient+3,f
  3585  0E61  0873               	movf	___lldiv@divisor+3,w
  3586  0E62  0277               	subwf	___lldiv@dividend+3,w
  3587  0E63  1D03               	skipz
  3588  0E64  2E6F               	goto	u2495
  3589  0E65  0872               	movf	___lldiv@divisor+2,w
  3590  0E66  0276               	subwf	___lldiv@dividend+2,w
  3591  0E67  1D03               	skipz
  3592  0E68  2E6F               	goto	u2495
  3593  0E69  0871               	movf	___lldiv@divisor+1,w
  3594  0E6A  0275               	subwf	___lldiv@dividend+1,w
  3595  0E6B  1D03               	skipz
  3596  0E6C  2E6F               	goto	u2495
  3597  0E6D  0870               	movf	___lldiv@divisor,w
  3598  0E6E  0274               	subwf	___lldiv@dividend,w
  3599  0E6F                     u2495:	
  3600  0E6F  1C03               	skipc
  3601  0E70  2E81               	goto	L14
  3602  0E71  0870               	movf	___lldiv@divisor,w
  3603  0E72  02F4               	subwf	___lldiv@dividend,f
  3604  0E73  0871               	movf	___lldiv@divisor+1,w
  3605  0E74  1C03               	skipc
  3606  0E75  0F71               	incfsz	___lldiv@divisor+1,w
  3607  0E76  02F5               	subwf	___lldiv@dividend+1,f
  3608  0E77  0872               	movf	___lldiv@divisor+2,w
  3609  0E78  1C03               	skipc
  3610  0E79  0F72               	incfsz	___lldiv@divisor+2,w
  3611  0E7A  02F6               	subwf	___lldiv@dividend+2,f
  3612  0E7B  0873               	movf	___lldiv@divisor+3,w
  3613  0E7C  1C03               	skipc
  3614  0E7D  0F73               	incfsz	___lldiv@divisor+3,w
  3615  0E7E  02F7               	subwf	___lldiv@dividend+3,f
  3616  0E7F  1478               	bsf	___lldiv@quotient,0
  3617  0E80  1003               	clrc
  3618  0E81                     L14:	
  3619  0E81  0CF3               	rrf	___lldiv@divisor+3,f
  3620  0E82  0CF2               	rrf	___lldiv@divisor+2,f
  3621  0E83  0CF1               	rrf	___lldiv@divisor+1,f
  3622  0E84  0CF0               	rrf	___lldiv@divisor,f
  3623  0E85  0BFC               	decfsz	___lldiv@counter,f
  3624  0E86  2E5C               	goto	l5594
  3625  0E87                     l5606:	
  3626  0E87  087B               	movf	___lldiv@quotient+3,w
  3627  0E88  00F3               	movwf	?___lldiv+3
  3628  0E89  087A               	movf	___lldiv@quotient+2,w
  3629  0E8A  00F2               	movwf	?___lldiv+2
  3630  0E8B  0879               	movf	___lldiv@quotient+1,w
  3631  0E8C  00F1               	movwf	?___lldiv+1
  3632  0E8D  0878               	movf	___lldiv@quotient,w
  3633  0E8E  00F0               	movwf	?___lldiv
  3634  0E8F  0008               	return
  3635  0E90                     __end_of___lldiv:	
  3636  0E90                     __ptext647:	
  3637 ;; =============== function ___lldiv ends ============
  3638                           
  3639                           
  3640 ;; *************** function ___ftge *****************
  3641 ;; Defined at:
  3642 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftge.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;  ff1             3    0[COMMON] float 
  3645 ;;  ff2             3    3[COMMON] float 
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;		None
  3648 ;; Return value:  Size  Location     Type
  3649 ;;		None               void
  3650 ;; Registers used:
  3651 ;;		wreg, status,2, status,0
  3652 ;; Tracked objects:
  3653 ;;		On entry : 40/20
  3654 ;;		On exit  : 40/20
  3655 ;;		Unchanged: FFFBF/0
  3656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3657 ;;      Params:         6       0       0       0       0
  3658 ;;      Locals:         0       0       0       0       0
  3659 ;;      Temps:          0       0       0       0       0
  3660 ;;      Totals:         6       0       0       0       0
  3661 ;;Total ram usage:        6 bytes
  3662 ;; Hardware stack levels used:    1
  3663 ;; This function calls:
  3664 ;;		Nothing
  3665 ;; This function is called by:
  3666 ;;		_distance
  3667 ;;		__doprnt
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670  0E90                     ___ftge:	
  3671                           
  3672                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3673  0E90  1FF2               	btfss	___ftge@ff1+2,7
  3674  0E91  2E9F               	goto	l5568
  3675  0E92  0870               	movf	___ftge@ff1,w
  3676  0E93  3C00               	sublw	0
  3677  0E94  00F0               	movwf	___ftge@ff1
  3678  0E95  0871               	movf	___ftge@ff1+1,w
  3679  0E96  1C03               	skipc
  3680  0E97  0F71               	incfsz	___ftge@ff1+1,w
  3681  0E98  3C00               	sublw	0
  3682  0E99  00F1               	movwf	___ftge@ff1+1
  3683  0E9A  0872               	movf	___ftge@ff1+2,w
  3684  0E9B  1C03               	skipc
  3685  0E9C  0F72               	incfsz	___ftge@ff1+2,w
  3686  0E9D  3C80               	sublw	128
  3687  0E9E  00F2               	movwf	___ftge@ff1+2
  3688  0E9F                     l5568:	
  3689  0E9F  1FF5               	btfss	___ftge@ff2+2,7
  3690  0EA0  2EAE               	goto	l5572
  3691  0EA1  0873               	movf	___ftge@ff2,w
  3692  0EA2  3C00               	sublw	0
  3693  0EA3  00F3               	movwf	___ftge@ff2
  3694  0EA4  0874               	movf	___ftge@ff2+1,w
  3695  0EA5  1C03               	skipc
  3696  0EA6  0F74               	incfsz	___ftge@ff2+1,w
  3697  0EA7  3C00               	sublw	0
  3698  0EA8  00F4               	movwf	___ftge@ff2+1
  3699  0EA9  0875               	movf	___ftge@ff2+2,w
  3700  0EAA  1C03               	skipc
  3701  0EAB  0F75               	incfsz	___ftge@ff2+2,w
  3702  0EAC  3C80               	sublw	128
  3703  0EAD  00F5               	movwf	___ftge@ff2+2
  3704  0EAE                     l5572:	
  3705  0EAE  3080               	movlw	128
  3706  0EAF  06F2               	xorwf	___ftge@ff1+2,f
  3707  0EB0  06F5               	xorwf	___ftge@ff2+2,f
  3708  0EB1  0875               	movf	___ftge@ff2+2,w
  3709  0EB2  0272               	subwf	___ftge@ff1+2,w
  3710  0EB3  1D03               	skipz
  3711  0EB4  0008               	return
  3712  0EB5  0874               	movf	___ftge@ff2+1,w
  3713  0EB6  0271               	subwf	___ftge@ff1+1,w
  3714  0EB7  1D03               	skipz
  3715  0EB8  0008               	return
  3716  0EB9  0873               	movf	___ftge@ff2,w
  3717  0EBA  0270               	subwf	___ftge@ff1,w
  3718  0EBB  0008               	return
  3719  0EBC                     __end_of___ftge:	
  3720  0EBC                     __ptext660:	
  3721 ;; =============== function __tdiv_to_l_ ends ============
  3722                           
  3723                           
  3724 ;; *************** function _isdigit *****************
  3725 ;; Defined at:
  3726 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\isdigit.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;  c               1    wreg     unsigned char 
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;  c               1    1[COMMON] unsigned char 
  3731 ;; Return value:  Size  Location     Type
  3732 ;;		None               void
  3733 ;; Registers used:
  3734 ;;		wreg, status,2, status,0
  3735 ;; Tracked objects:
  3736 ;;		On entry : 60/0
  3737 ;;		On exit  : 60/0
  3738 ;;		Unchanged: FFF9F/0
  3739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3740 ;;      Params:         0       0       0       0       0
  3741 ;;      Locals:         2       0       0       0       0
  3742 ;;      Temps:          0       0       0       0       0
  3743 ;;      Totals:         2       0       0       0       0
  3744 ;;Total ram usage:        2 bytes
  3745 ;; Hardware stack levels used:    1
  3746 ;; This function calls:
  3747 ;;		Nothing
  3748 ;; This function is called by:
  3749 ;;		__doprnt
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752  0EBC                     _isdigit:	
  3753                           
  3754                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3755                           ;isdigit@c stored from wreg
  3756  0EBC  00F1               	movwf	isdigit@c
  3757  0EBD  303A               	movlw	58
  3758  0EBE  01F0               	clrf	_isdigit$2433
  3759  0EBF  0271               	subwf	isdigit@c,w
  3760  0EC0  1803               	skipnc
  3761  0EC1  2EC8               	goto	l5228
  3762  0EC2  3030               	movlw	48
  3763  0EC3  0271               	subwf	isdigit@c,w
  3764  0EC4  1C03               	skipc
  3765  0EC5  2EC8               	goto	l5228
  3766  0EC6  01F0               	clrf	_isdigit$2433
  3767  0EC7  0AF0               	incf	_isdigit$2433,f
  3768  0EC8                     l5228:	
  3769  0EC8  0C70               	rrf	_isdigit$2433,w
  3770  0EC9  0008               	return
  3771  0ECA                     __end_of_isdigit:	
  3772  0ECA                     __ptext656:	
  3773 ;; =============== function ___lwdiv ends ============
  3774                           
  3775                           
  3776 ;; *************** function ___wmul *****************
  3777 ;; Defined at:
  3778 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\wmul.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;  multiplier      2    0[COMMON] unsigned int 
  3781 ;;  multiplicand    2    2[COMMON] unsigned int 
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;  product         2    4[COMMON] unsigned int 
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  2    0[COMMON] unsigned int 
  3786 ;; Registers used:
  3787 ;;		wreg, status,2, status,0
  3788 ;; Tracked objects:
  3789 ;;		On entry : 60/20
  3790 ;;		On exit  : 60/20
  3791 ;;		Unchanged: FFF9F/0
  3792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3793 ;;      Params:         4       0       0       0       0
  3794 ;;      Locals:         2       0       0       0       0
  3795 ;;      Temps:          0       0       0       0       0
  3796 ;;      Totals:         6       0       0       0       0
  3797 ;;Total ram usage:        6 bytes
  3798 ;; Hardware stack levels used:    1
  3799 ;; This function calls:
  3800 ;;		Nothing
  3801 ;; This function is called by:
  3802 ;;		_fround
  3803 ;;		_scale
  3804 ;;		__doprnt
  3805 ;; This function uses a non-reentrant model
  3806 ;;
  3807  0ECA                     ___wmul:	
  3808                           
  3809                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3810  0ECA  01F4               	clrf	___wmul@product
  3811  0ECB  01F5               	clrf	___wmul@product+1
  3812  0ECC                     l5344:	
  3813  0ECC  1C70               	btfss	___wmul@multiplier,0
  3814  0ECD  2ED4               	goto	l5348
  3815  0ECE  0872               	movf	___wmul@multiplicand,w
  3816  0ECF  07F4               	addwf	___wmul@product,f
  3817  0ED0  1803               	skipnc
  3818  0ED1  0AF5               	incf	___wmul@product+1,f
  3819  0ED2  0873               	movf	___wmul@multiplicand+1,w
  3820  0ED3  07F5               	addwf	___wmul@product+1,f
  3821  0ED4                     l5348:	
  3822  0ED4  1003               	clrc
  3823  0ED5  0DF2               	rlf	___wmul@multiplicand,f
  3824  0ED6  0DF3               	rlf	___wmul@multiplicand+1,f
  3825  0ED7  1003               	clrc
  3826  0ED8  0CF1               	rrf	___wmul@multiplier+1,f
  3827  0ED9  0CF0               	rrf	___wmul@multiplier,f
  3828  0EDA  0871               	movf	___wmul@multiplier+1,w
  3829  0EDB  0470               	iorwf	___wmul@multiplier,w
  3830  0EDC  1D03               	skipz
  3831  0EDD  2ECC               	goto	l5344
  3832  0EDE  0875               	movf	___wmul@product+1,w
  3833  0EDF  00F1               	movwf	?___wmul+1
  3834  0EE0  0874               	movf	___wmul@product,w
  3835  0EE1  00F0               	movwf	?___wmul
  3836  0EE2  0008               	return
  3837  0EE3                     __end_of___wmul:	
  3838  0EE3                     __ptext648:	
  3839 ;; =============== function ___ftge ends ============
  3840                           
  3841                           
  3842 ;; *************** function ___ftneg *****************
  3843 ;; Defined at:
  3844 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftneg.c"
  3845 ;; Parameters:    Size  Location     Type
  3846 ;;  f1              3    0[COMMON] float 
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;		None
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  3    0[COMMON] float 
  3851 ;; Registers used:
  3852 ;;		wreg
  3853 ;; Tracked objects:
  3854 ;;		On entry : 160/20
  3855 ;;		On exit  : 160/20
  3856 ;;		Unchanged: FFE9F/0
  3857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3858 ;;      Params:         3       0       0       0       0
  3859 ;;      Locals:         0       0       0       0       0
  3860 ;;      Temps:          0       0       0       0       0
  3861 ;;      Totals:         3       0       0       0       0
  3862 ;;Total ram usage:        3 bytes
  3863 ;; Hardware stack levels used:    1
  3864 ;; This function calls:
  3865 ;;		Nothing
  3866 ;; This function is called by:
  3867 ;;		__doprnt
  3868 ;; This function uses a non-reentrant model
  3869 ;;
  3870  0EE3                     ___ftneg:	
  3871                           
  3872                           ; Regs used in ___ftneg: [wreg]
  3873  0EE3  0872               	movf	___ftneg@f1+2,w
  3874  0EE4  0471               	iorwf	___ftneg@f1+1,w
  3875  0EE5  0470               	iorwf	___ftneg@f1,w
  3876  0EE6  1903               	skipnz
  3877  0EE7  0008               	return
  3878  0EE8  3080               	movlw	128
  3879  0EE9  06F2               	xorwf	___ftneg@f1+2,f
  3880  0EEA  0008               	return
  3881  0EEB                     __end_of___ftneg:	
  3882  0EEB                     PL2:	
  3883  0EEB  00A0               	movwf	?___llmod
  3884  0EEC  01A1               	clrf	?___llmod+1
  3885  0EED  01A2               	clrf	?___llmod+2
  3886  0EEE  01A3               	clrf	?___llmod+3
  3887  0EEF  1683               	bsf	3,5	;RP0=1, select bank1
  3888  0EF0  0836               	movf	__doprnt@c^(0+128),w
  3889  0EF1  1283               	bcf	3,5	;RP0=0, select bank0
  3890  0EF2  00D4               	movwf	??__doprnt
  3891  0EF3  1003               	clrc
  3892  0EF4  0DD4               	rlf	??__doprnt,f
  3893  0EF5  1003               	clrc
  3894  0EF6  0D54               	rlf	??__doprnt,w
  3895  0EF7  3E4F               	addlw	low (_dpowers-__stringbase)
  3896  0EF8  0084               	movwf	4
  3897  0EF9  0008               	return
  3898  0EFA                     PL3:	
  3899  0EFA  0836               	movf	__doprnt@c^(0+128),w
  3900  0EFB  1283               	bcf	3,5	;RP0=0, select bank0
  3901  0EFC  00D4               	movwf	??__doprnt
  3902  0EFD  1003               	clrc
  3903  0EFE  0DD4               	rlf	??__doprnt,f
  3904  0EFF  1003               	clrc
  3905  0F00  0D54               	rlf	??__doprnt,w
  3906  0F01  3E4F               	addlw	low (_dpowers-__stringbase)
  3907  0F02  0084               	movwf	4
  3908  0F03  0008               	return
  3909  0F04                     PL5:	
  3910  0F04  00F3               	movwf	?___lldiv+3
  3911  0F05  1683               	bsf	3,5	;RP0=1, select bank1
  3912  0F06  0830               	movf	(__doprnt@_val+3)^(0+128),w
  3913  0F07  00F7               	movwf	?___lldiv+7
  3914  0F08  082F               	movf	(__doprnt@_val+2)^(0+128),w
  3915  0F09  00F6               	movwf	?___lldiv+6
  3916  0F0A  082E               	movf	(__doprnt@_val+1)^(0+128),w
  3917  0F0B  00F5               	movwf	?___lldiv+5
  3918  0F0C  082D               	movf	__doprnt@_val^(0+128),w
  3919  0F0D  00F4               	movwf	?___lldiv+4
  3920  0F0E  0008               	return
  3921  0F0F                     PL6:	
  3922  0F0F  1283               	bcf	3,5	;RP0=0, select bank0
  3923  0F10  00A8               	movwf	?_putch
  3924  0F11  1683               	bsf	3,5	;RP0=1, select bank1
  3925  0F12  0837               	movf	__doprnt@pb^(0+128),w
  3926  0F13  3E01               	addlw	1
  3927  0F14  0084               	movwf	4
  3928  0F15  0800               	movf	0,w
  3929  0F16  0008               	return
  3930  0F17                     PL7:	
  3931  0F17  0873               	movf	?___lldiv+3,w
  3932  0F18  1283               	bcf	3,5	;RP0=0, select bank0
  3933  0F19  00A7               	movwf	?___llmod+7
  3934  0F1A  0872               	movf	?___lldiv+2,w
  3935  0F1B  00A6               	movwf	?___llmod+6
  3936  0F1C  0871               	movf	?___lldiv+1,w
  3937  0F1D  00A5               	movwf	?___llmod+5
  3938  0F1E  0870               	movf	?___lldiv,w
  3939  0F1F  00A4               	movwf	?___llmod+4
  3940  0F20  0008               	return
  3941  0F21                     PL8:	
  3942  0F21  00A8               	movwf	?_putch
  3943  0F22  1683               	bsf	3,5	;RP0=1, select bank1
  3944  0F23  0837               	movf	__doprnt@pb^(0+128),w
  3945  0F24  3E01               	addlw	1
  3946  0F25  0084               	movwf	4
  3947  0F26  0800               	movf	0,w
  3948  0F27  0008               	return
  3949  0F28                     PL10:	
  3950  0F28  0823               	movf	?___fttol+3,w
  3951  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  3952  0F2A  00B0               	movwf	(__doprnt@_val+3)^(0+128)
  3953  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  3954  0F2C  0822               	movf	?___fttol+2,w
  3955  0F2D  1683               	bsf	3,5	;RP0=1, select bank1
  3956  0F2E  00AF               	movwf	(__doprnt@_val+2)^(0+128)
  3957  0F2F  1283               	bcf	3,5	;RP0=0, select bank0
  3958  0F30  0821               	movf	?___fttol+1,w
  3959  0F31  1683               	bsf	3,5	;RP0=1, select bank1
  3960  0F32  00AE               	movwf	(__doprnt@_val+1)^(0+128)
  3961  0F33  1283               	bcf	3,5	;RP0=0, select bank0
  3962  0F34  0820               	movf	?___fttol,w
  3963  0F35  0008               	return
  3964  0F36                     PL15:	
  3965  0F36  083C               	movf	?_scale,w
  3966  0F37  1683               	bsf	3,5	;RP0=1, select bank1
  3967  0F38  00A6               	movwf	__doprnt@integ^(0+128)
  3968  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3969  0F3A  083D               	movf	?_scale+1,w
  3970  0F3B  1683               	bsf	3,5	;RP0=1, select bank1
  3971  0F3C  00A7               	movwf	(__doprnt@integ+1)^(0+128)
  3972  0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  3973  0F3E  083E               	movf	?_scale+2,w
  3974  0F3F  1683               	bsf	3,5	;RP0=1, select bank1
  3975  0F40  00A8               	movwf	(__doprnt@integ+2)^(0+128)
  3976  0F41  0833               	movf	__doprnt@fval^(0+128),w
  3977  0F42  0008               	return
  3978  0F43                     PL17:	
  3979  0F43  1283               	bcf	3,5	;RP0=0, select bank0
  3980  0F44  00A0               	movwf	?___fttol
  3981  0F45  1683               	bsf	3,5	;RP0=1, select bank1
  3982  0F46  0834               	movf	(__doprnt@fval+1)^(0+128),w
  3983  0F47  1283               	bcf	3,5	;RP0=0, select bank0
  3984  0F48  00A1               	movwf	?___fttol+1
  3985  0F49  1683               	bsf	3,5	;RP0=1, select bank1
  3986  0F4A  0835               	movf	(__doprnt@fval+2)^(0+128),w
  3987  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  3988  0F4C  00A2               	movwf	?___fttol+2
  3989  0F4D  0008               	return
  3990  0F4E                     PL18:	
  3991  0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  3992  0F4F  00AD               	movwf	?___ftmul
  3993  0F50  1683               	bsf	3,5	;RP0=1, select bank1
  3994  0F51  0834               	movf	(__doprnt@fval+1)^(0+128),w
  3995  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  3996  0F53  00AE               	movwf	?___ftmul+1
  3997  0F54  1683               	bsf	3,5	;RP0=1, select bank1
  3998  0F55  0835               	movf	(__doprnt@fval+2)^(0+128),w
  3999  0F56  1283               	bcf	3,5	;RP0=0, select bank0
  4000  0F57  00AF               	movwf	?___ftmul+2
  4001  0F58  0008               	return
  4002  0F59                     PL19:	
  4003  0F59  0820               	movf	?___llmod,w
  4004  0F5A  3E30               	addlw	48
  4005  0F5B  00D5               	movwf	??__doprnt+1
  4006  0F5C  1683               	bsf	3,5	;RP0=1, select bank1
  4007  0F5D  0837               	movf	__doprnt@pb^(0+128),w
  4008  0F5E  0084               	movwf	4
  4009  0F5F  0800               	movf	0,w
  4010  0F60  0084               	movwf	4
  4011  0F61  1283               	bcf	3,5	;RP0=0, select bank0
  4012  0F62  0855               	movf	??__doprnt+1,w
  4013  0F63  0008               	return
  4014  0F64                     PL22:	
  4015  0F64  0826               	movf	__doprnt@integ^(0+128),w
  4016  0F65  00F0               	movwf	?___ftge
  4017  0F66  0827               	movf	(__doprnt@integ+1)^(0+128),w
  4018  0F67  00F1               	movwf	?___ftge+1
  4019  0F68  0828               	movf	(__doprnt@integ+2)^(0+128),w
  4020  0F69  00F2               	movwf	?___ftge+2
  4021  0F6A  0008               	return
  4022  0F6B                     PL29:	
  4023  0F6B  1303               	bcf	3,6	;RP1=0, select bank1
  4024  0F6C  0837               	movf	__doprnt@pb^(0+128),w
  4025  0F6D  3E01               	addlw	1
  4026  0F6E  0084               	movwf	4
  4027  0F6F  1383               	bcf	3,7	;select IRP bank0
  4028  0F70  0880               	movf	0,f
  4029  0F71  0008               	return
  4030  0F72                     PL30:	
  4031  0F72  0084               	movwf	4
  4032  0F73  3020               	movlw	32
  4033  0F74  0080               	movwf	0
  4034  0F75  0837               	movf	__doprnt@pb^(0+128),w
  4035  0F76  0084               	movwf	4
  4036  0F77  0A80               	incf	0,f
  4037  0F78  0008               	return
  4038  0F79                     PL31:	
  4039  0F79  0084               	movwf	4
  4040  0F7A  3030               	movlw	48
  4041  0F7B  0080               	movwf	0
  4042  0F7C  0837               	movf	__doprnt@pb^(0+128),w
  4043  0F7D  0084               	movwf	4
  4044  0F7E  0A80               	incf	0,f
  4045  0F7F  0008               	return
  4046  0F80                     PL32:	
  4047  0F80  0084               	movwf	4
  4048  0F81  0836               	movf	__doprnt@c^(0+128),w
  4049  0F82  0080               	movwf	0
  4050  0F83  0837               	movf	__doprnt@pb^(0+128),w
  4051  0F84  0084               	movwf	4
  4052  0F85  0A80               	incf	0,f
  4053  0F86  0008               	return
  4054  0F87                     PL34:	
  4055  0F87  1283               	bcf	3,5	;RP0=0, select bank0
  4056  0F88  00D4               	movwf	??__doprnt
  4057  0F89  01D5               	clrf	??__doprnt+1
  4058  0F8A  1BD4               	btfsc	??__doprnt,7
  4059  0F8B  03D5               	decf	??__doprnt+1,f
  4060  0F8C  1683               	bsf	3,5	;RP0=1, select bank1
  4061  0F8D  0008               	return
  4062  0F8E                     PL36:	
  4063  0F8E  0837               	movf	__doprnt@pb^(0+128),w
  4064  0F8F  3E01               	addlw	1
  4065  0F90  0084               	movwf	4
  4066  0F91  300A               	movlw	10
  4067  0F92  1383               	bcf	3,7	;select IRP bank0
  4068  0F93  0880               	movf	0,f
  4069  0F94  0008               	return
  4070  0F95                     PL37:	
  4071  0F95  0080               	movwf	0
  4072  0F96  1683               	bsf	3,5	;RP0=1, select bank1
  4073  0F97  0837               	movf	__doprnt@pb^(0+128),w
  4074  0F98  0084               	movwf	4
  4075  0F99  0A80               	incf	0,f
  4076  0F9A  0008               	return
  4077  0F9B                     PL38:	
  4078  0F9B  1683               	bsf	3,5	;RP0=1, select bank1
  4079  0F9C  1303               	bcf	3,6	;RP1=0, select bank1
  4080  0F9D  0008               	return
  4081  0F9E                     __ptext651:	
  4082 ;; =============== function ___awdiv ends ============
  4083                           
  4084                           
  4085 ;; *************** function ___fttol *****************
  4086 ;; Defined at:
  4087 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\fttol.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;  f1              3    0[BANK0 ] float 
  4090 ;; Auto vars:     Size  Location     Type
  4091 ;;  lval            4    8[BANK0 ] unsigned long 
  4092 ;;  exp1            1   12[BANK0 ] unsigned char 
  4093 ;;  sign1           1    7[BANK0 ] unsigned char 
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  4    0[BANK0 ] long 
  4096 ;; Registers used:
  4097 ;;		wreg, status,2, status,0
  4098 ;; Tracked objects:
  4099 ;;		On entry : 60/0
  4100 ;;		On exit  : 60/0
  4101 ;;		Unchanged: FFF9F/0
  4102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4103 ;;      Params:         0       4       0       0       0
  4104 ;;      Locals:         0       6       0       0       0
  4105 ;;      Temps:          0       3       0       0       0
  4106 ;;      Totals:         0      13       0       0       0
  4107 ;;Total ram usage:       13 bytes
  4108 ;; Hardware stack levels used:    1
  4109 ;; This function calls:
  4110 ;;		Nothing
  4111 ;; This function is called by:
  4112 ;;		__doprnt
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115  0F9E                     ___fttol:	
  4116                           
  4117                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  4118  0F9E  27F9  120A  158A   	fcall	PL33	;call to abstracted procedure
  4119  0FA1  1003               	clrc
  4120  0FA2  0D25               	rlf	??___fttol+1,w
  4121  0FA3  0D26               	rlf	??___fttol+2,w
  4122  0FA4  00AC               	movwf	___fttol@exp1
  4123  0FA5  08AC               	movf	___fttol@exp1,f
  4124  0FA6  1D03               	skipz
  4125  0FA7  2FAD               	goto	l5458
  4126  0FA8                     l5456:	
  4127  0FA8  01A0               	clrf	?___fttol
  4128  0FA9  01A1               	clrf	?___fttol+1
  4129  0FAA  01A2               	clrf	?___fttol+2
  4130  0FAB  01A3               	clrf	?___fttol+3
  4131  0FAC  0008               	return
  4132  0FAD                     l5458:	
  4133  0FAD  27F9  120A  158A   	fcall	PL33	;call to abstracted procedure
  4134  0FB0  3017               	movlw	23
  4135  0FB1                     u2255:	
  4136  0FB1  1003               	clrc
  4137  0FB2  0CA6               	rrf	??___fttol+2,f
  4138  0FB3  0CA5               	rrf	??___fttol+1,f
  4139  0FB4  0CA4               	rrf	??___fttol,f
  4140  0FB5  3EFF               	addlw	-1
  4141  0FB6  1D03               	skipz
  4142  0FB7  2FB1               	goto	u2255
  4143  0FB8  0824               	movf	??___fttol,w
  4144  0FB9  00A7               	movwf	___fttol@sign1
  4145  0FBA  17A1               	bsf	___fttol@f1+1,7
  4146  0FBB  01A2               	clrf	___fttol@f1+2
  4147  0FBC  0820               	movf	___fttol@f1,w
  4148  0FBD  00A8               	movwf	___fttol@lval
  4149  0FBE  0821               	movf	___fttol@f1+1,w
  4150  0FBF  00A9               	movwf	___fttol@lval+1
  4151  0FC0  0822               	movf	___fttol@f1+2,w
  4152  0FC1  00AA               	movwf	___fttol@lval+2
  4153  0FC2  308E               	movlw	142
  4154  0FC3  01AB               	clrf	___fttol@lval+3
  4155  0FC4  02AC               	subwf	___fttol@exp1,f
  4156  0FC5  1FAC               	btfss	___fttol@exp1,7
  4157  0FC6  2FD4               	goto	l5478
  4158  0FC7  082C               	movf	___fttol@exp1,w
  4159  0FC8  3A80               	xorlw	128
  4160  0FC9  3E8F               	addlw	143
  4161  0FCA  1C03               	btfss	3,0
  4162  0FCB  2FA8               	goto	l5456
  4163  0FCC                     l5474:	
  4164  0FCC  1003               	clrc
  4165  0FCD  0CAB               	rrf	___fttol@lval+3,f
  4166  0FCE  0CAA               	rrf	___fttol@lval+2,f
  4167  0FCF  0CA9               	rrf	___fttol@lval+1,f
  4168  0FD0  0CA8               	rrf	___fttol@lval,f
  4169  0FD1  0FAC               	incfsz	___fttol@exp1,f
  4170  0FD2  2FCC               	goto	l5474
  4171  0FD3  2FE2               	goto	l5484
  4172  0FD4                     l5478:	
  4173  0FD4  3018               	movlw	24
  4174  0FD5  022C               	subwf	___fttol@exp1,w
  4175  0FD6  1803               	btfsc	3,0
  4176  0FD7  2FA8               	goto	l5456
  4177  0FD8                     l2381:	
  4178  0FD8  08AC               	movf	___fttol@exp1,f
  4179  0FD9  1903               	btfsc	3,2
  4180  0FDA  2FE2               	goto	l5484
  4181  0FDB  1003               	clrc
  4182  0FDC  0DA8               	rlf	___fttol@lval,f
  4183  0FDD  0DA9               	rlf	___fttol@lval+1,f
  4184  0FDE  0DAA               	rlf	___fttol@lval+2,f
  4185  0FDF  0DAB               	rlf	___fttol@lval+3,f
  4186  0FE0  03AC               	decf	___fttol@exp1,f
  4187  0FE1  2FD8               	goto	l2381
  4188  0FE2                     l5484:	
  4189  0FE2  0827               	movf	___fttol@sign1,w
  4190  0FE3  1903               	btfsc	3,2
  4191  0FE4  2FF0               	goto	l5488
  4192  0FE5  09A8               	comf	___fttol@lval,f
  4193  0FE6  09A9               	comf	___fttol@lval+1,f
  4194  0FE7  09AA               	comf	___fttol@lval+2,f
  4195  0FE8  09AB               	comf	___fttol@lval+3,f
  4196  0FE9  0AA8               	incf	___fttol@lval,f
  4197  0FEA  1903               	skipnz
  4198  0FEB  0AA9               	incf	___fttol@lval+1,f
  4199  0FEC  1903               	skipnz
  4200  0FED  0AAA               	incf	___fttol@lval+2,f
  4201  0FEE  1903               	skipnz
  4202  0FEF  0AAB               	incf	___fttol@lval+3,f
  4203  0FF0                     l5488:	
  4204  0FF0  082B               	movf	___fttol@lval+3,w
  4205  0FF1  00A3               	movwf	?___fttol+3
  4206  0FF2  082A               	movf	___fttol@lval+2,w
  4207  0FF3  00A2               	movwf	?___fttol+2
  4208  0FF4  0829               	movf	___fttol@lval+1,w
  4209  0FF5  00A1               	movwf	?___fttol+1
  4210  0FF6  0828               	movf	___fttol@lval,w
  4211  0FF7  00A0               	movwf	?___fttol
  4212  0FF8  0008               	return
  4213  0FF9                     __end_of___fttol:	
  4214  0FF9                     PL33:	
  4215  0FF9  0820               	movf	___fttol@f1,w
  4216  0FFA  00A4               	movwf	??___fttol
  4217  0FFB  0821               	movf	___fttol@f1+1,w
  4218  0FFC  00A5               	movwf	??___fttol+1
  4219  0FFD  0822               	movf	___fttol@f1+2,w
  4220  0FFE  00A6               	movwf	??___fttol+2
  4221  0FFF  0008               	return
  4222                           
  4223                           	psect	text634
  4224  1762                     __ptext634:	
  4225 ;; =============== function _lcd_puts ends ============
  4226                           
  4227                           
  4228 ;; *************** function _lcd_goto *****************
  4229 ;; Defined at:
  4230 ;;		line 265 in file "C:\Users\Jorge\OneDrive\Escritorio\SRPROG\SRPROG.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;  pos             1    wreg     unsigned char 
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;  pos             1    5[COMMON] unsigned char 
  4235 ;; Return value:  Size  Location     Type
  4236 ;;		None               void
  4237 ;; Registers used:
  4238 ;;		wreg, status,2, status,0, pclath, cstack
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/60
  4241 ;;		On exit  : 60/0
  4242 ;;		Unchanged: FFF9F/0
  4243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4244 ;;      Params:         0       0       0       0       0
  4245 ;;      Locals:         1       0       0       0       0
  4246 ;;      Temps:          0       0       0       0       0
  4247 ;;      Totals:         1       0       0       0       0
  4248 ;;Total ram usage:        1 bytes
  4249 ;; Hardware stack levels used:    1
  4250 ;; Hardware stack levels required when called:    3
  4251 ;; This function calls:
  4252 ;;		_lcd_write
  4253 ;; This function is called by:
  4254 ;;		_main
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257  1762                     _lcd_goto:	
  4258                           
  4259                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  4260                           ;lcd_goto@pos stored from wreg
  4261  1762  00F5               	movwf	lcd_goto@pos
  4262  1763  27FD               	call	PL39	;select bank 0
  4263                           
  4264                           ;SRPROG.c: 266: RC3 = 0;
  4265  1764  1187               	bcf	7,3
  4266                           
  4267                           ;SRPROG.c: 267: lcd_write(0x80 + pos);
  4268  1765  0875               	movf	lcd_goto@pos,w
  4269  1766  3E80               	addlw	128
  4270  1767  2FCC               	ljmp	_lcd_write
  4271  1768                     __end_of_lcd_goto:	
  4272  1768                     __ptext633:	
  4273 ;; =============== function _lcd_clear ends ============
  4274                           
  4275                           
  4276 ;; *************** function _lcd_puts *****************
  4277 ;; Defined at:
  4278 ;;		line 254 in file "C:\Users\Jorge\OneDrive\Escritorio\SRPROG\SRPROG.c"
  4279 ;; Parameters:    Size  Location     Type
  4280 ;;  s               2    5[COMMON] PTR const unsigned char 
  4281 ;;		 -> STR_8(5), STR_6(3), STR_5(6), carac1(3), 
  4282 ;;		 -> STR_2(12), STR_1(13), 
  4283 ;; Auto vars:     Size  Location     Type
  4284 ;;		None
  4285 ;; Return value:  Size  Location     Type
  4286 ;;		None               void
  4287 ;; Registers used:
  4288 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4289 ;; Tracked objects:
  4290 ;;		On entry : 60/0
  4291 ;;		On exit  : 60/0
  4292 ;;		Unchanged: FFE9F/0
  4293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4294 ;;      Params:         2       0       0       0       0
  4295 ;;      Locals:         0       0       0       0       0
  4296 ;;      Temps:          0       0       0       0       0
  4297 ;;      Totals:         2       0       0       0       0
  4298 ;;Total ram usage:        2 bytes
  4299 ;; Hardware stack levels used:    1
  4300 ;; Hardware stack levels required when called:    3
  4301 ;; This function calls:
  4302 ;;		_lcd_write
  4303 ;; This function is called by:
  4304 ;;		_main
  4305 ;; This function uses a non-reentrant model
  4306 ;;
  4307  1768                     _lcd_puts:	
  4308                           
  4309                           ;SRPROG.c: 255: RC3 = 1;
  4310                           
  4311                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4312  1768  1587               	bsf	7,3
  4313  1769                     l5926:	
  4314                           ;SRPROG.c: 256: while(*s)
  4315                           
  4316  1769  0876               	movf	lcd_puts@s+1,w
  4317  176A  00FF               	movwf	127
  4318  176B  0875               	movf	lcd_puts@s,w
  4319  176C  0084               	movwf	4
  4320  176D  160A  118A  2000   	fcall	stringtab
      +       160A  118A         
  4321  1772  3800               	iorlw	0
  4322  1773  1903               	btfsc	3,2
  4323  1774  0008               	return
  4324                           
  4325                           ;SRPROG.c: 257: lcd_write(*s++);
  4326  1775  0876               	movf	lcd_puts@s+1,w
  4327  1776  00FF               	movwf	127
  4328  1777  0875               	movf	lcd_puts@s,w
  4329  1778  0084               	movwf	4
  4330  1779  160A  118A  2000   	fcall	stringtab
      +       160A  118A         
  4331  177E  27CC  160A  118A   	fcall	_lcd_write
  4332  1781  0AF5               	incf	lcd_puts@s,f
  4333  1782  1903               	skipnz
  4334  1783  0AF6               	incf	lcd_puts@s+1,f
  4335  1784  2F69               	goto	l5926
  4336  1785                     __end_of_lcd_puts:	
  4337  1785                     __ptext630:	
  4338 ;; =============== function _printf ends ============
  4339                           
  4340                           
  4341 ;; *************** function _lcd_init *****************
  4342 ;; Defined at:
  4343 ;;		line 270 in file "C:\Users\Jorge\OneDrive\Escritorio\SRPROG\SRPROG.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;		None
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;  init_value      1    0        unsigned char 
  4348 ;; Return value:  Size  Location     Type
  4349 ;;		None               void
  4350 ;; Registers used:
  4351 ;;		wreg, status,2, status,0, pclath, cstack
  4352 ;; Tracked objects:
  4353 ;;		On entry : 17F/0
  4354 ;;		On exit  : 17F/0
  4355 ;;		Unchanged: FFE80/0
  4356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4357 ;;      Params:         0       0       0       0       0
  4358 ;;      Locals:         1       0       0       0       0
  4359 ;;      Temps:          0       0       0       0       0
  4360 ;;      Totals:         1       0       0       0       0
  4361 ;;Total ram usage:        1 bytes
  4362 ;; Hardware stack levels used:    1
  4363 ;; Hardware stack levels required when called:    4
  4364 ;; This function calls:
  4365 ;;		_pause
  4366 ;;		_lcd_write
  4367 ;;		_lcd_clear
  4368 ;; This function is called by:
  4369 ;;		_main
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372  1785                     _lcd_init:	
  4373  1785  300F               	movlw	15
  4374                           
  4375                           ;SRPROG.c: 275: RC3 = 0;
  4376                           
  4377                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4378  1786  1187               	bcf	7,3
  4379                           
  4380                           ;SRPROG.c: 276: RC0 = 0;
  4381  1787  1007               	bcf	7,0
  4382                           
  4383                           ;SRPROG.c: 277: RC4 = 0;
  4384  1788  1207               	bcf	7,4
  4385                           
  4386                           ;SRPROG.c: 279: pause(15);
  4387  1789  00F0               	movwf	?_pause
  4388  178A  01F1               	clrf	?_pause+1
  4389  178B  27BB  160A  118A   	fcall	_pause
  4390                           
  4391                           ;SRPROG.c: 280: PORTD = init_value;
  4392  178E  3003               	movlw	3
  4393  178F  27FD               	call	PL39	;select bank 0
  4394  1790  0088               	movwf	8	;volatile
  4395  1791  300A               	movlw	10
  4396                           
  4397                           ;SRPROG.c: 281: ((RC0 = 1),(RC0=0));
  4398  1792  1407               	bsf	7,0
  4399  1793  1007               	bcf	7,0
  4400                           
  4401                           ;SRPROG.c: 282: pause(10);
  4402  1794  00F0               	movwf	?_pause
  4403  1795  01F1               	clrf	?_pause+1
  4404  1796  27BB  160A  118A   	fcall	_pause
  4405                           
  4406                           ;SRPROG.c: 283: ((RC0 = 1),(RC0=0));
  4407                           
  4408                           ;SRPROG.c: 284: pause(10);
  4409  1799  27F5  160A  118A   	fcall	PL23	;call to abstracted procedure
  4410  179C  27BB  160A  118A   	fcall	_pause
  4411                           
  4412                           ;SRPROG.c: 285: ((RC0 = 1),(RC0=0));
  4413                           
  4414                           ;SRPROG.c: 286: pause(10);
  4415  179F  27F5  160A  118A   	fcall	PL23	;call to abstracted procedure
  4416  17A2  27BB  160A  118A   	fcall	_pause
  4417                           
  4418                           ;SRPROG.c: 287: PORTD= 2;
  4419  17A5  3002               	movlw	2
  4420  17A6  27FD               	call	PL39	;select bank 0
  4421  17A7  0088               	movwf	8	;volatile
  4422  17A8  3028               	movlw	40
  4423                           
  4424                           ;SRPROG.c: 288: ((RC0 = 1),(RC0=0));
  4425  17A9  1407               	bsf	7,0
  4426  17AA  1007               	bcf	7,0
  4427                           
  4428                           ;SRPROG.c: 290: lcd_write(0x28);
  4429  17AB  27CC  160A  118A   	fcall	_lcd_write
  4430                           
  4431                           ;SRPROG.c: 291: lcd_write(0x0C);
  4432  17AE  300C               	movlw	12
  4433  17AF  27CC  160A  118A   	fcall	_lcd_write
  4434                           
  4435                           ;SRPROG.c: 292: lcd_write(0x0F);
  4436  17B2  300F               	movlw	15
  4437  17B3  27CC  160A  118A   	fcall	_lcd_write
  4438                           
  4439                           ;SRPROG.c: 293: lcd_clear();
  4440  17B6  27EC  160A  118A   	fcall	_lcd_clear
  4441                           
  4442                           ;SRPROG.c: 294: lcd_write(0x06);
  4443  17B9  3006               	movlw	6
  4444  17BA  2FCC               	ljmp	_lcd_write
  4445  17BB                     __end_of_lcd_init:	
  4446  17BB                     __ptext644:	
  4447 ;; =============== function ___ftadd ends ============
  4448                           
  4449                           
  4450 ;; *************** function _pause *****************
  4451 ;; Defined at:
  4452 ;;		line 297 in file "C:\Users\Jorge\OneDrive\Escritorio\SRPROG\SRPROG.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;  usvalue         2    0[COMMON] unsigned short 
  4455 ;; Auto vars:     Size  Location     Type
  4456 ;;  x               2    2[COMMON] unsigned short 
  4457 ;; Return value:  Size  Location     Type
  4458 ;;		None               void
  4459 ;; Registers used:
  4460 ;;		wreg, status,2, status,0, pclath, cstack
  4461 ;; Tracked objects:
  4462 ;;		On entry : 0/0
  4463 ;;		On exit  : 0/0
  4464 ;;		Unchanged: FFF9F/0
  4465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4466 ;;      Params:         2       0       0       0       0
  4467 ;;      Locals:         2       0       0       0       0
  4468 ;;      Temps:          0       0       0       0       0
  4469 ;;      Totals:         4       0       0       0       0
  4470 ;;Total ram usage:        4 bytes
  4471 ;; Hardware stack levels used:    1
  4472 ;; Hardware stack levels required when called:    1
  4473 ;; This function calls:
  4474 ;;		_msecbase
  4475 ;; This function is called by:
  4476 ;;		_lcd_write
  4477 ;;		_lcd_clear
  4478 ;;		_lcd_init
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481  17BB                     _pause:	
  4482  17BB                     l5646:	
  4483                           ; Regs used in _pause: [wreg+status,2+status,0+pclath+cstack]
  4484                           
  4485                           
  4486                           ;SRPROG.c: 298: unsigned short x;
  4487                           ;SRPROG.c: 299: for (x=0; x<=usvalue; x++)
  4488  17BB  01F2               	clrf	pause@x
  4489  17BC  01F3               	clrf	pause@x+1
  4490  17BD                     l5652:	
  4491  17BD  0873               	movf	pause@x+1,w
  4492  17BE  0271               	subwf	pause@usvalue+1,w
  4493  17BF  1D03               	skipz
  4494  17C0  2FC3               	goto	u2585
  4495  17C1  0872               	movf	pause@x,w
  4496  17C2  0270               	subwf	pause@usvalue,w
  4497  17C3                     u2585:	
  4498  17C3  1C03               	btfss	3,0
  4499  17C4  0008               	return
  4500                           
  4501                           ;SRPROG.c: 300: {
  4502                           ;SRPROG.c: 301: msecbase();
  4503  17C5  27DF  160A  118A   	fcall	_msecbase
  4504  17C8  0AF2               	incf	pause@x,f
  4505  17C9  1903               	skipnz
  4506  17CA  0AF3               	incf	pause@x+1,f
  4507  17CB  2FBD               	goto	l5652
  4508  17CC                     __end_of_pause:	
  4509  17CC                     __ptext638:	
  4510 ;; =============== function _fround ends ============
  4511                           
  4512                           
  4513 ;; *************** function _lcd_write *****************
  4514 ;; Defined at:
  4515 ;;		line 240 in file "C:\Users\Jorge\OneDrive\Escritorio\SRPROG\SRPROG.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;  c               1    wreg     unsigned char 
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;  c               1    4[COMMON] unsigned char 
  4520 ;; Return value:  Size  Location     Type
  4521 ;;		None               void
  4522 ;; Registers used:
  4523 ;;		wreg, status,2, status,0, pclath, cstack
  4524 ;; Tracked objects:
  4525 ;;		On entry : 0/0
  4526 ;;		On exit  : 60/0
  4527 ;;		Unchanged: FFF9F/0
  4528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4529 ;;      Params:         0       0       0       0       0
  4530 ;;      Locals:         1       0       0       0       0
  4531 ;;      Temps:          0       0       0       0       0
  4532 ;;      Totals:         1       0       0       0       0
  4533 ;;Total ram usage:        1 bytes
  4534 ;; Hardware stack levels used:    1
  4535 ;; Hardware stack levels required when called:    2
  4536 ;; This function calls:
  4537 ;;		_pause
  4538 ;; This function is called by:
  4539 ;;		_lcd_clear
  4540 ;;		_lcd_puts
  4541 ;;		_lcd_goto
  4542 ;;		_lcd_init
  4543 ;; This function uses a non-reentrant model
  4544 ;;
  4545  17CC                     _lcd_write:	
  4546                           
  4547                           ; Regs used in _lcd_write: [wreg+status,2+status,0+pclath+cstack]
  4548                           ;lcd_write@c stored from wreg
  4549  17CC  00F4               	movwf	lcd_write@c
  4550                           
  4551                           ;SRPROG.c: 241: pause(1);
  4552  17CD  01F0               	clrf	?_pause
  4553  17CE  0AF0               	incf	?_pause,f
  4554  17CF  01F1               	clrf	?_pause+1
  4555  17D0  27BB  160A  118A   	fcall	_pause
  4556                           
  4557                           ;SRPROG.c: 242: PORTD = ( ( c >> 4) & 0x0F);
  4558  17D3  0E74               	swapf	lcd_write@c,w
  4559  17D4  390F               	andlw	15
  4560  17D5  27FD               	call	PL39	;select bank 0
  4561  17D6  0088               	movwf	8	;volatile
  4562                           
  4563                           ;SRPROG.c: 243: ((RC0 = 1),(RC0=0));
  4564  17D7  1407               	bsf	7,0
  4565  17D8  1007               	bcf	7,0
  4566                           
  4567                           ;SRPROG.c: 244: PORTD = (c & 0x0F);
  4568  17D9  0874               	movf	lcd_write@c,w
  4569  17DA  390F               	andlw	15
  4570  17DB  0088               	movwf	8	;volatile
  4571                           
  4572                           ;SRPROG.c: 245: ((RC0 = 1),(RC0=0));
  4573  17DC  1407               	bsf	7,0
  4574  17DD  1007               	bcf	7,0
  4575  17DE  0008               	return
  4576  17DF                     __end_of_lcd_write:	
  4577  17DF                     __ptext661:	
  4578 ;; =============== function _isdigit ends ============
  4579                           
  4580                           
  4581 ;; *************** function _msecbase *****************
  4582 ;; Defined at:
  4583 ;;		line 305 in file "C:\Users\Jorge\OneDrive\Escritorio\SRPROG\SRPROG.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;		None
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;		None
  4588 ;; Return value:  Size  Location     Type
  4589 ;;		None               void
  4590 ;; Registers used:
  4591 ;;		wreg
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: FFF9F/0
  4596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4597 ;;      Params:         0       0       0       0       0
  4598 ;;      Locals:         0       0       0       0       0
  4599 ;;      Temps:          0       0       0       0       0
  4600 ;;      Totals:         0       0       0       0       0
  4601 ;;Total ram usage:        0 bytes
  4602 ;; Hardware stack levels used:    1
  4603 ;; This function calls:
  4604 ;;		Nothing
  4605 ;; This function is called by:
  4606 ;;		_pause
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609  17DF                     _msecbase:	
  4610                           
  4611                           ;SRPROG.c: 306: OPTION_REG = 0b11010010;
  4612                           
  4613                           ; Regs used in _msecbase: [wreg]
  4614  17DF  30D2               	movlw	210
  4615  17E0  1683               	bsf	3,5	;RP0=1, select bank1
  4616  17E1  1303               	bcf	3,6	;RP1=0, select bank1
  4617  17E2  0081               	movwf	1	;volatile
  4618                           
  4619                           ;SRPROG.c: 307: TMR0 = 0x0E;
  4620  17E3  300E               	movlw	14
  4621  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  4622  17E5  0081               	movwf	1	;volatile
  4623                           
  4624                           ;SRPROG.c: 308: TMR0 = 0x8E;
  4625  17E6  308E               	movlw	142
  4626  17E7  0081               	movwf	1	;volatile
  4627  17E8                     l1121:	
  4628                           ;SRPROG.c: 309: while(!T0IF);
  4629                           
  4630  17E8  1D0B               	btfss	11,2
  4631  17E9  2FE8               	goto	l1121
  4632                           
  4633                           ;SRPROG.c: 310: T0IF = 0;
  4634  17EA  110B               	bcf	11,2
  4635  17EB  0008               	return
  4636  17EC                     __end_of_msecbase:	
  4637  17EC                     __ptext632:	
  4638 ;; =============== function __doprnt ends ============
  4639                           
  4640                           
  4641 ;; *************** function _lcd_clear *****************
  4642 ;; Defined at:
  4643 ;;		line 248 in file "C:\Users\Jorge\OneDrive\Escritorio\SRPROG\SRPROG.c"
  4644 ;; Parameters:    Size  Location     Type
  4645 ;;		None
  4646 ;; Auto vars:     Size  Location     Type
  4647 ;;		None
  4648 ;; Return value:  Size  Location     Type
  4649 ;;		None               void
  4650 ;; Registers used:
  4651 ;;		wreg, status,2, status,0, pclath, cstack
  4652 ;; Tracked objects:
  4653 ;;		On entry : 60/0
  4654 ;;		On exit  : 0/0
  4655 ;;		Unchanged: FFF9F/0
  4656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4657 ;;      Params:         0       0       0       0       0
  4658 ;;      Locals:         0       0       0       0       0
  4659 ;;      Temps:          0       0       0       0       0
  4660 ;;      Totals:         0       0       0       0       0
  4661 ;;Total ram usage:        0 bytes
  4662 ;; Hardware stack levels used:    1
  4663 ;; Hardware stack levels required when called:    3
  4664 ;; This function calls:
  4665 ;;		_lcd_write
  4666 ;;		_pause
  4667 ;; This function is called by:
  4668 ;;		_main
  4669 ;;		_lcd_init
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672  17EC                     _lcd_clear:	
  4673  17EC  3001               	movlw	1
  4674                           
  4675                           ;SRPROG.c: 249: RC3 = 0;
  4676                           
  4677                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  4678  17ED  1187               	bcf	7,3
  4679                           
  4680                           ;SRPROG.c: 250: lcd_write(0x01);
  4681  17EE  27CC  160A  118A   	fcall	_lcd_write
  4682                           
  4683                           ;SRPROG.c: 251: pause (2);
  4684  17F1  3002               	movlw	2
  4685  17F2  00F0               	movwf	?_pause
  4686  17F3  01F1               	clrf	?_pause+1
  4687  17F4  2FBB               	ljmp	l5646
  4688  17F5                     __end_of_lcd_clear:	
  4689  17F5                     PL23:	
  4690  17F5  1283               	bcf	3,5	;RP0=0, select bank0
  4691  17F6  1303               	bcf	3,6	;RP1=0, select bank0
  4692  17F7  300A               	movlw	10
  4693  17F8  1407               	bsf	7,0
  4694  17F9  1007               	bcf	7,0
  4695  17FA  00F0               	movwf	?_pause
  4696  17FB  01F1               	clrf	?_pause+1
  4697  17FC  0008               	return
  4698  17FD                     PL39:	
  4699  17FD  1283               	bcf	3,5	;RP0=0, select bank0
  4700  17FE  1303               	bcf	3,6	;RP1=0, select bank0
  4701  17FF  0008               	return
  4702                           
  4703                           	psect	text635
  4704  012E                     __ptext635:	
  4705 ;; =============== function _lcd_goto ends ============
  4706                           
  4707                           
  4708 ;; *************** function ___ftsub *****************
  4709 ;; Defined at:
  4710 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftsub.c"
  4711 ;; Parameters:    Size  Location     Type
  4712 ;;  f2              3   40[BANK0 ] float 
  4713 ;;  f1              3   43[BANK0 ] float 
  4714 ;; Auto vars:     Size  Location     Type
  4715 ;;		None
  4716 ;; Return value:  Size  Location     Type
  4717 ;;                  3   40[BANK0 ] float 
  4718 ;; Registers used:
  4719 ;;		wreg, status,2, status,0, pclath, cstack
  4720 ;; Tracked objects:
  4721 ;;		On entry : 60/0
  4722 ;;		On exit  : 60/0
  4723 ;;		Unchanged: FFF9F/0
  4724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4725 ;;      Params:         0       6       0       0       0
  4726 ;;      Locals:         0       0       0       0       0
  4727 ;;      Temps:          0       0       0       0       0
  4728 ;;      Totals:         0       6       0       0       0
  4729 ;;Total ram usage:        6 bytes
  4730 ;; Hardware stack levels used:    1
  4731 ;; Hardware stack levels required when called:    2
  4732 ;; This function calls:
  4733 ;;		___ftadd
  4734 ;; This function is called by:
  4735 ;;		__doprnt
  4736 ;; This function uses a non-reentrant model
  4737 ;;
  4738  012E                     ___ftsub:	
  4739                           
  4740                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  4741  012E  3080               	movlw	128
  4742  012F  06CA               	xorwf	___ftsub@f2+2,f
  4743  0130  084B               	movf	___ftsub@f1,w
  4744  0131  00BC               	movwf	?___ftadd
  4745  0132  084C               	movf	___ftsub@f1+1,w
  4746  0133  00BD               	movwf	?___ftadd+1
  4747  0134  084D               	movf	___ftsub@f1+2,w
  4748  0135  00BE               	movwf	?___ftadd+2
  4749  0136  0848               	movf	___ftsub@f2,w
  4750  0137  00BF               	movwf	?___ftadd+3
  4751  0138  0849               	movf	___ftsub@f2+1,w
  4752  0139  00C0               	movwf	?___ftadd+4
  4753  013A  084A               	movf	___ftsub@f2+2,w
  4754  013B  00C1               	movwf	?___ftadd+5
  4755  013C  2144               	fcall	___ftadd
  4756  013D  083C               	movf	?___ftadd,w
  4757  013E  00C8               	movwf	?___ftsub
  4758  013F  083D               	movf	?___ftadd+1,w
  4759  0140  00C9               	movwf	?___ftsub+1
  4760  0141  083E               	movf	?___ftadd+2,w
  4761  0142  00CA               	movwf	?___ftsub+2
  4762  0143  0008               	return
  4763  0144                     __end_of___ftsub:	
  4764  0144                     __ptext643:	
  4765 ;; =============== function ___ftmul ends ============
  4766                           
  4767                           
  4768 ;; *************** function ___ftadd *****************
  4769 ;; Defined at:
  4770 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftadd.c"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;  f1              3   28[BANK0 ] float 
  4773 ;;  f2              3   31[BANK0 ] float 
  4774 ;; Auto vars:     Size  Location     Type
  4775 ;;  exp1            1   39[BANK0 ] unsigned char 
  4776 ;;  exp2            1   38[BANK0 ] unsigned char 
  4777 ;;  sign            1   37[BANK0 ] unsigned char 
  4778 ;; Return value:  Size  Location     Type
  4779 ;;                  3   28[BANK0 ] float 
  4780 ;; Registers used:
  4781 ;;		wreg, status,2, status,0, pclath, cstack
  4782 ;; Tracked objects:
  4783 ;;		On entry : 60/0
  4784 ;;		On exit  : 60/0
  4785 ;;		Unchanged: FFF9F/0
  4786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4787 ;;      Params:         0       6       0       0       0
  4788 ;;      Locals:         0       3       0       0       0
  4789 ;;      Temps:          0       3       0       0       0
  4790 ;;      Totals:         0      12       0       0       0
  4791 ;;Total ram usage:       12 bytes
  4792 ;; Hardware stack levels used:    1
  4793 ;; Hardware stack levels required when called:    1
  4794 ;; This function calls:
  4795 ;;		___ftpack
  4796 ;; This function is called by:
  4797 ;;		__doprnt
  4798 ;;		___ftsub
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801  0144                     ___ftadd:	
  4802                           
  4803                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4804  0144  083C               	movf	___ftadd@f1,w
  4805  0145  00C2               	movwf	??___ftadd
  4806  0146  083D               	movf	___ftadd@f1+1,w
  4807  0147  00C3               	movwf	??___ftadd+1
  4808  0148  083E               	movf	___ftadd@f1+2,w
  4809  0149  00C4               	movwf	??___ftadd+2
  4810  014A  1003               	clrc
  4811  014B  0D43               	rlf	??___ftadd+1,w
  4812  014C  0D44               	rlf	??___ftadd+2,w
  4813  014D  00C7               	movwf	___ftadd@exp1
  4814  014E  083F               	movf	___ftadd@f2,w
  4815  014F  00C2               	movwf	??___ftadd
  4816  0150  0840               	movf	___ftadd@f2+1,w
  4817  0151  00C3               	movwf	??___ftadd+1
  4818  0152  0841               	movf	___ftadd@f2+2,w
  4819  0153  00C4               	movwf	??___ftadd+2
  4820  0154  1003               	clrc
  4821  0155  0D43               	rlf	??___ftadd+1,w
  4822  0156  0D44               	rlf	??___ftadd+2,w
  4823  0157  00C6               	movwf	___ftadd@exp2
  4824  0158  0847               	movf	___ftadd@exp1,w
  4825  0159  1903               	btfsc	3,2
  4826  015A  2967               	goto	l5662
  4827  015B  0846               	movf	___ftadd@exp2,w
  4828  015C  0247               	subwf	___ftadd@exp1,w
  4829  015D  0846               	movf	___ftadd@exp2,w
  4830  015E  1803               	skipnc
  4831  015F  296F               	goto	L10
  4832  0160  00C2               	movwf	??___ftadd
  4833  0161  0847               	movf	___ftadd@exp1,w
  4834  0162  02C2               	subwf	??___ftadd,f
  4835  0163  3019               	movlw	25
  4836  0164  0242               	subwf	??___ftadd,w
  4837  0165  1C03               	skipc
  4838  0166  296E               	goto	l5666
  4839  0167                     l5662:	
  4840  0167  083F               	movf	___ftadd@f2,w
  4841  0168  00BC               	movwf	?___ftadd
  4842  0169  0840               	movf	___ftadd@f2+1,w
  4843  016A  00BD               	movwf	?___ftadd+1
  4844  016B  0841               	movf	___ftadd@f2+2,w
  4845  016C  00BE               	movwf	?___ftadd+2
  4846  016D  0008               	return
  4847  016E                     l5666:	
  4848  016E  0846               	movf	___ftadd@exp2,w
  4849  016F                     L10:	
  4850  016F  1903               	btfsc	3,2
  4851  0170  0008               	return
  4852  0171  0847               	movf	___ftadd@exp1,w
  4853  0172  0246               	subwf	___ftadd@exp2,w
  4854  0173  1803               	skipnc
  4855  0174  297D               	goto	l5672
  4856  0175  0847               	movf	___ftadd@exp1,w
  4857  0176  00C2               	movwf	??___ftadd
  4858  0177  0846               	movf	___ftadd@exp2,w
  4859  0178  02C2               	subwf	??___ftadd,f
  4860  0179  3019               	movlw	25
  4861  017A  0242               	subwf	??___ftadd,w
  4862  017B  1803               	btfsc	3,0
  4863  017C  0008               	return
  4864  017D                     l5672:	
  4865  017D  3006               	movlw	6
  4866  017E  00C5               	movwf	___ftadd@sign
  4867  017F  1BBE               	btfsc	___ftadd@f1+2,7
  4868  0180  17C5               	bsf	___ftadd@sign,7
  4869  0181  1BC1               	btfsc	___ftadd@f2+2,7
  4870  0182  1745               	bsf	___ftadd@sign,6
  4871  0183  17BD               	bsf	___ftadd@f1+1,7
  4872  0184  01BE               	clrf	___ftadd@f1+2
  4873  0185  17C0               	bsf	___ftadd@f2+1,7
  4874  0186  01C1               	clrf	___ftadd@f2+2
  4875  0187  0846               	movf	___ftadd@exp2,w
  4876  0188  0247               	subwf	___ftadd@exp1,w
  4877  0189  1803               	skipnc
  4878  018A  29A4               	goto	l5694
  4879  018B                     l5684:	
  4880  018B  1003               	clrc
  4881  018C  0DBF               	rlf	___ftadd@f2,f
  4882  018D  0DC0               	rlf	___ftadd@f2+1,f
  4883  018E  0DC1               	rlf	___ftadd@f2+2,f
  4884  018F  03C6               	decf	___ftadd@exp2,f
  4885  0190  0846               	movf	___ftadd@exp2,w
  4886  0191  0647               	xorwf	___ftadd@exp1,w
  4887  0192  1903               	skipnz
  4888  0193  299F               	goto	l5692
  4889  0194  03C5               	decf	___ftadd@sign,f
  4890  0195  0845               	movf	___ftadd@sign,w
  4891  0196  3907               	andlw	7
  4892  0197  1903               	btfsc	3,2
  4893  0198  299F               	goto	l5692
  4894  0199  298B               	goto	l5684
  4895  019A                     l5690:	
  4896  019A  1003               	clrc
  4897  019B  0CBE               	rrf	___ftadd@f1+2,f
  4898  019C  0CBD               	rrf	___ftadd@f1+1,f
  4899  019D  0CBC               	rrf	___ftadd@f1,f
  4900  019E  0AC7               	incf	___ftadd@exp1,f
  4901  019F                     l5692:	
  4902  019F  0847               	movf	___ftadd@exp1,w
  4903  01A0  0646               	xorwf	___ftadd@exp2,w
  4904  01A1  1903               	btfsc	3,2
  4905  01A2  29C0               	goto	l2325
  4906  01A3  299A               	goto	l5690
  4907  01A4                     l5694:	
  4908  01A4  0847               	movf	___ftadd@exp1,w
  4909  01A5  0246               	subwf	___ftadd@exp2,w
  4910  01A6  1803               	skipnc
  4911  01A7  29C0               	goto	l2325
  4912  01A8                     l5696:	
  4913  01A8  1003               	clrc
  4914  01A9  0DBC               	rlf	___ftadd@f1,f
  4915  01AA  0DBD               	rlf	___ftadd@f1+1,f
  4916  01AB  0DBE               	rlf	___ftadd@f1+2,f
  4917  01AC  03C7               	decf	___ftadd@exp1,f
  4918  01AD  0846               	movf	___ftadd@exp2,w
  4919  01AE  0647               	xorwf	___ftadd@exp1,w
  4920  01AF  1903               	skipnz
  4921  01B0  29BC               	goto	l5704
  4922  01B1  03C5               	decf	___ftadd@sign,f
  4923  01B2  0845               	movf	___ftadd@sign,w
  4924  01B3  3907               	andlw	7
  4925  01B4  1903               	btfsc	3,2
  4926  01B5  29BC               	goto	l5704
  4927  01B6  29A8               	goto	l5696
  4928  01B7                     l5702:	
  4929  01B7  1003               	clrc
  4930  01B8  0CC1               	rrf	___ftadd@f2+2,f
  4931  01B9  0CC0               	rrf	___ftadd@f2+1,f
  4932  01BA  0CBF               	rrf	___ftadd@f2,f
  4933  01BB  0AC6               	incf	___ftadd@exp2,f
  4934  01BC                     l5704:	
  4935  01BC  0847               	movf	___ftadd@exp1,w
  4936  01BD  0646               	xorwf	___ftadd@exp2,w
  4937  01BE  1D03               	skipz
  4938  01BF  29B7               	goto	l5702
  4939  01C0                     l2325:	
  4940  01C0  1FC5               	btfss	___ftadd@sign,7
  4941  01C1  29CB               	goto	l5710
  4942  01C2  30FF               	movlw	255
  4943  01C3  06BC               	xorwf	___ftadd@f1,f
  4944  01C4  06BD               	xorwf	___ftadd@f1+1,f
  4945  01C5  06BE               	xorwf	___ftadd@f1+2,f
  4946  01C6  0ABC               	incf	___ftadd@f1,f
  4947  01C7  1903               	skipnz
  4948  01C8  0ABD               	incf	___ftadd@f1+1,f
  4949  01C9  1903               	skipnz
  4950  01CA  0ABE               	incf	___ftadd@f1+2,f
  4951  01CB                     l5710:	
  4952  01CB  1F45               	btfss	___ftadd@sign,6
  4953  01CC  29D6               	goto	l5716
  4954  01CD  30FF               	movlw	255
  4955  01CE  06BF               	xorwf	___ftadd@f2,f
  4956  01CF  06C0               	xorwf	___ftadd@f2+1,f
  4957  01D0  06C1               	xorwf	___ftadd@f2+2,f
  4958  01D1  0ABF               	incf	___ftadd@f2,f
  4959  01D2  1903               	skipnz
  4960  01D3  0AC0               	incf	___ftadd@f2+1,f
  4961  01D4  1903               	skipnz
  4962  01D5  0AC1               	incf	___ftadd@f2+2,f
  4963  01D6                     l5716:	
  4964  01D6  01C5               	clrf	___ftadd@sign
  4965  01D7  083C               	movf	___ftadd@f1,w
  4966  01D8  07BF               	addwf	___ftadd@f2,f
  4967  01D9  083D               	movf	___ftadd@f1+1,w
  4968  01DA  1103               	clrz
  4969  01DB  1803               	skipnc
  4970  01DC  0A3D               	incf	___ftadd@f1+1,w
  4971  01DD  1D03               	btfss	3,2
  4972  01DE  07C0               	addwf	___ftadd@f2+1,f
  4973  01DF  083E               	movf	___ftadd@f1+2,w
  4974  01E0  1103               	clrz
  4975  01E1  1803               	skipnc
  4976  01E2  0A3E               	incf	___ftadd@f1+2,w
  4977  01E3  1D03               	btfss	3,2
  4978  01E4  07C1               	addwf	___ftadd@f2+2,f
  4979  01E5  1FC1               	btfss	___ftadd@f2+2,7
  4980  01E6  29F2               	goto	l5728
  4981  01E7  30FF               	movlw	255
  4982  01E8  06BF               	xorwf	___ftadd@f2,f
  4983  01E9  06C0               	xorwf	___ftadd@f2+1,f
  4984  01EA  06C1               	xorwf	___ftadd@f2+2,f
  4985  01EB  0ABF               	incf	___ftadd@f2,f
  4986  01EC  1903               	skipnz
  4987  01ED  0AC0               	incf	___ftadd@f2+1,f
  4988  01EE  1903               	skipnz
  4989  01EF  0AC1               	incf	___ftadd@f2+2,f
  4990  01F0  01C5               	clrf	___ftadd@sign
  4991  01F1  0AC5               	incf	___ftadd@sign,f
  4992  01F2                     l5728:	
  4993  01F2  083F               	movf	___ftadd@f2,w
  4994  01F3  00F0               	movwf	?___ftpack
  4995  01F4  0840               	movf	___ftadd@f2+1,w
  4996  01F5  00F1               	movwf	?___ftpack+1
  4997  01F6  0841               	movf	___ftadd@f2+2,w
  4998  01F7  00F2               	movwf	?___ftpack+2
  4999  01F8  0847               	movf	___ftadd@exp1,w
  5000  01F9  00F3               	movwf	?___ftpack+3
  5001  01FA  0845               	movf	___ftadd@sign,w
  5002  01FB  00F4               	movwf	?___ftpack+4
  5003  01FC  120A  118A  2658   	fcall	___ftpack
  5004  01FF  0870               	movf	?___ftpack,w
  5005  0200  00BC               	movwf	?___ftadd
  5006  0201  0871               	movf	?___ftpack+1,w
  5007  0202  00BD               	movwf	?___ftadd+1
  5008  0203  0872               	movf	?___ftpack+2,w
  5009  0204  00BE               	movwf	?___ftadd+2
  5010  0205  0008               	return
  5011  0206                     __end_of___ftadd:	
  5012                           
  5013                           	psect	text637
  5014  0206                     __ptext637:	
  5015 ;; =============== function _scale ends ============
  5016                           
  5017                           
  5018 ;; *************** function _fround *****************
  5019 ;; Defined at:
  5020 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;  prec            1    wreg     unsigned char 
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;  prec            1   49[BANK0 ] unsigned char 
  5025 ;; Return value:  Size  Location     Type
  5026 ;;                  3   40[BANK0 ] unsigned char 
  5027 ;; Registers used:
  5028 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5029 ;; Tracked objects:
  5030 ;;		On entry : 160/20
  5031 ;;		On exit  : 160/0
  5032 ;;		Unchanged: FFE9F/0
  5033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5034 ;;      Params:         0       3       0       0       0
  5035 ;;      Locals:         0       7       0       0       0
  5036 ;;      Temps:          0       0       0       0       0
  5037 ;;      Totals:         0      10       0       0       0
  5038 ;;Total ram usage:       10 bytes
  5039 ;; Hardware stack levels used:    1
  5040 ;; Hardware stack levels required when called:    2
  5041 ;; This function calls:
  5042 ;;		___lbmod
  5043 ;;		___bmul
  5044 ;;		___lbdiv
  5045 ;;		___ftmul
  5046 ;; This function is called by:
  5047 ;;		__doprnt
  5048 ;; This function uses a non-reentrant model
  5049 ;;
  5050  0206                     _fround:	
  5051                           
  5052                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5053                           ;fround@prec stored from wreg
  5054  0206  1283               	bcf	3,5	;RP0=0, select bank0
  5055  0207  00D1               	movwf	fround@prec
  5056  0208  306E               	movlw	110
  5057  0209  0251               	subwf	fround@prec,w
  5058  020A  1C03               	skipc
  5059  020B  2A91               	goto	l5858
  5060  020C  3003               	movlw	3
  5061  020D  00F9               	movwf	?___bmul
  5062  020E  300A               	movlw	10
  5063  020F  00F5               	movwf	?___lbdiv
  5064  0210  3064               	movlw	100
  5065  0211  00F0               	movwf	?___lbmod
  5066  0212  0851               	movf	fround@prec,w
  5067  0213  2326  120A  118A   	fcall	___lbmod
  5068  0216  230B               	fcall	___lbdiv
  5069  0217  120A  118A  264A   	fcall	___bmul
      +       120A  118A         
  5070  021C  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5071  021D  0084               	movwf	4
  5072  021E  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5073  0223  00AD               	movwf	?___ftmul
  5074  0224  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5075  0229  00AE               	movwf	?___ftmul+1
  5076  022A  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5077  022F  00AF               	movwf	?___ftmul+2
  5078  0230  3003               	movlw	3
  5079  0231  00F9               	movwf	?___bmul
  5080  0232  3064               	movlw	100
  5081  0233  00F5               	movwf	?___lbdiv
  5082  0234  0851               	movf	fround@prec,w
  5083  0235  230B               	fcall	___lbdiv
  5084  0236  120A  118A  264A   	fcall	___bmul
      +       120A  118A         
  5085  023B  3E37               	addlw	low ((__npowers_-__stringbase+54))
  5086  023C  0084               	movwf	4
  5087  023D  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5088  0242  00B0               	movwf	?___ftmul+3
  5089  0243  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5090  0248  00B1               	movwf	?___ftmul+4
  5091  0249  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5092  024E  00B2               	movwf	?___ftmul+5
  5093  024F  120A  118A  25DB   	fcall	___ftmul
      +       120A  118A         
  5094  0254  2351  120A  118A   	fcall	PL35	;call to abstracted procedure
  5095  0257  3003               	movlw	3
  5096  0258  00F9               	movwf	?___bmul
  5097  0259  300A               	movlw	10
  5098  025A  00F0               	movwf	?___lbmod
  5099  025B  0851               	movf	fround@prec,w
  5100  025C  2326               	fcall	___lbmod
  5101  025D  120A  118A  264A   	fcall	___bmul
      +       120A  118A         
  5102  0262  3E01               	addlw	low (__npowers_-__stringbase)
  5103  0263  0084               	movwf	4
  5104  0264  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5105  0269  00AD               	movwf	?___ftmul
  5106  026A  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5107  026F  00AE               	movwf	?___ftmul+1
  5108  0270  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5109  0275  2349               	fcall	PL27	;call to abstracted procedure
  5110  0276  120A  118A  25DB   	fcall	___ftmul
      +       120A  118A         
  5111  027B  082D               	movf	?___ftmul,w
  5112  027C  00CB               	movwf	_fround$2922
  5113  027D  082E               	movf	?___ftmul+1,w
  5114  027E  00CC               	movwf	_fround$2922+1
  5115  027F  082F               	movf	?___ftmul+2,w
  5116  0280  00CD               	movwf	_fround$2922+2
  5117  0281  303F               	movlw	63
  5118  0282  01AD               	clrf	?___ftmul
  5119  0283  01AE               	clrf	?___ftmul+1
  5120  0284  00AF               	movwf	?___ftmul+2
  5121  0285  084B               	movf	_fround$2922,w
  5122  0286  00B0               	movwf	?___ftmul+3
  5123  0287  084C               	movf	_fround$2922+1,w
  5124  0288  00B1               	movwf	?___ftmul+4
  5125  0289  084D               	movf	_fround$2922+2,w
  5126  028A  00B2               	movwf	?___ftmul+5
  5127  028B  120A  118A  25DB   	fcall	___ftmul
      +       120A  118A         
  5128  0290  2B42               	ljmp	PL20	;call to abstracted procedure
  5129  0291                     l5858:	
  5130  0291  300B               	movlw	11
  5131  0292  0251               	subwf	fround@prec,w
  5132  0293  1C03               	skipc
  5133  0294  2AE5               	goto	l5866
  5134  0295  3003               	movlw	3
  5135  0296  00F9               	movwf	?___bmul
  5136  0297  300A               	movlw	10
  5137  0298  00F0               	movwf	?___lbmod
  5138  0299  0851               	movf	fround@prec,w
  5139  029A  2326               	fcall	___lbmod
  5140  029B  120A  118A  264A   	fcall	___bmul
      +       120A  118A         
  5141  02A0  3E01               	addlw	low (__npowers_-__stringbase)
  5142  02A1  0084               	movwf	4
  5143  02A2  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5144  02A7  00AD               	movwf	?___ftmul
  5145  02A8  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5146  02AD  00AE               	movwf	?___ftmul+1
  5147  02AE  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5148  02B3  00AF               	movwf	?___ftmul+2
  5149  02B4  3003               	movlw	3
  5150  02B5  00F9               	movwf	?___bmul
  5151  02B6  300A               	movlw	10
  5152  02B7  00F5               	movwf	?___lbdiv
  5153  02B8  0851               	movf	fround@prec,w
  5154  02B9  230B               	fcall	___lbdiv
  5155  02BA  120A  118A  264A   	fcall	___bmul
      +       120A  118A         
  5156  02BF  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5157  02C0  0084               	movwf	4
  5158  02C1  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5159  02C6  00B0               	movwf	?___ftmul+3
  5160  02C7  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5161  02CC  00B1               	movwf	?___ftmul+4
  5162  02CD  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5163  02D2  00B2               	movwf	?___ftmul+5
  5164  02D3  120A  118A  25DB   	fcall	___ftmul
      +       120A  118A         
  5165  02D8  2351  120A  118A   	fcall	PL35	;call to abstracted procedure
  5166  02DB  303F               	movlw	63
  5167  02DC  01AD               	clrf	?___ftmul
  5168  02DD  01AE               	clrf	?___ftmul+1
  5169  02DE  2349               	fcall	PL27	;call to abstracted procedure
  5170  02DF  120A  118A  25DB   	fcall	___ftmul
      +       120A  118A         
  5171  02E4  2B42               	ljmp	PL20	;call to abstracted procedure
  5172  02E5                     l5866:	
  5173  02E5  303F               	movlw	63
  5174  02E6  01AD               	clrf	?___ftmul
  5175  02E7  01AE               	clrf	?___ftmul+1
  5176  02E8  00AF               	movwf	?___ftmul+2
  5177  02E9  3003               	movlw	3
  5178  02EA  00F9               	movwf	?___bmul
  5179  02EB  0851               	movf	fround@prec,w
  5180  02EC  120A  118A  264A   	fcall	___bmul
      +       120A  118A         
  5181  02F1  3E01               	addlw	low (__npowers_-__stringbase)
  5182  02F2  0084               	movwf	4
  5183  02F3  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5184  02F8  00B0               	movwf	?___ftmul+3
  5185  02F9  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5186  02FE  00B1               	movwf	?___ftmul+4
  5187  02FF  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5188  0304  00B2               	movwf	?___ftmul+5
  5189  0305  120A  118A  25DB   	fcall	___ftmul
      +       120A  118A         
  5190  030A  2B42               	ljmp	PL20	;call to abstracted procedure
  5191  030B                     __end_of_fround:	
  5192  030B                     __ptext654:	
  5193 ;; =============== function ___lbmod ends ============
  5194                           
  5195                           
  5196 ;; *************** function ___lbdiv *****************
  5197 ;; Defined at:
  5198 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lbdiv.c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;  dividend        1    wreg     unsigned char 
  5201 ;;  divisor         1    5[COMMON] unsigned char 
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;  dividend        1    6[COMMON] unsigned char 
  5204 ;;  quotient        1    8[COMMON] unsigned char 
  5205 ;;  counter         1    7[COMMON] unsigned char 
  5206 ;; Return value:  Size  Location     Type
  5207 ;;                  1    wreg      unsigned char 
  5208 ;; Registers used:
  5209 ;;		wreg, status,2, status,0
  5210 ;; Tracked objects:
  5211 ;;		On entry : 160/0
  5212 ;;		On exit  : 160/0
  5213 ;;		Unchanged: FFE9F/0
  5214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5215 ;;      Params:         1       0       0       0       0
  5216 ;;      Locals:         3       0       0       0       0
  5217 ;;      Temps:          0       0       0       0       0
  5218 ;;      Totals:         4       0       0       0       0
  5219 ;;Total ram usage:        4 bytes
  5220 ;; Hardware stack levels used:    1
  5221 ;; This function calls:
  5222 ;;		Nothing
  5223 ;; This function is called by:
  5224 ;;		_fround
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227  030B                     ___lbdiv:	
  5228                           
  5229                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  5230                           ;___lbdiv@dividend stored from wreg
  5231  030B  00F6               	movwf	___lbdiv@dividend
  5232  030C  01F8               	clrf	___lbdiv@quotient
  5233  030D  0875               	movf	___lbdiv@divisor,w
  5234  030E  1903               	btfsc	3,2
  5235  030F  2B24               	goto	l5404
  5236  0310  01F7               	clrf	___lbdiv@counter
  5237  0311                     l5390:	
  5238  0311  0AF7               	incf	___lbdiv@counter,f
  5239  0312  1BF5               	btfsc	___lbdiv@divisor,7
  5240  0313  2B17               	goto	l2294
  5241  0314  1003               	clrc
  5242  0315  0DF5               	rlf	___lbdiv@divisor,f
  5243  0316  2B11               	goto	l5390
  5244  0317                     l2294:	
  5245  0317  1003               	clrc
  5246  0318  0DF8               	rlf	___lbdiv@quotient,f
  5247  0319  0875               	movf	___lbdiv@divisor,w
  5248  031A  0276               	subwf	___lbdiv@dividend,w
  5249  031B  1C03               	skipc
  5250  031C  2B21               	goto	L21
  5251  031D  0875               	movf	___lbdiv@divisor,w
  5252  031E  02F6               	subwf	___lbdiv@dividend,f
  5253  031F  1478               	bsf	___lbdiv@quotient,0
  5254  0320  1003               	clrc
  5255  0321                     L21:	
  5256  0321  0CF5               	rrf	___lbdiv@divisor,f
  5257  0322  0BF7               	decfsz	___lbdiv@counter,f
  5258  0323  2B17               	goto	l2294
  5259  0324                     l5404:	
  5260  0324  0878               	movf	___lbdiv@quotient,w
  5261  0325  0008               	return
  5262  0326                     __end_of___lbdiv:	
  5263  0326                     __ptext653:	
  5264 ;; =============== function ___ftpack ends ============
  5265                           
  5266                           
  5267 ;; *************** function ___lbmod *****************
  5268 ;; Defined at:
  5269 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lbmod.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;  dividend        1    wreg     unsigned char 
  5272 ;;  divisor         1    0[COMMON] unsigned char 
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;  dividend        1    2[COMMON] unsigned char 
  5275 ;;  rem             1    4[COMMON] unsigned char 
  5276 ;;  counter         1    3[COMMON] unsigned char 
  5277 ;; Return value:  Size  Location     Type
  5278 ;;                  1    wreg      unsigned char 
  5279 ;; Registers used:
  5280 ;;		wreg, status,2, status,0
  5281 ;; Tracked objects:
  5282 ;;		On entry : 160/0
  5283 ;;		On exit  : 160/0
  5284 ;;		Unchanged: FFE9F/0
  5285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5286 ;;      Params:         1       0       0       0       0
  5287 ;;      Locals:         3       0       0       0       0
  5288 ;;      Temps:          1       0       0       0       0
  5289 ;;      Totals:         5       0       0       0       0
  5290 ;;Total ram usage:        5 bytes
  5291 ;; Hardware stack levels used:    1
  5292 ;; This function calls:
  5293 ;;		Nothing
  5294 ;; This function is called by:
  5295 ;;		_fround
  5296 ;; This function uses a non-reentrant model
  5297 ;;
  5298  0326                     ___lbmod:	
  5299                           
  5300                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  5301                           ;___lbmod@dividend stored from wreg
  5302  0326  00F2               	movwf	___lbmod@dividend
  5303  0327  3008               	movlw	8
  5304  0328  00F3               	movwf	___lbmod@counter
  5305  0329  01F4               	clrf	___lbmod@rem
  5306  032A                     l5412:	
  5307  032A  0872               	movf	___lbmod@dividend,w
  5308  032B  00F1               	movwf	??___lbmod
  5309  032C  3007               	movlw	7
  5310  032D  1003               	clrc
  5311  032E                     L20:	
  5312  032E  0CF1               	rrf	??___lbmod,f
  5313  032F  3EFF               	addlw	-1
  5314  0330  1003               	clrc
  5315  0331  1D03               	skipz
  5316  0332  2B2E               	goto	L20
  5317  0333  0D74               	rlf	___lbmod@rem,w
  5318  0334  0471               	iorwf	??___lbmod,w
  5319  0335  00F4               	movwf	___lbmod@rem
  5320  0336  1003               	clrc
  5321  0337  0DF2               	rlf	___lbmod@dividend,f
  5322  0338  0870               	movf	___lbmod@divisor,w
  5323  0339  0274               	subwf	___lbmod@rem,w
  5324  033A  1C03               	skipc
  5325  033B  2B3E               	goto	l5420
  5326  033C  0870               	movf	___lbmod@divisor,w
  5327  033D  02F4               	subwf	___lbmod@rem,f
  5328  033E                     l5420:	
  5329  033E  0BF3               	decfsz	___lbmod@counter,f
  5330  033F  2B2A               	goto	l5412
  5331  0340  0874               	movf	___lbmod@rem,w
  5332  0341  0008               	return
  5333  0342                     __end_of___lbmod:	
  5334  0342                     PL20:	
  5335  0342  082D               	movf	?___ftmul,w
  5336  0343  00C8               	movwf	?_fround
  5337  0344  082E               	movf	?___ftmul+1,w
  5338  0345  00C9               	movwf	?_fround+1
  5339  0346  082F               	movf	?___ftmul+2,w
  5340  0347  00CA               	movwf	?_fround+2
  5341  0348  0008               	return
  5342  0349                     PL27:	
  5343  0349  00AF               	movwf	?___ftmul+2
  5344  034A  084E               	movf	_fround$2921,w
  5345  034B  00B0               	movwf	?___ftmul+3
  5346  034C  084F               	movf	_fround$2921+1,w
  5347  034D  00B1               	movwf	?___ftmul+4
  5348  034E  0850               	movf	_fround$2921+2,w
  5349  034F  00B2               	movwf	?___ftmul+5
  5350  0350  0008               	return
  5351  0351                     PL35:	
  5352  0351  082D               	movf	?___ftmul,w
  5353  0352  00CE               	movwf	_fround$2921
  5354  0353  082E               	movf	?___ftmul+1,w
  5355  0354  00CF               	movwf	_fround$2921+1
  5356  0355  082F               	movf	?___ftmul+2,w
  5357  0356  00D0               	movwf	_fround$2921+2
  5358  0357  0008               	return
  5359                           
  5360                           	psect	text640
  5361  0358                     __ptext640:	
  5362 ;; =============== function _distance ends ============
  5363                           
  5364                           
  5365 ;; *************** function ___lltoft *****************
  5366 ;; Defined at:
  5367 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lltoft.c"
  5368 ;; Parameters:    Size  Location     Type
  5369 ;;  c               4    8[COMMON] unsigned long 
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;  exp             1   12[COMMON] unsigned char 
  5372 ;; Return value:  Size  Location     Type
  5373 ;;                  3    8[COMMON] float 
  5374 ;; Registers used:
  5375 ;;		wreg, status,2, status,0, pclath, cstack
  5376 ;; Tracked objects:
  5377 ;;		On entry : 60/20
  5378 ;;		On exit  : 60/20
  5379 ;;		Unchanged: FFF9F/0
  5380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5381 ;;      Params:         4       0       0       0       0
  5382 ;;      Locals:         1       0       0       0       0
  5383 ;;      Temps:          0       0       0       0       0
  5384 ;;      Totals:         5       0       0       0       0
  5385 ;;Total ram usage:        5 bytes
  5386 ;; Hardware stack levels used:    1
  5387 ;; Hardware stack levels required when called:    1
  5388 ;; This function calls:
  5389 ;;		___ftpack
  5390 ;; This function is called by:
  5391 ;;		__doprnt
  5392 ;; This function uses a non-reentrant model
  5393 ;;
  5394  0358                     ___lltoft:	
  5395                           
  5396                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5397  0358  308E               	movlw	142
  5398  0359  00FC               	movwf	___lltoft@exp
  5399  035A                     l5804:	
  5400  035A  30FF               	movlw	255
  5401  035B  057B               	andwf	___lltoft@c+3,w
  5402  035C  1903               	btfsc	3,2
  5403  035D  2B65               	goto	l5806
  5404  035E  1003               	clrc
  5405  035F  0CFB               	rrf	___lltoft@c+3,f
  5406  0360  0CFA               	rrf	___lltoft@c+2,f
  5407  0361  0CF9               	rrf	___lltoft@c+1,f
  5408  0362  0CF8               	rrf	___lltoft@c,f
  5409  0363  0AFC               	incf	___lltoft@exp,f
  5410  0364  2B5A               	goto	l5804
  5411  0365                     l5806:	
  5412  0365  0878               	movf	___lltoft@c,w
  5413  0366  00F0               	movwf	?___ftpack
  5414  0367  0879               	movf	___lltoft@c+1,w
  5415  0368  00F1               	movwf	?___ftpack+1
  5416  0369  087A               	movf	___lltoft@c+2,w
  5417  036A  00F2               	movwf	?___ftpack+2
  5418  036B  087C               	movf	___lltoft@exp,w
  5419  036C  00F3               	movwf	?___ftpack+3
  5420  036D  01F4               	clrf	?___ftpack+4
  5421  036E  2658               	fcall	___ftpack
  5422  036F  0870               	movf	?___ftpack,w
  5423  0370  00F8               	movwf	?___lltoft
  5424  0371  0871               	movf	?___ftpack+1,w
  5425  0372  00F9               	movwf	?___lltoft+1
  5426  0373  0872               	movf	?___ftpack+2,w
  5427  0374  00FA               	movwf	?___lltoft+2
  5428  0375  0008               	return
  5429  0376                     __end_of___lltoft:	
  5430  0376                     __ptext639:	
  5431 ;; =============== function _lcd_write ends ============
  5432                           
  5433                           
  5434 ;; *************** function _distance *****************
  5435 ;; Defined at:
  5436 ;;		line 89 in file "C:\Users\Jorge\OneDrive\Escritorio\SRPROG\SRPROG.c"
  5437 ;; Parameters:    Size  Location     Type
  5438 ;;  ticks           1    wreg     PTR float 
  5439 ;;		 -> dist(2), 
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;  ticks           1    0[BANK0 ] PTR float 
  5442 ;;		 -> dist(2), 
  5443 ;; Return value:  Size  Location     Type
  5444 ;;                  2   12[COMMON] unsigned int 
  5445 ;; Registers used:
  5446 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5447 ;; Tracked objects:
  5448 ;;		On entry : 60/0
  5449 ;;		On exit  : 160/0
  5450 ;;		Unchanged: FFE9F/0
  5451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5452 ;;      Params:         2       0       0       0       0
  5453 ;;      Locals:         0       1       0       0       0
  5454 ;;      Temps:          0       0       0       0       0
  5455 ;;      Totals:         2       1       0       0       0
  5456 ;;Total ram usage:        3 bytes
  5457 ;; Hardware stack levels used:    1
  5458 ;; Hardware stack levels required when called:    2
  5459 ;; This function calls:
  5460 ;;		___awtoft
  5461 ;;		___ftge
  5462 ;; This function is called by:
  5463 ;;		_main
  5464 ;; This function uses a non-reentrant model
  5465 ;;
  5466  0376                     _distance:	
  5467                           
  5468                           ; Regs used in _distance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5469                           ;distance@ticks stored from wreg
  5470  0376  00A0               	movwf	distance@ticks
  5471                           
  5472                           ;SRPROG.c: 91: *ticks=0;
  5473  0377  0084               	movwf	4
  5474  0378  1383               	bcf	3,7	;select IRP bank0
  5475  0379  0180               	clrf	0
  5476  037A  0A84               	incf	4,f
  5477  037B  0180               	clrf	0
  5478  037C  0A84               	incf	4,f
  5479  037D  0180               	clrf	0
  5480                           
  5481                           ;SRPROG.c: 92: TMR1H=0;
  5482  037E  018F               	clrf	15	;volatile
  5483                           
  5484                           ;SRPROG.c: 93: TMR1L=0;
  5485  037F  018E               	clrf	14	;volatile
  5486                           
  5487                           ;SRPROG.c: 95: while(RB0 && (*ticks < 23200)){
  5488  0380  2B9B               	goto	l5818
  5489  0381                     l5820:	
  5490  0381  2696               	fcall	PL9	;call to abstracted procedure
  5491  0382  120A  158A  2690   	fcall	___ftge
      +       120A  118A         
  5492  0387  1803               	btfsc	3,0
  5493  0388  2B9D               	goto	l1078
  5494                           
  5495                           ;SRPROG.c: 96: *ticks=(TMR1H<<8)|TMR1L;
  5496  0389  080F               	movf	15,w	;volatile
  5497  038A  00F9               	movwf	?___awtoft+1
  5498  038B  01F8               	clrf	?___awtoft
  5499  038C  080E               	movf	14,w	;volatile
  5500  038D  04F8               	iorwf	?___awtoft,f
  5501  038E  23AC  120A  118A   	fcall	___awtoft
  5502  0391  0820               	movf	distance@ticks,w
  5503  0392  0084               	movwf	4
  5504  0393  0878               	movf	?___awtoft,w
  5505  0394  0080               	movwf	0
  5506  0395  0A84               	incf	4,f
  5507  0396  0879               	movf	?___awtoft+1,w
  5508  0397  0080               	movwf	0
  5509  0398  0A84               	incf	4,f
  5510  0399  087A               	movf	?___awtoft+2,w
  5511  039A  0080               	movwf	0
  5512  039B                     l5818:	
  5513  039B  1806               	btfsc	6,0
  5514  039C  2B81               	goto	l5820
  5515  039D                     l1078:	
  5516                           
  5517                           ;SRPROG.c: 97: }
  5518                           ;SRPROG.c: 99: TMR1ON=0;
  5519  039D  1010               	bcf	16,0
  5520                           
  5521                           ;SRPROG.c: 101: if(*ticks >= 23200){
  5522  039E  2696               	fcall	PL9	;call to abstracted procedure
  5523  039F  120A  158A  2690   	fcall	___ftge
      +       120A  118A         
  5524                           
  5525                           ;SRPROG.c: 102: return 1;
  5526  03A4  01FC               	clrf	?_distance
  5527  03A5  1C03               	btfss	3,0
  5528  03A6  2BAA               	goto	L9
  5529  03A7  0AFC               	incf	?_distance,f
  5530  03A8  01FD               	clrf	?_distance+1
  5531  03A9  0008               	return
  5532  03AA                     L9:	
  5533                           ;SRPROG.c: 104: return 0;
  5534                           
  5535  03AA  01FD               	clrf	?_distance+1
  5536  03AB  0008               	return
  5537  03AC                     __end_of_distance:	
  5538  03AC                     __ptext641:	
  5539 ;; =============== function ___lltoft ends ============
  5540                           
  5541                           
  5542 ;; *************** function ___awtoft *****************
  5543 ;; Defined at:
  5544 ;;		line 33 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awtoft.c"
  5545 ;; Parameters:    Size  Location     Type
  5546 ;;  c               2    8[COMMON] int 
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;  sign            1   11[COMMON] unsigned char 
  5549 ;; Return value:  Size  Location     Type
  5550 ;;                  3    8[COMMON] float 
  5551 ;; Registers used:
  5552 ;;		wreg, status,2, status,0, pclath, cstack
  5553 ;; Tracked objects:
  5554 ;;		On entry : 60/0
  5555 ;;		On exit  : 160/0
  5556 ;;		Unchanged: FFE9F/0
  5557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5558 ;;      Params:         3       0       0       0       0
  5559 ;;      Locals:         1       0       0       0       0
  5560 ;;      Temps:          0       0       0       0       0
  5561 ;;      Totals:         4       0       0       0       0
  5562 ;;Total ram usage:        4 bytes
  5563 ;; Hardware stack levels used:    1
  5564 ;; Hardware stack levels required when called:    1
  5565 ;; This function calls:
  5566 ;;		___ftpack
  5567 ;; This function is called by:
  5568 ;;		_distance
  5569 ;; This function uses a non-reentrant model
  5570 ;;
  5571  03AC                     ___awtoft:	
  5572                           
  5573                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5574  03AC  01FB               	clrf	___awtoft@sign
  5575  03AD  1FF9               	btfss	___awtoft@c+1,7
  5576  03AE  2BB6               	goto	l5796
  5577  03AF  09F8               	comf	___awtoft@c,f
  5578  03B0  09F9               	comf	___awtoft@c+1,f
  5579  03B1  0AF8               	incf	___awtoft@c,f
  5580  03B2  1903               	skipnz
  5581  03B3  0AF9               	incf	___awtoft@c+1,f
  5582  03B4  01FB               	clrf	___awtoft@sign
  5583  03B5  0AFB               	incf	___awtoft@sign,f
  5584  03B6                     l5796:	
  5585  03B6  0878               	movf	___awtoft@c,w
  5586  03B7  00F0               	movwf	?___ftpack
  5587  03B8  0879               	movf	___awtoft@c+1,w
  5588  03B9  00F1               	movwf	?___ftpack+1
  5589  03BA  308E               	movlw	142
  5590  03BB  01F2               	clrf	?___ftpack+2
  5591  03BC  00F3               	movwf	?___ftpack+3
  5592  03BD  087B               	movf	___awtoft@sign,w
  5593  03BE  00F4               	movwf	?___ftpack+4
  5594  03BF  2658               	fcall	___ftpack
  5595  03C0  0870               	movf	?___ftpack,w
  5596  03C1  00F8               	movwf	?___awtoft
  5597  03C2  0871               	movf	?___ftpack+1,w
  5598  03C3  00F9               	movwf	?___awtoft+1
  5599  03C4  0872               	movf	?___ftpack+2,w
  5600  03C5  00FA               	movwf	?___awtoft+2
  5601  03C6  0008               	return
  5602  03C7                     __end_of___awtoft:	
  5603  03C7                     __ptext636:	
  5604 ;; =============== function ___ftsub ends ============
  5605                           
  5606                           
  5607 ;; *************** function _scale *****************
  5608 ;; Defined at:
  5609 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;  scl             1    wreg     char 
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;  scl             1   38[BANK0 ] char 
  5614 ;; Return value:  Size  Location     Type
  5615 ;;                  3   28[BANK0 ] char 
  5616 ;; Registers used:
  5617 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5618 ;; Tracked objects:
  5619 ;;		On entry : 60/20
  5620 ;;		On exit  : 60/0
  5621 ;;		Unchanged: FFF9F/0
  5622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5623 ;;      Params:         0       3       0       0       0
  5624 ;;      Locals:         0       4       0       0       0
  5625 ;;      Temps:          0       4       0       0       0
  5626 ;;      Totals:         0      11       0       0       0
  5627 ;;Total ram usage:       11 bytes
  5628 ;; Hardware stack levels used:    1
  5629 ;; Hardware stack levels required when called:    2
  5630 ;; This function calls:
  5631 ;;		___awmod
  5632 ;;		___awdiv
  5633 ;;		___ftmul
  5634 ;;		___bmul
  5635 ;; This function is called by:
  5636 ;;		__doprnt
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639  03C7                     _scale:	
  5640                           
  5641                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5642                           ;scale@scl stored from wreg
  5643  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  5644  03C8  00C6               	movwf	scale@scl
  5645  03C9  1FC6               	btfss	scale@scl,7
  5646  03CA  2C93               	goto	l5892
  5647  03CB  09C6               	comf	scale@scl,f
  5648  03CC  0AC6               	incf	scale@scl,f
  5649  03CD  0846               	movf	scale@scl,w
  5650  03CE  3A80               	xorlw	128
  5651  03CF  3E12               	addlw	-238
  5652  03D0  1C03               	skipc
  5653  03D1  2C37               	goto	l5882
  5654  03D2  300A               	movlw	10
  5655  03D3  26CB  120A  118A   	fcall	PL16	;call to abstracted procedure
  5656  03D6  259E  120A  118A   	fcall	___awmod
  5657  03D9  0871               	movf	?___awmod+1,w
  5658  03DA  00F9               	movwf	?___awdiv+3
  5659  03DB  0870               	movf	?___awmod,w
  5660  03DC  00F8               	movwf	?___awdiv+2
  5661  03DD  2559  120A  118A   	fcall	___awdiv
  5662  03E0  26E8               	fcall	PL25	;call to abstracted procedure
  5663  03E1  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5664  03E2  0084               	movwf	4
  5665  03E3  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5666  03E8  00AD               	movwf	?___ftmul
  5667  03E9  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5668  03EE  00AE               	movwf	?___ftmul+1
  5669  03EF  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5670  03F4  26F8  120A  118A   	fcall	PL28	;call to abstracted procedure
  5671  03F7  1BF8               	btfsc	?___awdiv+2,7
  5672  03F8  03F9               	decf	?___awdiv+3,f
  5673  03F9  2559  120A  118A   	fcall	___awdiv
  5674  03FC  26BC               	fcall	PL13	;call to abstracted procedure
  5675  03FD  3E37               	addlw	low ((__npowers_-__stringbase+54))
  5676  03FE  0084               	movwf	4
  5677  03FF  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5678  0404  00B0               	movwf	?___ftmul+3
  5679  0405  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5680  040A  00B1               	movwf	?___ftmul+4
  5681  040B  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5682  0410  00B2               	movwf	?___ftmul+5
  5683  0411  25DB  120A  118A   	fcall	___ftmul
  5684  0414  26A7  120A  118A   	fcall	PL11	;call to abstracted procedure
  5685  0417  1BF2               	btfsc	?___awmod+2,7
  5686  0418  03F3               	decf	?___awmod+3,f
  5687  0419  259E  120A  118A   	fcall	___awmod
  5688  041C  26B4               	fcall	PL12	;call to abstracted procedure
  5689  041D  3E01               	addlw	low (__npowers_-__stringbase)
  5690  041E  0084               	movwf	4
  5691  041F  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5692  0424  00AD               	movwf	?___ftmul
  5693  0425  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5694  042A  00AE               	movwf	?___ftmul+1
  5695  042B  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5696  0430  26F0  120A  118A   	fcall	PL26	;call to abstracted procedure
  5697  0433  25DB  120A  118A   	fcall	___ftmul
  5698  0436  2EC4               	ljmp	PL14	;call to abstracted procedure
  5699  0437                     l5882:	
  5700  0437  0846               	movf	scale@scl,w
  5701  0438  3A80               	xorlw	128
  5702  0439  3E75               	addlw	-139
  5703  043A  1C03               	skipc
  5704  043B  2C7C               	goto	l5888
  5705  043C  300A               	movlw	10
  5706  043D  00F0               	movwf	?___awmod
  5707  043E  01F1               	clrf	?___awmod+1
  5708  043F  0846               	movf	scale@scl,w
  5709  0440  00F2               	movwf	?___awmod+2
  5710  0441  01F3               	clrf	?___awmod+3
  5711  0442  1BF2               	btfsc	?___awmod+2,7
  5712  0443  03F3               	decf	?___awmod+3,f
  5713  0444  259E  120A  118A   	fcall	___awmod
  5714  0447  26B4               	fcall	PL12	;call to abstracted procedure
  5715  0448  3E01               	addlw	low (__npowers_-__stringbase)
  5716  0449  0084               	movwf	4
  5717  044A  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5718  044F  00AD               	movwf	?___ftmul
  5719  0450  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5720  0455  00AE               	movwf	?___ftmul+1
  5721  0456  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5722  045B  26E0  120A  118A   	fcall	PL24	;call to abstracted procedure
  5723  045E  1BF8               	btfsc	?___awdiv+2,7
  5724  045F  03F9               	decf	?___awdiv+3,f
  5725  0460  2559  120A  118A   	fcall	___awdiv
  5726  0463  26BC               	fcall	PL13	;call to abstracted procedure
  5727  0464  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5728  0465  0084               	movwf	4
  5729  0466  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5730  046B  00B0               	movwf	?___ftmul+3
  5731  046C  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5732  0471  00B1               	movwf	?___ftmul+4
  5733  0472  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5734  0477  00B2               	movwf	?___ftmul+5
  5735  0478  25DB  120A  118A   	fcall	___ftmul
  5736  047B  2EC4               	ljmp	PL14	;call to abstracted procedure
  5737  047C                     l5888:	
  5738  047C  3003               	movlw	3
  5739  047D  00F9               	movwf	?___bmul
  5740  047E  0846               	movf	scale@scl,w
  5741  047F  264A               	fcall	___bmul
  5742  0480  3E01               	addlw	low (__npowers_-__stringbase)
  5743  0481  0084               	movwf	4
  5744  0482  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5745  0487  00BC               	movwf	?_scale
  5746  0488  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5747  048D  00BD               	movwf	?_scale+1
  5748  048E  160A  118A  200A   	fcall	stringdir
  5749  0491  00BE               	movwf	?_scale+2
  5750  0492  0008               	return
  5751  0493                     l5892:	
  5752  0493  0846               	movf	scale@scl,w
  5753  0494  3A80               	xorlw	128
  5754  0495  3E12               	addlw	-238
  5755  0496  1C03               	skipc
  5756  0497  2CFD               	goto	l5900
  5757  0498  300A               	movlw	10
  5758  0499  26CB  120A  118A   	fcall	PL16	;call to abstracted procedure
  5759  049C  259E  120A  118A   	fcall	___awmod
  5760  049F  0871               	movf	?___awmod+1,w
  5761  04A0  00F9               	movwf	?___awdiv+3
  5762  04A1  0870               	movf	?___awmod,w
  5763  04A2  00F8               	movwf	?___awdiv+2
  5764  04A3  2559  120A  118A   	fcall	___awdiv
  5765  04A6  26E8               	fcall	PL25	;call to abstracted procedure
  5766  04A7  3E43               	addlw	low ((__powers_-__stringbase+27))
  5767  04A8  0084               	movwf	4
  5768  04A9  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5769  04AE  00AD               	movwf	?___ftmul
  5770  04AF  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5771  04B4  00AE               	movwf	?___ftmul+1
  5772  04B5  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5773  04BA  26F8  120A  118A   	fcall	PL28	;call to abstracted procedure
  5774  04BD  1BF8               	btfsc	?___awdiv+2,7
  5775  04BE  03F9               	decf	?___awdiv+3,f
  5776  04BF  2559  120A  118A   	fcall	___awdiv
  5777  04C2  26BC               	fcall	PL13	;call to abstracted procedure
  5778  04C3  3E5E               	addlw	low ((__powers_-__stringbase+54))
  5779  04C4  0084               	movwf	4
  5780  04C5  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5781  04CA  00B0               	movwf	?___ftmul+3
  5782  04CB  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5783  04D0  00B1               	movwf	?___ftmul+4
  5784  04D1  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5785  04D6  00B2               	movwf	?___ftmul+5
  5786  04D7  25DB  120A  118A   	fcall	___ftmul
  5787  04DA  26A7  120A  118A   	fcall	PL11	;call to abstracted procedure
  5788  04DD  1BF2               	btfsc	?___awmod+2,7
  5789  04DE  03F3               	decf	?___awmod+3,f
  5790  04DF  259E  120A  118A   	fcall	___awmod
  5791  04E2  26B4               	fcall	PL12	;call to abstracted procedure
  5792  04E3  3E28               	addlw	low (__powers_-__stringbase)
  5793  04E4  0084               	movwf	4
  5794  04E5  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5795  04EA  00AD               	movwf	?___ftmul
  5796  04EB  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5797  04F0  00AE               	movwf	?___ftmul+1
  5798  04F1  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5799  04F6  26F0  120A  118A   	fcall	PL26	;call to abstracted procedure
  5800  04F9  25DB  120A  118A   	fcall	___ftmul
  5801  04FC  2EC4               	ljmp	PL14	;call to abstracted procedure
  5802  04FD                     l5900:	
  5803  04FD  0846               	movf	scale@scl,w
  5804  04FE  3A80               	xorlw	128
  5805  04FF  3E75               	addlw	-139
  5806  0500  1C03               	skipc
  5807  0501  2D42               	goto	l5906
  5808  0502  300A               	movlw	10
  5809  0503  00F0               	movwf	?___awmod
  5810  0504  01F1               	clrf	?___awmod+1
  5811  0505  0846               	movf	scale@scl,w
  5812  0506  00F2               	movwf	?___awmod+2
  5813  0507  01F3               	clrf	?___awmod+3
  5814  0508  1BF2               	btfsc	?___awmod+2,7
  5815  0509  03F3               	decf	?___awmod+3,f
  5816  050A  259E  120A  118A   	fcall	___awmod
  5817  050D  26B4               	fcall	PL12	;call to abstracted procedure
  5818  050E  3E28               	addlw	low (__powers_-__stringbase)
  5819  050F  0084               	movwf	4
  5820  0510  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5821  0515  00AD               	movwf	?___ftmul
  5822  0516  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5823  051B  00AE               	movwf	?___ftmul+1
  5824  051C  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5825  0521  26E0  120A  118A   	fcall	PL24	;call to abstracted procedure
  5826  0524  1BF8               	btfsc	?___awdiv+2,7
  5827  0525  03F9               	decf	?___awdiv+3,f
  5828  0526  2559  120A  118A   	fcall	___awdiv
  5829  0529  26BC               	fcall	PL13	;call to abstracted procedure
  5830  052A  3E43               	addlw	low ((__powers_-__stringbase+27))
  5831  052B  0084               	movwf	4
  5832  052C  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5833  0531  00B0               	movwf	?___ftmul+3
  5834  0532  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5835  0537  00B1               	movwf	?___ftmul+4
  5836  0538  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5837  053D  00B2               	movwf	?___ftmul+5
  5838  053E  25DB  120A  118A   	fcall	___ftmul
  5839  0541  2EC4               	ljmp	PL14	;call to abstracted procedure
  5840  0542                     l5906:	
  5841  0542  3003               	movlw	3
  5842  0543  00F9               	movwf	?___bmul
  5843  0544  0846               	movf	scale@scl,w
  5844  0545  264A               	fcall	___bmul
  5845  0546  3E28               	addlw	low (__powers_-__stringbase)
  5846  0547  0084               	movwf	4
  5847  0548  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5848  054D  00BC               	movwf	?_scale
  5849  054E  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  5850  0553  00BD               	movwf	?_scale+1
  5851  0554  160A  118A  200A   	fcall	stringdir
  5852  0557  00BE               	movwf	?_scale+2
  5853  0558  0008               	return
  5854  0559                     __end_of_scale:	
  5855  0559                     __ptext650:	
  5856 ;; =============== function ___llmod ends ============
  5857                           
  5858                           
  5859 ;; *************** function ___awdiv *****************
  5860 ;; Defined at:
  5861 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awdiv.c"
  5862 ;; Parameters:    Size  Location     Type
  5863 ;;  divisor         2    6[COMMON] int 
  5864 ;;  dividend        2    8[COMMON] int 
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;  quotient        2   12[COMMON] int 
  5867 ;;  sign            1   11[COMMON] unsigned char 
  5868 ;;  counter         1   10[COMMON] unsigned char 
  5869 ;; Return value:  Size  Location     Type
  5870 ;;                  2    6[COMMON] int 
  5871 ;; Registers used:
  5872 ;;		wreg, status,2, status,0
  5873 ;; Tracked objects:
  5874 ;;		On entry : 40/20
  5875 ;;		On exit  : 40/20
  5876 ;;		Unchanged: FFFBF/0
  5877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5878 ;;      Params:         4       0       0       0       0
  5879 ;;      Locals:         4       0       0       0       0
  5880 ;;      Temps:          0       0       0       0       0
  5881 ;;      Totals:         8       0       0       0       0
  5882 ;;Total ram usage:        8 bytes
  5883 ;; Hardware stack levels used:    1
  5884 ;; This function calls:
  5885 ;;		Nothing
  5886 ;; This function is called by:
  5887 ;;		_scale
  5888 ;;		__doprnt
  5889 ;; This function uses a non-reentrant model
  5890 ;;
  5891  0559                     ___awdiv:	
  5892                           
  5893                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5894  0559  01FB               	clrf	___awdiv@sign
  5895  055A  1FF7               	btfss	___awdiv@divisor+1,7
  5896  055B  2D63               	goto	l5500
  5897  055C  09F6               	comf	___awdiv@divisor,f
  5898  055D  09F7               	comf	___awdiv@divisor+1,f
  5899  055E  0AF6               	incf	___awdiv@divisor,f
  5900  055F  1903               	skipnz
  5901  0560  0AF7               	incf	___awdiv@divisor+1,f
  5902  0561  01FB               	clrf	___awdiv@sign
  5903  0562  0AFB               	incf	___awdiv@sign,f
  5904  0563                     l5500:	
  5905  0563  1FF9               	btfss	___awdiv@dividend+1,7
  5906  0564  2D6C               	goto	l5506
  5907  0565  09F8               	comf	___awdiv@dividend,f
  5908  0566  09F9               	comf	___awdiv@dividend+1,f
  5909  0567  0AF8               	incf	___awdiv@dividend,f
  5910  0568  1903               	skipnz
  5911  0569  0AF9               	incf	___awdiv@dividend+1,f
  5912  056A  3001               	movlw	1
  5913  056B  06FB               	xorwf	___awdiv@sign,f
  5914  056C                     l5506:	
  5915  056C  01FC               	clrf	___awdiv@quotient
  5916  056D  01FD               	clrf	___awdiv@quotient+1
  5917  056E  0877               	movf	___awdiv@divisor+1,w
  5918  056F  0476               	iorwf	___awdiv@divisor,w
  5919  0570  1903               	skipnz
  5920  0571  2D91               	goto	l5528
  5921  0572  01FA               	clrf	___awdiv@counter
  5922  0573                     L18:	
  5923  0573  0AFA               	incf	___awdiv@counter,f
  5924  0574  1BF7               	btfsc	___awdiv@divisor+1,7
  5925  0575  2D7A               	goto	l5516
  5926  0576  1003               	clrc
  5927  0577  0DF6               	rlf	___awdiv@divisor,f
  5928  0578  0DF7               	rlf	___awdiv@divisor+1,f
  5929  0579  2D73               	goto	L18
  5930  057A                     l5516:	
  5931  057A  1003               	clrc
  5932  057B  0DFC               	rlf	___awdiv@quotient,f
  5933  057C  0DFD               	rlf	___awdiv@quotient+1,f
  5934  057D  0877               	movf	___awdiv@divisor+1,w
  5935  057E  0279               	subwf	___awdiv@dividend+1,w
  5936  057F  1D03               	skipz
  5937  0580  2D83               	goto	u2365
  5938  0581  0876               	movf	___awdiv@divisor,w
  5939  0582  0278               	subwf	___awdiv@dividend,w
  5940  0583                     u2365:	
  5941  0583  1C03               	skipc
  5942  0584  2D8D               	goto	L19
  5943  0585  0876               	movf	___awdiv@divisor,w
  5944  0586  02F8               	subwf	___awdiv@dividend,f
  5945  0587  0877               	movf	___awdiv@divisor+1,w
  5946  0588  1C03               	skipc
  5947  0589  03F9               	decf	___awdiv@dividend+1,f
  5948  058A  02F9               	subwf	___awdiv@dividend+1,f
  5949  058B  147C               	bsf	___awdiv@quotient,0
  5950  058C  1003               	clrc
  5951  058D                     L19:	
  5952  058D  0CF7               	rrf	___awdiv@divisor+1,f
  5953  058E  0CF6               	rrf	___awdiv@divisor,f
  5954  058F  0BFA               	decfsz	___awdiv@counter,f
  5955  0590  2D7A               	goto	l5516
  5956  0591                     l5528:	
  5957  0591  087B               	movf	___awdiv@sign,w
  5958  0592  1903               	btfsc	3,2
  5959  0593  2D99               	goto	l5532
  5960  0594  09FC               	comf	___awdiv@quotient,f
  5961  0595  09FD               	comf	___awdiv@quotient+1,f
  5962  0596  0AFC               	incf	___awdiv@quotient,f
  5963  0597  1903               	skipnz
  5964  0598  0AFD               	incf	___awdiv@quotient+1,f
  5965  0599                     l5532:	
  5966  0599  087D               	movf	___awdiv@quotient+1,w
  5967  059A  00F7               	movwf	?___awdiv+1
  5968  059B  087C               	movf	___awdiv@quotient,w
  5969  059C  00F6               	movwf	?___awdiv
  5970  059D  0008               	return
  5971  059E                     __end_of___awdiv:	
  5972  059E                     __ptext645:	
  5973 ;; =============== function _pause ends ============
  5974                           
  5975                           
  5976 ;; *************** function ___awmod *****************
  5977 ;; Defined at:
  5978 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awmod.c"
  5979 ;; Parameters:    Size  Location     Type
  5980 ;;  divisor         2    0[COMMON] int 
  5981 ;;  dividend        2    2[COMMON] int 
  5982 ;; Auto vars:     Size  Location     Type
  5983 ;;  sign            1    5[COMMON] unsigned char 
  5984 ;;  counter         1    4[COMMON] unsigned char 
  5985 ;; Return value:  Size  Location     Type
  5986 ;;                  2    0[COMMON] int 
  5987 ;; Registers used:
  5988 ;;		wreg, status,2, status,0
  5989 ;; Tracked objects:
  5990 ;;		On entry : 60/0
  5991 ;;		On exit  : 60/0
  5992 ;;		Unchanged: FFF9F/0
  5993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5994 ;;      Params:         4       0       0       0       0
  5995 ;;      Locals:         2       0       0       0       0
  5996 ;;      Temps:          0       0       0       0       0
  5997 ;;      Totals:         6       0       0       0       0
  5998 ;;Total ram usage:        6 bytes
  5999 ;; Hardware stack levels used:    1
  6000 ;; This function calls:
  6001 ;;		Nothing
  6002 ;; This function is called by:
  6003 ;;		_scale
  6004 ;; This function uses a non-reentrant model
  6005 ;;
  6006  059E                     ___awmod:	
  6007                           
  6008                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6009  059E  01F5               	clrf	___awmod@sign
  6010  059F  1FF3               	btfss	___awmod@dividend+1,7
  6011  05A0  2DA8               	goto	l5618
  6012  05A1  09F2               	comf	___awmod@dividend,f
  6013  05A2  09F3               	comf	___awmod@dividend+1,f
  6014  05A3  0AF2               	incf	___awmod@dividend,f
  6015  05A4  1903               	skipnz
  6016  05A5  0AF3               	incf	___awmod@dividend+1,f
  6017  05A6  01F5               	clrf	___awmod@sign
  6018  05A7  0AF5               	incf	___awmod@sign,f
  6019  05A8                     l5618:	
  6020  05A8  1FF1               	btfss	___awmod@divisor+1,7
  6021  05A9  2DAF               	goto	l5622
  6022  05AA  09F0               	comf	___awmod@divisor,f
  6023  05AB  09F1               	comf	___awmod@divisor+1,f
  6024  05AC  0AF0               	incf	___awmod@divisor,f
  6025  05AD  1903               	skipnz
  6026  05AE  0AF1               	incf	___awmod@divisor+1,f
  6027  05AF                     l5622:	
  6028  05AF  0871               	movf	___awmod@divisor+1,w
  6029  05B0  0470               	iorwf	___awmod@divisor,w
  6030  05B1  1903               	skipnz
  6031  05B2  2DCE               	goto	l5638
  6032  05B3  01F4               	clrf	___awmod@counter
  6033  05B4                     L11:	
  6034  05B4  0AF4               	incf	___awmod@counter,f
  6035  05B5  1BF1               	btfsc	___awmod@divisor+1,7
  6036  05B6  2DBB               	goto	l5630
  6037  05B7  1003               	clrc
  6038  05B8  0DF0               	rlf	___awmod@divisor,f
  6039  05B9  0DF1               	rlf	___awmod@divisor+1,f
  6040  05BA  2DB4               	goto	L11
  6041  05BB                     l5630:	
  6042  05BB  0871               	movf	___awmod@divisor+1,w
  6043  05BC  0273               	subwf	___awmod@dividend+1,w
  6044  05BD  1D03               	skipz
  6045  05BE  2DC1               	goto	u2555
  6046  05BF  0870               	movf	___awmod@divisor,w
  6047  05C0  0272               	subwf	___awmod@dividend,w
  6048  05C1                     u2555:	
  6049  05C1  1C03               	skipc
  6050  05C2  2DCA               	goto	L12
  6051  05C3  0870               	movf	___awmod@divisor,w
  6052  05C4  02F2               	subwf	___awmod@dividend,f
  6053  05C5  0871               	movf	___awmod@divisor+1,w
  6054  05C6  1C03               	skipc
  6055  05C7  03F3               	decf	___awmod@dividend+1,f
  6056  05C8  02F3               	subwf	___awmod@dividend+1,f
  6057  05C9  1003               	clrc
  6058  05CA                     L12:	
  6059  05CA  0CF1               	rrf	___awmod@divisor+1,f
  6060  05CB  0CF0               	rrf	___awmod@divisor,f
  6061  05CC  0BF4               	decfsz	___awmod@counter,f
  6062  05CD  2DBB               	goto	l5630
  6063  05CE                     l5638:	
  6064  05CE  0875               	movf	___awmod@sign,w
  6065  05CF  1903               	btfsc	3,2
  6066  05D0  2DD6               	goto	l5642
  6067  05D1  09F2               	comf	___awmod@dividend,f
  6068  05D2  09F3               	comf	___awmod@dividend+1,f
  6069  05D3  0AF2               	incf	___awmod@dividend,f
  6070  05D4  1903               	skipnz
  6071  05D5  0AF3               	incf	___awmod@dividend+1,f
  6072  05D6                     l5642:	
  6073  05D6  0873               	movf	___awmod@dividend+1,w
  6074  05D7  00F1               	movwf	?___awmod+1
  6075  05D8  0872               	movf	___awmod@dividend,w
  6076  05D9  00F0               	movwf	?___awmod
  6077  05DA  0008               	return
  6078  05DB                     __end_of___awmod:	
  6079  05DB                     __ptext642:	
  6080 ;; =============== function ___awtoft ends ============
  6081                           
  6082                           
  6083 ;; *************** function ___ftmul *****************
  6084 ;; Defined at:
  6085 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftmul.c"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;  f1              3   13[BANK0 ] float 
  6088 ;;  f2              3   16[BANK0 ] float 
  6089 ;; Auto vars:     Size  Location     Type
  6090 ;;  f3_as_produc    3   23[BANK0 ] unsigned um
  6091 ;;  sign            1   27[BANK0 ] unsigned char 
  6092 ;;  cntr            1   26[BANK0 ] unsigned char 
  6093 ;;  exp             1   22[BANK0 ] unsigned char 
  6094 ;; Return value:  Size  Location     Type
  6095 ;;                  3   13[BANK0 ] float 
  6096 ;; Registers used:
  6097 ;;		wreg, status,2, status,0, pclath, cstack
  6098 ;; Tracked objects:
  6099 ;;		On entry : 60/0
  6100 ;;		On exit  : 60/0
  6101 ;;		Unchanged: FFF9F/0
  6102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6103 ;;      Params:         0       6       0       0       0
  6104 ;;      Locals:         0       6       0       0       0
  6105 ;;      Temps:          0       3       0       0       0
  6106 ;;      Totals:         0      15       0       0       0
  6107 ;;Total ram usage:       15 bytes
  6108 ;; Hardware stack levels used:    1
  6109 ;; Hardware stack levels required when called:    1
  6110 ;; This function calls:
  6111 ;;		___ftpack
  6112 ;; This function is called by:
  6113 ;;		_fround
  6114 ;;		_scale
  6115 ;;		__doprnt
  6116 ;; This function uses a non-reentrant model
  6117 ;;
  6118  05DB                     ___ftmul:	
  6119                           
  6120                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6121  05DB  082D               	movf	___ftmul@f1,w
  6122  05DC  00B3               	movwf	??___ftmul
  6123  05DD  082E               	movf	___ftmul@f1+1,w
  6124  05DE  00B4               	movwf	??___ftmul+1
  6125  05DF  082F               	movf	___ftmul@f1+2,w
  6126  05E0  00B5               	movwf	??___ftmul+2
  6127  05E1  1003               	clrc
  6128  05E2  0D34               	rlf	??___ftmul+1,w
  6129  05E3  0D35               	rlf	??___ftmul+2,w
  6130  05E4  00B6               	movwf	___ftmul@exp
  6131  05E5  08B6               	movf	___ftmul@exp,f
  6132  05E6  1D03               	skipz
  6133  05E7  2DEC               	goto	l5738
  6134  05E8  01AD               	clrf	?___ftmul
  6135  05E9  01AE               	clrf	?___ftmul+1
  6136  05EA  01AF               	clrf	?___ftmul+2
  6137  05EB  0008               	return
  6138  05EC                     l5738:	
  6139  05EC  0830               	movf	___ftmul@f2,w
  6140  05ED  00B3               	movwf	??___ftmul
  6141  05EE  0831               	movf	___ftmul@f2+1,w
  6142  05EF  00B4               	movwf	??___ftmul+1
  6143  05F0  0832               	movf	___ftmul@f2+2,w
  6144  05F1  00B5               	movwf	??___ftmul+2
  6145  05F2  1003               	clrc
  6146  05F3  0D34               	rlf	??___ftmul+1,w
  6147  05F4  0D35               	rlf	??___ftmul+2,w
  6148  05F5  00BB               	movwf	___ftmul@sign
  6149  05F6  08BB               	movf	___ftmul@sign,f
  6150  05F7  1D03               	skipz
  6151  05F8  2DFD               	goto	l5744
  6152  05F9  01AD               	clrf	?___ftmul
  6153  05FA  01AE               	clrf	?___ftmul+1
  6154  05FB  01AF               	clrf	?___ftmul+2
  6155  05FC  0008               	return
  6156  05FD                     l5744:	
  6157  05FD  083B               	movf	___ftmul@sign,w
  6158  05FE  3E7B               	addlw	123
  6159  05FF  07B6               	addwf	___ftmul@exp,f
  6160  0600  082F               	movf	___ftmul@f1+2,w
  6161  0601  00BB               	movwf	___ftmul@sign
  6162  0602  0832               	movf	___ftmul@f2+2,w
  6163  0603  06BB               	xorwf	___ftmul@sign,f
  6164  0604  3080               	movlw	128
  6165  0605  05BB               	andwf	___ftmul@sign,f
  6166  0606  3007               	movlw	7
  6167  0607  17AE               	bsf	___ftmul@f1+1,7
  6168  0608  17B1               	bsf	___ftmul@f2+1,7
  6169  0609  01B2               	clrf	___ftmul@f2+2
  6170  060A  01B7               	clrf	___ftmul@f3_as_product
  6171  060B  01B8               	clrf	___ftmul@f3_as_product+1
  6172  060C  01B9               	clrf	___ftmul@f3_as_product+2
  6173  060D  00BA               	movwf	___ftmul@cntr
  6174  060E                     l5762:	
  6175  060E  1C2D               	btfss	___ftmul@f1,0
  6176  060F  2E18               	goto	l5766
  6177  0610  0830               	movf	___ftmul@f2,w
  6178  0611  26D6  120A  118A   	fcall	PL21	;call to abstracted procedure
  6179  0614  1803               	skipnc
  6180  0615  0A32               	incf	___ftmul@f2+2,w
  6181  0616  1D03               	btfss	3,2
  6182  0617  07B9               	addwf	___ftmul@f3_as_product+2,f
  6183  0618                     l5766:	
  6184  0618  1003               	clrc
  6185  0619  0CAF               	rrf	___ftmul@f1+2,f
  6186  061A  0CAE               	rrf	___ftmul@f1+1,f
  6187  061B  0CAD               	rrf	___ftmul@f1,f
  6188  061C  1003               	clrc
  6189  061D  0DB0               	rlf	___ftmul@f2,f
  6190  061E  0DB1               	rlf	___ftmul@f2+1,f
  6191  061F  0DB2               	rlf	___ftmul@f2+2,f
  6192  0620  0BBA               	decfsz	___ftmul@cntr,f
  6193  0621  2E0E               	goto	l5762
  6194  0622  3009               	movlw	9
  6195  0623  00BA               	movwf	___ftmul@cntr
  6196  0624                     l5774:	
  6197  0624  1C2D               	btfss	___ftmul@f1,0
  6198  0625  2E2E               	goto	l5778
  6199  0626  0830               	movf	___ftmul@f2,w
  6200  0627  26D6  120A  118A   	fcall	PL21	;call to abstracted procedure
  6201  062A  1803               	skipnc
  6202  062B  0A32               	incf	___ftmul@f2+2,w
  6203  062C  1D03               	btfss	3,2
  6204  062D  07B9               	addwf	___ftmul@f3_as_product+2,f
  6205  062E                     l5778:	
  6206  062E  1003               	clrc
  6207  062F  0CAF               	rrf	___ftmul@f1+2,f
  6208  0630  0CAE               	rrf	___ftmul@f1+1,f
  6209  0631  0CAD               	rrf	___ftmul@f1,f
  6210  0632  1003               	clrc
  6211  0633  0CB9               	rrf	___ftmul@f3_as_product+2,f
  6212  0634  0CB8               	rrf	___ftmul@f3_as_product+1,f
  6213  0635  0CB7               	rrf	___ftmul@f3_as_product,f
  6214  0636  0BBA               	decfsz	___ftmul@cntr,f
  6215  0637  2E24               	goto	l5774
  6216  0638  0837               	movf	___ftmul@f3_as_product,w
  6217  0639  00F0               	movwf	?___ftpack
  6218  063A  0838               	movf	___ftmul@f3_as_product+1,w
  6219  063B  00F1               	movwf	?___ftpack+1
  6220  063C  0839               	movf	___ftmul@f3_as_product+2,w
  6221  063D  00F2               	movwf	?___ftpack+2
  6222  063E  0836               	movf	___ftmul@exp,w
  6223  063F  00F3               	movwf	?___ftpack+3
  6224  0640  083B               	movf	___ftmul@sign,w
  6225  0641  00F4               	movwf	?___ftpack+4
  6226  0642  2658               	fcall	___ftpack
  6227  0643  0870               	movf	?___ftpack,w
  6228  0644  00AD               	movwf	?___ftmul
  6229  0645  0871               	movf	?___ftpack+1,w
  6230  0646  00AE               	movwf	?___ftmul+1
  6231  0647  0872               	movf	?___ftpack+2,w
  6232  0648  00AF               	movwf	?___ftmul+2
  6233  0649  0008               	return
  6234  064A                     __end_of___ftmul:	
  6235  064A                     __ptext657:	
  6236 ;; =============== function ___wmul ends ============
  6237                           
  6238                           
  6239 ;; *************** function ___bmul *****************
  6240 ;; Defined at:
  6241 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\bmul.c"
  6242 ;; Parameters:    Size  Location     Type
  6243 ;;  multiplier      1    wreg     unsigned char 
  6244 ;;  multiplicand    1    9[COMMON] unsigned char 
  6245 ;; Auto vars:     Size  Location     Type
  6246 ;;  multiplier      1   11[COMMON] unsigned char 
  6247 ;;  product         1   10[COMMON] unsigned char 
  6248 ;; Return value:  Size  Location     Type
  6249 ;;                  1    wreg      unsigned char 
  6250 ;; Registers used:
  6251 ;;		wreg, status,2, status,0
  6252 ;; Tracked objects:
  6253 ;;		On entry : 60/0
  6254 ;;		On exit  : 60/0
  6255 ;;		Unchanged: FFF9F/0
  6256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6257 ;;      Params:         1       0       0       0       0
  6258 ;;      Locals:         2       0       0       0       0
  6259 ;;      Temps:          0       0       0       0       0
  6260 ;;      Totals:         3       0       0       0       0
  6261 ;;Total ram usage:        3 bytes
  6262 ;; Hardware stack levels used:    1
  6263 ;; This function calls:
  6264 ;;		Nothing
  6265 ;; This function is called by:
  6266 ;;		_fround
  6267 ;;		_scale
  6268 ;; This function uses a non-reentrant model
  6269 ;;
  6270  064A                     ___bmul:	
  6271                           
  6272                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6273                           ;___bmul@multiplier stored from wreg
  6274  064A  00FB               	movwf	___bmul@multiplier
  6275  064B  01FA               	clrf	___bmul@product
  6276  064C                     l5328:	
  6277  064C  0879               	movf	___bmul@multiplicand,w
  6278  064D  187B               	btfsc	___bmul@multiplier,0
  6279  064E  07FA               	addwf	___bmul@product,f
  6280  064F  1003               	clrc
  6281  0650  0DF9               	rlf	___bmul@multiplicand,f
  6282  0651  1003               	clrc
  6283  0652  0CFB               	rrf	___bmul@multiplier,f
  6284  0653  08FB               	movf	___bmul@multiplier,f
  6285  0654  1D03               	skipz
  6286  0655  2E4C               	goto	l5328
  6287  0656  087A               	movf	___bmul@product,w
  6288  0657  0008               	return
  6289  0658                     __end_of___bmul:	
  6290  0658                     __ptext652:	
  6291 ;; =============== function ___fttol ends ============
  6292                           
  6293                           
  6294 ;; *************** function ___ftpack *****************
  6295 ;; Defined at:
  6296 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\float.c"
  6297 ;; Parameters:    Size  Location     Type
  6298 ;;  arg             3    0[COMMON] unsigned um
  6299 ;;  exp             1    3[COMMON] unsigned char 
  6300 ;;  sign            1    4[COMMON] unsigned char 
  6301 ;; Auto vars:     Size  Location     Type
  6302 ;;		None
  6303 ;; Return value:  Size  Location     Type
  6304 ;;                  3    0[COMMON] float 
  6305 ;; Registers used:
  6306 ;;		wreg, status,2, status,0
  6307 ;; Tracked objects:
  6308 ;;		On entry : 40/20
  6309 ;;		On exit  : 40/20
  6310 ;;		Unchanged: FFFBF/0
  6311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6312 ;;      Params:         5       0       0       0       0
  6313 ;;      Locals:         0       0       0       0       0
  6314 ;;      Temps:          3       0       0       0       0
  6315 ;;      Totals:         8       0       0       0       0
  6316 ;;Total ram usage:        8 bytes
  6317 ;; Hardware stack levels used:    1
  6318 ;; This function calls:
  6319 ;;		Nothing
  6320 ;; This function is called by:
  6321 ;;		___ftadd
  6322 ;;		___ftmul
  6323 ;;		___awtoft
  6324 ;;		___lltoft
  6325 ;; This function uses a non-reentrant model
  6326 ;;
  6327  0658                     ___ftpack:	
  6328                           
  6329                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6330  0658  0873               	movf	___ftpack@exp,w
  6331  0659  1903               	btfsc	3,2
  6332  065A  2E60               	goto	l5430
  6333  065B  0872               	movf	___ftpack@arg+2,w
  6334  065C  0471               	iorwf	___ftpack@arg+1,w
  6335  065D  0470               	iorwf	___ftpack@arg,w
  6336  065E  1D03               	skipz
  6337  065F  2E69               	goto	l5436
  6338  0660                     l5430:	
  6339  0660  01F0               	clrf	?___ftpack
  6340  0661  01F1               	clrf	?___ftpack+1
  6341  0662  01F2               	clrf	?___ftpack+2
  6342  0663  0008               	return
  6343  0664                     l5434:	
  6344  0664  0AF3               	incf	___ftpack@exp,f
  6345  0665  1003               	clrc
  6346  0666  0CF2               	rrf	___ftpack@arg+2,f
  6347  0667  0CF1               	rrf	___ftpack@arg+1,f
  6348  0668  0CF0               	rrf	___ftpack@arg,f
  6349  0669                     l5436:	
  6350  0669  30FE               	movlw	254
  6351  066A  0572               	andwf	___ftpack@arg+2,w
  6352  066B  1903               	btfsc	3,2
  6353  066C  2E78               	goto	l5440
  6354  066D  2E64               	goto	l5434
  6355  066E                     l5438:	
  6356  066E  0AF3               	incf	___ftpack@exp,f
  6357  066F  0AF0               	incf	___ftpack@arg,f
  6358  0670  1903               	skipnz
  6359  0671  0AF1               	incf	___ftpack@arg+1,f
  6360  0672  1903               	skipnz
  6361  0673  0AF2               	incf	___ftpack@arg+2,f
  6362  0674  1003               	clrc
  6363  0675  0CF2               	rrf	___ftpack@arg+2,f
  6364  0676  0CF1               	rrf	___ftpack@arg+1,f
  6365  0677  0CF0               	rrf	___ftpack@arg,f
  6366  0678                     l5440:	
  6367  0678  30FF               	movlw	255
  6368  0679  0572               	andwf	___ftpack@arg+2,w
  6369  067A  1903               	btfsc	3,2
  6370  067B  2E82               	goto	l5444
  6371  067C  2E6E               	goto	l5438
  6372  067D                     l5442:	
  6373  067D  03F3               	decf	___ftpack@exp,f
  6374  067E  1003               	clrc
  6375  067F  0DF0               	rlf	___ftpack@arg,f
  6376  0680  0DF1               	rlf	___ftpack@arg+1,f
  6377  0681  0DF2               	rlf	___ftpack@arg+2,f
  6378  0682                     l5444:	
  6379  0682  1FF1               	btfss	___ftpack@arg+1,7
  6380  0683  2E7D               	goto	l5442
  6381  0684  1C73               	btfss	___ftpack@exp,0
  6382  0685  13F1               	bcf	___ftpack@arg+1,7
  6383  0686  1003               	clrc
  6384  0687  0CF3               	rrf	___ftpack@exp,f
  6385  0688  0873               	movf	___ftpack@exp,w
  6386  0689  00F7               	movwf	??___ftpack+2
  6387  068A  01F6               	clrf	??___ftpack+1
  6388  068B  01F5               	clrf	??___ftpack
  6389  068C  0875               	movf	??___ftpack,w
  6390  068D  04F0               	iorwf	___ftpack@arg,f
  6391  068E  0876               	movf	??___ftpack+1,w
  6392  068F  04F1               	iorwf	___ftpack@arg+1,f
  6393  0690  0877               	movf	??___ftpack+2,w
  6394  0691  04F2               	iorwf	___ftpack@arg+2,f
  6395  0692  0874               	movf	___ftpack@sign,w
  6396  0693  1D03               	skipz
  6397  0694  17F2               	bsf	___ftpack@arg+2,7
  6398  0695  0008               	return
  6399  0696                     __end_of___ftpack:	
  6400  0696                     PL9:	
  6401  0696  0820               	movf	distance@ticks,w
  6402  0697  0084               	movwf	4
  6403  0698  0800               	movf	0,w
  6404  0699  00F0               	movwf	?___ftge
  6405  069A  0A84               	incf	4,f
  6406  069B  0800               	movf	0,w
  6407  069C  00F1               	movwf	?___ftge+1
  6408  069D  0A84               	incf	4,f
  6409  069E  0800               	movf	0,w
  6410  069F  00F2               	movwf	?___ftge+2
  6411  06A0  3040               	movlw	64
  6412  06A1  00F3               	movwf	?___ftge+3
  6413  06A2  30B5               	movlw	181
  6414  06A3  00F4               	movwf	?___ftge+4
  6415  06A4  3046               	movlw	70
  6416  06A5  00F5               	movwf	?___ftge+5
  6417  06A6  0008               	return
  6418  06A7                     PL11:	
  6419  06A7  082D               	movf	?___ftmul,w
  6420  06A8  00C3               	movwf	_scale$2923
  6421  06A9  082E               	movf	?___ftmul+1,w
  6422  06AA  00C4               	movwf	_scale$2923+1
  6423  06AB  082F               	movf	?___ftmul+2,w
  6424  06AC  00C5               	movwf	_scale$2923+2
  6425  06AD  300A               	movlw	10
  6426  06AE  00F0               	movwf	?___awmod
  6427  06AF  01F1               	clrf	?___awmod+1
  6428  06B0  0846               	movf	scale@scl,w
  6429  06B1  00F2               	movwf	?___awmod+2
  6430  06B2  01F3               	clrf	?___awmod+3
  6431  06B3  0008               	return
  6432  06B4                     PL12:	
  6433  06B4  0870               	movf	?___awmod,w
  6434  06B5  00BF               	movwf	??_scale
  6435  06B6  0871               	movf	?___awmod+1,w
  6436  06B7  00C0               	movwf	??_scale+1
  6437  06B8  083F               	movf	??_scale,w
  6438  06B9  073F               	addwf	??_scale,w
  6439  06BA  073F               	addwf	??_scale,w
  6440  06BB  0008               	return
  6441  06BC                     PL13:	
  6442  06BC  0876               	movf	?___awdiv,w
  6443  06BD  00C1               	movwf	??_scale+2
  6444  06BE  0877               	movf	?___awdiv+1,w
  6445  06BF  00C2               	movwf	??_scale+3
  6446  06C0  0841               	movf	??_scale+2,w
  6447  06C1  0741               	addwf	??_scale+2,w
  6448  06C2  0741               	addwf	??_scale+2,w
  6449  06C3  0008               	return
  6450  06C4                     PL14:	
  6451  06C4  082D               	movf	?___ftmul,w
  6452  06C5  00BC               	movwf	?_scale
  6453  06C6  082E               	movf	?___ftmul+1,w
  6454  06C7  00BD               	movwf	?_scale+1
  6455  06C8  082F               	movf	?___ftmul+2,w
  6456  06C9  00BE               	movwf	?_scale+2
  6457  06CA  0008               	return
  6458  06CB                     PL16:	
  6459  06CB  00F6               	movwf	?___awdiv
  6460  06CC  01F7               	clrf	?___awdiv+1
  6461  06CD  0846               	movf	scale@scl,w
  6462  06CE  00F2               	movwf	?___awmod+2
  6463  06CF  01F3               	clrf	?___awmod+3
  6464  06D0  1BF2               	btfsc	?___awmod+2,7
  6465  06D1  03F3               	decf	?___awmod+3,f
  6466  06D2  3064               	movlw	100
  6467  06D3  00F0               	movwf	?___awmod
  6468  06D4  01F1               	clrf	?___awmod+1
  6469  06D5  0008               	return
  6470  06D6                     PL21:	
  6471  06D6  07B7               	addwf	___ftmul@f3_as_product,f
  6472  06D7  0831               	movf	___ftmul@f2+1,w
  6473  06D8  1103               	clrz
  6474  06D9  1803               	skipnc
  6475  06DA  0A31               	incf	___ftmul@f2+1,w
  6476  06DB  1D03               	btfss	3,2
  6477  06DC  07B8               	addwf	___ftmul@f3_as_product+1,f
  6478  06DD  0832               	movf	___ftmul@f2+2,w
  6479  06DE  1103               	clrz
  6480  06DF  0008               	return
  6481  06E0                     PL24:	
  6482  06E0  00AF               	movwf	?___ftmul+2
  6483  06E1  300A               	movlw	10
  6484  06E2  00F6               	movwf	?___awdiv
  6485  06E3  01F7               	clrf	?___awdiv+1
  6486  06E4  0846               	movf	scale@scl,w
  6487  06E5  00F8               	movwf	?___awdiv+2
  6488  06E6  01F9               	clrf	?___awdiv+3
  6489  06E7  0008               	return
  6490  06E8                     PL25:	
  6491  06E8  0876               	movf	?___awdiv,w
  6492  06E9  00BF               	movwf	??_scale
  6493  06EA  0877               	movf	?___awdiv+1,w
  6494  06EB  00C0               	movwf	??_scale+1
  6495  06EC  083F               	movf	??_scale,w
  6496  06ED  073F               	addwf	??_scale,w
  6497  06EE  073F               	addwf	??_scale,w
  6498  06EF  0008               	return
  6499  06F0                     PL26:	
  6500  06F0  00AF               	movwf	?___ftmul+2
  6501  06F1  0843               	movf	_scale$2923,w
  6502  06F2  00B0               	movwf	?___ftmul+3
  6503  06F3  0844               	movf	_scale$2923+1,w
  6504  06F4  00B1               	movwf	?___ftmul+4
  6505  06F5  0845               	movf	_scale$2923+2,w
  6506  06F6  00B2               	movwf	?___ftmul+5
  6507  06F7  0008               	return
  6508  06F8                     PL28:	
  6509  06F8  00AF               	movwf	?___ftmul+2
  6510  06F9  3064               	movlw	100
  6511  06FA  00F6               	movwf	?___awdiv
  6512  06FB  01F7               	clrf	?___awdiv+1
  6513  06FC  0846               	movf	scale@scl,w
  6514  06FD  00F8               	movwf	?___awdiv+2
  6515  06FE  01F9               	clrf	?___awdiv+3
  6516  06FF  0008               	return
  6517                           
  6518                           	psect	text655
  6519  0042                     __ptext655:	
  6520 ;; =============== function ___lbdiv ends ============
  6521                           
  6522                           
  6523 ;; *************** function ___lwdiv *****************
  6524 ;; Defined at:
  6525 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwdiv.c"
  6526 ;; Parameters:    Size  Location     Type
  6527 ;;  divisor         2    0[COMMON] unsigned int 
  6528 ;;  dividend        2    2[COMMON] unsigned int 
  6529 ;; Auto vars:     Size  Location     Type
  6530 ;;  quotient        2    4[COMMON] unsigned int 
  6531 ;;  counter         1    6[COMMON] unsigned char 
  6532 ;; Return value:  Size  Location     Type
  6533 ;;                  2    0[COMMON] unsigned int 
  6534 ;; Registers used:
  6535 ;;		wreg, status,2, status,0
  6536 ;; Tracked objects:
  6537 ;;		On entry : 160/0
  6538 ;;		On exit  : 160/0
  6539 ;;		Unchanged: FFE9F/0
  6540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6541 ;;      Params:         4       0       0       0       0
  6542 ;;      Locals:         3       0       0       0       0
  6543 ;;      Temps:          0       0       0       0       0
  6544 ;;      Totals:         7       0       0       0       0
  6545 ;;Total ram usage:        7 bytes
  6546 ;; Hardware stack levels used:    1
  6547 ;; This function calls:
  6548 ;;		Nothing
  6549 ;; This function is called by:
  6550 ;;		_main
  6551 ;; This function uses a non-reentrant model
  6552 ;;
  6553  0042                     ___lwdiv:	
  6554                           
  6555                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6556  0042  01F4               	clrf	___lwdiv@quotient
  6557  0043  01F5               	clrf	___lwdiv@quotient+1
  6558  0044  0871               	movf	___lwdiv@divisor+1,w
  6559  0045  0470               	iorwf	___lwdiv@divisor,w
  6560  0046  1903               	skipnz
  6561  0047  2867               	goto	l5380
  6562  0048  01F6               	clrf	___lwdiv@counter
  6563  0049                     L22:	
  6564  0049  0AF6               	incf	___lwdiv@counter,f
  6565  004A  1BF1               	btfsc	___lwdiv@divisor+1,7
  6566  004B  2850               	goto	l5368
  6567  004C  1003               	clrc
  6568  004D  0DF0               	rlf	___lwdiv@divisor,f
  6569  004E  0DF1               	rlf	___lwdiv@divisor+1,f
  6570  004F  2849               	goto	L22
  6571  0050                     l5368:	
  6572  0050  1003               	clrc
  6573  0051  0DF4               	rlf	___lwdiv@quotient,f
  6574  0052  0DF5               	rlf	___lwdiv@quotient+1,f
  6575  0053  0871               	movf	___lwdiv@divisor+1,w
  6576  0054  0273               	subwf	___lwdiv@dividend+1,w
  6577  0055  1D03               	skipz
  6578  0056  2859               	goto	u2085
  6579  0057  0870               	movf	___lwdiv@divisor,w
  6580  0058  0272               	subwf	___lwdiv@dividend,w
  6581  0059                     u2085:	
  6582  0059  1C03               	skipc
  6583  005A  2863               	goto	L23
  6584  005B  0870               	movf	___lwdiv@divisor,w
  6585  005C  02F2               	subwf	___lwdiv@dividend,f
  6586  005D  0871               	movf	___lwdiv@divisor+1,w
  6587  005E  1C03               	skipc
  6588  005F  03F3               	decf	___lwdiv@dividend+1,f
  6589  0060  02F3               	subwf	___lwdiv@dividend+1,f
  6590  0061  1474               	bsf	___lwdiv@quotient,0
  6591  0062  1003               	clrc
  6592  0063                     L23:	
  6593  0063  0CF1               	rrf	___lwdiv@divisor+1,f
  6594  0064  0CF0               	rrf	___lwdiv@divisor,f
  6595  0065  0BF6               	decfsz	___lwdiv@counter,f
  6596  0066  2850               	goto	l5368
  6597  0067                     l5380:	
  6598  0067  0875               	movf	___lwdiv@quotient+1,w
  6599  0068  00F1               	movwf	?___lwdiv+1
  6600  0069  0874               	movf	___lwdiv@quotient,w
  6601  006A  00F0               	movwf	?___lwdiv
  6602  006B  0008               	return
  6603  006C                     __end_of___lwdiv:	
  6604                           
  6605                           	psect	text658
  6606  006C                     __ptext658:	
  6607 ;; =============== function ___bmul ends ============
  6608                           
  6609                           
  6610 ;; *************** function __div_to_l_ *****************
  6611 ;; Defined at:
  6612 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\fldivl.c"
  6613 ;; Parameters:    Size  Location     Type
  6614 ;;  f1              3    0[COMMON] unsigned char 
  6615 ;;  f2              3    3[COMMON] unsigned char 
  6616 ;; Auto vars:     Size  Location     Type
  6617 ;;  quot            4    0[BANK0 ] unsigned long 
  6618 ;;  exp1            1    5[BANK0 ] unsigned char 
  6619 ;;  cntr            1    4[BANK0 ] unsigned char 
  6620 ;; Return value:  Size  Location     Type
  6621 ;;                  4    0[COMMON] unsigned long 
  6622 ;; Registers used:
  6623 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6624 ;; Tracked objects:
  6625 ;;		On entry : 0/0
  6626 ;;		On exit  : 60/0
  6627 ;;		Unchanged: FFF9F/0
  6628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6629 ;;      Params:         6       0       0       0       0
  6630 ;;      Locals:         0       6       0       0       0
  6631 ;;      Temps:          8       0       0       0       0
  6632 ;;      Totals:        14       6       0       0       0
  6633 ;;Total ram usage:       20 bytes
  6634 ;; Hardware stack levels used:    1
  6635 ;; This function calls:
  6636 ;;		Nothing
  6637 ;; This function is called by:
  6638 ;;		__doprnt
  6639 ;; This function uses a non-reentrant model
  6640 ;;
  6641  006C                     __div_to_l_:	
  6642                           
  6643                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  6644  006C  3070               	movlw	low __div_to_l_@f1
  6645  006D  2121  120A  118A   	fcall	PL4	;call to abstracted procedure
  6646  0070  1003               	clrc
  6647  0071  0D78               	rlf	??__div_to_l_+2,w
  6648  0072  0D79               	rlf	??__div_to_l_+3,w
  6649  0073  1283               	bcf	3,5	;RP0=0, select bank0
  6650  0074  1303               	bcf	3,6	;RP1=0, select bank0
  6651  0075  00A5               	movwf	__div_to_l_@exp1
  6652  0076  08A5               	movf	__div_to_l_@exp1,f
  6653  0077  1D03               	skipz
  6654  0078  287E               	goto	l5284
  6655  0079                     l5282:	
  6656  0079  01F0               	clrf	?__div_to_l_
  6657  007A  01F1               	clrf	?__div_to_l_+1
  6658  007B  01F2               	clrf	?__div_to_l_+2
  6659  007C  01F3               	clrf	?__div_to_l_+3
  6660  007D  0008               	return
  6661  007E                     l5284:	
  6662  007E  3073               	movlw	low __div_to_l_@f2
  6663  007F  2121  120A  118A   	fcall	PL4	;call to abstracted procedure
  6664  0082  1003               	clrc
  6665  0083  0D78               	rlf	??__div_to_l_+2,w
  6666  0084  0D79               	rlf	??__div_to_l_+3,w
  6667  0085  00A4               	movwf	__div_to_l_@cntr
  6668  0086  08A4               	movf	__div_to_l_@cntr,f
  6669  0087  1903               	btfsc	3,2
  6670  0088  2879               	goto	l5282
  6671  0089  3070               	movlw	low __div_to_l_@f1
  6672  008A  0084               	movwf	4
  6673  008B  3080               	movlw	128
  6674  008C  0A84               	incf	4,f
  6675  008D  0A84               	incf	4,f
  6676  008E  0480               	iorwf	0,f
  6677  008F  3070               	movlw	low __div_to_l_@f1
  6678  0090  0A84               	incf	4,f
  6679  0091  0084               	movwf	4
  6680  0092  3073               	movlw	low __div_to_l_@f2
  6681  0093  0A84               	incf	4,f
  6682  0094  0A84               	incf	4,f
  6683  0095  0A84               	incf	4,f
  6684  0096  0180               	clrf	0
  6685  0097  0084               	movwf	4
  6686  0098  3080               	movlw	128
  6687  0099  0A84               	incf	4,f
  6688  009A  0A84               	incf	4,f
  6689  009B  0480               	iorwf	0,f
  6690  009C  3073               	movlw	low __div_to_l_@f2
  6691  009D  0A84               	incf	4,f
  6692  009E  0084               	movwf	4
  6693  009F  307F               	movlw	127
  6694  00A0  0A84               	incf	4,f
  6695  00A1  0A84               	incf	4,f
  6696  00A2  0A84               	incf	4,f
  6697  00A3  0180               	clrf	0
  6698  00A4  01A0               	clrf	__div_to_l_@quot
  6699  00A5  01A1               	clrf	__div_to_l_@quot+1
  6700  00A6  01A2               	clrf	__div_to_l_@quot+2
  6701  00A7  01A3               	clrf	__div_to_l_@quot+3
  6702  00A8  02A5               	subwf	__div_to_l_@exp1,f
  6703  00A9  30A0               	movlw	160
  6704  00AA  0724               	addwf	__div_to_l_@cntr,w
  6705  00AB  00F6               	movwf	??__div_to_l_
  6706  00AC  02A5               	subwf	__div_to_l_@exp1,f
  6707  00AD  3020               	movlw	32
  6708  00AE  00A4               	movwf	__div_to_l_@cntr
  6709  00AF                     l5298:	
  6710  00AF  3073               	movlw	low __div_to_l_@f2
  6711  00B0  1003               	clrc
  6712  00B1  0DA0               	rlf	__div_to_l_@quot,f
  6713  00B2  0DA1               	rlf	__div_to_l_@quot+1,f
  6714  00B3  0DA2               	rlf	__div_to_l_@quot+2,f
  6715  00B4  0DA3               	rlf	__div_to_l_@quot+3,f
  6716  00B5  2121  120A  118A   	fcall	PL4	;call to abstracted procedure
  6717  00B8  3070               	movlw	low __div_to_l_@f1
  6718  00B9  0084               	movwf	4
  6719  00BA  0800               	movf	0,w
  6720  00BB  00FA               	movwf	??__div_to_l_+4
  6721  00BC  0A84               	incf	4,f
  6722  00BD  0800               	movf	0,w
  6723  00BE  00FB               	movwf	??__div_to_l_+5
  6724  00BF  0A84               	incf	4,f
  6725  00C0  0800               	movf	0,w
  6726  00C1  00FC               	movwf	??__div_to_l_+6
  6727  00C2  0A84               	incf	4,f
  6728  00C3  0800               	movf	0,w
  6729  00C4  00FD               	movwf	??__div_to_l_+7
  6730  00C5  0879               	movf	??__div_to_l_+3,w
  6731  00C6  027D               	subwf	??__div_to_l_+7,w
  6732  00C7  1D03               	skipz
  6733  00C8  28D3               	goto	u1955
  6734  00C9  0878               	movf	??__div_to_l_+2,w
  6735  00CA  027C               	subwf	??__div_to_l_+6,w
  6736  00CB  1D03               	skipz
  6737  00CC  28D3               	goto	u1955
  6738  00CD  0877               	movf	??__div_to_l_+1,w
  6739  00CE  027B               	subwf	??__div_to_l_+5,w
  6740  00CF  1D03               	skipz
  6741  00D0  28D3               	goto	u1955
  6742  00D1  0876               	movf	??__div_to_l_,w
  6743  00D2  027A               	subwf	??__div_to_l_+4,w
  6744  00D3                     u1955:	
  6745  00D3  1C03               	skipc
  6746  00D4  28EF               	goto	l2554
  6747  00D5  3073               	movlw	low __div_to_l_@f2
  6748  00D6  2121  120A  118A   	fcall	PL4	;call to abstracted procedure
  6749  00D9  3070               	movlw	low __div_to_l_@f1
  6750  00DA  0084               	movwf	4
  6751  00DB  0876               	movf	??__div_to_l_,w
  6752  00DC  0280               	subwf	0,f
  6753  00DD  0A84               	incf	4,f
  6754  00DE  0877               	movf	??__div_to_l_+1,w
  6755  00DF  1C03               	skipc
  6756  00E0  0F77               	incfsz	??__div_to_l_+1,w
  6757  00E1  0280               	subwf	0,f
  6758  00E2  0A84               	incf	4,f
  6759  00E3  0878               	movf	??__div_to_l_+2,w
  6760  00E4  1C03               	skipc
  6761  00E5  0F78               	incfsz	??__div_to_l_+2,w
  6762  00E6  0280               	subwf	0,f
  6763  00E7  0A84               	incf	4,f
  6764  00E8  0879               	movf	??__div_to_l_+3,w
  6765  00E9  1C03               	skipc
  6766  00EA  0A79               	incf	??__div_to_l_+3,w
  6767  00EB  0280               	subwf	0,f
  6768  00EC  3003               	movlw	3
  6769  00ED  0284               	subwf	4,f
  6770  00EE  1420               	bsf	__div_to_l_@quot,0
  6771  00EF                     l2554:	
  6772  00EF  3070               	movlw	low __div_to_l_@f1
  6773  00F0  0084               	movwf	4
  6774  00F1  1003               	clrc
  6775  00F2  0D80               	rlf	0,f
  6776  00F3  0A84               	incf	4,f
  6777  00F4  0D80               	rlf	0,f
  6778  00F5  0A84               	incf	4,f
  6779  00F6  0D80               	rlf	0,f
  6780  00F7  0A84               	incf	4,f
  6781  00F8  0D80               	rlf	0,f
  6782  00F9  0BA4               	decfsz	__div_to_l_@cntr,f
  6783  00FA  28AF               	goto	l5298
  6784  00FB  1FA5               	btfss	__div_to_l_@exp1,7
  6785  00FC  290A               	goto	l5316
  6786  00FD  0825               	movf	__div_to_l_@exp1,w
  6787  00FE  3A80               	xorlw	128
  6788  00FF  3E9F               	addlw	159
  6789  0100  1C03               	btfss	3,0
  6790  0101  2879               	goto	l5282
  6791  0102                     l5312:	
  6792  0102  1003               	clrc
  6793  0103  0CA3               	rrf	__div_to_l_@quot+3,f
  6794  0104  0CA2               	rrf	__div_to_l_@quot+2,f
  6795  0105  0CA1               	rrf	__div_to_l_@quot+1,f
  6796  0106  0CA0               	rrf	__div_to_l_@quot,f
  6797  0107  0FA5               	incfsz	__div_to_l_@exp1,f
  6798  0108  2902               	goto	l5312
  6799  0109  2918               	goto	l5322
  6800  010A                     l5316:	
  6801  010A  3020               	movlw	32
  6802  010B  0225               	subwf	__div_to_l_@exp1,w
  6803  010C  1803               	btfsc	3,0
  6804  010D  2879               	goto	l5282
  6805  010E                     l2562:	
  6806  010E  08A5               	movf	__div_to_l_@exp1,f
  6807  010F  1903               	btfsc	3,2
  6808  0110  2918               	goto	l5322
  6809  0111  1003               	clrc
  6810  0112  0DA0               	rlf	__div_to_l_@quot,f
  6811  0113  0DA1               	rlf	__div_to_l_@quot+1,f
  6812  0114  0DA2               	rlf	__div_to_l_@quot+2,f
  6813  0115  0DA3               	rlf	__div_to_l_@quot+3,f
  6814  0116  03A5               	decf	__div_to_l_@exp1,f
  6815  0117  290E               	goto	l2562
  6816  0118                     l5322:	
  6817  0118  0823               	movf	__div_to_l_@quot+3,w
  6818  0119  00F3               	movwf	?__div_to_l_+3
  6819  011A  0822               	movf	__div_to_l_@quot+2,w
  6820  011B  00F2               	movwf	?__div_to_l_+2
  6821  011C  0821               	movf	__div_to_l_@quot+1,w
  6822  011D  00F1               	movwf	?__div_to_l_+1
  6823  011E  0820               	movf	__div_to_l_@quot,w
  6824  011F  00F0               	movwf	?__div_to_l_
  6825  0120  0008               	return
  6826  0121                     __end_of__div_to_l_:	
  6827  0121                     PL4:	
  6828  0121  0084               	movwf	4
  6829  0122  0800               	movf	0,w
  6830  0123  00F6               	movwf	??__div_to_l_
  6831  0124  0A84               	incf	4,f
  6832  0125  0800               	movf	0,w
  6833  0126  00F7               	movwf	??__div_to_l_+1
  6834  0127  0A84               	incf	4,f
  6835  0128  0800               	movf	0,w
  6836  0129  00F8               	movwf	??__div_to_l_+2
  6837  012A  0A84               	incf	4,f
  6838  012B  0800               	movf	0,w
  6839  012C  00F9               	movwf	??__div_to_l_+3
  6840  012D  0008               	return
  6841                           
  6842                           	psect	text659
  6843  16EA                     __ptext659:	
  6844 ;; =============== function __div_to_l_ ends ============
  6845                           
  6846                           
  6847 ;; *************** function __tdiv_to_l_ *****************
  6848 ;; Defined at:
  6849 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftdivl.c"
  6850 ;; Parameters:    Size  Location     Type
  6851 ;;  f1              3    0[COMMON] float 
  6852 ;;  f2              3    3[COMMON] float 
  6853 ;; Auto vars:     Size  Location     Type
  6854 ;;  quot            4    0[BANK0 ] unsigned long 
  6855 ;;  exp1            1    5[BANK0 ] unsigned char 
  6856 ;;  cntr            1    4[BANK0 ] unsigned char 
  6857 ;; Return value:  Size  Location     Type
  6858 ;;                  4    0[COMMON] unsigned long 
  6859 ;; Registers used:
  6860 ;;		wreg, status,2, status,0
  6861 ;; Tracked objects:
  6862 ;;		On entry : 60/20
  6863 ;;		On exit  : 60/0
  6864 ;;		Unchanged: FFF9F/0
  6865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6866 ;;      Params:         6       0       0       0       0
  6867 ;;      Locals:         0       6       0       0       0
  6868 ;;      Temps:          3       0       0       0       0
  6869 ;;      Totals:         9       6       0       0       0
  6870 ;;Total ram usage:       15 bytes
  6871 ;; Hardware stack levels used:    1
  6872 ;; This function calls:
  6873 ;;		Nothing
  6874 ;; This function is called by:
  6875 ;;		__doprnt
  6876 ;; This function uses a non-reentrant model
  6877 ;;
  6878  16EA                     __tdiv_to_l_:	
  6879                           
  6880                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6881  16EA  0870               	movf	__tdiv_to_l_@f1,w
  6882  16EB  00F6               	movwf	??__tdiv_to_l_
  6883  16EC  0871               	movf	__tdiv_to_l_@f1+1,w
  6884  16ED  00F7               	movwf	??__tdiv_to_l_+1
  6885  16EE  0872               	movf	__tdiv_to_l_@f1+2,w
  6886  16EF  00F8               	movwf	??__tdiv_to_l_+2
  6887  16F0  1003               	clrc
  6888  16F1  0D77               	rlf	??__tdiv_to_l_+1,w
  6889  16F2  0D78               	rlf	??__tdiv_to_l_+2,w
  6890  16F3  1283               	bcf	3,5	;RP0=0, select bank0
  6891  16F4  00A5               	movwf	__tdiv_to_l_@exp1
  6892  16F5  08A5               	movf	__tdiv_to_l_@exp1,f
  6893  16F6  1D03               	skipz
  6894  16F7  2EFD               	goto	l5236
  6895  16F8                     l5234:	
  6896  16F8  01F0               	clrf	?__tdiv_to_l_
  6897  16F9  01F1               	clrf	?__tdiv_to_l_+1
  6898  16FA  01F2               	clrf	?__tdiv_to_l_+2
  6899  16FB  01F3               	clrf	?__tdiv_to_l_+3
  6900  16FC  0008               	return
  6901  16FD                     l5236:	
  6902  16FD  0873               	movf	__tdiv_to_l_@f2,w
  6903  16FE  00F6               	movwf	??__tdiv_to_l_
  6904  16FF  0874               	movf	__tdiv_to_l_@f2+1,w
  6905  1700  00F7               	movwf	??__tdiv_to_l_+1
  6906  1701  0875               	movf	__tdiv_to_l_@f2+2,w
  6907  1702  00F8               	movwf	??__tdiv_to_l_+2
  6908  1703  1003               	clrc
  6909  1704  0D77               	rlf	??__tdiv_to_l_+1,w
  6910  1705  0D78               	rlf	??__tdiv_to_l_+2,w
  6911  1706  00A4               	movwf	__tdiv_to_l_@cntr
  6912  1707  08A4               	movf	__tdiv_to_l_@cntr,f
  6913  1708  1903               	btfsc	3,2
  6914  1709  2EF8               	goto	l5234
  6915  170A  307F               	movlw	127
  6916  170B  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6917  170C  01F2               	clrf	__tdiv_to_l_@f1+2
  6918  170D  17F4               	bsf	__tdiv_to_l_@f2+1,7
  6919  170E  01F5               	clrf	__tdiv_to_l_@f2+2
  6920  170F  01A0               	clrf	__tdiv_to_l_@quot
  6921  1710  01A1               	clrf	__tdiv_to_l_@quot+1
  6922  1711  01A2               	clrf	__tdiv_to_l_@quot+2
  6923  1712  01A3               	clrf	__tdiv_to_l_@quot+3
  6924  1713  02A5               	subwf	__tdiv_to_l_@exp1,f
  6925  1714  3098               	movlw	152
  6926  1715  0724               	addwf	__tdiv_to_l_@cntr,w
  6927  1716  00F6               	movwf	??__tdiv_to_l_
  6928  1717  02A5               	subwf	__tdiv_to_l_@exp1,f
  6929  1718  3018               	movlw	24
  6930  1719  00A4               	movwf	__tdiv_to_l_@cntr
  6931  171A                     l5250:	
  6932  171A  1003               	clrc
  6933  171B  0DA0               	rlf	__tdiv_to_l_@quot,f
  6934  171C  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6935  171D  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6936  171E  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6937  171F  0875               	movf	__tdiv_to_l_@f2+2,w
  6938  1720  0272               	subwf	__tdiv_to_l_@f1+2,w
  6939  1721  1D03               	skipz
  6940  1722  2F29               	goto	u1865
  6941  1723  0874               	movf	__tdiv_to_l_@f2+1,w
  6942  1724  0271               	subwf	__tdiv_to_l_@f1+1,w
  6943  1725  1D03               	skipz
  6944  1726  2F29               	goto	u1865
  6945  1727  0873               	movf	__tdiv_to_l_@f2,w
  6946  1728  0270               	subwf	__tdiv_to_l_@f1,w
  6947  1729                     u1865:	
  6948  1729  1C03               	skipc
  6949  172A  2F37               	goto	L24
  6950  172B  0873               	movf	__tdiv_to_l_@f2,w
  6951  172C  02F0               	subwf	__tdiv_to_l_@f1,f
  6952  172D  0874               	movf	__tdiv_to_l_@f2+1,w
  6953  172E  1C03               	skipc
  6954  172F  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  6955  1730  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6956  1731  0875               	movf	__tdiv_to_l_@f2+2,w
  6957  1732  1C03               	skipc
  6958  1733  0A75               	incf	__tdiv_to_l_@f2+2,w
  6959  1734  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6960  1735  1420               	bsf	__tdiv_to_l_@quot,0
  6961  1736  1003               	clrc
  6962  1737                     L24:	
  6963  1737  0DF0               	rlf	__tdiv_to_l_@f1,f
  6964  1738  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6965  1739  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6966  173A  0BA4               	decfsz	__tdiv_to_l_@cntr,f
  6967  173B  2F1A               	goto	l5250
  6968  173C  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6969  173D  2F4B               	goto	l5270
  6970  173E  0825               	movf	__tdiv_to_l_@exp1,w
  6971  173F  3A80               	xorlw	128
  6972  1740  3E97               	addlw	151
  6973  1741  1C03               	btfss	3,0
  6974  1742  2EF8               	goto	l5234
  6975  1743                     l5266:	
  6976  1743  1003               	clrc
  6977  1744  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6978  1745  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6979  1746  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6980  1747  0CA0               	rrf	__tdiv_to_l_@quot,f
  6981  1748  0FA5               	incfsz	__tdiv_to_l_@exp1,f
  6982  1749  2F43               	goto	l5266
  6983  174A  2F59               	goto	l5276
  6984  174B                     l5270:	
  6985  174B  3018               	movlw	24
  6986  174C  0225               	subwf	__tdiv_to_l_@exp1,w
  6987  174D  1803               	btfsc	3,0
  6988  174E  2EF8               	goto	l5234
  6989  174F                     l2519:	
  6990  174F  08A5               	movf	__tdiv_to_l_@exp1,f
  6991  1750  1903               	btfsc	3,2
  6992  1751  2F59               	goto	l5276
  6993  1752  1003               	clrc
  6994  1753  0DA0               	rlf	__tdiv_to_l_@quot,f
  6995  1754  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6996  1755  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6997  1756  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6998  1757  03A5               	decf	__tdiv_to_l_@exp1,f
  6999  1758  2F4F               	goto	l2519
  7000  1759                     l5276:	
  7001  1759  0823               	movf	__tdiv_to_l_@quot+3,w
  7002  175A  00F3               	movwf	?__tdiv_to_l_+3
  7003  175B  0822               	movf	__tdiv_to_l_@quot+2,w
  7004  175C  00F2               	movwf	?__tdiv_to_l_+2
  7005  175D  0821               	movf	__tdiv_to_l_@quot+1,w
  7006  175E  00F1               	movwf	?__tdiv_to_l_+1
  7007  175F  0820               	movf	__tdiv_to_l_@quot,w
  7008  1760  00F0               	movwf	?__tdiv_to_l_
  7009  1761  0008               	return
  7010  1762                     __end_of__tdiv_to_l_:	
  7011                           
  7012                           	psect	text662
  7013  0021                     __ptext662:	
  7014 ;; =============== function _msecbase ends ============
  7015                           
  7016                           
  7017 ;; *************** function _wait_sensor *****************
  7018 ;; Defined at:
  7019 ;;		line 70 in file "C:\Users\Jorge\OneDrive\Escritorio\SRPROG\SRPROG.c"
  7020 ;; Parameters:    Size  Location     Type
  7021 ;;		None
  7022 ;; Auto vars:     Size  Location     Type
  7023 ;;  i               2    2[COMMON] unsigned int 
  7024 ;; Return value:  Size  Location     Type
  7025 ;;                  2    0[COMMON] unsigned int 
  7026 ;; Registers used:
  7027 ;;		wreg, status,2, status,0
  7028 ;; Tracked objects:
  7029 ;;		On entry : 60/0
  7030 ;;		On exit  : 60/0
  7031 ;;		Unchanged: FFF9F/0
  7032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7033 ;;      Params:         2       0       0       0       0
  7034 ;;      Locals:         2       0       0       0       0
  7035 ;;      Temps:          0       0       0       0       0
  7036 ;;      Totals:         4       0       0       0       0
  7037 ;;Total ram usage:        4 bytes
  7038 ;; Hardware stack levels used:    1
  7039 ;; This function calls:
  7040 ;;		Nothing
  7041 ;; This function is called by:
  7042 ;;		_main
  7043 ;; This function uses a non-reentrant model
  7044 ;;
  7045  0021                     _wait_sensor:	
  7046                           
  7047                           ;SRPROG.c: 72: uint16_t i=0;
  7048                           
  7049                           ; Regs used in _wait_sensor: [wreg+status,2+status,0]
  7050  0021  01F2               	clrf	wait_sensor@i
  7051  0022  01F3               	clrf	wait_sensor@i+1
  7052                           
  7053                           ;SRPROG.c: 73: TMR1H=0;
  7054  0023  018F               	clrf	15	;volatile
  7055                           
  7056                           ;SRPROG.c: 74: TMR1L=0;
  7057  0024  018E               	clrf	14	;volatile
  7058                           
  7059                           ;SRPROG.c: 75: TMR1ON=1;
  7060  0025  1410               	bsf	16,0
  7061                           
  7062                           ;SRPROG.c: 77: while(!RB0 && (i<1000)){
  7063  0026  2833               	goto	l5202
  7064  0027                     l5204:	
  7065  0027  3003               	movlw	3
  7066  0028  0273               	subwf	wait_sensor@i+1,w
  7067  0029  30E8               	movlw	232
  7068  002A  1903               	skipnz
  7069  002B  0272               	subwf	wait_sensor@i,w
  7070  002C  1803               	btfsc	3,0
  7071  002D  2835               	goto	l5206
  7072                           
  7073                           ;SRPROG.c: 78: i=(TMR1H<<8)|TMR1L;
  7074  002E  080F               	movf	15,w	;volatile
  7075  002F  00F3               	movwf	wait_sensor@i+1
  7076  0030  01F2               	clrf	wait_sensor@i
  7077  0031  080E               	movf	14,w	;volatile
  7078  0032  04F2               	iorwf	wait_sensor@i,f
  7079  0033                     l5202:	
  7080  0033  1C06               	btfss	6,0
  7081  0034  2827               	goto	l5204
  7082  0035                     l5206:	
  7083                           
  7084                           ;SRPROG.c: 79: }
  7085                           ;SRPROG.c: 81: if(i>=1000){
  7086  0035  3003               	movlw	3
  7087  0036  0273               	subwf	wait_sensor@i+1,w
  7088  0037  30E8               	movlw	232
  7089  0038  1903               	skipnz
  7090  0039  0272               	subwf	wait_sensor@i,w
  7091                           
  7092                           ;SRPROG.c: 82: return 0;
  7093  003A  01F0               	clrf	?_wait_sensor
  7094  003B  1C03               	skipc
  7095  003C  283F               	goto	L25
  7096  003D  01F1               	clrf	?_wait_sensor+1
  7097  003E  0008               	return
  7098  003F                     L25:	
  7099                           ;SRPROG.c: 84: return 1;
  7100                           
  7101  003F  0AF0               	incf	?_wait_sensor,f
  7102  0040  01F1               	clrf	?_wait_sensor+1
  7103  0041  0008               	return
  7104  0042                     __end_of_wait_sensor:	
  7105                           
  7106                           	psect	text663
  7107  07E5                     __ptext663:	
  7108 ;; =============== function _wait_sensor ends ============
  7109                           
  7110                           
  7111 ;; *************** function _init_comms *****************
  7112 ;; Defined at:
  7113 ;;		line 60 in file "C:\Users\Jorge\OneDrive\Escritorio\SRPROG\SRPROG.c"
  7114 ;; Parameters:    Size  Location     Type
  7115 ;;		None
  7116 ;; Auto vars:     Size  Location     Type
  7117 ;;		None
  7118 ;; Return value:  Size  Location     Type
  7119 ;;		None               void
  7120 ;; Registers used:
  7121 ;;		wreg, status,2
  7122 ;; Tracked objects:
  7123 ;;		On entry : 17F/0
  7124 ;;		On exit  : 17F/60
  7125 ;;		Unchanged: FFE80/0
  7126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7127 ;;      Params:         0       0       0       0       0
  7128 ;;      Locals:         0       0       0       0       0
  7129 ;;      Temps:          0       0       0       0       0
  7130 ;;      Totals:         0       0       0       0       0
  7131 ;;Total ram usage:        0 bytes
  7132 ;; Hardware stack levels used:    1
  7133 ;; This function calls:
  7134 ;;		Nothing
  7135 ;; This function is called by:
  7136 ;;		_main
  7137 ;; This function uses a non-reentrant model
  7138 ;;
  7139  07E5                     _init_comms:	
  7140                           
  7141                           ;SRPROG.c: 61: TRISC7 = 1;
  7142                           
  7143                           ; Regs used in _init_comms: [wreg+status,2]
  7144  07E5  1683               	bsf	3,5	;RP0=1, select bank1
  7145  07E6  3019               	movlw	25
  7146  07E7  1787               	bsf	7,7
  7147                           
  7148                           ;SRPROG.c: 62: TRISC6 = 0;
  7149  07E8  1307               	bcf	7,6
  7150                           
  7151                           ;SRPROG.c: 63: SPBRG = 0x19;
  7152  07E9  0099               	movwf	25	;volatile
  7153                           
  7154                           ;SRPROG.c: 65: RCSTA = 0x90;
  7155  07EA  3090               	movlw	144
  7156  07EB  1283               	bcf	3,5	;RP0=0, select bank0
  7157  07EC  0098               	movwf	24	;volatile
  7158                           
  7159                           ;SRPROG.c: 66: TXSTA = 0x26;
  7160  07ED  3026               	movlw	38
  7161  07EE  1683               	bsf	3,5	;RP0=1, select bank1
  7162  07EF  0098               	movwf	24	;volatile
  7163                           
  7164                           ;SRPROG.c: 67: BAUDCTL = 0;
  7165  07F0  1703               	bsf	3,6	;RP1=1, select bank3
  7166  07F1  0187               	clrf	7	;volatile
  7167  07F2  0008               	return
  7168  07F3                     __end_of_init_comms:	
  7169                           
  7170                           	psect	text664
  7171  001B                     __ptext664:	
  7172 ;; =============== function _init_comms ends ============
  7173                           
  7174                           
  7175 ;; *************** function _getch *****************
  7176 ;; Defined at:
  7177 ;;		line 53 in file "C:\Users\Jorge\OneDrive\Escritorio\SRPROG\SRPROG.c"
  7178 ;; Parameters:    Size  Location     Type
  7179 ;;		None
  7180 ;; Auto vars:     Size  Location     Type
  7181 ;;		None
  7182 ;; Return value:  Size  Location     Type
  7183 ;;                  1    wreg      unsigned char 
  7184 ;; Registers used:
  7185 ;;		wreg
  7186 ;; Tracked objects:
  7187 ;;		On entry : 0/0
  7188 ;;		On exit  : 60/0
  7189 ;;		Unchanged: FFF9F/0
  7190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7191 ;;      Params:         0       0       0       0       0
  7192 ;;      Locals:         0       0       0       0       0
  7193 ;;      Temps:          0       0       0       0       0
  7194 ;;      Totals:         0       0       0       0       0
  7195 ;;Total ram usage:        0 bytes
  7196 ;; Hardware stack levels used:    1
  7197 ;; This function calls:
  7198 ;;		Nothing
  7199 ;; This function is called by:
  7200 ;;		_main
  7201 ;; This function uses a non-reentrant model
  7202 ;;
  7203  001B                     _getch:	
  7204  001B                     l1055:	
  7205                           ;SRPROG.c: 55: while(!RCIF)
  7206                           
  7207                           ; Regs used in _getch: [wreg]
  7208                           
  7209  001B  1283               	bcf	3,5	;RP0=0, select bank0
  7210  001C  1303               	bcf	3,6	;RP1=0, select bank0
  7211  001D  1E8C               	btfss	12,5
  7212  001E  281B               	goto	l1055
  7213                           
  7214                           ;SRPROG.c: 57: return RCREG;
  7215                           ;	Return value of _getch is never used
  7216  001F  081A               	movf	26,w	;volatile
  7217  0020  0008               	return
  7218  0021                     __end_of_getch:	
  7219                           
  7220                           	psect	text665
  7221  0015                     __ptext665:	
  7222 ;; =============== function _getch ends ============
  7223                           
  7224                           
  7225 ;; *************** function _putch *****************
  7226 ;; Defined at:
  7227 ;;		line 46 in file "C:\Users\Jorge\OneDrive\Escritorio\SRPROG\SRPROG.c"
  7228 ;; Parameters:    Size  Location     Type
  7229 ;;  byte            1    8[BANK0 ] unsigned char 
  7230 ;; Auto vars:     Size  Location     Type
  7231 ;;		None
  7232 ;; Return value:  Size  Location     Type
  7233 ;;		None               void
  7234 ;; Registers used:
  7235 ;;		wreg
  7236 ;; Tracked objects:
  7237 ;;		On entry : 160/20
  7238 ;;		On exit  : 160/0
  7239 ;;		Unchanged: FFE9F/0
  7240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7241 ;;      Params:         0       1       0       0       0
  7242 ;;      Locals:         0       0       0       0       0
  7243 ;;      Temps:          0       0       0       0       0
  7244 ;;      Totals:         0       1       0       0       0
  7245 ;;Total ram usage:        1 bytes
  7246 ;; Hardware stack levels used:    1
  7247 ;; This function calls:
  7248 ;;		Nothing
  7249 ;; This function is called by:
  7250 ;;		_printf
  7251 ;;		__doprnt
  7252 ;; This function uses a non-reentrant model
  7253 ;;
  7254  0015                     _putch:	
  7255  0015                     l1049:	
  7256                           ;SRPROG.c: 48: while(!TXIF)
  7257                           
  7258                           ; Regs used in _putch: [wreg]
  7259                           
  7260  0015  1283               	bcf	3,5	;RP0=0, select bank0
  7261  0016  1E0C               	btfss	12,4
  7262  0017  2815               	goto	l1049
  7263                           
  7264                           ;SRPROG.c: 50: TXREG = byte;
  7265  0018  0828               	movf	putch@byte,w
  7266  0019  0099               	movwf	25	;volatile
  7267  001A  0008               	return
  7268  001B                     __end_of_putch:	
  7269                           
  7270 ;; =============== function _putch ends ============
  7271  0002                     
  7272                           	psect	functab
  7273  0700                     __pfunctab:	
  7274  0700                     fptable:	
  7275  0700  00FF               	movwf	(btemp+1)& (0+127)
  7276  0701  3007               	movlw	high fptable
  7277  0702  008A               	movwf	10
  7278  0703  087F               	movf	(btemp+1)& (0+127),w
  7279  0704  0782               	addwf	2,f
  7280  0705                     fpbase:	
  7281  0705  2F05               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  7282  0706                     fp__putch:	
  7283  0706  120A  118A  2815   	ljmp	_putch
  7284  007E                     btemp	set	126	;btemp
  7285  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Wed May 18 19:19:52 2022

                    pc 0002         ___bmul@product 007A           ___awdiv@sign 007B                     fsr 0004  
  ___wmul@multiplicand 0072           ___ftadd@exp1 0047           ___ftadd@exp2 0046           ___ftadd@sign 0045  
                  _RB0 0030                    _RB1 0031                    _RC0 0038                    _RC3 003B  
                  _RC4 003C                    fsr0 0004                    indf 0000           ___awmod@sign 0075  
          lcd_goto@pos 0075                   l1103 0000                   l1112 0000                   l1121 17E8  
                 l1052 0000                   l1124 0000                   l1061 0000                   l1109 0000  
                 l1118 0000                   l1055 001B                   l1049 0015                   l1058 0000  
                 l1250 0000                   l1078 039D                   l1094 0000                   l2303 0000  
                 l1168 08DA                   l2401 0000                   l1097 0000                   l2235 0000  
                 l2261 0000                   l2325 01C0                   l2414 0000                   l2255 0000  
                 l2512 0000                   l2424 0000                   l2504 0000                   l2248 0000  
                 l2267 0000                   l2443 0000                   l2347 0000                   l2428 0000  
                 l2277 0000                   l2381 0FD8                   l2294 0317                   l2519 174F  
                 l6000 09BC                   l2297 0000                   l5202 0033                   l2562 010E  
                 l2554 00EF                   l2482 0000                   l2555 0000                   l5204 0027  
                 l5220 0000                   l5300 0000                   l6100 0BBF                   l6020 0A2F  
                 l5206 0035                   l5222 0000                   l6110 0000                   l6102 0BA0  
                 l6030 0000                   l6006 09CC                   l5240 0000                   l5232 0000  
                 l5312 0102                   l5304 0000                   l6120 0C1E                   l6104 0BC5  
                 l6032 0A5F                   l6016 0A1E                   l6008 0000                   l5218 0000  
                 l5250 171A                   l5242 0000                   l5234 16F8                   l5322 0118  
                 l5314 0000                   l5306 0000                   l5402 0000                   l5410 0000  
                 l6202 0000                   l6210 0DAF                   l6114 0BF3                   l6050 0AD2  
                 l6042 0A9E                   l6034 0000                   l6026 0000                   l5180 0000  
                 l5228 0EC8                   l5260 0000                   l5252 0000                   l5244 0000  
                 l5236 16FD                   l5316 010A                   l5404 0324                   l5420 033E  
                 l5412 032A                   l5500 0563                   l6140 0CD4                   l6116 0000  
                 l6108 0BD4                   l6052 0000                   l6036 0A9C                   l6028 0000  
                 l6212 086B                   l6220 0000                   l6300 0000                   l5190 0000  
                 l5270 174B                   l5246 0000                   l5334 0000                   l5326 0000  
                 l5350 0000                   l5342 0000                   l5422 0000                   l5414 0000  
                 l5430 0660                   l6206 0DFF                   l6150 0000                   l6142 0CBB  
                 l6126 0000                   l6118 0BFC                   l6070 0AFF                   l6214 0E06  
                 l6230 0000                   l6222 0000                   l6310 0744                   l6302 0000  
                 l5184 0000                   l5192 0000                   l5256 0000                   l5248 0000  
                 l5280 0000                   l5336 0000                   l5328 064C                   l5352 0000  
                 l5344 0ECC                   l5360 0000                   l5416 0000                   l5408 0000  
                 l5440 0678                   l5504 0000                   l5600 0000                   l6208 0000  
                 l6152 0D03                   l6136 0CCE                   l6128 0C7C                   l6072 0B24  
                 l6064 0B18                   l6056 0AFB                   l6048 0000                   l6144 0CDA  
                 l6240 0000                   l6232 0000                   l6224 0000                   l6320 0000  
                 l6312 0000                   l6304 0000                   l5194 0000                   l5266 1743  
                 l5290 0000                   l5282 0079                   l5370 0000                   l5450 0000  
                 l5442 067D                   l5434 0664                   l5426 0000                   l5530 0000  
                 l5522 0000                   l5506 056C                   l5610 0000                   l6170 0D45  
                 l6162 0000                   l6146 0000                   l6138 0000                   l6082 0B3E  
                 l6090 0B9C                   l6066 0000                   l6058 0B1E                   l6250 0000  
                 l6242 0000                   l6234 0000                   l6226 0000                   l6218 0000  
                 l6322 0000                   l6314 0000                   l6306 0000                   l5196 0000  
                 l5276 1759                   l5268 0000                   l5292 0000                   l5284 007E  
                 l5348 0ED4                   l5380 0067                   l5452 0000                   l5444 0682  
                 l5436 0669                   l5428 0000                   l5460 0000                   l5532 0599  
                 l5516 057A                   l5508 0000                   l5604 0000                   l5612 0000  
                 l6164 0D39                   l6156 0D05                   l6252 0000                   l6244 0000  
                 l6236 0000                   l6228 0000                   l6260 0000                   l6340 0000  
                 l6332 0000                   l6324 0000                   l6316 0000                   l6308 0000  
                 l5198 0000                   l5294 0000                   l5374 0000                   l5358 0000  
                 l5390 0311                   l5438 066E                   l5462 0000                   l5454 0000  
                 l5526 0000                   l5518 0000                   l5550 0000                   l5606 0E87  
                 l5630 05BB                   l5622 05AF                   l5710 01CB                   l5702 01B7  
                 l6182 0D7E                   l6174 0D68                   l6078 0B38                   l6254 0000  
                 l6246 0000                   l6238 0000                   l6262 0000                   l6270 0000  
                 l6350 0000                   l6342 0000                   l6334 0000                   l6318 0000  
                 l5296 0000                   l5368 0050                   l5384 0000                   l5448 0000  
                 l5464 0000                   l5456 0FA8                   l5528 0591                   l5544 0E1A  
                 l5552 0E3F                   l5536 0000                   l5640 0000                   l5616 0000  
                 l5720 0000                   l5704 01BC                   l5800 0000                   l6184 0000  
                 l6176 0D6B                   l6096 0BB9                   l6256 0000                   l6248 0000  
                 l6264 0000                   l6272 0000                   l6344 0000                   l6336 077B  
                 l6328 0000                   l6280 0000                   l5298 00AF                   l5378 0000  
                 l5394 0000                   l5386 0000                   l5474 0FCC                   l5466 0000  
                 l5458 0FAD                   l5642 05D6                   l5618 05A8                   l5650 0000  
                 l5714 0000                   l5810 0000                   l6194 0DA0                   l6186 0D84  
                 l6178 0D6F                   l6098 0000                   l6258 0000                   l6274 0000  
                 l6346 0000                   l6338 0000                   l6290 0000                   l6282 0000  
                 l5388 0000                   l5484 0FE2                   l5476 0000                   l5468 0000  
                 l5492 0000                   l5556 0000                   l5572 0EAE                   l5564 0000  
                 l5636 0000                   l5652 17BD                   l5724 0000                   l5716 01D6  
                 l5708 0000                   l5732 0000                   l5804 035A                   l5820 0381  
                 l5812 0000                   l5900 04FD                   l6196 0000                   l6188 0D8D  
                 l6276 0000                   l6268 0000                   l6348 07C3                   l6292 0000  
                 l6284 0000                   l5398 0000                   l5486 0000                   l5478 0FD4  
                 l5494 0000                   l5574 0000                   l5638 05CE                   l5646 17BB  
                 l5726 0000                   l5718 0000                   l5662 0167                   l5654 0000  
                 l5750 0000                   l5806 0365                   l5822 0000                   l5814 0000  
                 l5910 0000                   l6198 0DA9                   l6294 0000                   l6286 0000  
                 l5488 0FF0                   l5576 0000                   l5568 0E9F                   l5584 0000  
                 l5728 01F2                   l5680 0000                   l5672 017D                   l5656 0000  
                 l5760 0000                   l5752 0000                   l5744 05FD                   l5840 0000  
                 l5912 0000                   l5920 0000                   l6296 0000                   l6288 0000  
                 l5498 0000                   l5594 0E5C                   l5586 0000                   l5690 019A  
                 l5682 0000                   l5674 0000                   l5666 016E                   l5658 0000  
                 l5770 0000                   l5762 060E                   l5754 0000                   l5746 0000  
                 l5738 05EC                   l5818 039B                   l5842 0000                   l5834 0000  
                 l5906 0542                   l5930 0000                   l6298 0000                   l5596 0000  
                 l5692 019F                   l5684 018B                   l5668 0000                   l5780 0000  
                 l5772 0000                   l5756 0000                   l5748 0000                   l5844 0000  
                 l5836 0000                   l5852 0000                   l5916 0000                   l5924 0000  
                 l5940 088D                   l5932 0000                   l5686 0000                   l5694 01A4  
                 l5782 0000                   l5774 0624                   l5766 0618                   l5758 0000  
                 l5790 0000                   l5846 0000                   l5838 0000                   l5862 0000  
                 l5870 0000                   l5918 0000                   l5926 1769                   l5950 08A8  
                 l5942 0000                   l5696 01A8                   l5784 0000                   l5768 0000  
                 l5848 0000                   l5928 0000                   l5960 08F3                   l5952 0000  
                 l5944 0894                   l5698 0000                   l5778 062E                   l5794 0000  
                 l5866 02E5                   l5858 0291                   l5882 0437                   l5874 0000  
                 l5970 0000                   l5954 0000                   l5946 0000                   l5796 03B6  
                 l5788 0000                   l5892 0493                   l5980 0000                   l5972 0933  
                 l5964 0000                   l5982 0000                   l5974 0000                   l5966 0000  
                 l5958 08DC                   l5888 047C                   l5992 0983                   l5984 0000  
                 l5994 0000                   l5986 0000                   l5978 0000                   l5996 0000  
                 l5988 0000                   STR_1 1086                   STR_2 1093                   STR_3 10B4  
                 STR_4 10AA                   STR_5 109F                   STR_6 10B1                   STR_7 10AE  
                 STR_8 10A5                   STR_9 10B4                   _T0IF 005A                   u2250 0000  
                 u3115 09FD                   u2085 0059                   u3070 0000                   u2255 0FB1  
                 u2415 0E28                   u3215 0B08                   u3145 0A1C                   u3075 0949  
                 u2365 0583                   u3405 0D59                   u3165 0ACB                   u2555 05C1  
                 u3275 0BA9                   u3365 0D32                   u3285 0BCF                   u3517 073D  
                 u2495 0E6F                   u3527 0758                   u1865 1729                   u2585 17C3  
                 u3537 07DE                   u1955 00D3                   _RCIF 0065                   _TMR0 0001  
                 _TXIF 0064                   _dist 0066                   _main 0709           ___ftpack@arg 0070  
         ___ftpack@exp 0073                   btemp 007E                   start 0000      ___bmul@multiplier 007B  
         ___ftmul@cntr 003A           ___ftmul@sign 003B           ___fttol@exp1 002C           ___fttol@lval 0028  
                ?_main 0070        __end_of___awdiv 059E        __end_of___lbdiv 0326        __end_of___ftadd 0206  
      __end_of___awmod 05DB        __end_of___lbmod 0342        __end_of___ftneg 0EEB                  _ANSEL 0188  
      __end_of___lldiv 0E90        __end_of___ftmul 064A        ___awdiv@divisor 0076                  _T1CON 0010  
      __end_of___llmod 0E48        __end_of___ftsub 0144        __end_of___fttol 0FF9        __end_of___lwdiv 006C  
      ___awdiv@counter 007A                  _RCREG 001A                  _RCSTA 0018                  _TMR1H 000F  
                _TMR1L 000E                  _SPBRG 0099                  _PORTB 0006                  _PORTD 0008  
      __end_of__doprnt 0E0A                  _TRISA 0085                  _TRISC 0087                  _TRISD 0088  
                _TRISE 0089                  _TXREG 0019                  _TXSTA 0098           ___lltoft@exp 007C  
        ___awtoft@sign 007B                  _getch 001B                  _scale 03C7        __end_of_isdigit 0ECA  
                _pause 17BB          ___ftpack@sign 0074                  _putch 0015                  fpbase 0705  
                pclath 000A                  status 0003                  wtemp0 007E        __end_of_sprintf 0869  
      ___lbdiv@divisor 0075        ___lbdiv@counter 0077           __end_of_main 07E5                 ??_main 0060  
        ___fttol@sign1 0027   __size_of__tdiv_to_l_ 0078                 ?_getch 0070       ___llmod@dividend 0024  
               ?_scale 003C                 ?_pause 0070       ___awdiv@dividend 0078       __end_of___awtoft 03C7  
               ?_putch 0028       __end_of___ftpack 0696                 _ANSELH 0189       __end_of___lltoft 0376  
               _OSCCON 008F                 _TMR1ON 0080                 _TRISB1 0431                 _TRISC6 043E  
               _TRISC7 043F           __doprnt$1925 00A0       __end_of_lcd_init 17BB       __end_of_lcd_goto 1768  
     __end_of_distance 03AC                 ___bmul 064A          distance@ticks 0020       __end_of_lcd_puts 1785  
               ___ftge 0E90                 _carac1 0063                 ___wmul 0ECA              ??___awdiv 007A  
            ??___lbdiv 0076              ??___ftadd 0042              ??___awmod 0074              ??___lbmod 0071  
            ??___ftneg 0073              ??___lldiv 0078              ??___ftmul 0033              ??___llmod 007D  
            ??___ftsub 007E              ??___fttol 0024              ??___lwdiv 0074              ??__doprnt 0054  
               _fround 0206       ___awdiv@quotient 007C        ___awmod@divisor 0070           __doprnt@_val 00AD  
         __doprnt@flag 00A4        ___awmod@counter 0074                 _printf 084D           __doprnt@fval 00B3  
         __doprnt@prec 00AB       __end_of_msecbase 17EC  ___ftmul@f3_as_product 0037                 fptable 0700  
         ?_wait_sensor 0070                 fptotal 0002              ??_isdigit 0070                 pause@x 0072  
            ??_sprintf 007E       ___lbdiv@dividend 0076        ___lbmod@divisor 0070        ___lbmod@counter 0073  
           ___ftadd@f1 003C             ___ftadd@f2 003F             ___ftge@ff1 0070             ___ftge@ff2 0073  
           ___ftneg@f1 0070             ___awtoft@c 0078    ___bmul@multiplicand 0079             ___ftmul@f1 002D  
           ___ftmul@f2 0030             ___ftsub@f1 004B             ___ftsub@f2 0048             ___fttol@f1 0020  
       __pcstackCOMMON 0070             ___lltoft@c 0078          __end_of_getch 0021          __end_of_scale 0559  
        __end_of_pause 17CC          __end_of_putch 001B       ___lbdiv@quotient 0078             __div_to_l_ 006C  
   __size_of_lcd_clear 0009             __doprnt@ap 0053             __doprnt@pb 00B7                ??_getch 0070  
      __div_to_l_@exp1 0025     __size_of_lcd_write 0013        __div_to_l_@cntr 0024                ??_scale 003F  
              ??_pause 0072        __div_to_l_@quot 0020                ??_putch 007E             __pbssBANK0 0063  
        __div_to_l_@f1 0070          __div_to_l_@f2 0073             __pmaintext 0709                ?___bmul 0079  
              ?___ftge 0070                ?___wmul 0070                _BAUDCTL 0187                ?_fround 0048  
            ?___awtoft 0078              ?___ftpack 0070                ?_printf 0059              ?___lltoft 0078  
            ?_lcd_init 0070              ?_lcd_goto 0070              ?_distance 007C              ?_lcd_puts 0075  
            ?_msecbase 0070             _scale$2923 0043      __end_of_lcd_clear 17F5        __size_of___bmul 000E  
      __size_of___ftge 002C                ___awdiv 0559                ___lbdiv 030B                ___ftadd 0144  
              ___awmod 059E                ___lbmod 0326      __end_of_lcd_write 17DF                ___ftneg 0EE3  
              ___lldiv 0E48        __size_of___wmul 0019                ___ftmul 05DB                ___llmod 0E0A  
              ___ftsub 012E                ___fttol 0F9E                ___lwdiv 0042             _init_comms 07E5  
              __doprnt 0869             ??___awtoft 007B             ??___ftpack 0075        __size_of_fround 0105  
           ??___lltoft 007C        __size_of_printf 000C            ?__div_to_l_ 0070                _dpowers 105E  
              _isdigit 0EBC       ___awmod@dividend 0072   __size_of_wait_sensor 0021          __doprnt@integ 00A6  
              _sprintf 0859          __doprnt@width 00A9             ??_lcd_init 0075             ??_lcd_goto 0075  
           ??_distance 007E             ??_lcd_puts 0077   end_of_initialization 07F8             ??_msecbase 0070  
      ___lldiv@divisor 0070        ___lldiv@counter 007C                printf@f 005B         __tdiv_to_l_@f1 0070  
       __tdiv_to_l_@f2 0073          ??__tdiv_to_l_ 0076       ___lbmod@dividend 0072            ___lbmod@rem 0074  
  __size_of__div_to_l_ 00B5             lcd_write@c 0074            ___ftmul@exp 0036         __end_of___bmul 0658  
       __end_of___ftge 0EBC            ?_init_comms 0070         __end_of___wmul 0EE3         __end_of_fround 030B  
       __end_of_printf 0859    start_initialization 07F3    __end_of__tdiv_to_l_ 1762        ___llmod@divisor 0020  
      ___llmod@counter 007D               ??___bmul 007A               ??___ftge 0076               ??___wmul 0074  
          __doprnt@exp 00B1               ??_fround 007E               ??_printf 007E             fround@prec 0051  
    __size_of___awtoft 001B      __size_of___ftpack 003E           pause@usvalue 0070      __size_of___lltoft 001E  
        __pcstackBANK0 0020          __pcstackBANK1 00A0           _isdigit$2433 0070    __size_of_init_comms 000E  
    __size_of_lcd_init 0036      __size_of_lcd_goto 0006              __doprnt@c 00B6              __doprnt@f 0052  
    __size_of_distance 0036      __size_of_lcd_puts 001D       ___lwdiv@dividend 0072              __pfunctab 0700  
    __size_of_msecbase 000D               ?___awdiv 0076               ?___lbdiv 0075               ?___ftadd 003C  
             ?___awmod 0070              __ptext630 1785              __ptext631 0869              __ptext640 0358  
            __ptext632 17EC              __ptext641 03AC              __ptext633 1768              __ptext650 0559  
            __ptext642 05DB              __ptext634 1762              __ptext651 0F9E              __ptext643 0144  
            __ptext635 012E               ?___lbmod 0070              __ptext660 0EBC              __ptext652 0658  
            __ptext644 17BB              __ptext636 03C7              __ptext628 0859              __ptext661 17DF  
            __ptext653 0326              __ptext645 059E              __ptext637 0206              __ptext629 084D  
            __ptext662 0021              __ptext654 030B              __ptext646 0E48              __ptext638 17CC  
            __ptext663 07E5              __ptext655 0042              __ptext647 0E90              __ptext639 0376  
            __ptext664 001B              __ptext656 0ECA              __ptext648 0EE3              __ptext665 0015  
            __ptext657 064A              __ptext649 0E0A              __ptext658 006C              __ptext659 16EA  
             ?___ftneg 0070               ?___lldiv 0070               ?___ftmul 002D               ?___llmod 0020  
             ?___ftsub 0048              __npowers_ 1010               ?___fttol 0020               ?___lwdiv 0070  
             ?__doprnt 0052              _lcd_clear 17EC              __pstrings 1000            __tdiv_to_l_ 16EA  
            _lcd_write 17CC           ??__div_to_l_ 0076               ?_isdigit 0070       ___lwdiv@quotient 0074  
       __size_of_getch 0006               ?_sprintf 0059         __size_of_scale 0192         __size_of_pause 0011  
       __size_of_putch 0006         ___wmul@product 0074     __end_of__div_to_l_ 0121             ?_lcd_clear 0070  
          __stringbase 100F             ?_lcd_write 0070      ___wmul@multiplier 0070          ??_wait_sensor 0072  
            lcd_puts@s 0075           ??_init_comms 0070       __size_of___awdiv 0045       __size_of___lbdiv 001B  
     __size_of___ftadd 00C2       __size_of___awmod 003D       __size_of___lbmod 001C       __size_of___ftneg 0008  
     __size_of___lldiv 0048       __size_of___ftmul 006F       __size_of___llmod 003E       __size_of___ftsub 0016  
     __size_of___fttol 005B       __size_of___lwdiv 002A               ___awtoft 03AC               ___ftpack 0658  
     __size_of__doprnt 05A1            _fround$2921 004E            _fround$2922 004B               ___lltoft 0358  
     __size_of_isdigit 000E        ___lwdiv@divisor 0070        ___lwdiv@counter 0076               __powers_ 1037  
  __end_of_wait_sensor 0042               _lcd_init 1785               _lcd_goto 1762               _distance 0376  
             _lcd_puts 1768       __size_of_sprintf 0010          __size_of_main 00DC     __end_of_init_comms 07F3  
             _msecbase 17DF               fp__putch 0706            ??_lcd_clear 0075            ??_lcd_write 0074  
            putch@byte 0028               isdigit@c 0071               scale@scl 0046              sprintf@ap 005D  
            sprintf@pb 005E       __tdiv_to_l_@exp1 0025              sprintf@wh 005C       __tdiv_to_l_@cntr 0024  
     __tdiv_to_l_@quot 0020       ___lldiv@dividend 0074              stringcode 100A               printf@ap 005C  
             printf@pb 005D           ?__tdiv_to_l_ 0070             _OPTION_REG 0081               sprintf@f 0059  
          _wait_sensor 0021       ___lldiv@quotient 0078               stringdir 100A               stringtab 1000  
         wait_sensor@i 0072  
