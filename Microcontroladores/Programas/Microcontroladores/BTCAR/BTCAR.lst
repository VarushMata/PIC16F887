

HI-TECH Software PIC PRO Macro Assembler V9.82 build 9453 
                                                                                               Mon May 30 21:24:44 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 9453
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,delta=2
    14                           	psect	text316,local,class=CODE,delta=2
    15                           	psect	text319,local,class=CODE,delta=2
    16                           	psect	text328,local,class=CODE,delta=2
    17                           	psect	text329,local,class=CODE,delta=2
    18                           	psect	text330,local,class=CODE,delta=2
    19                           	psect	functab,global,reloc=256,class=CODE,delta=2
    20                           	psect	pa_nodes,global,class=CODE,delta=2
    21                           	dabs	1,0x7E,2
    22  000A                     	;#
    23                           
    24                           	psect	config
    25  2007  E0F4               	dw	57588	;#
    26  2008  FFFF               	dw	65535	;#
    27                           
    28                           	psect	idataBANK0
    29  0000                     __pidataBANK0:	
    30                           
    31                           	psect	strings
    32  0003                     __pstrings:	
    33  0003                     stringtab:	
    34                           ;	global	stringdir,stringtab,__stringbase
    35                           
    36  0003                     stringcode:	
    37                           ;	String table - string pointers are 1 byte each
    38                           
    39  0003                     stringdir:	
    40  0003  3000               	movlw	high stringdir
    41  0004  008A               	movwf	10
    42  0005  0804               	movf	4,w
    43  0006  0A84               	incf	4,f
    44  0007  0782               	addwf	2,f
    45  0008                     __stringbase:	
    46  0008  3400               	retlw	0
    47  0009                     _dpowers:	
    48  0009  3401               	retlw	1
    49  000A  3400               	retlw	0
    50  000B  340A               	retlw	10
    51  000C  3400               	retlw	0
    52  000D  3464               	retlw	100
    53  000E  3400               	retlw	0
    54  000F  34E8               	retlw	232
    55  0010  3403               	retlw	3
    56  0011  3410               	retlw	16
    57  0012  3427               	retlw	39
    58  0013                     STR_3:	
    59  0013  3420               	retlw	32	;' '
    60  0014  3425               	retlw	37	;'%'
    61  0015  3464               	retlw	100	;'d'
    62  0016  3420               	retlw	32	;' '
    63  0017  3400               	retlw	0
    64  0018                     STR_1:	
    65  0018  3425               	retlw	37	;'%'
    66  0019  3464               	retlw	100	;'d'
    67  001A  3400               	retlw	0
    68  0018                     
    69                           	psect	nvBANK0
    70  0042                     __pnvBANK0:	
    71  0042                     _dist:	
    72  0042                     	ds	2
    73  0044                     _op:	
    74  0044                     	ds	1
    75  001E                     _ADRESH	set	30
    76  0017                     _CCP1CON	set	23
    77  001D                     _CCP2CON	set	29
    78  0015                     _CCPR1L	set	21
    79  001B                     _CCPR2L	set	27
    80  001A                     _RCREG	set	26
    81  0018                     _RCSTA	set	24
    82  0010                     _T1CON	set	16
    83  0012                     _T2CON	set	18
    84  000F                     _TMR1H	set	15
    85  000E                     _TMR1L	set	14
    86  0019                     _TXREG	set	25
    87  0028                     _RA0	set	40
    88  0029                     _RA1	set	41
    89  002A                     _RA2	set	42
    90  002B                     _RA3	set	43
    91  0030                     _RB0	set	48
    92  0031                     _RB1	set	49
    93  0036                     _RB6	set	54
    94  0037                     _RB7	set	55
    95  0065                     _RCIF	set	101
    96  0060                     _TMR1IF	set	96
    97  0080                     _TMR1ON	set	128
    98  0064                     _TXIF	set	100
    99  009F                     _ADCON1	set	159
   100  0092                     _PR2	set	146
   101  0099                     _SPBRG	set	153
   102  0085                     _TRISA	set	133
   103  0086                     _TRISB	set	134
   104  0087                     _TRISC	set	135
   105  0088                     _TRISD	set	136
   106  0089                     _TRISE	set	137
   107  0098                     _TXSTA	set	152
   108  04FF                     _ADFM	set	1279
   109  0430                     _TRISB0	set	1072
   110  0431                     _TRISB1	set	1073
   111  0436                     _TRISB6	set	1078
   112  0437                     _TRISB7	set	1079
   113  043E                     _TRISC6	set	1086
   114  043F                     _TRISC7	set	1087
   115  0188                     _ANSEL	set	392
   116  0189                     _ANSELH	set	393
   117  0187                     _BAUDCTL	set	391
   118  009E                     _ADRESL	set	158
   119                           
   120                           	psect	cinit
   121  0709                     start_initialization:	
   122  0709  3001               	movlw	1
   123                           
   124                           ; Clear objects allocated to BANK0
   125  070A  01B7               	clrf	__pbssBANK0& (0+127)
   126  070B  01B8               	clrf	(__pbssBANK0+1)& (0+127)
   127  070C  01B9               	clrf	(__pbssBANK0+2)& (0+127)
   128  070D  01BA               	clrf	(__pbssBANK0+3)& (0+127)
   129  070E  01BB               	clrf	(__pbssBANK0+4)& (0+127)
   130  070F  01BC               	clrf	(__pbssBANK0+5)& (0+127)
   131  0710  01BD               	clrf	(__pbssBANK0+6)& (0+127)
   132  0711  01BE               	clrf	(__pbssBANK0+7)& (0+127)
   133  0712  01BF               	clrf	(__pbssBANK0+8)& (0+127)
   134  0713  01C0               	clrf	(__pbssBANK0+9)& (0+127)
   135  0714  01C1               	clrf	(__pbssBANK0+10)& (0+127)
   136                           
   137                           ;initializer for _dir
   138  0715  00C5               	movwf	__pdataBANK0& (0+127)
   139  0716                     end_of_initialization:	
   140                           ;End of C runtime variable initialization code
   141                           
   142  0716  0183               	clrf	3
   143  0717  120A  118A  2A91   	ljmp	_main	;jump to C main() function
   144                           
   145                           	psect	bssBANK0
   146  0037                     __pbssBANK0:	
   147  0037                     _dato:	
   148  0037                     	ds	2
   149  0039                     _pwm1:	
   150  0039                     	ds	2
   151  003B                     _pwm2:	
   152  003B                     	ds	2
   153  003D                     _vel:	
   154  003D                     	ds	1
   155  003E                     _carac1:	
   156  003E                     	ds	4
   157                           
   158                           	psect	dataBANK0
   159  0045                     __pdataBANK0:	
   160  0045                     _dir:	
   161  0045                     	ds	1
   162                           
   163                           	psect	cstackCOMMON
   164  0070                     __pcstackCOMMON:	
   165  0070                     ?_SR:	
   166  0070                     ?_rutina:	
   167                           ; 0 bytes @ 0x0
   168                           
   169  0070                     ?_PWM:	
   170                           ; 0 bytes @ 0x0
   171                           
   172  0070                     ??_PWM:	
   173                           ; 0 bytes @ 0x0
   174                           
   175  0070                     ?_line:	
   176                           ; 0 bytes @ 0x0
   177                           
   178  0070                     ?_isdigit:	
   179                           ; 0 bytes @ 0x0
   180                           
   181  0070                     ??_isdigit:	
   182                           ; 1 bit 
   183                           
   184  0070                     ?_putch:	
   185                           ; 0 bytes @ 0x0
   186                           
   187  0070                     ??_getch:	
   188                           ; 0 bytes @ 0x0
   189                           
   190  0070                     ?_init_comms:	
   191                           ; 0 bytes @ 0x0
   192                           
   193  0070                     ??_init_comms:	
   194                           ; 0 bytes @ 0x0
   195                           
   196  0070                     ?_main:	
   197                           ; 0 bytes @ 0x0
   198                           
   199  0070                     ?_getch:	
   200                           ; 0 bytes @ 0x0
   201                           
   202  0070                     ?___wmul:	
   203                           ; 1 bytes @ 0x0
   204                           
   205  0070                     ?___lwdiv:	
   206                           ; 2 bytes @ 0x0
   207                           
   208  0070                     putch@byte:	
   209                           ; 2 bytes @ 0x0
   210                           
   211  0070                     _isdigit$2399:	
   212                           ; 1 bytes @ 0x0
   213                           
   214  0070                     ___wmul@multiplier:	
   215                           ; 1 bytes @ 0x0
   216                           
   217  0070                     ___lwdiv@divisor:	
   218                           ; 2 bytes @ 0x0
   219                           
   220                           
   221                           ; 2 bytes @ 0x0
   222  0070                     	ds	1
   223  0071                     ??_putch:	
   224  0071                     isdigit@c:	
   225                           ; 0 bytes @ 0x1
   226                           
   227                           
   228                           ; 1 bytes @ 0x1
   229  0071                     	ds	1
   230  0072                     ??_rutina:	
   231  0072                     ??_line:	
   232                           ; 0 bytes @ 0x2
   233                           
   234  0072                     ___wmul@multiplicand:	
   235                           ; 0 bytes @ 0x2
   236                           
   237  0072                     ___lwdiv@dividend:	
   238                           ; 2 bytes @ 0x2
   239                           
   240                           
   241                           ; 2 bytes @ 0x2
   242  0072                     	ds	2
   243  0074                     ??___wmul:	
   244  0074                     ??___lwdiv:	
   245                           ; 0 bytes @ 0x4
   246                           
   247  0074                     ___wmul@product:	
   248                           ; 0 bytes @ 0x4
   249                           
   250  0074                     ___lwdiv@quotient:	
   251                           ; 2 bytes @ 0x4
   252                           
   253                           
   254                           ; 2 bytes @ 0x4
   255  0074                     	ds	2
   256  0076                     ?_atoi:	
   257  0076                     ___lwdiv@counter:	
   258                           ; 2 bytes @ 0x6
   259                           
   260                           
   261                           ; 1 bytes @ 0x6
   262  0076                     	ds	1
   263  0077                     ?___lwmod:	
   264  0077                     ___lwmod@divisor:	
   265                           ; 2 bytes @ 0x7
   266                           
   267                           
   268                           ; 2 bytes @ 0x7
   269  0077                     	ds	1
   270  0078                     ??_atoi:	
   271                           
   272                           ; 0 bytes @ 0x8
   273  0078                     	ds	1
   274  0079                     ___lwmod@dividend:	
   275                           
   276                           ; 2 bytes @ 0x9
   277  0079                     	ds	1
   278  007A                     atoi@sign:	
   279                           
   280                           ; 1 bytes @ 0xA
   281  007A                     	ds	1
   282  007B                     ??___lwmod:	
   283  007B                     ___lwmod@counter:	
   284                           ; 0 bytes @ 0xB
   285                           
   286  007B                     atoi@a:	
   287                           ; 1 bytes @ 0xB
   288                           
   289                           
   290                           ; 2 bytes @ 0xB
   291  007B                     	ds	1
   292  007C                     ?__doprnt:	
   293  007C                     __doprnt@f:	
   294                           ; 2 bytes @ 0xC
   295                           
   296                           
   297                           ; 1 bytes @ 0xC
   298  007C                     	ds	1
   299  007D                     __doprnt@ap:	
   300  007D                     atoi@s:	
   301                           ; 1 bytes @ 0xD
   302                           
   303                           
   304                           ; 1 bytes @ 0xD
   305  007D                     	ds	1
   306  007E                     ??_printf:	
   307  007E                     ??_sprintf:	
   308                           ; 0 bytes @ 0xE
   309                           
   310                           
   311                           	psect	cstackBANK0
   312  0020                     __pcstackBANK0:	
   313                           ; 0 bytes @ 0xE
   314                           
   315  0020                     ??__doprnt:	
   316                           
   317                           ; 0 bytes @ 0x0
   318  0020                     	ds	2
   319  0022                     __doprnt@flag:	
   320                           
   321                           ; 1 bytes @ 0x2
   322  0022                     	ds	1
   323  0023                     __doprnt@prec:	
   324                           
   325                           ; 1 bytes @ 0x3
   326  0023                     	ds	1
   327  0024                     __doprnt@_val:	
   328                           
   329                           ; 4 bytes @ 0x4
   330  0024                     	ds	4
   331  0028                     __doprnt@c:	
   332                           
   333                           ; 1 bytes @ 0x8
   334  0028                     	ds	1
   335  0029                     __doprnt@pb:	
   336                           
   337                           ; 1 bytes @ 0x9
   338  0029                     	ds	1
   339  002A                     ?_printf:	
   340  002A                     ?_sprintf:	
   341                           ; 2 bytes @ 0xA
   342                           
   343  002A                     sprintf@f:	
   344                           ; 2 bytes @ 0xA
   345                           
   346                           
   347                           ; 1 bytes @ 0xA
   348  002A                     	ds	2
   349  002C                     printf@f:	
   350                           
   351                           ; 1 bytes @ 0xC
   352  002C                     	ds	1
   353  002D                     printf@ap:	
   354  002D                     sprintf@wh:	
   355                           ; 1 bytes @ 0xD
   356                           
   357                           
   358                           ; 1 bytes @ 0xD
   359  002D                     	ds	1
   360  002E                     sprintf@ap:	
   361  002E                     printf@pb:	
   362                           ; 1 bytes @ 0xE
   363                           
   364                           
   365                           ; 2 bytes @ 0xE
   366  002E                     	ds	1
   367  002F                     sprintf@pb:	
   368                           
   369                           ; 2 bytes @ 0xF
   370  002F                     	ds	2
   371  0031                     ??_SR:	
   372                           
   373                           ; 0 bytes @ 0x11
   374  0031                     	ds	1
   375  0032                     ??_main:	
   376                           
   377                           ; 0 bytes @ 0x12
   378  0032                     	ds	3
   379  0035                     main@x:	
   380                           
   381                           ; 2 bytes @ 0x15
   382  0035                     	ds	2
   383                           
   384                           	psect	maintext
   385  0291                     __pmaintext:	
   386 ;;Data sizes: Strings 8, constant 10, data 1, bss 11, persistent 3 stack 0
   387 ;;Auto spaces:   Size  Autos    Used
   388 ;; COMMON          14     14      14
   389 ;; BANK0           80     23      38
   390 ;; BANK1           80      0       0
   391 ;; BANK3           96      0       0
   392 ;; BANK2           96      0       0
   393 ;;
   394 ;; Pointer list with targets:
   395 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   396 ;;
   397 ;; ?___lwmod	unsigned int  size(1) Largest target is 2
   398 ;;		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 
   399 ;;
   400 ;; ?_atoi	int  size(1) Largest target is 0
   401 ;;
   402 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   403 ;;
   404 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 3
   405 ;;		 -> STR_2(CODE[3]), 
   406 ;;
   407 ;; ?_sprintf	int  size(1) Largest target is 4
   408 ;;		 -> NULL(NULL[0]), carac1(BANK0[4]), 
   409 ;;
   410 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
   411 ;;		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 
   412 ;;
   413 ;; sprintf@wh	PTR unsigned char  size(1) Largest target is 4
   414 ;;		 -> carac1(BANK0[4]), 
   415 ;;
   416 ;; pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
   417 ;;		 -> Absolute function(), putch(), 
   418 ;;
   419 ;; pb.ptr	PTR unsigned char  size(1) Largest target is 4
   420 ;;		 -> NULL(NULL[0]), carac1(BANK0[4]), 
   421 ;;
   422 ;; printf@f	PTR const unsigned char  size(1) Largest target is 5
   423 ;;		 -> STR_3(CODE[5]), STR_1(CODE[3]), 
   424 ;;
   425 ;; ?_printf	int  size(1) Largest target is 0
   426 ;;
   427 ;; printf@ap	PTR void [1] size(1) Largest target is 2
   428 ;;		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 
   429 ;;
   430 ;; pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
   431 ;;		 -> Absolute function(), putch(), 
   432 ;;
   433 ;; pb.ptr	PTR unsigned char  size(1) Largest target is 4
   434 ;;		 -> NULL(NULL[0]), carac1(BANK0[4]), 
   435 ;;
   436 ;; atoi@s	PTR const unsigned char  size(1) Largest target is 4
   437 ;;		 -> carac1(BANK0[4]), 
   438 ;;
   439 ;; _doprnt@ap	PTR PTR void  size(1) Largest target is 2
   440 ;;		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 
   441 ;;
   442 ;; _doprnt@f	PTR const unsigned char  size(1) Largest target is 5
   443 ;;		 -> STR_3(CODE[5]), STR_2(CODE[3]), STR_1(CODE[3]), 
   444 ;;
   445 ;; S1846__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
   446 ;;		 -> Absolute function(), putch(), 
   447 ;;
   448 ;; _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
   449 ;;		 -> Absolute function(), putch(), 
   450 ;;
   451 ;; S1846__prbuf$ptr	PTR unsigned char  size(1) Largest target is 4
   452 ;;		 -> NULL(NULL[0]), carac1(BANK0[4]), 
   453 ;;
   454 ;; _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 4
   455 ;;		 -> NULL(NULL[0]), carac1(BANK0[4]), 
   456 ;;
   457 ;; _doprnt@pb	PTR struct __prbuf size(1) Largest target is 3
   458 ;;		 -> sprintf@pb(BANK0[2]), printf@pb(BANK0[2]), 
   459 ;;
   460 ;; S1865$_cp	PTR const unsigned char  size(1) Largest target is 0
   461 ;;
   462 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   463 ;;
   464 ;;
   465 ;; Critical Paths under _main in COMMON
   466 ;;
   467 ;;   _SR->_atoi
   468 ;;   _sprintf->__doprnt
   469 ;;   _printf->__doprnt
   470 ;;   _line->_PWM
   471 ;;   _rutina->_PWM
   472 ;;   __doprnt->___lwmod
   473 ;;   _atoi->___wmul
   474 ;;   ___lwmod->___lwdiv
   475 ;;
   476 ;; Critical Paths under _main in BANK0
   477 ;;
   478 ;;   _main->_SR
   479 ;;   _SR->_sprintf
   480 ;;   _sprintf->__doprnt
   481 ;;   _printf->__doprnt
   482 ;;
   483 ;; Critical Paths under _main in BANK1
   484 ;;
   485 ;;   None.
   486 ;;
   487 ;; Critical Paths under _main in BANK3
   488 ;;
   489 ;;   None.
   490 ;;
   491 ;; Critical Paths under _main in BANK2
   492 ;;
   493 ;;   None.
   494 ;;
   495 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   496 ;;
   497 ;;
   498 ;;Call Graph Tables:
   499 ;;
   500 ;; ---------------------------------------------------------------------------------
   501 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   502 ;; ---------------------------------------------------------------------------------
   503 ;; (0) _main                                                 5     5      0    2940
   504 ;;                                             18 BANK0      5     5      0
   505 ;;                         _init_comms
   506 ;;                              _getch
   507 ;;                                 _SR
   508 ;;                             _rutina
   509 ;;                                _PWM
   510 ;;                               _line
   511 ;; ---------------------------------------------------------------------------------
   512 ;; (1) _SR                                                   1     1      0    2894
   513 ;;                                             17 BANK0      1     1      0
   514 ;;                            ___lwdiv
   515 ;;                             _printf
   516 ;;                            _sprintf
   517 ;;                               _atoi
   518 ;; ---------------------------------------------------------------------------------
   519 ;; (2) _sprintf                                              7     4      3    1200
   520 ;;                                             10 BANK0      7     4      3
   521 ;;                            __doprnt
   522 ;; ---------------------------------------------------------------------------------
   523 ;; (2) _printf                                               6     4      2    1144
   524 ;;                                             10 BANK0      6     4      2
   525 ;;                            __doprnt
   526 ;; ---------------------------------------------------------------------------------
   527 ;; (1) _line                                                 0     0      0       0
   528 ;;                                _PWM
   529 ;; ---------------------------------------------------------------------------------
   530 ;; (1) _rutina                                               3     3      0       0
   531 ;;                                              2 COMMON     3     3      0
   532 ;;                                _PWM
   533 ;; ---------------------------------------------------------------------------------
   534 ;; (3) __doprnt                                             12    10      2    1035
   535 ;;                                             12 COMMON     2     0      2
   536 ;;                                              0 BANK0     10    10      0
   537 ;;                   Absolute function
   538 ;;                              _putch
   539 ;;                            ___lwdiv
   540 ;;                            ___lwmod
   541 ;; ---------------------------------------------------------------------------------
   542 ;; (2) _atoi                                                 8     6      2     388
   543 ;;                                              6 COMMON     8     6      2
   544 ;;                             ___wmul
   545 ;;                            _isdigit
   546 ;; ---------------------------------------------------------------------------------
   547 ;; (2) _PWM                                                  2     2      0       0
   548 ;;                                              0 COMMON     2     2      0
   549 ;; ---------------------------------------------------------------------------------
   550 ;; (4) ___lwmod                                              5     1      4     159
   551 ;;                                              7 COMMON     5     1      4
   552 ;;                            ___lwdiv (ARG)
   553 ;; ---------------------------------------------------------------------------------
   554 ;; (4) ___lwdiv                                              7     3      4     162
   555 ;;                                              0 COMMON     7     3      4
   556 ;; ---------------------------------------------------------------------------------
   557 ;; (3) ___wmul                                               6     2      4      92
   558 ;;                                              0 COMMON     6     2      4
   559 ;; ---------------------------------------------------------------------------------
   560 ;; (3) _isdigit                                              2     2      0      68
   561 ;;                                              0 COMMON     2     2      0
   562 ;; ---------------------------------------------------------------------------------
   563 ;; (4) Absolute function(Fake)                               1     0      1       0
   564 ;;                                              0 COMMON     1     0      1
   565 ;; ---------------------------------------------------------------------------------
   566 ;; (1) _init_comms                                           0     0      0       0
   567 ;; ---------------------------------------------------------------------------------
   568 ;; (1) _getch                                                0     0      0       0
   569 ;; ---------------------------------------------------------------------------------
   570 ;; (4) _putch                                                1     0      1      22
   571 ;;                                              0 COMMON     1     0      1
   572 ;; ---------------------------------------------------------------------------------
   573 ;; Estimated maximum stack depth 4
   574 ;; ---------------------------------------------------------------------------------
   575 ;; Call Graph Graphs:
   576 ;; _main (ROOT)
   577 ;;   _init_comms
   578 ;;   _getch
   579 ;;   _SR
   580 ;;     ___lwdiv
   581 ;;     _printf
   582 ;;       __doprnt
   583 ;;         Absolute function(Fake)
   584 ;;         _putch
   585 ;;         ___lwdiv
   586 ;;         ___lwmod
   587 ;;           ___lwdiv (ARG)
   588 ;;     _sprintf
   589 ;;       __doprnt
   590 ;;         Absolute function(Fake)
   591 ;;         _putch
   592 ;;         ___lwdiv
   593 ;;         ___lwmod
   594 ;;           ___lwdiv (ARG)
   595 ;;     _atoi
   596 ;;       ___wmul
   597 ;;       _isdigit
   598 ;;   _rutina
   599 ;;     _PWM
   600 ;;   _PWM
   601 ;;   _line
   602 ;;     _PWM
   603 ;;
   604 ;; Address spaces:
   605 ;;Name               Size   Autos  Total    Cost      Usage
   606 ;;BANK3               60      0       0       9        0.0%
   607 ;;BITBANK3            60      0       0       8        0.0%
   608 ;;SFR3                 0      0       0       4        0.0%
   609 ;;BITSFR3              0      0       0       4        0.0%
   610 ;;BANK2               60      0       0      11        0.0%
   611 ;;BITBANK2            60      0       0      10        0.0%
   612 ;;SFR2                 0      0       0       5        0.0%
   613 ;;BITSFR2              0      0       0       5        0.0%
   614 ;;SFR1                 0      0       0       2        0.0%
   615 ;;BITSFR1              0      0       0       2        0.0%
   616 ;;BANK1               50      0       0       7        0.0%
   617 ;;BITBANK1            50      0       0       6        0.0%
   618 ;;CODE                 0      0       0       0        0.0%
   619 ;;DATA                 0      0      38      12        0.0%
   620 ;;ABS                  0      0      34       3        0.0%
   621 ;;NULL                 0      0       0       0        0.0%
   622 ;;STACK                0      0       4       2        0.0%
   623 ;;BANK0               50     17      26       5       47.5%
   624 ;;BITBANK0            50      0       0       4        0.0%
   625 ;;SFR0                 0      0       0       1        0.0%
   626 ;;BITSFR0              0      0       0       1        0.0%
   627 ;;COMMON               E      E       E       1      100.0%
   628 ;;BITCOMMON            E      0       0       0        0.0%
   629 ;;EEDATA             100      0       0       0        0.0%
   630                           
   631                           
   632 ;; *************** function _main *****************
   633 ;; Defined at:
   634 ;;		line 80 in file "C:\Users\Jorge\OneDrive\Escritorio\BTCAR\BTCAR.c"
   635 ;; Parameters:    Size  Location     Type
   636 ;;		None
   637 ;; Auto vars:     Size  Location     Type
   638 ;;  x               2   21[BANK0 ] int 
   639 ;; Return value:  Size  Location     Type
   640 ;;		None               void
   641 ;; Registers used:
   642 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   643 ;; Tracked objects:
   644 ;;		On entry : 17F/0
   645 ;;		On exit  : 0/0
   646 ;;		Unchanged: 0/0
   647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   648 ;;      Params:         0       0       0       0       0
   649 ;;      Locals:         0       2       0       0       0
   650 ;;      Temps:          0       3       0       0       0
   651 ;;      Totals:         0       5       0       0       0
   652 ;;Total ram usage:        5 bytes
   653 ;; Hardware stack levels required when called:    4
   654 ;; This function calls:
   655 ;;		_init_comms
   656 ;;		_getch
   657 ;;		_SR
   658 ;;		_rutina
   659 ;;		_PWM
   660 ;;		_line
   661 ;; This function is called by:
   662 ;;		Startup code after reset
   663 ;; This function uses a non-reentrant model
   664 ;;
   665  0291                     _main:	
   666                           
   667                           ;BTCAR.c: 82: ANSEL = 0x60;
   668                           
   669                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   670  0291  3060               	movlw	96
   671  0292  1683               	bsf	3,5	;RP0=1, select bank3
   672  0293  1703               	bsf	3,6	;RP1=1, select bank3
   673  0294  0088               	movwf	8	;volatile
   674                           
   675                           ;BTCAR.c: 83: ANSELH = 0x00;
   676  0295  0189               	clrf	9	;volatile
   677                           
   678                           ;BTCAR.c: 84: TRISB = 0xFF;
   679  0296  30FF               	movlw	255
   680  0297  1303               	bcf	3,6	;RP1=0, select bank1
   681  0298  0086               	movwf	6	;volatile
   682                           
   683                           ;BTCAR.c: 85: TRISB0 = 1;
   684  0299  1406               	bsf	6,0
   685                           
   686                           ;BTCAR.c: 86: TRISB1 = 0;
   687  029A  1086               	bcf	6,1
   688                           
   689                           ;BTCAR.c: 87: TRISB7 = 1;
   690  029B  1786               	bsf	6,7
   691                           
   692                           ;BTCAR.c: 88: TRISB6 = 1;
   693  029C  1706               	bsf	6,6
   694                           
   695                           ;BTCAR.c: 89: TRISA = 0x00;
   696  029D  0185               	clrf	5	;volatile
   697                           
   698                           ;BTCAR.c: 90: TRISD = 0x00;
   699  029E  0188               	clrf	8	;volatile
   700                           
   701                           ;BTCAR.c: 91: TRISC = 0x00;
   702  029F  0187               	clrf	7	;volatile
   703                           
   704                           ;BTCAR.c: 92: TRISE = 0x07;
   705  02A0  3007               	movlw	7
   706  02A1  0089               	movwf	9	;volatile
   707                           
   708                           ;BTCAR.c: 93: ADCON1 = 0xFF;
   709  02A2  30FF               	movlw	255
   710  02A3  009F               	movwf	31	;volatile
   711                           
   712                           ;BTCAR.c: 95: T1CON = 0x00;
   713  02A4  1283               	bcf	3,5	;RP0=0, select bank0
   714  02A5  0190               	clrf	16	;volatile
   715                           
   716                           ;BTCAR.c: 96: TMR1H=0x00;
   717  02A6  018F               	clrf	15	;volatile
   718                           
   719                           ;BTCAR.c: 97: TMR1L=0x00;
   720  02A7  018E               	clrf	14	;volatile
   721                           
   722                           ;BTCAR.c: 99: T2CON = 0x07;
   723  02A8  3007               	movlw	7
   724  02A9  0092               	movwf	18	;volatile
   725                           
   726                           ;BTCAR.c: 100: PR2 = 0xFF;
   727  02AA  30FF               	movlw	255
   728  02AB  1683               	bsf	3,5	;RP0=1, select bank1
   729  02AC  0092               	movwf	18	;volatile
   730                           
   731                           ;BTCAR.c: 101: CCPR1L = 0x80;
   732  02AD  3080               	movlw	128
   733  02AE  1283               	bcf	3,5	;RP0=0, select bank0
   734  02AF  0095               	movwf	21	;volatile
   735                           
   736                           ;BTCAR.c: 102: CCP1CON = 0x0C;
   737  02B0  300C               	movlw	12
   738  02B1  0097               	movwf	23	;volatile
   739                           
   740                           ;BTCAR.c: 103: ADFM = 0;
   741  02B2  1683               	bsf	3,5	;RP0=1, select bank1
   742  02B3  139F               	bcf	31,7
   743                           
   744                           ;BTCAR.c: 105: RB1=0;
   745  02B4  1283               	bcf	3,5	;RP0=0, select bank0
   746  02B5  1086               	bcf	6,1
   747                           
   748                           ;BTCAR.c: 106: RB0=0;
   749  02B6  1006               	bcf	6,0
   750                           
   751                           ;BTCAR.c: 108: init_comms();
   752  02B7  120A  118A  271A   	fcall	_init_comms
      +       120A  118A         
   753  02BC                     l3589:	
   754                           
   755                           ;BTCAR.c: 112: RA0 = 0;
   756  02BC  1283               	bcf	3,5	;RP0=0, select bank0
   757  02BD  1303               	bcf	3,6	;RP1=0, select bank0
   758  02BE  1005               	bcf	5,0
   759                           
   760                           ;BTCAR.c: 113: RA1 = 0;
   761  02BF  1085               	bcf	5,1
   762                           
   763                           ;BTCAR.c: 114: RA2 = 0;
   764  02C0  1105               	bcf	5,2
   765                           
   766                           ;BTCAR.c: 115: RA3 = 0;
   767  02C1  1185               	bcf	5,3
   768                           
   769                           ;BTCAR.c: 116: TMR1H=0x00;
   770  02C2  018F               	clrf	15	;volatile
   771                           
   772                           ;BTCAR.c: 117: TMR1L=0x00;
   773  02C3  018E               	clrf	14	;volatile
   774                           
   775                           ;BTCAR.c: 118: dist=0;
   776  02C4  01C2               	clrf	_dist
   777  02C5  01C3               	clrf	_dist+1
   778                           
   779                           ;BTCAR.c: 119: dir=1;
   780  02C6  01C5               	clrf	_dir
   781  02C7  0AC5               	incf	_dir,f
   782                           
   783                           ;BTCAR.c: 121: op = getch();
   784  02C8  120A  118A  272D   	fcall	_getch
      +       120A  118A         
   785  02CD  00C4               	movwf	_op
   786                           
   787                           ;BTCAR.c: 123: switch(op){
   788  02CE  2B77               	goto	l3697
   789  02CF                     l3607:	
   790                           
   791                           ;BTCAR.c: 127: SR();
   792  02CF  120A  118A  24CD   	fcall	_SR
      +       120A  118A         
   793                           
   794                           ;BTCAR.c: 129: break;
   795  02D4  2B85               	goto	l3699
   796  02D5                     l3609:	
   797                           
   798                           ;BTCAR.c: 133: rutina();
   799  02D5  120A  118A  23C0   	fcall	_rutina
      +       120A  118A         
   800                           
   801                           ;BTCAR.c: 135: break;
   802  02DA  2B85               	goto	l3699
   803  02DB                     l3611:	
   804                           ;BTCAR.c: 139: while(dir!='0'){
   805                           
   806                           ;BTCAR.c: 137: case '3':
   807                           
   808                           
   809                           ;BTCAR.c: 141: dir=getch();
   810  02DB  120A  118A  272D   	fcall	_getch
      +       120A  118A         
   811  02E0  00C5               	movwf	_dir
   812                           
   813                           ;BTCAR.c: 142: vel=getch();
   814  02E1  120A  118A  272D   	fcall	_getch
      +       120A  118A         
   815  02E6  00BD               	movwf	_vel
   816                           
   817                           ;BTCAR.c: 144: if(vel=='1'){
   818  02E7  3A31               	xorlw	49
   819  02E8  1D03               	skipz
   820  02E9  2AF2               	goto	l3619
   821                           
   822                           ;BTCAR.c: 145: pwm1=500;
   823  02EA  30F4               	movlw	244
   824  02EB  00B9               	movwf	_pwm1
   825  02EC  3001               	movlw	1
   826  02ED  00BA               	movwf	_pwm1+1
   827                           
   828                           ;BTCAR.c: 146: pwm2=500;
   829  02EE  30F4               	movlw	244
   830  02EF  00BB               	movwf	_pwm2
   831  02F0  3001               	movlw	1
   832  02F1  2B09               	goto	L2
   833  02F2                     l3619:	
   834                           ;BTCAR.c: 148: }else if(vel=='2'){
   835                           
   836  02F2  083D               	movf	_vel,w
   837  02F3  3A32               	xorlw	50
   838  02F4  1D03               	skipz
   839  02F5  2AFE               	goto	l3625
   840                           
   841                           ;BTCAR.c: 149: pwm1=765;
   842  02F6  30FD               	movlw	253
   843  02F7  00B9               	movwf	_pwm1
   844  02F8  3002               	movlw	2
   845  02F9  00BA               	movwf	_pwm1+1
   846                           
   847                           ;BTCAR.c: 150: pwm2=765;
   848  02FA  30FD               	movlw	253
   849  02FB  00BB               	movwf	_pwm2
   850  02FC  3002               	movlw	2
   851  02FD  2B09               	goto	L2
   852  02FE                     l3625:	
   853  02FE  083D               	movf	_vel,w
   854  02FF  3A33               	xorlw	51
   855  0300  1D03               	skipz
   856  0301  2B0F               	goto	l3631
   857                           
   858                           ;BTCAR.c: 153: pwm1=1023;
   859  0302  30FF               	movlw	255
   860  0303  00B9               	movwf	_pwm1
   861  0304  3003               	movlw	3
   862  0305  00BA               	movwf	_pwm1+1
   863                           
   864                           ;BTCAR.c: 154: pwm2=1023;
   865  0306  30FF               	movlw	255
   866  0307  00BB               	movwf	_pwm2
   867  0308  3003               	movlw	3
   868  0309                     L2:	
   869  0309  00BC               	movwf	_pwm2+1
   870                           
   871                           ;BTCAR.c: 147: PWM();
   872  030A  120A  118A  2488   	fcall	_PWM
      +       120A  118A         
   873  030F                     l3631:	
   874                           
   875                           ;BTCAR.c: 156: }
   876                           ;BTCAR.c: 158: if(dir=='1'){
   877  030F  1283               	bcf	3,5	;RP0=0, select bank0
   878  0310  1303               	bcf	3,6	;RP1=0, select bank0
   879  0311  0845               	movf	_dir,w
   880  0312  3A31               	xorlw	49
   881  0313  1D03               	skipz
   882  0314  2B17               	goto	l3641
   883                           
   884                           ;BTCAR.c: 159: RA0 = 1;
   885  0315  1405               	bsf	5,0
   886  0316  2B3A               	goto	L3
   887  0317                     l3641:	
   888                           ;BTCAR.c: 164: }else if(dir=='2'){
   889                           
   890                           ;BTCAR.c: 160: RA2 = 1;
   891                           
   892  0317  0845               	movf	_dir,w
   893  0318  3A32               	xorlw	50
   894  0319  1D03               	skipz
   895  031A  2B2E               	goto	l3651
   896  031B  3002               	movlw	2
   897                           
   898                           ;BTCAR.c: 165: RA1 = 1;
   899  031C  1485               	bsf	5,1
   900                           
   901                           ;BTCAR.c: 166: RA3 = 1;
   902  031D  1585               	bsf	5,3
   903                           
   904                           ;BTCAR.c: 167: _delay((unsigned long)((300)*(4000000/4000.0)));
   905  031E  00B4               	movwf	??_main+2
   906  031F  3086               	movlw	134
   907  0320  00B3               	movwf	??_main+1
   908  0321  3099               	movlw	153
   909  0322  00B2               	movwf	??_main
   910  0323                     u1087:	
   911  0323  0BB2               	decfsz	??_main,f
   912  0324  2B23               	goto	u1087
   913  0325  0BB3               	decfsz	??_main+1,f
   914  0326  2B23               	goto	u1087
   915  0327  0BB4               	decfsz	??_main+2,f
   916  0328  2B23               	goto	u1087
   917                           
   918                           ;BTCAR.c: 168: RA1 = 0;
   919  0329  1283               	bcf	3,5	;RP0=0, select bank0
   920  032A  1303               	bcf	3,6	;RP1=0, select bank0
   921  032B  1085               	bcf	5,1
   922                           
   923                           ;BTCAR.c: 169: RA3 = 0;
   924  032C  1185               	bcf	5,3
   925                           
   926                           ;BTCAR.c: 170: }else if(dir=='3'){
   927  032D  2B4B               	goto	l1080
   928  032E                     l3651:	
   929  032E  0845               	movf	_dir,w
   930  032F  3A33               	xorlw	51
   931  0330  1D03               	skipz
   932  0331  2B35               	goto	l3661
   933                           
   934                           ;BTCAR.c: 171: RA0 = 1;
   935  0332  1405               	bsf	5,0
   936                           
   937                           ;BTCAR.c: 172: RA2 = 0;
   938  0333  1105               	bcf	5,2
   939  0334  2B3B               	goto	l3635
   940  0335                     l3661:	
   941  0335  0845               	movf	_dir,w
   942  0336  3A34               	xorlw	52
   943  0337  1D03               	skipz
   944  0338  2B4B               	goto	l1080
   945                           
   946                           ;BTCAR.c: 177: RA0 = 0;
   947  0339  1005               	bcf	5,0
   948  033A                     L3:	
   949                           
   950                           ;BTCAR.c: 178: RA2 = 1;
   951  033A  1505               	bsf	5,2
   952  033B                     l3635:	
   953                           
   954                           ;BTCAR.c: 161: _delay((unsigned long)((300)*(4000000/4000.0)));
   955  033B  3002               	movlw	2
   956  033C  00B4               	movwf	??_main+2
   957  033D  3086               	movlw	134
   958  033E  00B3               	movwf	??_main+1
   959  033F  3099               	movlw	153
   960  0340  00B2               	movwf	??_main
   961  0341                     u1077:	
   962  0341  0BB2               	decfsz	??_main,f
   963  0342  2B41               	goto	u1077
   964  0343  0BB3               	decfsz	??_main+1,f
   965  0344  2B41               	goto	u1077
   966  0345  0BB4               	decfsz	??_main+2,f
   967  0346  2B41               	goto	u1077
   968                           
   969                           ;BTCAR.c: 162: RA0 = 0;
   970  0347  1283               	bcf	3,5	;RP0=0, select bank0
   971  0348  1303               	bcf	3,6	;RP1=0, select bank0
   972  0349  1005               	bcf	5,0
   973                           
   974                           ;BTCAR.c: 163: RA2 = 0;
   975  034A  1105               	bcf	5,2
   976  034B                     l1080:	
   977  034B  0845               	movf	_dir,w
   978  034C  3A30               	xorlw	48
   979  034D  1903               	btfsc	3,2
   980  034E  2B85               	goto	l3699
   981  034F  2ADB               	goto	l3611
   982  0350                     l3671:	
   983                           
   984                           ;BTCAR.c: 189: for(int x=0;x<1000;x++){
   985  0350  01B5               	clrf	main@x
   986  0351  01B6               	clrf	main@x+1
   987  0352                     l3677:	
   988                           
   989                           ;BTCAR.c: 191: line();
   990  0352  120A  118A  238D   	fcall	_line
      +       120A  118A         
   991                           
   992                           ;BTCAR.c: 192: _delay((unsigned long)((50)*(4000000/4000.0)));
   993  0357  3041               	movlw	65
   994  0358  00B3               	movwf	??_main+1
   995  0359  30EE               	movlw	238
   996  035A  00B2               	movwf	??_main
   997  035B                     u1097:	
   998  035B  0BB2               	decfsz	??_main,f
   999  035C  2B5B               	goto	u1097
  1000  035D  0BB3               	decfsz	??_main+1,f
  1001  035E  2B5B               	goto	u1097
  1002  035F  0064               	clrwdt
  1003                           
  1004                           ;BTCAR.c: 193: RA0 = 0;
  1005  0360  1283               	bcf	3,5	;RP0=0, select bank0
  1006  0361  1303               	bcf	3,6	;RP1=0, select bank0
  1007  0362  1005               	bcf	5,0
  1008                           
  1009                           ;BTCAR.c: 194: RA1 = 0;
  1010  0363  1085               	bcf	5,1
  1011                           
  1012                           ;BTCAR.c: 195: RA2 = 0;
  1013  0364  1105               	bcf	5,2
  1014                           
  1015                           ;BTCAR.c: 196: RA3 = 0;
  1016  0365  1185               	bcf	5,3
  1017  0366  0AB5               	incf	main@x,f
  1018  0367  1903               	skipnz
  1019  0368  0AB6               	incf	main@x+1,f
  1020  0369  0836               	movf	main@x+1,w
  1021  036A  3A80               	xorlw	128
  1022  036B  00FF               	movwf	127
  1023  036C  3083               	movlw	131
  1024  036D  027F               	subwf	127,w
  1025  036E  1D03               	skipz
  1026  036F  2B72               	goto	u1065
  1027  0370  30E8               	movlw	232
  1028  0371  0235               	subwf	main@x,w
  1029  0372                     u1065:	
  1030  0372  1803               	btfsc	3,0
  1031  0373  2B85               	goto	l3699
  1032  0374  2B52               	goto	l3677
  1033  0375                     l3693:	
  1034                           
  1035                           ;BTCAR.c: 203: op = 0;
  1036  0375  01C4               	clrf	_op
  1037                           
  1038                           ;BTCAR.c: 204: break;
  1039  0376  2B85               	goto	l3699
  1040  0377                     l3697:	
  1041  0377  0844               	movf	_op,w
  1042                           
  1043                           ; Switch size 1, requested type "space"
  1044                           ; Number of cases is 4, Range of values is 49 to 52
  1045                           ; switch strategies available:
  1046                           ; Name         Instructions Cycles
  1047                           ; simple_byte           13     7 (average)
  1048                           ; direct_byte           23    11 (fixed)
  1049                           ; jumptable            263     9 (fixed)
  1050                           ;	Chosen strategy is simple_byte
  1051  0378  3A31               	xorlw	49	; case 49
  1052  0379  1903               	skipnz
  1053  037A  2ACF               	goto	l3607
  1054  037B  3A03               	xorlw	3	; case 50
  1055  037C  1903               	skipnz
  1056  037D  2AD5               	goto	l3609
  1057  037E  3A01               	xorlw	1	; case 51
  1058  037F  1903               	skipnz
  1059  0380  2B4B               	goto	l1080
  1060  0381  3A07               	xorlw	7	; case 52
  1061  0382  1903               	skipnz
  1062  0383  2B50               	goto	l3671
  1063  0384  2B75               	goto	l3693
  1064  0385                     l3699:	
  1065                           
  1066                           ;BTCAR.c: 207: _delay((unsigned long)((50)*(4000000/4000000.0)));
  1067  0385  3010               	movlw	16
  1068  0386  1283               	bcf	3,5	;RP0=0, select bank0
  1069  0387  1303               	bcf	3,6	;RP1=0, select bank0
  1070  0388  00B2               	movwf	??_main
  1071  0389                     u1107:	
  1072  0389  0BB2               	decfsz	??_main,f
  1073  038A  2B89               	goto	u1107
  1074  038B  0064               	clrwdt
  1075  038C  2ABC               	goto	l3589
  1076  038D                     __end_of_main:	
  1077                           
  1078                           	psect	text316
  1079  04CD                     __ptext316:	
  1080 ;; =============== function _main ends ============
  1081                           
  1082                           
  1083 ;; *************** function _SR *****************
  1084 ;; Defined at:
  1085 ;;		line 254 in file "C:\Users\Jorge\OneDrive\Escritorio\BTCAR\BTCAR.c"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;		None
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;		None
  1090 ;; Return value:  Size  Location     Type
  1091 ;;		None               void
  1092 ;; Registers used:
  1093 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1094 ;; Tracked objects:
  1095 ;;		On entry : 60/0
  1096 ;;		On exit  : 60/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1099 ;;      Params:         0       0       0       0       0
  1100 ;;      Locals:         0       0       0       0       0
  1101 ;;      Temps:          0       1       0       0       0
  1102 ;;      Totals:         0       1       0       0       0
  1103 ;;Total ram usage:        1 bytes
  1104 ;; Hardware stack levels used:    1
  1105 ;; Hardware stack levels required when called:    3
  1106 ;; This function calls:
  1107 ;;		___lwdiv
  1108 ;;		_printf
  1109 ;;		_sprintf
  1110 ;;		_atoi
  1111 ;; This function is called by:
  1112 ;;		_main
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115  04CD                     _SR:	
  1116                           
  1117                           ;BTCAR.c: 255: RB1=0;
  1118                           
  1119                           ; Regs used in _SR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1120  04CD  1086               	bcf	6,1
  1121                           
  1122                           ;BTCAR.c: 256: _delay((unsigned long)((2)*(4000000/4000000.0)));
  1123  04CE  2CCF               	nop2	;2 cycle nop
  1124  04CF  26FD               	call	PL7	;select bank 0
  1125                           
  1126                           ;BTCAR.c: 257: RB1=1;
  1127  04D0  3003               	movlw	3
  1128  04D1  1486               	bsf	6,1
  1129                           
  1130                           ;BTCAR.c: 258: _delay((unsigned long)((10)*(4000000/4000000.0)));
  1131  04D2  00B1               	movwf	??_SR
  1132  04D3                     u1117:	
  1133  04D3  0BB1               	decfsz	??_SR,f
  1134  04D4  2CD3               	goto	u1117
  1135  04D5  26FD               	call	PL7	;select bank 0
  1136                           
  1137                           ;BTCAR.c: 259: RB1=0;
  1138  04D6  1086               	bcf	6,1
  1139  04D7                     l1113:	
  1140                           ;BTCAR.c: 261: while(!RB0);
  1141                           
  1142  04D7  1C06               	btfss	6,0
  1143  04D8  2CD7               	goto	l1113
  1144                           
  1145                           ;BTCAR.c: 262: TMR1ON=1;
  1146  04D9  1410               	bsf	16,0
  1147  04DA  2CDD               	goto	l1116
  1148  04DB                     l3527:	
  1149  04DB  180C               	btfsc	12,0
  1150  04DC  2CDF               	goto	l1120
  1151  04DD                     l1116:	
  1152                           ;BTCAR.c: 263: while(RB0 && !TMR1IF);
  1153                           
  1154  04DD  1806               	btfsc	6,0
  1155  04DE  2CDB               	goto	l3527
  1156  04DF                     l1120:	
  1157                           
  1158                           ;BTCAR.c: 264: TMR1ON=0;
  1159  04DF  1010               	bcf	16,0
  1160                           
  1161                           ;BTCAR.c: 266: if(!TMR1IF){
  1162  04E0  180C               	btfsc	12,0
  1163  04E1  2CE8               	goto	l3531
  1164                           
  1165                           ;BTCAR.c: 267: dist = (TMR1H<<8 | TMR1L);
  1166  04E2  080F               	movf	15,w	;volatile
  1167  04E3  00C3               	movwf	_dist+1
  1168  04E4  01C2               	clrf	_dist
  1169  04E5  080E               	movf	14,w	;volatile
  1170  04E6  04C2               	iorwf	_dist,f
  1171                           
  1172                           ;BTCAR.c: 268: }else{
  1173  04E7  2CEB               	goto	l3535
  1174  04E8                     l3531:	
  1175                           
  1176                           ;BTCAR.c: 269: dist=0;
  1177  04E8  01C2               	clrf	_dist
  1178  04E9  01C3               	clrf	_dist+1
  1179                           
  1180                           ;BTCAR.c: 270: TMR1IF=0;
  1181  04EA  100C               	bcf	12,0
  1182  04EB                     l3535:	
  1183                           
  1184                           ;BTCAR.c: 271: }
  1185                           ;BTCAR.c: 273: dist = (dist)/58;
  1186  04EB  303A               	movlw	58
  1187  04EC  00F0               	movwf	?___lwdiv
  1188  04ED  01F1               	clrf	?___lwdiv+1
  1189  04EE  0843               	movf	_dist+1,w
  1190  04EF  00F3               	movwf	?___lwdiv+3
  1191  04F0  0842               	movf	_dist,w
  1192  04F1  00F2               	movwf	?___lwdiv+2
  1193  04F2  2605  120A  118A   	fcall	___lwdiv
  1194  04F5  0871               	movf	?___lwdiv+1,w
  1195  04F6  00C3               	movwf	_dist+1
  1196  04F7  0870               	movf	?___lwdiv,w
  1197  04F8  00C2               	movwf	_dist
  1198                           
  1199                           ;BTCAR.c: 275: if(dist<3 || 390<dist){
  1200  04F9  3000               	movlw	0
  1201  04FA  0243               	subwf	_dist+1,w
  1202  04FB  3003               	movlw	3
  1203  04FC  1903               	skipnz
  1204  04FD  0242               	subwf	_dist,w
  1205  04FE  1C03               	skipc
  1206  04FF  2D07               	goto	l3541
  1207  0500  3001               	movlw	1
  1208  0501  0243               	subwf	_dist+1,w
  1209  0502  3087               	movlw	135
  1210  0503  1903               	skipnz
  1211  0504  0242               	subwf	_dist,w
  1212  0505  1C03               	skipc
  1213  0506  2D0D               	goto	l3545
  1214  0507                     l3541:	
  1215  0507  3010               	movlw	(STR_1-__stringbase)& (0+255)
  1216                           
  1217                           ;BTCAR.c: 276: dato = 0;
  1218  0508  01B7               	clrf	_dato
  1219  0509  01B8               	clrf	_dato+1
  1220  050A  01AA               	clrf	?_printf
  1221  050B  01AB               	clrf	?_printf+1
  1222  050C  2ED4               	ljmp	_printf
  1223  050D                     l3545:	
  1224                           ;BTCAR.c: 278: }else if(3<dist || dist<390){
  1225                           
  1226  050D  3000               	movlw	0
  1227  050E  0243               	subwf	_dist+1,w
  1228  050F  3004               	movlw	4
  1229  0510  1903               	skipnz
  1230  0511  0242               	subwf	_dist,w
  1231  0512  1803               	skipnc
  1232  0513  2D1B               	goto	l3549
  1233  0514  3001               	movlw	1
  1234  0515  0243               	subwf	_dist+1,w
  1235  0516  3086               	movlw	134
  1236  0517  1903               	skipnz
  1237  0518  0242               	subwf	_dist,w
  1238  0519  1803               	skipnc
  1239  051A  0008               	return
  1240  051B                     l3549:	
  1241                           
  1242                           ;BTCAR.c: 279: sprintf(carac1, "%d",dist);
  1243  051B  3010               	movlw	(STR_1-__stringbase)& (0+255)
  1244  051C  00AA               	movwf	?_sprintf
  1245  051D  0843               	movf	_dist+1,w
  1246  051E  00AC               	movwf	?_sprintf+2
  1247  051F  0842               	movf	_dist,w
  1248  0520  00AB               	movwf	?_sprintf+1
  1249  0521  303E               	movlw	_carac1& (0+255)
  1250  0522  26E0  120A  118A   	fcall	_sprintf
  1251                           
  1252                           ;BTCAR.c: 280: dato = atoi(carac1);
  1253  0525  303E               	movlw	_carac1& (0+255)
  1254  0526  2653  120A  118A   	fcall	_atoi
  1255  0529  0877               	movf	?_atoi+1,w
  1256  052A  00B8               	movwf	_dato+1
  1257  052B  0876               	movf	?_atoi,w
  1258  052C  00B7               	movwf	_dato
  1259                           
  1260                           ;BTCAR.c: 281: printf(" %d ",dato);
  1261  052D  0838               	movf	_dato+1,w
  1262  052E  00AB               	movwf	?_printf+1
  1263  052F  0837               	movf	_dato,w
  1264  0530  00AA               	movwf	?_printf
  1265  0531  300B               	movlw	(STR_3-__stringbase)& (0+255)
  1266  0532  2ED4               	ljmp	_printf
  1267  0533                     __end_of_SR:	
  1268  0533                     __ptext321:	
  1269 ;; =============== function _rutina ends ============
  1270                           
  1271                           
  1272 ;; *************** function __doprnt *****************
  1273 ;; Defined at:
  1274 ;;		line 455 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;  pb              1    wreg     PTR struct __prbuf
  1277 ;;		 -> sprintf@pb(2), printf@pb(2), 
  1278 ;;  f               1   12[COMMON] PTR const unsigned char 
  1279 ;;		 -> STR_3(5), STR_2(3), STR_1(3), 
  1280 ;;  ap              1   13[COMMON] PTR PTR void 
  1281 ;;		 -> sprintf@ap(1), printf@ap(1), 
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;  pb              1    9[BANK0 ] PTR struct __prbuf
  1284 ;;		 -> sprintf@pb(2), printf@pb(2), 
  1285 ;;  _val            4    4[BANK0 ] struct .
  1286 ;;  c               1    8[BANK0 ] char 
  1287 ;;  prec            1    3[BANK0 ] char 
  1288 ;;  flag            1    2[BANK0 ] unsigned char 
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  2   12[COMMON] int 
  1291 ;; Registers used:
  1292 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1293 ;; Tracked objects:
  1294 ;;		On entry : 60/0
  1295 ;;		On exit  : 60/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1298 ;;      Params:         2       0       0       0       0
  1299 ;;      Locals:         0       8       0       0       0
  1300 ;;      Temps:          0       2       0       0       0
  1301 ;;      Totals:         2      10       0       0       0
  1302 ;;Total ram usage:       12 bytes
  1303 ;; Hardware stack levels used:    1
  1304 ;; Hardware stack levels required when called:    1
  1305 ;; This function calls:
  1306 ;;		Absolute function
  1307 ;;		_putch
  1308 ;;		___lwdiv
  1309 ;;		___lwmod
  1310 ;; This function is called by:
  1311 ;;		_printf
  1312 ;;		_sprintf
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315  0533                     __doprnt:	
  1316                           
  1317                           ; Regs used in __doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1318                           ;__doprnt@pb stored from wreg
  1319  0533  00A9               	movwf	__doprnt@pb
  1320  0534                     l3377:	
  1321  0534  087C               	movf	__doprnt@f,w
  1322  0535  0AFC               	incf	__doprnt@f,f
  1323  0536  0084               	movwf	4
  1324  0537  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  1325  053C  26FD               	call	PL7	;select bank 0
  1326  053D  00A8               	movwf	__doprnt@c
  1327  053E  08A8               	movf	__doprnt@c,f
  1328  053F  1903               	btfsc	3,2
  1329  0540  2E02               	goto	l3379
  1330  0541  0828               	movf	__doprnt@c,w
  1331  0542  3A25               	xorlw	37
  1332  0543  1903               	skipnz
  1333  0544  2D5B               	goto	l3327
  1334  0545  0829               	movf	__doprnt@pb,w
  1335  0546  3E01               	addlw	1
  1336  0547  0084               	movwf	4
  1337  0548  1383               	bcf	3,7	;select IRP bank0
  1338  0549  0880               	movf	0,f
  1339  054A  1903               	skipnz
  1340  054B  2D54               	goto	l3323
  1341  054C  0828               	movf	__doprnt@c,w
  1342  054D  26F7               	fcall	PL6	;call to abstracted procedure
  1343  054E  120A  118A  2700   	fcall	fptable
      +       120A  118A         
  1344  0553  2D34               	goto	l3377
  1345  0554                     l3323:	
  1346  0554  0829               	movf	__doprnt@pb,w
  1347  0555  0084               	movwf	4
  1348  0556  0800               	movf	0,w
  1349  0557  26F0  120A  118A   	fcall	PL5	;call to abstracted procedure
  1350  055A  2D34               	goto	l3377
  1351  055B                     l3327:	
  1352  055B  01A2               	clrf	__doprnt@flag
  1353  055C  087C               	movf	__doprnt@f,w
  1354  055D  0AFC               	incf	__doprnt@f,f
  1355  055E  0084               	movwf	4
  1356  055F  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  1357  0564  00A8               	movwf	__doprnt@c
  1358                           
  1359                           ; Switch size 1, requested type "space"
  1360                           ; Number of cases is 3, Range of values is 0 to 105
  1361                           ; switch strategies available:
  1362                           ; Name         Instructions Cycles
  1363                           ; simple_byte           10     6 (average)
  1364                           ; jumptable            260     6 (fixed)
  1365                           ; rangetable           110     6 (fixed)
  1366                           ; spacedrange          218     9 (fixed)
  1367                           ; locatedrange         106     3 (fixed)
  1368                           ;	Chosen strategy is simple_byte
  1369  0565  3A00               	xorlw	0	; case 0
  1370  0566  1903               	skipnz
  1371  0567  2E02               	goto	l3379
  1372  0568  3A64               	xorlw	100	; case 100
  1373  0569  1903               	skipnz
  1374  056A  2D6F               	goto	l3333
  1375  056B  3A0D               	xorlw	13	; case 105
  1376  056C  1903               	skipnz
  1377  056D  2D6F               	goto	l3333
  1378  056E  2D34               	goto	l3377
  1379  056F                     l3333:	
  1380  056F  087D               	movf	__doprnt@ap,w
  1381  0570  0084               	movwf	4
  1382  0571  1383               	bcf	3,7	;select IRP bank0
  1383  0572  0800               	movf	0,w
  1384  0573  00A0               	movwf	??__doprnt
  1385  0574  3002               	movlw	2
  1386  0575  0780               	addwf	0,f
  1387  0576  0820               	movf	??__doprnt,w
  1388  0577  0084               	movwf	4
  1389  0578  0800               	movf	0,w
  1390  0579  00A4               	movwf	__doprnt@_val
  1391  057A  0A84               	incf	4,f
  1392  057B  0800               	movf	0,w
  1393  057C  00A5               	movwf	__doprnt@_val+1
  1394  057D  1FA5               	btfss	__doprnt@_val+1,7
  1395  057E  2D86               	goto	l3341
  1396  057F  3003               	movlw	3
  1397  0580  04A2               	iorwf	__doprnt@flag,f
  1398  0581  09A4               	comf	__doprnt@_val,f
  1399  0582  09A5               	comf	__doprnt@_val+1,f
  1400  0583  0AA4               	incf	__doprnt@_val,f
  1401  0584  1903               	skipnz
  1402  0585  0AA5               	incf	__doprnt@_val+1,f
  1403  0586                     l3341:	
  1404  0586  01A8               	clrf	__doprnt@c
  1405  0587  0AA8               	incf	__doprnt@c,f
  1406  0588                     l3345:	
  1407  0588  1003               	clrc
  1408  0589  0D28               	rlf	__doprnt@c,w
  1409  058A  3E01               	addlw	low (_dpowers-__stringbase)
  1410  058B  0084               	movwf	4
  1411  058C  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  1412  0591  00A0               	movwf	??__doprnt
  1413  0592  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  1414  0597  00A1               	movwf	??__doprnt+1
  1415  0598  0225               	subwf	__doprnt@_val+1,w
  1416  0599  1D03               	skipz
  1417  059A  2D9D               	goto	u775
  1418  059B  0820               	movf	??__doprnt,w
  1419  059C  0224               	subwf	__doprnt@_val,w
  1420  059D                     u775:	
  1421  059D  1C03               	btfss	3,0
  1422  059E  2DA4               	goto	l3353
  1423  059F  0AA8               	incf	__doprnt@c,f
  1424  05A0  0828               	movf	__doprnt@c,w
  1425  05A1  3A05               	xorlw	5
  1426  05A2  1D03               	skipz
  1427  05A3  2D88               	goto	l3345
  1428  05A4                     l3353:	
  1429  05A4  0822               	movf	__doprnt@flag,w
  1430  05A5  3903               	andlw	3
  1431  05A6  1903               	btfsc	3,2
  1432  05A7  2DC0               	goto	l3363
  1433  05A8  0829               	movf	__doprnt@pb,w
  1434  05A9  3E01               	addlw	1
  1435  05AA  0084               	movwf	4
  1436  05AB  1383               	bcf	3,7	;select IRP bank0
  1437  05AC  0880               	movf	0,f
  1438  05AD  1903               	skipnz
  1439  05AE  2DB7               	goto	l3359
  1440  05AF  302D               	movlw	45
  1441  05B0  26F7               	fcall	PL6	;call to abstracted procedure
  1442  05B1  120A  118A  2700   	fcall	fptable
      +       120A  118A         
  1443  05B6  2DC0               	goto	l3363
  1444  05B7                     l3359:	
  1445  05B7  0829               	movf	__doprnt@pb,w
  1446  05B8  0084               	movwf	4
  1447  05B9  0800               	movf	0,w
  1448  05BA  0084               	movwf	4
  1449  05BB  302D               	movlw	45
  1450  05BC  0080               	movwf	0
  1451  05BD  0829               	movf	__doprnt@pb,w
  1452  05BE  0084               	movwf	4
  1453  05BF  0A80               	incf	0,f
  1454  05C0                     l3363:	
  1455  05C0  26FD               	call	PL7	;select bank 0
  1456  05C1  0828               	movf	__doprnt@c,w
  1457  05C2  00A3               	movwf	__doprnt@prec
  1458  05C3  2DFD               	goto	l3375
  1459  05C4                     l3365:	
  1460  05C4  300A               	movlw	10
  1461  05C5  00F7               	movwf	?___lwmod
  1462  05C6  01F8               	clrf	?___lwmod+1
  1463  05C7  1003               	clrc
  1464  05C8  0D23               	rlf	__doprnt@prec,w
  1465  05C9  3E01               	addlw	low (_dpowers-__stringbase)
  1466  05CA  0084               	movwf	4
  1467  05CB  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  1468  05D0  00F0               	movwf	?___lwdiv
  1469  05D1  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  1470  05D6  00F1               	movwf	?___lwdiv+1
  1471  05D7  0825               	movf	__doprnt@_val+1,w
  1472  05D8  00F3               	movwf	?___lwdiv+3
  1473  05D9  0824               	movf	__doprnt@_val,w
  1474  05DA  00F2               	movwf	?___lwdiv+2
  1475  05DB  2605  120A  118A   	fcall	___lwdiv
  1476  05DE  0871               	movf	?___lwdiv+1,w
  1477  05DF  00FA               	movwf	?___lwmod+3
  1478  05E0  0870               	movf	?___lwdiv,w
  1479  05E1  00F9               	movwf	?___lwmod+2
  1480  05E2  262F  120A  118A   	fcall	___lwmod
  1481  05E5  0877               	movf	?___lwmod,w
  1482  05E6  3E30               	addlw	48
  1483  05E7  00A8               	movwf	__doprnt@c
  1484  05E8  0829               	movf	__doprnt@pb,w
  1485  05E9  3E01               	addlw	1
  1486  05EA  0084               	movwf	4
  1487  05EB  1383               	bcf	3,7	;select IRP bank0
  1488  05EC  0880               	movf	0,f
  1489  05ED  1903               	skipnz
  1490  05EE  2DF7               	goto	l3371
  1491  05EF  0828               	movf	__doprnt@c,w
  1492  05F0  26F7               	fcall	PL6	;call to abstracted procedure
  1493  05F1  120A  118A  2700   	fcall	fptable
      +       120A  118A         
  1494  05F6  2DFD               	goto	l3375
  1495  05F7                     l3371:	
  1496  05F7  0829               	movf	__doprnt@pb,w
  1497  05F8  0084               	movwf	4
  1498  05F9  0800               	movf	0,w
  1499  05FA  26F0  120A  118A   	fcall	PL5	;call to abstracted procedure
  1500  05FD                     l3375:	
  1501  05FD  26FD               	call	PL7	;select bank 0
  1502  05FE  03A3               	decf	__doprnt@prec,f
  1503  05FF  0F23               	incfsz	__doprnt@prec,w
  1504  0600  2DC4               	goto	l3365
  1505  0601  2D34               	goto	l3377
  1506  0602                     l3379:	
  1507  0602  01FC               	clrf	?__doprnt
  1508  0603  01FD               	clrf	?__doprnt+1
  1509  0604  0008               	return
  1510  0605                     __end_of__doprnt:	
  1511  0605                     __ptext325:	
  1512 ;; =============== function ___lwmod ends ============
  1513                           
  1514                           
  1515 ;; *************** function ___lwdiv *****************
  1516 ;; Defined at:
  1517 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwdiv.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;  divisor         2    0[COMMON] unsigned int 
  1520 ;;  dividend        2    2[COMMON] unsigned int 
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;  quotient        2    4[COMMON] unsigned int 
  1523 ;;  counter         1    6[COMMON] unsigned char 
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  2    0[COMMON] unsigned int 
  1526 ;; Registers used:
  1527 ;;		wreg, status,2, status,0
  1528 ;; Tracked objects:
  1529 ;;		On entry : 60/0
  1530 ;;		On exit  : 60/0
  1531 ;;		Unchanged: FFF9F/0
  1532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1533 ;;      Params:         4       0       0       0       0
  1534 ;;      Locals:         3       0       0       0       0
  1535 ;;      Temps:          0       0       0       0       0
  1536 ;;      Totals:         7       0       0       0       0
  1537 ;;Total ram usage:        7 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; This function calls:
  1540 ;;		Nothing
  1541 ;; This function is called by:
  1542 ;;		_SR
  1543 ;;		__doprnt
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546  0605                     ___lwdiv:	
  1547                           
  1548                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1549  0605  01F4               	clrf	___lwdiv@quotient
  1550  0606  01F5               	clrf	___lwdiv@quotient+1
  1551  0607  0871               	movf	___lwdiv@divisor+1,w
  1552  0608  0470               	iorwf	___lwdiv@divisor,w
  1553  0609  1903               	skipnz
  1554  060A  2E2A               	goto	l3239
  1555  060B  01F6               	clrf	___lwdiv@counter
  1556  060C                     L7:	
  1557  060C  0AF6               	incf	___lwdiv@counter,f
  1558  060D  1BF1               	btfsc	___lwdiv@divisor+1,7
  1559  060E  2E13               	goto	l3227
  1560  060F  1003               	clrc
  1561  0610  0DF0               	rlf	___lwdiv@divisor,f
  1562  0611  0DF1               	rlf	___lwdiv@divisor+1,f
  1563  0612  2E0C               	goto	L7
  1564  0613                     l3227:	
  1565  0613  1003               	clrc
  1566  0614  0DF4               	rlf	___lwdiv@quotient,f
  1567  0615  0DF5               	rlf	___lwdiv@quotient+1,f
  1568  0616  0871               	movf	___lwdiv@divisor+1,w
  1569  0617  0273               	subwf	___lwdiv@dividend+1,w
  1570  0618  1D03               	skipz
  1571  0619  2E1C               	goto	u625
  1572  061A  0870               	movf	___lwdiv@divisor,w
  1573  061B  0272               	subwf	___lwdiv@dividend,w
  1574  061C                     u625:	
  1575  061C  1C03               	skipc
  1576  061D  2E26               	goto	L8
  1577  061E  0870               	movf	___lwdiv@divisor,w
  1578  061F  02F2               	subwf	___lwdiv@dividend,f
  1579  0620  0871               	movf	___lwdiv@divisor+1,w
  1580  0621  1C03               	skipc
  1581  0622  03F3               	decf	___lwdiv@dividend+1,f
  1582  0623  02F3               	subwf	___lwdiv@dividend+1,f
  1583  0624  1474               	bsf	___lwdiv@quotient,0
  1584  0625  1003               	clrc
  1585  0626                     L8:	
  1586  0626  0CF1               	rrf	___lwdiv@divisor+1,f
  1587  0627  0CF0               	rrf	___lwdiv@divisor,f
  1588  0628  0BF6               	decfsz	___lwdiv@counter,f
  1589  0629  2E13               	goto	l3227
  1590  062A                     l3239:	
  1591  062A  0875               	movf	___lwdiv@quotient+1,w
  1592  062B  00F1               	movwf	?___lwdiv+1
  1593  062C  0874               	movf	___lwdiv@quotient,w
  1594  062D  00F0               	movwf	?___lwdiv
  1595  062E  0008               	return
  1596  062F                     __end_of___lwdiv:	
  1597  062F                     __ptext324:	
  1598 ;; =============== function _PWM ends ============
  1599                           
  1600                           
  1601 ;; *************** function ___lwmod *****************
  1602 ;; Defined at:
  1603 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwmod.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;  divisor         2    7[COMMON] unsigned int 
  1606 ;;  dividend        2    9[COMMON] unsigned int 
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;  counter         1   11[COMMON] unsigned char 
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  2    7[COMMON] unsigned int 
  1611 ;; Registers used:
  1612 ;;		wreg, status,2, status,0
  1613 ;; Tracked objects:
  1614 ;;		On entry : 60/0
  1615 ;;		On exit  : 60/0
  1616 ;;		Unchanged: FFF9F/0
  1617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1618 ;;      Params:         4       0       0       0       0
  1619 ;;      Locals:         1       0       0       0       0
  1620 ;;      Temps:          0       0       0       0       0
  1621 ;;      Totals:         5       0       0       0       0
  1622 ;;Total ram usage:        5 bytes
  1623 ;; Hardware stack levels used:    1
  1624 ;; This function calls:
  1625 ;;		Nothing
  1626 ;; This function is called by:
  1627 ;;		__doprnt
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630  062F                     ___lwmod:	
  1631                           
  1632                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1633  062F  0878               	movf	___lwmod@divisor+1,w
  1634  0630  0477               	iorwf	___lwmod@divisor,w
  1635  0631  1903               	skipnz
  1636  0632  2E4E               	goto	l3259
  1637  0633  01FB               	clrf	___lwmod@counter
  1638  0634                     L5:	
  1639  0634  0AFB               	incf	___lwmod@counter,f
  1640  0635  1BF8               	btfsc	___lwmod@divisor+1,7
  1641  0636  2E3B               	goto	l3251
  1642  0637  1003               	clrc
  1643  0638  0DF7               	rlf	___lwmod@divisor,f
  1644  0639  0DF8               	rlf	___lwmod@divisor+1,f
  1645  063A  2E34               	goto	L5
  1646  063B                     l3251:	
  1647  063B  0878               	movf	___lwmod@divisor+1,w
  1648  063C  027A               	subwf	___lwmod@dividend+1,w
  1649  063D  1D03               	skipz
  1650  063E  2E41               	goto	u665
  1651  063F  0877               	movf	___lwmod@divisor,w
  1652  0640  0279               	subwf	___lwmod@dividend,w
  1653  0641                     u665:	
  1654  0641  1C03               	skipc
  1655  0642  2E4A               	goto	L6
  1656  0643  0877               	movf	___lwmod@divisor,w
  1657  0644  02F9               	subwf	___lwmod@dividend,f
  1658  0645  0878               	movf	___lwmod@divisor+1,w
  1659  0646  1C03               	skipc
  1660  0647  03FA               	decf	___lwmod@dividend+1,f
  1661  0648  02FA               	subwf	___lwmod@dividend+1,f
  1662  0649  1003               	clrc
  1663  064A                     L6:	
  1664  064A  0CF8               	rrf	___lwmod@divisor+1,f
  1665  064B  0CF7               	rrf	___lwmod@divisor,f
  1666  064C  0BFB               	decfsz	___lwmod@counter,f
  1667  064D  2E3B               	goto	l3251
  1668  064E                     l3259:	
  1669  064E  087A               	movf	___lwmod@dividend+1,w
  1670  064F  00F8               	movwf	?___lwmod+1
  1671  0650  0879               	movf	___lwmod@dividend,w
  1672  0651  00F7               	movwf	?___lwmod
  1673  0652  0008               	return
  1674  0653                     __end_of___lwmod:	
  1675  0653                     __ptext322:	
  1676 ;; =============== function __doprnt ends ============
  1677                           
  1678                           
  1679 ;; *************** function _atoi *****************
  1680 ;; Defined at:
  1681 ;;		line 6 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\atoi.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;  s               1    wreg     PTR const unsigned char 
  1684 ;;		 -> carac1(4), 
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;  s               1   13[COMMON] PTR const unsigned char 
  1687 ;;		 -> carac1(4), 
  1688 ;;  a               2   11[COMMON] int 
  1689 ;;  sign            1   10[COMMON] unsigned char 
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  2    6[COMMON] int 
  1692 ;; Registers used:
  1693 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1694 ;; Tracked objects:
  1695 ;;		On entry : 160/0
  1696 ;;		On exit  : 160/0
  1697 ;;		Unchanged: FFE9F/0
  1698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1699 ;;      Params:         2       0       0       0       0
  1700 ;;      Locals:         4       0       0       0       0
  1701 ;;      Temps:          2       0       0       0       0
  1702 ;;      Totals:         8       0       0       0       0
  1703 ;;Total ram usage:        8 bytes
  1704 ;; Hardware stack levels used:    1
  1705 ;; Hardware stack levels required when called:    1
  1706 ;; This function calls:
  1707 ;;		___wmul
  1708 ;;		_isdigit
  1709 ;; This function is called by:
  1710 ;;		_SR
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713  0653                     _atoi:	
  1714                           
  1715                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1716                           ;atoi@s stored from wreg
  1717  0653  00FD               	movwf	atoi@s
  1718  0654                     l3285:	
  1719  0654  087D               	movf	atoi@s,w
  1720  0655  0084               	movwf	4
  1721  0656  0800               	movf	0,w
  1722  0657  3A20               	xorlw	32
  1723  0658  1D03               	btfss	3,2
  1724  0659  2E5C               	goto	l3287
  1725  065A                     l3283:	
  1726  065A  0AFD               	incf	atoi@s,f
  1727  065B  2E54               	goto	l3285
  1728  065C                     l3287:	
  1729  065C  087D               	movf	atoi@s,w
  1730  065D  0084               	movwf	4
  1731  065E  0800               	movf	0,w
  1732  065F  3A09               	xorlw	9
  1733  0660  1903               	skipnz
  1734  0661  2E5A               	goto	l3283
  1735  0662  01FB               	clrf	atoi@a
  1736  0663  01FC               	clrf	atoi@a+1
  1737  0664  01FA               	clrf	atoi@sign
  1738  0665  087D               	movf	atoi@s,w
  1739  0666  0084               	movwf	4
  1740  0667  0800               	movf	0,w
  1741  0668  3A2D               	xorlw	45
  1742  0669  1D03               	skipz
  1743  066A  2E6D               	goto	l3295
  1744  066B  0AFA               	incf	atoi@sign,f
  1745  066C  2E97               	goto	l3297
  1746  066D                     l3295:	
  1747  066D  087D               	movf	atoi@s,w
  1748  066E  0084               	movwf	4
  1749  066F  0800               	movf	0,w
  1750  0670  3A2B               	xorlw	43
  1751  0671  1903               	btfsc	3,2
  1752  0672  2E97               	goto	l3297
  1753  0673                     l3303:	
  1754  0673  087D               	movf	atoi@s,w
  1755  0674  0084               	movwf	4
  1756  0675  0800               	movf	0,w
  1757  0676  26AD  120A  118A   	fcall	_isdigit
  1758  0679  1C03               	btfss	3,0
  1759  067A  2E99               	goto	l3305
  1760  067B  087D               	movf	atoi@s,w
  1761  067C  0084               	movwf	4
  1762  067D  087C               	movf	atoi@a+1,w
  1763  067E  00F1               	movwf	?___wmul+1
  1764  067F  087B               	movf	atoi@a,w
  1765  0680  00F0               	movwf	?___wmul
  1766  0681  300A               	movlw	10
  1767  0682  00F2               	movwf	?___wmul+2
  1768  0683  01F3               	clrf	?___wmul+3
  1769  0684  26BB  120A  118A   	fcall	___wmul
  1770  0687  0800               	movf	0,w
  1771  0688  0770               	addwf	?___wmul,w
  1772  0689  00F8               	movwf	??_atoi
  1773  068A  3000               	movlw	0
  1774  068B  1803               	skipnc
  1775  068C  3001               	movlw	1
  1776  068D  0771               	addwf	?___wmul+1,w
  1777  068E  00F9               	movwf	??_atoi+1
  1778  068F  0878               	movf	??_atoi,w
  1779  0690  3ED0               	addlw	208
  1780  0691  00FB               	movwf	atoi@a
  1781  0692  0879               	movf	??_atoi+1,w
  1782  0693  1803               	skipnc
  1783  0694  3E01               	addlw	1
  1784  0695  3EFF               	addlw	255
  1785  0696  00FC               	movwf	atoi@a+1
  1786  0697                     l3297:	
  1787  0697  0AFD               	incf	atoi@s,f
  1788  0698  2E73               	goto	l3303
  1789  0699                     l3305:	
  1790  0699  087A               	movf	atoi@sign,w
  1791  069A  1903               	btfsc	3,2
  1792  069B  2EA8               	goto	l3311
  1793  069C  097B               	comf	atoi@a,w
  1794  069D  00F8               	movwf	??_atoi
  1795  069E  097C               	comf	atoi@a+1,w
  1796  069F  00F9               	movwf	??_atoi+1
  1797  06A0  0AF8               	incf	??_atoi,f
  1798  06A1  1903               	skipnz
  1799  06A2  0AF9               	incf	??_atoi+1,f
  1800  06A3  0878               	movf	??_atoi,w
  1801  06A4  00F6               	movwf	?_atoi
  1802  06A5  0879               	movf	??_atoi+1,w
  1803  06A6  00F7               	movwf	?_atoi+1
  1804  06A7  0008               	return
  1805  06A8                     l3311:	
  1806  06A8  087C               	movf	atoi@a+1,w
  1807  06A9  00F7               	movwf	?_atoi+1
  1808  06AA  087B               	movf	atoi@a,w
  1809  06AB  00F6               	movwf	?_atoi
  1810  06AC  0008               	return
  1811  06AD                     __end_of_atoi:	
  1812  06AD                     __ptext327:	
  1813 ;; =============== function ___wmul ends ============
  1814                           
  1815                           
  1816 ;; *************** function _isdigit *****************
  1817 ;; Defined at:
  1818 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\isdigit.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;  c               1    wreg     unsigned char 
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;  c               1    1[COMMON] unsigned char 
  1823 ;; Return value:  Size  Location     Type
  1824 ;;		None               void
  1825 ;; Registers used:
  1826 ;;		wreg, status,2, status,0
  1827 ;; Tracked objects:
  1828 ;;		On entry : 160/0
  1829 ;;		On exit  : 160/0
  1830 ;;		Unchanged: FFE9F/0
  1831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1832 ;;      Params:         0       0       0       0       0
  1833 ;;      Locals:         2       0       0       0       0
  1834 ;;      Temps:          0       0       0       0       0
  1835 ;;      Totals:         2       0       0       0       0
  1836 ;;Total ram usage:        2 bytes
  1837 ;; Hardware stack levels used:    1
  1838 ;; This function calls:
  1839 ;;		Nothing
  1840 ;; This function is called by:
  1841 ;;		_atoi
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844  06AD                     _isdigit:	
  1845                           
  1846                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1847                           ;isdigit@c stored from wreg
  1848  06AD  00F1               	movwf	isdigit@c
  1849  06AE  303A               	movlw	58
  1850  06AF  01F0               	clrf	_isdigit$2399
  1851  06B0  0271               	subwf	isdigit@c,w
  1852  06B1  1803               	skipnc
  1853  06B2  2EB9               	goto	l3197
  1854  06B3  3030               	movlw	48
  1855  06B4  0271               	subwf	isdigit@c,w
  1856  06B5  1C03               	skipc
  1857  06B6  2EB9               	goto	l3197
  1858  06B7  01F0               	clrf	_isdigit$2399
  1859  06B8  0AF0               	incf	_isdigit$2399,f
  1860  06B9                     l3197:	
  1861  06B9  0C70               	rrf	_isdigit$2399,w
  1862  06BA  0008               	return
  1863  06BB                     __end_of_isdigit:	
  1864  06BB                     __ptext326:	
  1865 ;; =============== function ___lwdiv ends ============
  1866                           
  1867                           
  1868 ;; *************** function ___wmul *****************
  1869 ;; Defined at:
  1870 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\wmul.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  multiplier      2    0[COMMON] unsigned int 
  1873 ;;  multiplicand    2    2[COMMON] unsigned int 
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;  product         2    4[COMMON] unsigned int 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  2    0[COMMON] unsigned int 
  1878 ;; Registers used:
  1879 ;;		wreg, status,2, status,0
  1880 ;; Tracked objects:
  1881 ;;		On entry : 160/0
  1882 ;;		On exit  : 160/0
  1883 ;;		Unchanged: FFE9F/0
  1884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1885 ;;      Params:         4       0       0       0       0
  1886 ;;      Locals:         2       0       0       0       0
  1887 ;;      Temps:          0       0       0       0       0
  1888 ;;      Totals:         6       0       0       0       0
  1889 ;;Total ram usage:        6 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; This function calls:
  1892 ;;		Nothing
  1893 ;; This function is called by:
  1894 ;;		_atoi
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897  06BB                     ___wmul:	
  1898                           
  1899                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1900  06BB  01F4               	clrf	___wmul@product
  1901  06BC  01F5               	clrf	___wmul@product+1
  1902  06BD                     l3203:	
  1903  06BD  1C70               	btfss	___wmul@multiplier,0
  1904  06BE  2EC5               	goto	l3207
  1905  06BF  0872               	movf	___wmul@multiplicand,w
  1906  06C0  07F4               	addwf	___wmul@product,f
  1907  06C1  1803               	skipnc
  1908  06C2  0AF5               	incf	___wmul@product+1,f
  1909  06C3  0873               	movf	___wmul@multiplicand+1,w
  1910  06C4  07F5               	addwf	___wmul@product+1,f
  1911  06C5                     l3207:	
  1912  06C5  1003               	clrc
  1913  06C6  0DF2               	rlf	___wmul@multiplicand,f
  1914  06C7  0DF3               	rlf	___wmul@multiplicand+1,f
  1915  06C8  1003               	clrc
  1916  06C9  0CF1               	rrf	___wmul@multiplier+1,f
  1917  06CA  0CF0               	rrf	___wmul@multiplier,f
  1918  06CB  0871               	movf	___wmul@multiplier+1,w
  1919  06CC  0470               	iorwf	___wmul@multiplier,w
  1920  06CD  1D03               	skipz
  1921  06CE  2EBD               	goto	l3203
  1922  06CF  0875               	movf	___wmul@product+1,w
  1923  06D0  00F1               	movwf	?___wmul+1
  1924  06D1  0874               	movf	___wmul@product,w
  1925  06D2  00F0               	movwf	?___wmul
  1926  06D3  0008               	return
  1927  06D4                     __end_of___wmul:	
  1928  06D4                     __ptext318:	
  1929 ;; =============== function _sprintf ends ============
  1930                           
  1931                           
  1932 ;; *************** function _printf *****************
  1933 ;; Defined at:
  1934 ;;		line 14 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\printf.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;  f               1    wreg     PTR const unsigned char 
  1937 ;;		 -> STR_3(5), STR_1(3), 
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;  f               1   12[BANK0 ] PTR const unsigned char 
  1940 ;;		 -> STR_3(5), STR_1(3), 
  1941 ;;  pb              2   14[BANK0 ] struct __prbuf
  1942 ;;  ap              1   13[BANK0 ] PTR void [1]
  1943 ;;		 -> ?_sprintf(2), ?_printf(2), 
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  2   10[BANK0 ] int 
  1946 ;; Registers used:
  1947 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1948 ;; Tracked objects:
  1949 ;;		On entry : 60/0
  1950 ;;		On exit  : 60/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1953 ;;      Params:         0       2       0       0       0
  1954 ;;      Locals:         0       4       0       0       0
  1955 ;;      Temps:          0       0       0       0       0
  1956 ;;      Totals:         0       6       0       0       0
  1957 ;;Total ram usage:        6 bytes
  1958 ;; Hardware stack levels used:    1
  1959 ;; Hardware stack levels required when called:    2
  1960 ;; This function calls:
  1961 ;;		__doprnt
  1962 ;; This function is called by:
  1963 ;;		_SR
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966  06D4                     _printf:	
  1967                           
  1968                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1969                           ;printf@f stored from wreg
  1970  06D4  00AC               	movwf	printf@f
  1971  06D5  3001               	movlw	(fp__putch-fpbase)& (0+255)
  1972  06D6  01AE               	clrf	printf@pb
  1973  06D7  00AF               	movwf	printf@pb+1
  1974  06D8  302A               	movlw	?_printf& (0+255)
  1975  06D9  00AD               	movwf	printf@ap
  1976                           
  1977                           ;	Return value of _printf is never used
  1978  06DA  082C               	movf	printf@f,w
  1979  06DB  00FC               	movwf	?__doprnt
  1980  06DC  302D               	movlw	printf@ap& (0+255)
  1981  06DD  00FD               	movwf	?__doprnt+1
  1982  06DE  302E               	movlw	printf@pb& (0+255)
  1983  06DF  2D33               	ljmp	__doprnt
  1984  06E0                     __end_of_printf:	
  1985  06E0                     __ptext317:	
  1986 ;; =============== function _SR ends ============
  1987                           
  1988                           
  1989 ;; *************** function _sprintf *****************
  1990 ;; Defined at:
  1991 ;;		line 14 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\sprintf.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  wh              1    wreg     PTR unsigned char 
  1994 ;;		 -> carac1(4), 
  1995 ;;  f               1   10[BANK0 ] PTR const unsigned char 
  1996 ;;		 -> STR_2(3), 
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;  wh              1   13[BANK0 ] PTR unsigned char 
  1999 ;;		 -> carac1(4), 
  2000 ;;  pb              2   15[BANK0 ] struct __prbuf
  2001 ;;  ap              1   14[BANK0 ] PTR void [1]
  2002 ;;		 -> ?_sprintf(2), ?_printf(2), 
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  2   10[BANK0 ] int 
  2005 ;; Registers used:
  2006 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2007 ;; Tracked objects:
  2008 ;;		On entry : 60/0
  2009 ;;		On exit  : 160/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2012 ;;      Params:         0       3       0       0       0
  2013 ;;      Locals:         0       4       0       0       0
  2014 ;;      Temps:          0       0       0       0       0
  2015 ;;      Totals:         0       7       0       0       0
  2016 ;;Total ram usage:        7 bytes
  2017 ;; Hardware stack levels used:    1
  2018 ;; Hardware stack levels required when called:    2
  2019 ;; This function calls:
  2020 ;;		__doprnt
  2021 ;; This function is called by:
  2022 ;;		_SR
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025  06E0                     _sprintf:	
  2026                           
  2027                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2028                           ;sprintf@wh stored from wreg
  2029  06E0  00AD               	movwf	sprintf@wh
  2030  06E1  00AF               	movwf	sprintf@pb
  2031  06E2  302B               	movlw	(?_sprintf+1)& (0+255)
  2032  06E3  01B0               	clrf	sprintf@pb+1
  2033  06E4  00AE               	movwf	sprintf@ap
  2034  06E5  082A               	movf	sprintf@f,w
  2035  06E6  00FC               	movwf	?__doprnt
  2036  06E7  302E               	movlw	sprintf@ap& (0+255)
  2037  06E8  00FD               	movwf	?__doprnt+1
  2038  06E9  302F               	movlw	sprintf@pb& (0+255)
  2039  06EA  2533               	fcall	__doprnt
  2040  06EB  082F               	movf	sprintf@pb,w
  2041  06EC  0084               	movwf	4
  2042  06ED  1383               	bcf	3,7	;select IRP bank0
  2043  06EE  0180               	clrf	0
  2044  06EF  0008               	return
  2045  06F0                     __end_of_sprintf:	
  2046  06F0                     PL5:	
  2047  06F0  0084               	movwf	4
  2048  06F1  0828               	movf	__doprnt@c,w
  2049  06F2  0080               	movwf	0
  2050  06F3  0829               	movf	__doprnt@pb,w
  2051  06F4  0084               	movwf	4
  2052  06F5  0A80               	incf	0,f
  2053  06F6  0008               	return
  2054  06F7                     PL6:	
  2055  06F7  00F0               	movwf	?_putch
  2056  06F8  0829               	movf	__doprnt@pb,w
  2057  06F9  3E01               	addlw	1
  2058  06FA  0084               	movwf	4
  2059  06FB  0800               	movf	0,w
  2060  06FC  0008               	return
  2061  06FD                     PL7:	
  2062  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  2063  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  2064  06FF  0008               	return
  2065                           
  2066                           	psect	text319
  2067  038D                     __ptext319:	
  2068 ;; =============== function _printf ends ============
  2069                           
  2070                           
  2071 ;; *************** function _line *****************
  2072 ;; Defined at:
  2073 ;;		line 212 in file "C:\Users\Jorge\OneDrive\Escritorio\BTCAR\BTCAR.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;		None
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;		None
  2078 ;; Return value:  Size  Location     Type
  2079 ;;		None               void
  2080 ;; Registers used:
  2081 ;;		wreg, status,2, status,0, pclath, cstack
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 60/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2087 ;;      Params:         0       0       0       0       0
  2088 ;;      Locals:         0       0       0       0       0
  2089 ;;      Temps:          0       0       0       0       0
  2090 ;;      Totals:         0       0       0       0       0
  2091 ;;Total ram usage:        0 bytes
  2092 ;; Hardware stack levels used:    1
  2093 ;; Hardware stack levels required when called:    1
  2094 ;; This function calls:
  2095 ;;		_PWM
  2096 ;; This function is called by:
  2097 ;;		_main
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100  038D                     _line:	
  2101  038D  24CA               	call	PL8	;select bank 0
  2102                           
  2103                           ;BTCAR.c: 214: if((RB7 == 0) && (RB6 == 0)){
  2104                           
  2105                           ; Regs used in _line: [wreg+status,2+status,0+pclath+cstack]
  2106  038E  1F86               	btfss	6,7
  2107  038F  1B06               	btfsc	6,6
  2108  0390  2BB1               	goto	l1104
  2109                           
  2110                           ;BTCAR.c: 216: pwm1=700;
  2111  0391  30BC               	movlw	188
  2112  0392  00B9               	movwf	_pwm1
  2113  0393  3002               	movlw	2
  2114  0394  00BA               	movwf	_pwm1+1
  2115                           
  2116                           ;BTCAR.c: 217: pwm2=700;
  2117  0395  30BC               	movlw	188
  2118  0396  2BA7               	goto	L4
  2119  0397                     l3471:	
  2120  0397  1B06               	btfsc	6,6
  2121  0398  2BB3               	goto	l1106
  2122                           
  2123                           ;BTCAR.c: 225: pwm1=700;
  2124  0399  30BC               	movlw	188
  2125  039A  00B9               	movwf	_pwm1
  2126  039B  3002               	movlw	2
  2127  039C  00BA               	movwf	_pwm1+1
  2128                           
  2129                           ;BTCAR.c: 226: pwm2=100;
  2130  039D  3064               	movlw	100
  2131  039E  00BB               	movwf	_pwm2
  2132  039F  01BC               	clrf	_pwm2+1
  2133  03A0  2BAA               	goto	l3465
  2134  03A1                     l3481:	
  2135  03A1  1F06               	btfss	6,6
  2136  03A2  2BB5               	goto	l3491
  2137                           
  2138                           ;BTCAR.c: 234: pwm1=100;
  2139  03A3  3064               	movlw	100
  2140  03A4  00B9               	movwf	_pwm1
  2141  03A5  30BC               	movlw	188
  2142  03A6  01BA               	clrf	_pwm1+1
  2143  03A7                     L4:	
  2144                           
  2145                           ;BTCAR.c: 235: pwm2=700;
  2146  03A7  00BB               	movwf	_pwm2
  2147  03A8  3002               	movlw	2
  2148  03A9  00BC               	movwf	_pwm2+1
  2149  03AA                     l3465:	
  2150                           
  2151                           ;BTCAR.c: 218: PWM();
  2152  03AA  2488  120A  118A   	fcall	_PWM
  2153  03AD  24CA               	call	PL8	;select bank 0
  2154                           
  2155                           ;BTCAR.c: 219: RA0 = 1;
  2156  03AE  1405               	bsf	5,0
  2157                           
  2158                           ;BTCAR.c: 220: RA2 = 1;
  2159  03AF  1505               	bsf	5,2
  2160                           
  2161                           ;BTCAR.c: 222: }else{
  2162  03B0  0008               	return
  2163  03B1                     l1104:	
  2164                           
  2165                           ;BTCAR.c: 223: if((RB7 == 1) && (RB6 == 0)){
  2166  03B1  1B86               	btfsc	6,7
  2167  03B2  2B97               	goto	l3471
  2168  03B3                     l1106:	
  2169                           
  2170                           ;BTCAR.c: 232: if((RB7 == 0) && (RB6 == 1)){
  2171  03B3  1F86               	btfss	6,7
  2172  03B4  2BA1               	goto	l3481
  2173  03B5                     l3491:	
  2174                           
  2175                           ;BTCAR.c: 242: pwm1=700;
  2176  03B5  30BC               	movlw	188
  2177                           
  2178                           ;BTCAR.c: 243: pwm2=700;
  2179  03B6  24C2  120A  118A   	fcall	PL4	;call to abstracted procedure
  2180                           
  2181                           ;BTCAR.c: 244: PWM();
  2182  03B9  2488  120A  118A   	fcall	_PWM
  2183  03BC  24CA               	call	PL8	;select bank 0
  2184                           
  2185                           ;BTCAR.c: 245: RA1 = 1;
  2186  03BD  1485               	bsf	5,1
  2187                           
  2188                           ;BTCAR.c: 246: RA3 = 1;
  2189  03BE  1585               	bsf	5,3
  2190  03BF  0008               	return
  2191  03C0                     __end_of_line:	
  2192  03C0                     __ptext320:	
  2193 ;; =============== function _line ends ============
  2194                           
  2195                           
  2196 ;; *************** function _rutina *****************
  2197 ;; Defined at:
  2198 ;;		line 286 in file "C:\Users\Jorge\OneDrive\Escritorio\BTCAR\BTCAR.c"
  2199 ;; Parameters:    Size  Location     Type
  2200 ;;		None
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;		None
  2203 ;; Return value:  Size  Location     Type
  2204 ;;		None               void
  2205 ;; Registers used:
  2206 ;;		wreg, status,2, status,0, pclath, cstack
  2207 ;; Tracked objects:
  2208 ;;		On entry : 60/0
  2209 ;;		On exit  : 0/0
  2210 ;;		Unchanged: 0/0
  2211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2212 ;;      Params:         0       0       0       0       0
  2213 ;;      Locals:         0       0       0       0       0
  2214 ;;      Temps:          3       0       0       0       0
  2215 ;;      Totals:         3       0       0       0       0
  2216 ;;Total ram usage:        3 bytes
  2217 ;; Hardware stack levels used:    1
  2218 ;; Hardware stack levels required when called:    1
  2219 ;; This function calls:
  2220 ;;		_PWM
  2221 ;; This function is called by:
  2222 ;;		_main
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225  03C0                     _rutina:	
  2226                           
  2227                           ;BTCAR.c: 287: pwm1=700;
  2228                           
  2229                           ; Regs used in _rutina: [wreg+status,2+status,0+pclath+cstack]
  2230  03C0  30BC               	movlw	188
  2231                           
  2232                           ;BTCAR.c: 288: pwm2=700;
  2233  03C1  24C2  120A  118A   	fcall	PL4	;call to abstracted procedure
  2234                           
  2235                           ;BTCAR.c: 289: PWM();
  2236  03C4  2488  120A  118A   	fcall	_PWM
  2237  03C7  24CA               	call	PL8	;select bank 0
  2238                           
  2239                           ;BTCAR.c: 290: RA0 = 1;
  2240  03C8  300B               	movlw	11
  2241  03C9  1405               	bsf	5,0
  2242                           
  2243                           ;BTCAR.c: 291: RA2 = 1;
  2244  03CA  1505               	bsf	5,2
  2245                           
  2246                           ;BTCAR.c: 292: _delay((unsigned long)((2000)*(4000000/4000.0)));
  2247  03CB  00F4               	movwf	??_rutina+2
  2248  03CC  3026               	movlw	38
  2249  03CD  00F3               	movwf	??_rutina+1
  2250  03CE  3066               	movlw	102
  2251  03CF  00F2               	movwf	??_rutina
  2252  03D0                     u1127:	
  2253  03D0  0BF2               	decfsz	??_rutina,f
  2254  03D1  2BD0               	goto	u1127
  2255  03D2  0BF3               	decfsz	??_rutina+1,f
  2256  03D3  2BD0               	goto	u1127
  2257  03D4  0BF4               	decfsz	??_rutina+2,f
  2258  03D5  2BD0               	goto	u1127
  2259  03D6  2BD7               	nop2
  2260  03D7  24CA               	call	PL8	;select bank 0
  2261                           
  2262                           ;BTCAR.c: 293: RA0 = 0;
  2263  03D8  3003               	movlw	3
  2264  03D9  1005               	bcf	5,0
  2265                           
  2266                           ;BTCAR.c: 294: RA2 = 0;
  2267  03DA  1105               	bcf	5,2
  2268                           
  2269                           ;BTCAR.c: 295: _delay((unsigned long)((500)*(4000000/4000.0)));
  2270  03DB  00F4               	movwf	??_rutina+2
  2271  03DC  308A               	movlw	138
  2272  03DD  00F3               	movwf	??_rutina+1
  2273  03DE  3056               	movlw	86
  2274  03DF  00F2               	movwf	??_rutina
  2275  03E0                     u1137:	
  2276  03E0  0BF2               	decfsz	??_rutina,f
  2277  03E1  2BE0               	goto	u1137
  2278  03E2  0BF3               	decfsz	??_rutina+1,f
  2279  03E3  2BE0               	goto	u1137
  2280  03E4  0BF4               	decfsz	??_rutina+2,f
  2281  03E5  2BE0               	goto	u1137
  2282  03E6  2BE7               	nop2
  2283  03E7  24CA               	call	PL8	;select bank 0
  2284                           
  2285                           ;BTCAR.c: 296: RA1 = 1;
  2286  03E8  300B               	movlw	11
  2287  03E9  1485               	bsf	5,1
  2288                           
  2289                           ;BTCAR.c: 297: RA3 = 1;
  2290  03EA  1585               	bsf	5,3
  2291                           
  2292                           ;BTCAR.c: 298: _delay((unsigned long)((2000)*(4000000/4000.0)));
  2293  03EB  00F4               	movwf	??_rutina+2
  2294  03EC  3026               	movlw	38
  2295  03ED  00F3               	movwf	??_rutina+1
  2296  03EE  3066               	movlw	102
  2297  03EF  00F2               	movwf	??_rutina
  2298  03F0                     u1147:	
  2299  03F0  0BF2               	decfsz	??_rutina,f
  2300  03F1  2BF0               	goto	u1147
  2301  03F2  0BF3               	decfsz	??_rutina+1,f
  2302  03F3  2BF0               	goto	u1147
  2303  03F4  0BF4               	decfsz	??_rutina+2,f
  2304  03F5  2BF0               	goto	u1147
  2305  03F6  2BF7               	nop2
  2306  03F7  24CA               	call	PL8	;select bank 0
  2307                           
  2308                           ;BTCAR.c: 299: RA1 = 0;
  2309  03F8  3003               	movlw	3
  2310  03F9  1085               	bcf	5,1
  2311                           
  2312                           ;BTCAR.c: 300: RA3 = 0;
  2313  03FA  1185               	bcf	5,3
  2314                           
  2315                           ;BTCAR.c: 301: _delay((unsigned long)((500)*(4000000/4000.0)));
  2316  03FB  00F4               	movwf	??_rutina+2
  2317  03FC  308A               	movlw	138
  2318  03FD  00F3               	movwf	??_rutina+1
  2319  03FE  3056               	movlw	86
  2320  03FF  00F2               	movwf	??_rutina
  2321  0400                     u1157:	
  2322  0400  0BF2               	decfsz	??_rutina,f
  2323  0401  2C00               	goto	u1157
  2324  0402  0BF3               	decfsz	??_rutina+1,f
  2325  0403  2C00               	goto	u1157
  2326  0404  0BF4               	decfsz	??_rutina+2,f
  2327  0405  2C00               	goto	u1157
  2328  0406  2C07               	nop2
  2329  0407  24CA               	call	PL8	;select bank 0
  2330                           
  2331                           ;BTCAR.c: 302: RA0 = 1;
  2332  0408  300B               	movlw	11
  2333  0409  1405               	bsf	5,0
  2334                           
  2335                           ;BTCAR.c: 303: RA2 = 0;
  2336  040A  1105               	bcf	5,2
  2337                           
  2338                           ;BTCAR.c: 304: _delay((unsigned long)((2000)*(4000000/4000.0)));
  2339  040B  00F4               	movwf	??_rutina+2
  2340  040C  3026               	movlw	38
  2341  040D  00F3               	movwf	??_rutina+1
  2342  040E  3066               	movlw	102
  2343  040F  00F2               	movwf	??_rutina
  2344  0410                     u1167:	
  2345  0410  0BF2               	decfsz	??_rutina,f
  2346  0411  2C10               	goto	u1167
  2347  0412  0BF3               	decfsz	??_rutina+1,f
  2348  0413  2C10               	goto	u1167
  2349  0414  0BF4               	decfsz	??_rutina+2,f
  2350  0415  2C10               	goto	u1167
  2351  0416  2C17               	nop2
  2352  0417  24CA               	call	PL8	;select bank 0
  2353                           
  2354                           ;BTCAR.c: 305: RA0 = 0;
  2355  0418  3003               	movlw	3
  2356  0419  1005               	bcf	5,0
  2357                           
  2358                           ;BTCAR.c: 306: RA2 = 0;
  2359  041A  1105               	bcf	5,2
  2360                           
  2361                           ;BTCAR.c: 307: _delay((unsigned long)((500)*(4000000/4000.0)));
  2362  041B  00F4               	movwf	??_rutina+2
  2363  041C  308A               	movlw	138
  2364  041D  00F3               	movwf	??_rutina+1
  2365  041E  3056               	movlw	86
  2366  041F  00F2               	movwf	??_rutina
  2367  0420                     u1177:	
  2368  0420  0BF2               	decfsz	??_rutina,f
  2369  0421  2C20               	goto	u1177
  2370  0422  0BF3               	decfsz	??_rutina+1,f
  2371  0423  2C20               	goto	u1177
  2372  0424  0BF4               	decfsz	??_rutina+2,f
  2373  0425  2C20               	goto	u1177
  2374  0426  2C27               	nop2
  2375  0427  24CA               	call	PL8	;select bank 0
  2376                           
  2377                           ;BTCAR.c: 308: RA1 = 1;
  2378  0428  300B               	movlw	11
  2379  0429  1485               	bsf	5,1
  2380                           
  2381                           ;BTCAR.c: 309: RA3 = 0;
  2382  042A  1185               	bcf	5,3
  2383                           
  2384                           ;BTCAR.c: 310: _delay((unsigned long)((2000)*(4000000/4000.0)));
  2385  042B  00F4               	movwf	??_rutina+2
  2386  042C  3026               	movlw	38
  2387  042D  00F3               	movwf	??_rutina+1
  2388  042E  3066               	movlw	102
  2389  042F  00F2               	movwf	??_rutina
  2390  0430                     u1187:	
  2391  0430  0BF2               	decfsz	??_rutina,f
  2392  0431  2C30               	goto	u1187
  2393  0432  0BF3               	decfsz	??_rutina+1,f
  2394  0433  2C30               	goto	u1187
  2395  0434  0BF4               	decfsz	??_rutina+2,f
  2396  0435  2C30               	goto	u1187
  2397  0436  2C37               	nop2
  2398  0437  24CA               	call	PL8	;select bank 0
  2399                           
  2400                           ;BTCAR.c: 311: RA1 = 0;
  2401  0438  3003               	movlw	3
  2402  0439  1085               	bcf	5,1
  2403                           
  2404                           ;BTCAR.c: 312: RA3 = 0;
  2405  043A  1185               	bcf	5,3
  2406                           
  2407                           ;BTCAR.c: 313: _delay((unsigned long)((500)*(4000000/4000.0)));
  2408  043B  00F4               	movwf	??_rutina+2
  2409  043C  308A               	movlw	138
  2410  043D  00F3               	movwf	??_rutina+1
  2411  043E  3056               	movlw	86
  2412  043F  00F2               	movwf	??_rutina
  2413  0440                     u1197:	
  2414  0440  0BF2               	decfsz	??_rutina,f
  2415  0441  2C40               	goto	u1197
  2416  0442  0BF3               	decfsz	??_rutina+1,f
  2417  0443  2C40               	goto	u1197
  2418  0444  0BF4               	decfsz	??_rutina+2,f
  2419  0445  2C40               	goto	u1197
  2420  0446  2C47               	nop2
  2421  0447  24CA               	call	PL8	;select bank 0
  2422                           
  2423                           ;BTCAR.c: 314: RA0 = 0;
  2424  0448  300B               	movlw	11
  2425  0449  1005               	bcf	5,0
  2426                           
  2427                           ;BTCAR.c: 315: RA2 = 1;
  2428  044A  1505               	bsf	5,2
  2429                           
  2430                           ;BTCAR.c: 316: _delay((unsigned long)((2000)*(4000000/4000.0)));
  2431  044B  00F4               	movwf	??_rutina+2
  2432  044C  3026               	movlw	38
  2433  044D  00F3               	movwf	??_rutina+1
  2434  044E  3066               	movlw	102
  2435  044F  00F2               	movwf	??_rutina
  2436  0450                     u1207:	
  2437  0450  0BF2               	decfsz	??_rutina,f
  2438  0451  2C50               	goto	u1207
  2439  0452  0BF3               	decfsz	??_rutina+1,f
  2440  0453  2C50               	goto	u1207
  2441  0454  0BF4               	decfsz	??_rutina+2,f
  2442  0455  2C50               	goto	u1207
  2443  0456  2C57               	nop2
  2444  0457  24CA               	call	PL8	;select bank 0
  2445                           
  2446                           ;BTCAR.c: 317: RA0 = 0;
  2447  0458  3003               	movlw	3
  2448  0459  1005               	bcf	5,0
  2449                           
  2450                           ;BTCAR.c: 318: RA2 = 0;
  2451  045A  1105               	bcf	5,2
  2452                           
  2453                           ;BTCAR.c: 319: _delay((unsigned long)((500)*(4000000/4000.0)));
  2454  045B  00F4               	movwf	??_rutina+2
  2455  045C  308A               	movlw	138
  2456  045D  00F3               	movwf	??_rutina+1
  2457  045E  3056               	movlw	86
  2458  045F  00F2               	movwf	??_rutina
  2459  0460                     u1217:	
  2460  0460  0BF2               	decfsz	??_rutina,f
  2461  0461  2C60               	goto	u1217
  2462  0462  0BF3               	decfsz	??_rutina+1,f
  2463  0463  2C60               	goto	u1217
  2464  0464  0BF4               	decfsz	??_rutina+2,f
  2465  0465  2C60               	goto	u1217
  2466  0466  2C67               	nop2
  2467  0467  24CA               	call	PL8	;select bank 0
  2468                           
  2469                           ;BTCAR.c: 320: RA1 = 0;
  2470  0468  300B               	movlw	11
  2471  0469  1085               	bcf	5,1
  2472                           
  2473                           ;BTCAR.c: 321: RA3 = 1;
  2474  046A  1585               	bsf	5,3
  2475                           
  2476                           ;BTCAR.c: 322: _delay((unsigned long)((2000)*(4000000/4000.0)));
  2477  046B  00F4               	movwf	??_rutina+2
  2478  046C  3026               	movlw	38
  2479  046D  00F3               	movwf	??_rutina+1
  2480  046E  3066               	movlw	102
  2481  046F  00F2               	movwf	??_rutina
  2482  0470                     u1227:	
  2483  0470  0BF2               	decfsz	??_rutina,f
  2484  0471  2C70               	goto	u1227
  2485  0472  0BF3               	decfsz	??_rutina+1,f
  2486  0473  2C70               	goto	u1227
  2487  0474  0BF4               	decfsz	??_rutina+2,f
  2488  0475  2C70               	goto	u1227
  2489  0476  2C77               	nop2
  2490  0477  24CA               	call	PL8	;select bank 0
  2491                           
  2492                           ;BTCAR.c: 323: RA1 = 0;
  2493  0478  3003               	movlw	3
  2494  0479  1085               	bcf	5,1
  2495                           
  2496                           ;BTCAR.c: 324: RA3 = 0;
  2497  047A  1185               	bcf	5,3
  2498                           
  2499                           ;BTCAR.c: 325: _delay((unsigned long)((500)*(4000000/4000.0)));
  2500  047B  00F4               	movwf	??_rutina+2
  2501  047C  308A               	movlw	138
  2502  047D  00F3               	movwf	??_rutina+1
  2503  047E  3056               	movlw	86
  2504  047F  00F2               	movwf	??_rutina
  2505  0480                     u1237:	
  2506  0480  0BF2               	decfsz	??_rutina,f
  2507  0481  2C80               	goto	u1237
  2508  0482  0BF3               	decfsz	??_rutina+1,f
  2509  0483  2C80               	goto	u1237
  2510  0484  0BF4               	decfsz	??_rutina+2,f
  2511  0485  2C80               	goto	u1237
  2512  0486  2C87               	nop2
  2513  0487  0008               	return
  2514  0488                     __end_of_rutina:	
  2515  0488                     __ptext323:	
  2516 ;; =============== function _atoi ends ============
  2517                           
  2518                           
  2519 ;; *************** function _PWM *****************
  2520 ;; Defined at:
  2521 ;;		line 328 in file "C:\Users\Jorge\OneDrive\Escritorio\BTCAR\BTCAR.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;		None
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;		None
  2526 ;; Return value:  Size  Location     Type
  2527 ;;		None               void
  2528 ;; Registers used:
  2529 ;;		wreg, status,2, status,0
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2535 ;;      Params:         0       0       0       0       0
  2536 ;;      Locals:         0       0       0       0       0
  2537 ;;      Temps:          2       0       0       0       0
  2538 ;;      Totals:         2       0       0       0       0
  2539 ;;Total ram usage:        2 bytes
  2540 ;; Hardware stack levels used:    1
  2541 ;; This function calls:
  2542 ;;		Nothing
  2543 ;; This function is called by:
  2544 ;;		_main
  2545 ;;		_line
  2546 ;;		_rutina
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549  0488                     _PWM:	
  2550  0488  24CA               	call	PL8	;select bank 0
  2551                           
  2552                           ;BTCAR.c: 329: ADRESH=pwm1>>2;
  2553                           
  2554                           ; Regs used in _PWM: [wreg+status,2+status,0]
  2555  0489  083A               	movf	_pwm1+1,w
  2556  048A  00F1               	movwf	??_PWM+1
  2557  048B  0839               	movf	_pwm1,w
  2558                           
  2559                           ;BTCAR.c: 330: ADRESL=pwm1<<8;
  2560                           
  2561                           ;BTCAR.c: 331: CCPR1L=ADRESH;
  2562  048C  24A9  120A  118A   	fcall	PL2	;call to abstracted procedure
  2563  048F  0095               	movwf	21	;volatile
  2564                           
  2565                           ;BTCAR.c: 332: CCP1CON=0X0C|(ADRESL>>2);
  2566  0490  24B7  120A  118A   	fcall	PL3	;call to abstracted procedure
  2567  0493  0097               	movwf	23	;volatile
  2568                           
  2569                           ;BTCAR.c: 333: _delay((unsigned long)((10)*(4000000/4000000.0)));
  2570  0494  3003               	movlw	3
  2571  0495  00F0               	movwf	??_PWM
  2572  0496                     u1247:	
  2573  0496  0BF0               	decfsz	??_PWM,f
  2574  0497  2C96               	goto	u1247
  2575  0498  24CA               	call	PL8	;select bank 0
  2576                           
  2577                           ;BTCAR.c: 335: ADRESH=pwm2>>2;
  2578  0499  083C               	movf	_pwm2+1,w
  2579  049A  00F1               	movwf	??_PWM+1
  2580  049B  083B               	movf	_pwm2,w
  2581                           
  2582                           ;BTCAR.c: 336: ADRESL=pwm2<<8;
  2583                           
  2584                           ;BTCAR.c: 337: CCPR2L=ADRESH;
  2585  049C  24A9  120A  118A   	fcall	PL2	;call to abstracted procedure
  2586  049F  009B               	movwf	27	;volatile
  2587                           
  2588                           ;BTCAR.c: 338: CCP2CON=0X0C|(ADRESL>>2);
  2589  04A0  24B7  120A  118A   	fcall	PL3	;call to abstracted procedure
  2590  04A3  009D               	movwf	29	;volatile
  2591                           
  2592                           ;BTCAR.c: 339: _delay((unsigned long)((10)*(4000000/4000000.0)));
  2593  04A4  3003               	movlw	3
  2594  04A5  00F0               	movwf	??_PWM
  2595  04A6                     u1257:	
  2596  04A6  0BF0               	decfsz	??_PWM,f
  2597  04A7  2CA6               	goto	u1257
  2598  04A8  0008               	return
  2599  04A9                     __end_of_PWM:	
  2600  04A9                     PL2:	
  2601  04A9  00F0               	movwf	??_PWM
  2602  04AA  1003               	clrc
  2603  04AB  0CF1               	rrf	??_PWM+1,f
  2604  04AC  0CF0               	rrf	??_PWM,f
  2605  04AD  1003               	clrc
  2606  04AE  0CF1               	rrf	??_PWM+1,f
  2607  04AF  0CF0               	rrf	??_PWM,f
  2608  04B0  0870               	movf	??_PWM,w
  2609  04B1  009E               	movwf	30	;volatile
  2610  04B2  1683               	bsf	3,5	;RP0=1, select bank1
  2611  04B3  019E               	clrf	30	;volatile
  2612  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  2613  04B5  081E               	movf	30,w	;volatile
  2614  04B6  0008               	return
  2615  04B7                     PL3:	
  2616  04B7  1683               	bsf	3,5	;RP0=1, select bank1
  2617  04B8  081E               	movf	30,w	;volatile
  2618  04B9  00F0               	movwf	??_PWM
  2619  04BA  1003               	clrc
  2620  04BB  0CF0               	rrf	??_PWM,f
  2621  04BC  1003               	clrc
  2622  04BD  0CF0               	rrf	??_PWM,f
  2623  04BE  0870               	movf	??_PWM,w
  2624  04BF  380C               	iorlw	12
  2625  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  2626  04C1  0008               	return
  2627  04C2                     PL4:	
  2628  04C2  00B9               	movwf	_pwm1
  2629  04C3  3002               	movlw	2
  2630  04C4  00BA               	movwf	_pwm1+1
  2631  04C5  30BC               	movlw	188
  2632  04C6  00BB               	movwf	_pwm2
  2633  04C7  3002               	movlw	2
  2634  04C8  00BC               	movwf	_pwm2+1
  2635  04C9  0008               	return
  2636  04CA                     PL8:	
  2637  04CA  1283               	bcf	3,5	;RP0=0, select bank0
  2638  04CB  1303               	bcf	3,6	;RP1=0, select bank0
  2639  04CC  0008               	return
  2640                           
  2641                           	psect	text328
  2642  071A                     __ptext328:	
  2643 ;; =============== function _isdigit ends ============
  2644                           
  2645                           
  2646 ;; *************** function _init_comms *****************
  2647 ;; Defined at:
  2648 ;;		line 55 in file "C:\Users\Jorge\OneDrive\Escritorio\BTCAR\BTCAR.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;		None
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;		None
  2653 ;; Return value:  Size  Location     Type
  2654 ;;		None               void
  2655 ;; Registers used:
  2656 ;;		wreg, status,2
  2657 ;; Tracked objects:
  2658 ;;		On entry : 17F/0
  2659 ;;		On exit  : 17F/60
  2660 ;;		Unchanged: FFE80/0
  2661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2662 ;;      Params:         0       0       0       0       0
  2663 ;;      Locals:         0       0       0       0       0
  2664 ;;      Temps:          0       0       0       0       0
  2665 ;;      Totals:         0       0       0       0       0
  2666 ;;Total ram usage:        0 bytes
  2667 ;; Hardware stack levels used:    1
  2668 ;; This function calls:
  2669 ;;		Nothing
  2670 ;; This function is called by:
  2671 ;;		_main
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674  071A                     _init_comms:	
  2675                           
  2676                           ;BTCAR.c: 56: TRISC7 = 1;
  2677                           
  2678                           ; Regs used in _init_comms: [wreg+status,2]
  2679  071A  1683               	bsf	3,5	;RP0=1, select bank1
  2680  071B  3019               	movlw	25
  2681  071C  1787               	bsf	7,7
  2682                           
  2683                           ;BTCAR.c: 57: TRISC6 = 0;
  2684  071D  1307               	bcf	7,6
  2685                           
  2686                           ;BTCAR.c: 58: SPBRG = 0x19;
  2687  071E  0099               	movwf	25	;volatile
  2688                           
  2689                           ;BTCAR.c: 60: RCSTA = 0x90;
  2690  071F  3090               	movlw	144
  2691  0720  1283               	bcf	3,5	;RP0=0, select bank0
  2692  0721  0098               	movwf	24	;volatile
  2693                           
  2694                           ;BTCAR.c: 61: TXSTA = 0x26;
  2695  0722  3026               	movlw	38
  2696  0723  1683               	bsf	3,5	;RP0=1, select bank1
  2697  0724  0098               	movwf	24	;volatile
  2698                           
  2699                           ;BTCAR.c: 62: BAUDCTL = 0;
  2700  0725  1703               	bsf	3,6	;RP1=1, select bank3
  2701  0726  0187               	clrf	7	;volatile
  2702  0727  0008               	return
  2703  0728                     __end_of_init_comms:	
  2704                           
  2705                           	psect	text329
  2706  072D                     __ptext329:	
  2707 ;; =============== function _init_comms ends ============
  2708                           
  2709                           
  2710 ;; *************** function _getch *****************
  2711 ;; Defined at:
  2712 ;;		line 49 in file "C:\Users\Jorge\OneDrive\Escritorio\BTCAR\BTCAR.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;		None
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;		None
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  1    wreg      unsigned char 
  2719 ;; Registers used:
  2720 ;;		wreg
  2721 ;; Tracked objects:
  2722 ;;		On entry : 60/0
  2723 ;;		On exit  : 60/0
  2724 ;;		Unchanged: FFF9F/0
  2725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2726 ;;      Params:         0       0       0       0       0
  2727 ;;      Locals:         0       0       0       0       0
  2728 ;;      Temps:          0       0       0       0       0
  2729 ;;      Totals:         0       0       0       0       0
  2730 ;;Total ram usage:        0 bytes
  2731 ;; Hardware stack levels used:    1
  2732 ;; This function calls:
  2733 ;;		Nothing
  2734 ;; This function is called by:
  2735 ;;		_main
  2736 ;; This function uses a non-reentrant model
  2737 ;;
  2738  072D                     _getch:	
  2739  072D                     l1065:	
  2740                           ;BTCAR.c: 51: while(!RCIF)
  2741                           
  2742                           ; Regs used in _getch: [wreg]
  2743                           
  2744  072D  1E8C               	btfss	12,5
  2745  072E  2F2D               	goto	l1065
  2746                           
  2747                           ;BTCAR.c: 53: return RCREG;
  2748  072F  081A               	movf	26,w	;volatile
  2749  0730  0008               	return
  2750  0731                     __end_of_getch:	
  2751                           
  2752                           	psect	text330
  2753  0728                     __ptext330:	
  2754 ;; =============== function _getch ends ============
  2755                           
  2756                           
  2757 ;; *************** function _putch *****************
  2758 ;; Defined at:
  2759 ;;		line 43 in file "C:\Users\Jorge\OneDrive\Escritorio\BTCAR\BTCAR.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;  byte            1    0[COMMON] unsigned char 
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;		None
  2764 ;; Return value:  Size  Location     Type
  2765 ;;		None               void
  2766 ;; Registers used:
  2767 ;;		wreg
  2768 ;; Tracked objects:
  2769 ;;		On entry : 160/0
  2770 ;;		On exit  : 160/0
  2771 ;;		Unchanged: FFE9F/0
  2772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2773 ;;      Params:         1       0       0       0       0
  2774 ;;      Locals:         0       0       0       0       0
  2775 ;;      Temps:          0       0       0       0       0
  2776 ;;      Totals:         1       0       0       0       0
  2777 ;;Total ram usage:        1 bytes
  2778 ;; Hardware stack levels used:    1
  2779 ;; This function calls:
  2780 ;;		Nothing
  2781 ;; This function is called by:
  2782 ;;		_printf
  2783 ;;		__doprnt
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786  0728                     _putch:	
  2787  0728                     l1059:	
  2788                           ;BTCAR.c: 45: while(!TXIF)
  2789                           
  2790                           ; Regs used in _putch: [wreg]
  2791                           
  2792  0728  1E0C               	btfss	12,4
  2793  0729  2F28               	goto	l1059
  2794                           
  2795                           ;BTCAR.c: 47: TXREG = byte;
  2796  072A  0870               	movf	putch@byte,w
  2797  072B  0099               	movwf	25	;volatile
  2798  072C  0008               	return
  2799  072D                     __end_of_putch:	
  2800                           
  2801 ;; =============== function _putch ends ============
  2802  0002                     
  2803                           	psect	functab
  2804  0700                     __pfunctab:	
  2805  0700                     fptable:	
  2806  0700  00FF               	movwf	(btemp+1)& (0+127)
  2807  0701  3007               	movlw	high fptable
  2808  0702  008A               	movwf	10
  2809  0703  087F               	movf	(btemp+1)& (0+127),w
  2810  0704  0782               	addwf	2,f
  2811  0705                     fpbase:	
  2812  0705  2F05               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  2813  0706                     fp__putch:	
  2814  0706  120A  118A  2F28   	ljmp	_putch
  2815  007E                     btemp	set	126	;btemp
  2816  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Mon May 30 21:24:44 2022

                   pc 0002                    _SR 04CD                    _op 0044                    fsr 0004  
 ___wmul@multiplicand 0072                   ?_SR 0070                   _RA0 0028                   _RA1 0029  
                 _RB0 0030                   _RA2 002A                   _RB1 0031                   _RA3 002B  
                 _RB6 0036                   _RB7 0037                   _PR2 0092                   u625 061C  
                 u665 0641                   u775 059D                   _PWM 0488                   _dir 0045  
                 _vel 003D                   fsr0 0004                   indf 0000                  ??_SR 0031  
                ?_PWM 0070                  l1104 03B1                  l1120 04DF                  l1113 04D7  
                l1106 03B3                  l1116 04DD                  l1133 0000                  l1062 0000  
                l1071 0000                  l1136 0000                  l1080 034B                  l1065 072D  
                l1059 0728                  l1068 0000                  l1180 0000                  l2208 0000  
                l3201 0000                  l2218 0000                  l3211 0000                  l3203 06BD  
                l2180 0000                  l2228 0000                  l3207 06C5                  l3311 06A8  
                l3303 0673                  l3209 0000                  l3233 0000                  l3217 0000  
                l3305 0699                  l3401 0000                  l3227 0613                  l3219 0000  
                l3251 063B                  l3243 0000                  l3307 0000                  l3331 0000  
                l3323 0554                  l3315 0000                  l3411 0000                  l3403 0000  
                l2196 0000                  l3173 0000                  l3237 0000                  l3229 0000  
                l3341 0586                  l3333 056F                  l3325 0000                  l3421 0000  
                l3413 0000                  l3405 0000                  l2189 0000                  l3501 0000  
                l3183 0000                  l3191 0000                  l3239 062A                  l3271 0000  
                l3263 0000                  l3351 0000                  l3335 0000                  l3327 055B  
                l3431 0000                  l3423 0000                  l3415 0000                  l3407 0000  
                l3503 0000                  l3511 0000                  l3177 0000                  l3185 0000  
                l3257 0000                  l3273 0000                  l3265 0000                  l3281 0000  
                l3361 0000                  l3353 05A4                  l3345 0588                  l3441 0000  
                l3433 0000                  l3425 0000                  l3417 0000                  l3409 0000  
                l3505 0000                  l3513 0000                  l3521 0000                  l3601 0000  
                l3187 0000                  l3259 064E                  l3275 0000                  l3267 0000  
                l3291 0000                  l3283 065A                  l3371 05F7                  l3363 05C0  
                l3339 0000                  l3451 0000                  l3443 0000                  l3435 0000  
                l3427 0000                  l3419 0000                  l3515 0000                  l3531 04E8  
                l3523 0000                  l3611 02DB                  l3603 0000                  l3197 06B9  
                l3189 0000                  l3277 0000                  l3269 0000                  l3285 0654  
                l3373 0000                  l3365 05C4                  l3453 0000                  l3445 0000  
                l3437 0000                  l3429 0000                  l3517 0000                  l3509 0000  
                l3541 0507                  l3533 0000                  l3525 0000                  l3613 0000  
                l3605 0000                  l3279 0000                  l3295 066D                  l3287 065C  
                l3367 0000                  l3375 05FD                  l3359 05B7                  l3455 0000  
                l3447 0000                  l3439 0000                  l3391 0000                  l3383 0000  
                l3471 0397                  l3551 0000                  l3543 0000                  l3535 04EB  
                l3527 04DB                  l3631 030F                  l3607 02CF                  l3297 0697  
                l3377 0534                  l3457 0000                  l3449 0000                  l3393 0000  
                l3385 0000                  l3481 03A1                  l3465 03AA                  l3553 0000  
                l3545 050D                  l3537 0000                  l3641 0317                  l3625 02FE  
                l3609 02D5                  l3561 0000                  l3379 0602                  l3395 0000  
                l3387 0000                  l3491 03B5                  l3467 0000                  l3459 0000  
                l3651 032E                  l3635 033B                  l3619 02F2                  l3571 0000  
                l3563 0000                  l3555 0000                  l3397 0000                  l3389 0000  
                l3493 0000                  l3469 0000                  l3549 051B                  l3661 0335  
                l3645 0000                  l3637 0000                  l3581 0000                  l3573 0000  
                l3565 0000                  l3557 0000                  l3399 0000                  l3495 0000  
                l3671 0350                  l3647 0000                  l3639 0000                  l3591 0000  
                l3583 0000                  l3575 0000                  l3567 0000                  l3559 0000  
                l3497 0000                  l3681 0000                  l3649 0000                  l3593 0000  
                l3585 0000                  l3577 0000                  l3569 0000                  l3499 0000  
                l3691 0000                  l3683 0000                  l3595 0000                  l3587 0000  
                l3579 0000                  l3693 0375                  l3685 0000                  l3677 0352  
                l3597 0000                  l3589 02BC                  l3687 0000                  l3679 0000  
                l3599 0000                  l3689 0000                  l3697 0377                  l3699 0385  
                _ADFM 04FF                  STR_1 0018                  STR_2 0018                  STR_3 0013  
                u1107 0389                  u1117 04D3                  u1207 0450                  u1127 03D0  
                u1217 0460                  u1137 03E0                  u1065 0372                  u1227 0470  
                u1147 03F0                  u1237 0480                  u1157 0400                  u1077 0341  
                u1247 0496                  u1167 0410                  u1087 0323                  u1257 04A6  
                u1177 0420                  u1097 035B                  u1187 0430                  u1197 0440  
                _RCIF 0065                  _TXIF 0064                  _dato 0037                  _dist 0042  
                _atoi 0653                  _main 0291                  _line 038D                  _pwm1 0039  
                _pwm2 003B                  btemp 007E                  start 0000                 ??_PWM 0070  
               ?_atoi 0076                 ?_main 0070                 ?_line 0070                 _ANSEL 0188  
               _T1CON 0010                 _T2CON 0012       __end_of___lwdiv 062F       __end_of___lwmod 0653  
               _RCREG 001A                 _RCSTA 0018                 _TMR1H 000F                 _TMR1L 000E  
               _SPBRG 0099       __end_of__doprnt 0605                 _TRISA 0085                 _TRISB 0086  
               _TRISC 0087                 _TRISD 0088                 _TRISE 0089                 _TXREG 0019  
               _TXSTA 0098                 _getch 072D       __end_of_isdigit 06BB                 atoi@a 007B  
               atoi@s 007D                 _putch 0728                 fpbase 0705                 main@x 0035  
               pclath 000A                 status 0003                 wtemp0 007E       __end_of_sprintf 06F0  
        __end_of_atoi 06AD          __end_of_main 038D          __end_of_line 03C0                ??_atoi 0078  
              ??_main 0032                ??_line 0072                ?_getch 0070                _ADCON1 009F  
              _ADRESH 001E                _ADRESL 009E                _CCPR1L 0015                _CCPR2L 001B  
              ?_putch 0070                _ANSELH 0189                _TMR1IF 0060                _TMR1ON 0080  
              _TRISB0 0430                _TRISB1 0431                _TRISB6 0436                _TRISB7 0437  
              _TRISC6 043E                _TRISC7 043F                _carac1 003E                ___wmul 06BB  
           ??___lwdiv 0074             ??___lwmod 007B             ??__doprnt 0020          __doprnt@_val 0024  
        __doprnt@flag 0022                _printf 06D4          __doprnt@prec 0023                _rutina 03C0  
              fptable 0700                fptotal 0002             ??_isdigit 0070             ??_sprintf 007E  
      __pcstackCOMMON 0070          __pidataBANK0 0000         __end_of_getch 0731         __end_of_putch 072D  
          __end_of_SR 0533            __doprnt@ap 007D            __doprnt@pb 0029               ??_getch 0070  
             ??_putch 0071            __pbssBANK0 0037            __pmaintext 0291               ?___wmul 0070  
             _CCP1CON 0017               _CCP2CON 001D               _BAUDCTL 0187               ?_printf 002A  
             ?_rutina 0070       __size_of___wmul 0019               ___lwdiv 0605               ___lwmod 062F  
          _init_comms 071A               __doprnt 0533       __size_of_printf 000C       __size_of_rutina 00C8  
        __size_of_PWM 0021               _dpowers 0009               _isdigit 06AD               _sprintf 06E0  
end_of_initialization 0716               printf@f 002C           ?_init_comms 0070        __end_of___wmul 06D4  
      __end_of_printf 06E0        __end_of_rutina 0488   start_initialization 0709           __end_of_PWM 04A9  
            ??___wmul 0074           __pdataBANK0 0045              ??_printf 007E              ??_rutina 0072  
       __pcstackBANK0 0020          _isdigit$2399 0070   __size_of_init_comms 000E             __doprnt@c 0028  
           __doprnt@f 007C             __pnvBANK0 0042      ___lwdiv@dividend 0072             __pfunctab 0700  
           __ptext320 03C0             __ptext321 0533             __ptext330 0728             __ptext322 0653  
           __ptext323 0488             __ptext324 062F             __ptext316 04CD             __ptext325 0605  
           __ptext317 06E0             __ptext326 06BB             __ptext318 06D4             __ptext327 06AD  
           __ptext319 038D             __ptext328 071A             __ptext329 072D              ?___lwdiv 0070  
            ?___lwmod 0077              ?__doprnt 007C             __pstrings 0003              ?_isdigit 0070  
    ___lwdiv@quotient 0074        __size_of_getch 0004              ?_sprintf 002A        __size_of_putch 0005  
         __size_of_SR 0066        ___wmul@product 0074           __stringbase 0008     ___wmul@multiplier 0070  
        ??_init_comms 0070      __size_of___lwdiv 002A      __size_of___lwmod 0024      __size_of__doprnt 00D2  
    __size_of_isdigit 000E       ___lwdiv@divisor 0070       ___lwdiv@counter 0076      __size_of_sprintf 0010  
       __size_of_atoi 005A         __size_of_main 00FC    __end_of_init_comms 0728         __size_of_line 0033  
            atoi@sign 007A              fp__putch 0706             putch@byte 0070              isdigit@c 0071  
           sprintf@ap 002E             sprintf@pb 002F             sprintf@wh 002D      ___lwmod@dividend 0079  
           stringcode 0003              printf@ap 002D              printf@pb 002E              sprintf@f 002A  
     ___lwmod@divisor 0077       ___lwmod@counter 007B              stringdir 0003              stringtab 0003  
