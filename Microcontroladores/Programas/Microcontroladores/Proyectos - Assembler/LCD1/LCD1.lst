

HI-TECH Software PIC PRO Macro Assembler V9.82 build 9453 
                                                                                               Thu May 12 13:52:17 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 9453
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,delta=2
    12                           	psect	text523,local,class=CODE,delta=2
    13                           	psect	text524,local,class=CODE,delta=2
    14                           	psect	text528,local,class=CODE,delta=2
    15                           	psect	text531,local,class=CODE,delta=2
    16                           	psect	text547,local,class=CODE,delta=2
    17                           	psect	text551,local,class=CODE,delta=2
    18                           	psect	text552,local,class=CODE,delta=2
    19                           	psect	pa_nodes,global,class=CODE,delta=2
    20                           	dabs	1,0x7E,2
    21  000A                     	;#
    22                           
    23                           	psect	config
    24  2007  E0D4               	dw	57556	;#
    25  2008  FFFF               	dw	65535	;#
    26                           
    27                           	psect	strings
    28  0800                     __pstrings:	
    29  0800                     stringtab:	
    30                           ;	global	stringdir,stringtab,__stringbase
    31                           
    32                           
    33                           ;	String table - string pointers are 1 byte each
    34  0800  1BFF               	btfsc	btemp+1,7
    35  0801  280A               	ljmp	stringcode
    36  0802  1383               	bcf	3,7
    37  0803  187F               	btfsc	btemp+1,0
    38  0804  1783               	bsf	3,7
    39  0805  0800               	movf	0,w
    40  0806  0A84               	incf	4,f
    41  0807  1903               	skipnz
    42  0808  0AFF               	incf	btemp+1,f
    43  0809  0008               	return
    44  080A                     stringcode:	
    45  080A                     stringdir:	
    46  080A  3008               	movlw	high stringdir
    47  080B  008A               	movwf	10
    48  080C  0804               	movf	4,w
    49  080D  0A84               	incf	4,f
    50  080E  0782               	addwf	2,f
    51  080F                     __stringbase:	
    52  080F  3400               	retlw	0
    53  0810                     __npowers_:	
    54  0810  3400               	retlw	0
    55  0811  3480               	retlw	128
    56  0812  343F               	retlw	63
    57  0813  34CD               	retlw	205
    58  0814  34CC               	retlw	204
    59  0815  343D               	retlw	61
    60  0816  34D7               	retlw	215
    61  0817  3423               	retlw	35
    62  0818  343C               	retlw	60
    63  0819  3412               	retlw	18
    64  081A  3483               	retlw	131
    65  081B  343A               	retlw	58
    66  081C  34B7               	retlw	183
    67  081D  34D1               	retlw	209
    68  081E  3438               	retlw	56
    69  081F  34C6               	retlw	198
    70  0820  3427               	retlw	39
    71  0821  3437               	retlw	55
    72  0822  3438               	retlw	56
    73  0823  3486               	retlw	134
    74  0824  3435               	retlw	53
    75  0825  34C0               	retlw	192
    76  0826  34D6               	retlw	214
    77  0827  3433               	retlw	51
    78  0828  34CC               	retlw	204
    79  0829  342B               	retlw	43
    80  082A  3432               	retlw	50
    81  082B  3470               	retlw	112
    82  082C  3489               	retlw	137
    83  082D  3430               	retlw	48
    84  082E  34E7               	retlw	231
    85  082F  34DB               	retlw	219
    86  0830  342E               	retlw	46
    87  0831  34E5               	retlw	229
    88  0832  343C               	retlw	60
    89  0833  341E               	retlw	30
    90  0834  3442               	retlw	66
    91  0835  34A2               	retlw	162
    92  0836  340D               	retlw	13
    93  0837                     __powers_:	
    94  0837  3400               	retlw	0
    95  0838  3480               	retlw	128
    96  0839  343F               	retlw	63
    97  083A  3400               	retlw	0
    98  083B  3420               	retlw	32
    99  083C  3441               	retlw	65
   100  083D  3400               	retlw	0
   101  083E  34C8               	retlw	200
   102  083F  3442               	retlw	66
   103  0840  3400               	retlw	0
   104  0841  347A               	retlw	122
   105  0842  3444               	retlw	68
   106  0843  3440               	retlw	64
   107  0844  341C               	retlw	28
   108  0845  3446               	retlw	70
   109  0846  3450               	retlw	80
   110  0847  34C3               	retlw	195
   111  0848  3447               	retlw	71
   112  0849  3424               	retlw	36
   113  084A  3474               	retlw	116
   114  084B  3449               	retlw	73
   115  084C  3497               	retlw	151
   116  084D  3418               	retlw	24
   117  084E  344B               	retlw	75
   118  084F  34BC               	retlw	188
   119  0850  34BE               	retlw	190
   120  0851  344C               	retlw	76
   121  0852  346B               	retlw	107
   122  0853  346E               	retlw	110
   123  0854  344E               	retlw	78
   124  0855  3403               	retlw	3
   125  0856  3415               	retlw	21
   126  0857  3450               	retlw	80
   127  0858  3479               	retlw	121
   128  0859  34AD               	retlw	173
   129  085A  3460               	retlw	96
   130  085B  34F3               	retlw	243
   131  085C  3449               	retlw	73
   132  085D  3471               	retlw	113
   133  085E                     _dpowers:	
   134  085E  3401               	retlw	1
   135  085F  3400               	retlw	0
   136  0860  3400               	retlw	0
   137  0861  3400               	retlw	0
   138  0862  340A               	retlw	10
   139  0863  3400               	retlw	0
   140  0864  3400               	retlw	0
   141  0865  3400               	retlw	0
   142  0866  3464               	retlw	100
   143  0867  3400               	retlw	0
   144  0868  3400               	retlw	0
   145  0869  3400               	retlw	0
   146  086A  34E8               	retlw	232
   147  086B  3403               	retlw	3
   148  086C  3400               	retlw	0
   149  086D  3400               	retlw	0
   150  086E  3410               	retlw	16
   151  086F  3427               	retlw	39
   152  0870  3400               	retlw	0
   153  0871  3400               	retlw	0
   154  0872  34A0               	retlw	160
   155  0873  3486               	retlw	134
   156  0874  3401               	retlw	1
   157  0875  3400               	retlw	0
   158  0876  3440               	retlw	64
   159  0877  3442               	retlw	66
   160  0878  340F               	retlw	15
   161  0879  3400               	retlw	0
   162  087A  3480               	retlw	128
   163  087B  3496               	retlw	150
   164  087C  3498               	retlw	152
   165  087D  3400               	retlw	0
   166  087E  3400               	retlw	0
   167  087F  34E1               	retlw	225
   168  0880  34F5               	retlw	245
   169  0881  3405               	retlw	5
   170  0882  3400               	retlw	0
   171  0883  34CA               	retlw	202
   172  0884  349A               	retlw	154
   173  0885  343B               	retlw	59
   174  001F                     _ADCON0	set	31
   175  001E                     _ADRESH	set	30
   176  0008                     _PORTD	set	8
   177  0018                     _RCSTA	set	24
   178  0001                     _TMR0	set	1
   179  00F9                     _GO_DONE	set	249
   180  0038                     _RC0	set	56
   181  003B                     _RC3	set	59
   182  003C                     _RC4	set	60
   183  005A                     _T0IF	set	90
   184  009F                     _ADCON1	set	159
   185  009E                     _ADRESL	set	158
   186  0081                     _OPTION_REG	set	129
   187  0099                     _SPBRG	set	153
   188  0085                     _TRISA	set	133
   189  0087                     _TRISC	set	135
   190  0088                     _TRISD	set	136
   191  0089                     _TRISE	set	137
   192  0098                     _TXSTA	set	152
   193  043E                     _TRISC6	set	1086
   194  043F                     _TRISC7	set	1087
   195  0188                     _ANSEL	set	392
   196  0189                     _ANSELH	set	393
   197  0187                     _BAUDCTL	set	391
   198  0886                     STR_1:	
   199  0886  3425               	retlw	37	;'%'
   200  0887  3431               	retlw	49	;'1'
   201  0888  342E               	retlw	46	;'.'
   202  0889  3433               	retlw	51	;'3'
   203  088A  3466               	retlw	102	;'f'
   204  088B  3400               	retlw	0
   205  088C                     STR_2:	
   206  088C  3435               	retlw	53	;'5'
   207  088D  343A               	retlw	58	;':'
   208  088E  3400               	retlw	0
   209  088F                     STR_4:	
   210  088F  3436               	retlw	54	;'6'
   211  0890  343A               	retlw	58	;':'
   212  0891  3400               	retlw	0
   213  0892                     STR_6:	
   214  0892  3437               	retlw	55	;'7'
   215  0893  343A               	retlw	58	;':'
   216  0894  3400               	retlw	0
   217  0886                     
   218                           	psect	cinit
   219  001A                     start_initialization:	
   220                           
   221                           ; Clear objects allocated to BANK0
   222  001A  01DB               	clrf	__pbssBANK0& (0+127)
   223  001B  01DC               	clrf	(__pbssBANK0+1)& (0+127)
   224  001C  01DD               	clrf	(__pbssBANK0+2)& (0+127)
   225  001D  01DE               	clrf	(__pbssBANK0+3)& (0+127)
   226  001E  01DF               	clrf	(__pbssBANK0+4)& (0+127)
   227  001F  01E0               	clrf	(__pbssBANK0+5)& (0+127)
   228  0020  01E1               	clrf	(__pbssBANK0+6)& (0+127)
   229  0021  01E2               	clrf	(__pbssBANK0+7)& (0+127)
   230  0022                     end_of_initialization:	
   231                           ;End of C runtime variable initialization code
   232                           
   233  0022  0183               	clrf	3
   234  0023  120A  158A  2A49   	ljmp	_main	;jump to C main() function
   235                           
   236                           	psect	bssBANK0
   237  005B                     __pbssBANK0:	
   238  005B                     _num:	
   239  005B                     	ds	3
   240  005E                     _carac:	
   241  005E                     	ds	5
   242                           
   243                           	psect	cstackBANK1
   244  00A0                     __pcstackBANK1:	
   245  00A0                     _sprintf$1901:	
   246                           
   247                           ; 4 bytes @ 0x0
   248  00A0                     	ds	4
   249  00A4                     sprintf@ap:	
   250                           
   251                           ; 1 bytes @ 0x4
   252  00A4                     	ds	1
   253  00A5                     sprintf@integ:	
   254                           
   255                           ; 3 bytes @ 0x5
   256  00A5                     	ds	3
   257  00A8                     sprintf@_val:	
   258                           
   259                           ; 4 bytes @ 0x8
   260  00A8                     	ds	4
   261  00AC                     sprintf@flag:	
   262                           
   263                           ; 2 bytes @ 0xC
   264  00AC                     	ds	2
   265  00AE                     sprintf@width:	
   266                           
   267                           ; 2 bytes @ 0xE
   268  00AE                     	ds	2
   269  00B0                     sprintf@exp:	
   270                           
   271                           ; 2 bytes @ 0x10
   272  00B0                     	ds	2
   273  00B2                     sprintf@sp:	
   274                           
   275                           ; 1 bytes @ 0x12
   276  00B2                     	ds	1
   277  00B3                     sprintf@fval:	
   278                           
   279                           ; 3 bytes @ 0x13
   280  00B3                     	ds	3
   281  00B6                     sprintf@prec:	
   282                           
   283                           ; 2 bytes @ 0x16
   284  00B6                     	ds	2
   285  00B8                     sprintf@c:	
   286                           
   287                           ; 1 bytes @ 0x18
   288  00B8                     	ds	1
   289                           
   290                           	psect	cstackCOMMON
   291  0070                     __pcstackCOMMON:	
   292  0070                     ?_lcd_init:	
   293  0070                     ?_lcd_clear:	
   294                           ; 0 bytes @ 0x0
   295                           
   296  0070                     ?_init_comms:	
   297                           ; 0 bytes @ 0x0
   298                           
   299  0070                     ??_init_comms:	
   300                           ; 0 bytes @ 0x0
   301                           
   302  0070                     ?_lcd_goto:	
   303                           ; 0 bytes @ 0x0
   304                           
   305  0070                     ?_pause:	
   306                           ; 0 bytes @ 0x0
   307                           
   308  0070                     ?_msecbase:	
   309                           ; 0 bytes @ 0x0
   310                           
   311  0070                     ??_msecbase:	
   312                           ; 0 bytes @ 0x0
   313                           
   314  0070                     ?_isdigit:	
   315                           ; 0 bytes @ 0x0
   316                           
   317  0070                     ??_isdigit:	
   318                           ; 1 bit 
   319                           
   320  0070                     ?_main:	
   321                           ; 0 bytes @ 0x0
   322                           
   323  0070                     ?_lcd_write:	
   324                           ; 0 bytes @ 0x0
   325                           
   326  0070                     ?___ftge:	
   327                           ; 0 bytes @ 0x0
   328                           
   329  0070                     ?___lbmod:	
   330                           ; 1 bit 
   331                           
   332  0070                     ?___wmul:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?___awmod:	
   336                           ; 2 bytes @ 0x0
   337                           
   338  0070                     ?___ftpack:	
   339                           ; 2 bytes @ 0x0
   340                           
   341  0070                     ?___ftneg:	
   342                           ; 3 bytes @ 0x0
   343                           
   344  0070                     ?__tdiv_to_l_:	
   345                           ; 3 bytes @ 0x0
   346                           
   347  0070                     ?__div_to_l_:	
   348                           ; 4 bytes @ 0x0
   349                           
   350  0070                     ?___lldiv:	
   351                           ; 4 bytes @ 0x0
   352                           
   353  0070                     _isdigit$2409:	
   354                           ; 4 bytes @ 0x0
   355                           
   356  0070                     ___lbmod@divisor:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     pause@usvalue:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ___wmul@multiplier:	
   363                           ; 2 bytes @ 0x0
   364                           
   365  0070                     ___awmod@divisor:	
   366                           ; 2 bytes @ 0x0
   367                           
   368  0070                     ___ftneg@f1:	
   369                           ; 2 bytes @ 0x0
   370                           
   371  0070                     ___ftge@ff1:	
   372                           ; 3 bytes @ 0x0
   373                           
   374  0070                     __tdiv_to_l_@f1:	
   375                           ; 3 bytes @ 0x0
   376                           
   377  0070                     __div_to_l_@f1:	
   378                           ; 3 bytes @ 0x0
   379                           
   380  0070                     ___ftpack@arg:	
   381                           ; 3 bytes @ 0x0
   382                           
   383  0070                     ___lldiv@divisor:	
   384                           ; 3 bytes @ 0x0
   385                           
   386                           
   387                           ; 4 bytes @ 0x0
   388  0070                     	ds	1
   389  0071                     ??___lbmod:	
   390  0071                     isdigit@c:	
   391                           ; 0 bytes @ 0x1
   392                           
   393                           
   394                           ; 1 bytes @ 0x1
   395  0071                     	ds	1
   396  0072                     ??_pause:	
   397  0072                     ___lbmod@dividend:	
   398                           ; 0 bytes @ 0x2
   399                           
   400  0072                     pause@x:	
   401                           ; 1 bytes @ 0x2
   402                           
   403  0072                     ___wmul@multiplicand:	
   404                           ; 2 bytes @ 0x2
   405                           
   406  0072                     ___awmod@dividend:	
   407                           ; 2 bytes @ 0x2
   408                           
   409                           
   410                           ; 2 bytes @ 0x2
   411  0072                     	ds	1
   412  0073                     ??___ftneg:	
   413  0073                     ___lbmod@counter:	
   414                           ; 0 bytes @ 0x3
   415                           
   416  0073                     ___ftpack@exp:	
   417                           ; 1 bytes @ 0x3
   418                           
   419  0073                     ___ftge@ff2:	
   420                           ; 1 bytes @ 0x3
   421                           
   422  0073                     __tdiv_to_l_@f2:	
   423                           ; 3 bytes @ 0x3
   424                           
   425  0073                     __div_to_l_@f2:	
   426                           ; 3 bytes @ 0x3
   427                           
   428                           
   429                           ; 3 bytes @ 0x3
   430  0073                     	ds	1
   431  0074                     ??_lcd_write:	
   432  0074                     ??___wmul:	
   433                           ; 0 bytes @ 0x4
   434                           
   435  0074                     ??___awmod:	
   436                           ; 0 bytes @ 0x4
   437                           
   438  0074                     lcd_write@c:	
   439                           ; 0 bytes @ 0x4
   440                           
   441  0074                     ___lbmod@rem:	
   442                           ; 1 bytes @ 0x4
   443                           
   444  0074                     ___awmod@counter:	
   445                           ; 1 bytes @ 0x4
   446                           
   447  0074                     ___ftpack@sign:	
   448                           ; 1 bytes @ 0x4
   449                           
   450  0074                     ___wmul@product:	
   451                           ; 1 bytes @ 0x4
   452                           
   453  0074                     ___lldiv@dividend:	
   454                           ; 2 bytes @ 0x4
   455                           
   456                           
   457                           ; 4 bytes @ 0x4
   458  0074                     	ds	1
   459  0075                     ??_lcd_init:	
   460  0075                     ??_lcd_clear:	
   461                           ; 0 bytes @ 0x5
   462                           
   463  0075                     ??_lcd_goto:	
   464                           ; 0 bytes @ 0x5
   465                           
   466  0075                     ?_lcd_puts:	
   467                           ; 0 bytes @ 0x5
   468                           
   469  0075                     ??___ftpack:	
   470                           ; 0 bytes @ 0x5
   471                           
   472  0075                     ?___lbdiv:	
   473                           ; 0 bytes @ 0x5
   474                           
   475  0075                     lcd_goto@pos:	
   476                           ; 1 bytes @ 0x5
   477                           
   478  0075                     ___lbdiv@divisor:	
   479                           ; 1 bytes @ 0x5
   480                           
   481  0075                     ___awmod@sign:	
   482                           ; 1 bytes @ 0x5
   483                           
   484  0075                     lcd_puts@s:	
   485                           ; 1 bytes @ 0x5
   486                           
   487                           
   488                           ; 2 bytes @ 0x5
   489  0075                     	ds	1
   490  0076                     ??__tdiv_to_l_:	
   491  0076                     ??__div_to_l_:	
   492                           ; 0 bytes @ 0x6
   493                           
   494  0076                     ??___lbdiv:	
   495                           ; 0 bytes @ 0x6
   496                           
   497  0076                     ??___ftge:	
   498                           ; 0 bytes @ 0x6
   499                           
   500  0076                     ?___awdiv:	
   501                           ; 0 bytes @ 0x6
   502                           
   503  0076                     ___lbdiv@dividend:	
   504                           ; 2 bytes @ 0x6
   505                           
   506  0076                     ___awdiv@divisor:	
   507                           ; 1 bytes @ 0x6
   508                           
   509                           
   510                           ; 2 bytes @ 0x6
   511  0076                     	ds	1
   512  0077                     ??_lcd_puts:	
   513  0077                     ___lbdiv@counter:	
   514                           ; 0 bytes @ 0x7
   515                           
   516                           
   517                           ; 1 bytes @ 0x7
   518  0077                     	ds	1
   519  0078                     ??___lldiv:	
   520  0078                     ?___awtoft:	
   521                           ; 0 bytes @ 0x8
   522                           
   523  0078                     ?___lltoft:	
   524                           ; 3 bytes @ 0x8
   525                           
   526  0078                     ___lbdiv@quotient:	
   527                           ; 3 bytes @ 0x8
   528                           
   529  0078                     ___awtoft@c:	
   530                           ; 1 bytes @ 0x8
   531                           
   532  0078                     ___awdiv@dividend:	
   533                           ; 2 bytes @ 0x8
   534                           
   535  0078                     ___lldiv@quotient:	
   536                           ; 2 bytes @ 0x8
   537                           
   538  0078                     ___lltoft@c:	
   539                           ; 4 bytes @ 0x8
   540                           
   541                           
   542                           ; 4 bytes @ 0x8
   543  0078                     	ds	1
   544  0079                     ?___bmul:	
   545  0079                     ___bmul@multiplicand:	
   546                           ; 1 bytes @ 0x9
   547                           
   548                           
   549                           ; 1 bytes @ 0x9
   550  0079                     	ds	1
   551  007A                     ??___bmul:	
   552  007A                     ??___awdiv:	
   553                           ; 0 bytes @ 0xA
   554                           
   555  007A                     ___bmul@product:	
   556                           ; 0 bytes @ 0xA
   557                           
   558  007A                     ___awdiv@counter:	
   559                           ; 1 bytes @ 0xA
   560                           
   561                           
   562                           ; 1 bytes @ 0xA
   563  007A                     	ds	1
   564  007B                     ??___awtoft:	
   565  007B                     ___bmul@multiplier:	
   566                           ; 0 bytes @ 0xB
   567                           
   568  007B                     ___awtoft@sign:	
   569                           ; 1 bytes @ 0xB
   570                           
   571  007B                     ___awdiv@sign:	
   572                           ; 1 bytes @ 0xB
   573                           
   574                           
   575                           ; 1 bytes @ 0xB
   576  007B                     	ds	1
   577  007C                     ??___lltoft:	
   578  007C                     ___lldiv@counter:	
   579                           ; 0 bytes @ 0xC
   580                           
   581  007C                     ___lltoft@exp:	
   582                           ; 1 bytes @ 0xC
   583                           
   584  007C                     ___awdiv@quotient:	
   585                           ; 1 bytes @ 0xC
   586                           
   587                           
   588                           ; 2 bytes @ 0xC
   589  007C                     	ds	1
   590  007D                     ??___llmod:	
   591  007D                     ___llmod@counter:	
   592                           ; 0 bytes @ 0xD
   593                           
   594                           
   595                           ; 1 bytes @ 0xD
   596  007D                     	ds	1
   597  007E                     ??_main:	
   598  007E                     ??_fround:	
   599                           ; 0 bytes @ 0xE
   600                           
   601  007E                     ??___ftsub:	
   602                           ; 0 bytes @ 0xE
   603                           
   604                           
   605                           	psect	cstackBANK0
   606  0020                     __pcstackBANK0:	
   607                           ; 0 bytes @ 0xE
   608                           
   609  0020                     ?___fttol:	
   610  0020                     ?___llmod:	
   611                           ; 4 bytes @ 0x0
   612                           
   613  0020                     ___fttol@f1:	
   614                           ; 4 bytes @ 0x0
   615                           
   616  0020                     ___llmod@divisor:	
   617                           ; 3 bytes @ 0x0
   618                           
   619  0020                     __tdiv_to_l_@quot:	
   620                           ; 4 bytes @ 0x0
   621                           
   622  0020                     __div_to_l_@quot:	
   623                           ; 4 bytes @ 0x0
   624                           
   625                           
   626                           ; 4 bytes @ 0x0
   627  0020                     	ds	4
   628  0024                     ??___fttol:	
   629  0024                     __tdiv_to_l_@cntr:	
   630                           ; 0 bytes @ 0x4
   631                           
   632  0024                     __div_to_l_@cntr:	
   633                           ; 1 bytes @ 0x4
   634                           
   635  0024                     ___llmod@dividend:	
   636                           ; 1 bytes @ 0x4
   637                           
   638                           
   639                           ; 4 bytes @ 0x4
   640  0024                     	ds	1
   641  0025                     __tdiv_to_l_@exp1:	
   642  0025                     __div_to_l_@exp1:	
   643                           ; 1 bytes @ 0x5
   644                           
   645                           
   646                           ; 1 bytes @ 0x5
   647  0025                     	ds	2
   648  0027                     ___fttol@sign1:	
   649                           
   650                           ; 1 bytes @ 0x7
   651  0027                     	ds	1
   652  0028                     ___fttol@lval:	
   653                           
   654                           ; 4 bytes @ 0x8
   655  0028                     	ds	4
   656  002C                     ___fttol@exp1:	
   657                           
   658                           ; 1 bytes @ 0xC
   659  002C                     	ds	1
   660  002D                     ?___ftmul:	
   661  002D                     ___ftmul@f1:	
   662                           ; 3 bytes @ 0xD
   663                           
   664                           
   665                           ; 3 bytes @ 0xD
   666  002D                     	ds	3
   667  0030                     ___ftmul@f2:	
   668                           
   669                           ; 3 bytes @ 0x10
   670  0030                     	ds	3
   671  0033                     ??___ftmul:	
   672                           
   673                           ; 0 bytes @ 0x13
   674  0033                     	ds	3
   675  0036                     ___ftmul@exp:	
   676                           
   677                           ; 1 bytes @ 0x16
   678  0036                     	ds	1
   679  0037                     ___ftmul@f3_as_product:	
   680                           
   681                           ; 3 bytes @ 0x17
   682  0037                     	ds	3
   683  003A                     ___ftmul@cntr:	
   684                           
   685                           ; 1 bytes @ 0x1A
   686  003A                     	ds	1
   687  003B                     ___ftmul@sign:	
   688                           
   689                           ; 1 bytes @ 0x1B
   690  003B                     	ds	1
   691  003C                     ?_scale:	
   692  003C                     ?___ftadd:	
   693                           ; 3 bytes @ 0x1C
   694                           
   695  003C                     ___ftadd@f1:	
   696                           ; 3 bytes @ 0x1C
   697                           
   698                           
   699                           ; 3 bytes @ 0x1C
   700  003C                     	ds	3
   701  003F                     ??_scale:	
   702  003F                     ___ftadd@f2:	
   703                           ; 0 bytes @ 0x1F
   704                           
   705                           
   706                           ; 3 bytes @ 0x1F
   707  003F                     	ds	3
   708  0042                     ??___ftadd:	
   709                           
   710                           ; 0 bytes @ 0x22
   711  0042                     	ds	1
   712  0043                     _scale$2845:	
   713                           
   714                           ; 3 bytes @ 0x23
   715  0043                     	ds	2
   716  0045                     ___ftadd@sign:	
   717                           
   718                           ; 1 bytes @ 0x25
   719  0045                     	ds	1
   720  0046                     scale@scl:	
   721  0046                     ___ftadd@exp2:	
   722                           ; 1 bytes @ 0x26
   723                           
   724                           
   725                           ; 1 bytes @ 0x26
   726  0046                     	ds	1
   727  0047                     ___ftadd@exp1:	
   728                           
   729                           ; 1 bytes @ 0x27
   730  0047                     	ds	1
   731  0048                     ?_fround:	
   732  0048                     ?___ftsub:	
   733                           ; 3 bytes @ 0x28
   734                           
   735  0048                     ___ftsub@f2:	
   736                           ; 3 bytes @ 0x28
   737                           
   738                           
   739                           ; 3 bytes @ 0x28
   740  0048                     	ds	3
   741  004B                     ___ftsub@f1:	
   742  004B                     _fround$2844:	
   743                           ; 3 bytes @ 0x2B
   744                           
   745                           
   746                           ; 3 bytes @ 0x2B
   747  004B                     	ds	3
   748  004E                     _fround$2843:	
   749                           
   750                           ; 3 bytes @ 0x2E
   751  004E                     	ds	3
   752  0051                     fround@prec:	
   753                           
   754                           ; 1 bytes @ 0x31
   755  0051                     	ds	1
   756  0052                     ?_sprintf:	
   757  0052                     sprintf@f:	
   758                           ; 2 bytes @ 0x32
   759                           
   760                           
   761                           ; 1 bytes @ 0x32
   762  0052                     	ds	4
   763  0056                     ??_sprintf:	
   764                           
   765                           ; 0 bytes @ 0x36
   766  0056                     	ds	5
   767                           
   768                           	psect	maintext
   769  0A49                     __pmaintext:	
   770 ;;Data sizes: Strings 15, constant 118, data 0, bss 8, persistent 0 stack 0
   771 ;;Auto spaces:   Size  Autos    Used
   772 ;; COMMON          14     14      14
   773 ;; BANK0           80     59      67
   774 ;; BANK1           80     25      25
   775 ;; BANK3           96      0       0
   776 ;; BANK2           96      0       0
   777 ;;
   778 ;; Pointer list with targets:
   779 ;; ?___ftpack	float  size(1) Largest target is 0
   780 ;;
   781 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   782 ;;
   783 ;; ?___llmod	unsigned long  size(1) Largest target is 0
   784 ;;
   785 ;; ?___ftsub	float  size(1) Largest target is 0
   786 ;;
   787 ;; ?___lltoft	float  size(1) Largest target is 0
   788 ;;
   789 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
   790 ;;
   791 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
   792 ;;
   793 ;; ?___fttol	long  size(1) Largest target is 0
   794 ;;
   795 ;; ?___ftadd	float  size(1) Largest target is 0
   796 ;;
   797 ;; ?___ftneg	float  size(1) Largest target is 0
   798 ;;
   799 ;; ?___awmod	int  size(1) Largest target is 40
   800 ;;		 -> dpowers(CODE[40]), 
   801 ;;
   802 ;; ?___awdiv	int  size(1) Largest target is 0
   803 ;;
   804 ;; ?_scale	int  size(1) Largest target is 0
   805 ;;
   806 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   807 ;;
   808 ;; ?_fround	unsigned int  size(1) Largest target is 0
   809 ;;
   810 ;; ?___ftmul	float  size(1) Largest target is 0
   811 ;;
   812 ;; ?___awtoft	float  size(1) Largest target is 0
   813 ;;
   814 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 6
   815 ;;		 -> STR_5(CODE[6]), STR_3(CODE[6]), STR_1(CODE[6]), 
   816 ;;
   817 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 5
   818 ;;		 -> carac(BANK0[5]), 
   819 ;;
   820 ;; ?_sprintf	int  size(1) Largest target is 0
   821 ;;
   822 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
   823 ;;		 -> ?_sprintf(BANK0[2]), 
   824 ;;
   825 ;; S1890$_cp	PTR const unsigned char  size(1) Largest target is 0
   826 ;;
   827 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   828 ;;
   829 ;; lcd_puts@s	PTR const unsigned char  size(2) Largest target is 5
   830 ;;		 -> STR_6(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), carac(BANK0[5]), 
   831 ;;
   832 ;;
   833 ;; Critical Paths under _main in COMMON
   834 ;;
   835 ;;   _lcd_init->_lcd_write
   836 ;;   _lcd_puts->_lcd_write
   837 ;;   _lcd_goto->_lcd_write
   838 ;;   _sprintf->___awdiv
   839 ;;   _sprintf->__div_to_l_
   840 ;;   _sprintf->___llmod
   841 ;;   _lcd_clear->_lcd_write
   842 ;;   _scale->___awdiv
   843 ;;   _lcd_write->_pause
   844 ;;   ___lltoft->___ftpack
   845 ;;   ___awtoft->___ftpack
   846 ;;   ___ftmul->___awdiv
   847 ;;   ___llmod->___lldiv
   848 ;;   ___awdiv->___awmod
   849 ;;   ___fttol->___awdiv
   850 ;;   ___lbdiv->___lbmod
   851 ;;   ___bmul->___lbdiv
   852 ;;
   853 ;; Critical Paths under _main in BANK0
   854 ;;
   855 ;;   _main->_sprintf
   856 ;;   _sprintf->_fround
   857 ;;   ___ftsub->___ftadd
   858 ;;   _scale->___ftmul
   859 ;;   _fround->___ftadd
   860 ;;   ___ftmul->___fttol
   861 ;;   ___ftadd->___ftmul
   862 ;;
   863 ;; Critical Paths under _main in BANK1
   864 ;;
   865 ;;   _main->_sprintf
   866 ;;
   867 ;; Critical Paths under _main in BANK3
   868 ;;
   869 ;;   None.
   870 ;;
   871 ;; Critical Paths under _main in BANK2
   872 ;;
   873 ;;   None.
   874 ;;
   875 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   876 ;;
   877 ;;
   878 ;;Call Graph Tables:
   879 ;;
   880 ;; ---------------------------------------------------------------------------------
   881 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   882 ;; ---------------------------------------------------------------------------------
   883 ;; (0) _main                                                 1     1      0   11701
   884 ;;                           _lcd_init
   885 ;;                          _lcd_clear
   886 ;;                         _init_comms
   887 ;;                           ___awtoft
   888 ;;                            ___ftmul
   889 ;;                            _sprintf
   890 ;;                           _lcd_goto
   891 ;;                           _lcd_puts
   892 ;;                              _pause
   893 ;; ---------------------------------------------------------------------------------
   894 ;; (1) _lcd_init                                             1     1      0     295
   895 ;;                                              5 COMMON     1     1      0
   896 ;;                              _pause
   897 ;;                          _lcd_write
   898 ;;                          _lcd_clear
   899 ;; ---------------------------------------------------------------------------------
   900 ;; (1) _lcd_puts                                             2     0      2     135
   901 ;;                                              5 COMMON     2     0      2
   902 ;;                          _lcd_write
   903 ;; ---------------------------------------------------------------------------------
   904 ;; (1) _lcd_goto                                             1     1      0     112
   905 ;;                                              5 COMMON     1     1      0
   906 ;;                          _lcd_write
   907 ;; ---------------------------------------------------------------------------------
   908 ;; (1) _sprintf                                             38    34      4   10142
   909 ;;                                             50 BANK0      9     5      4
   910 ;;                                              0 BANK1     25    25      0
   911 ;;                            _isdigit
   912 ;;                             ___wmul
   913 ;;                             ___ftge
   914 ;;                            ___ftneg
   915 ;;                            ___awdiv
   916 ;;                              _scale
   917 ;;                            ___ftmul
   918 ;;                             _fround
   919 ;;                            ___ftadd
   920 ;;                            ___fttol
   921 ;;                         __div_to_l_
   922 ;;                        __tdiv_to_l_
   923 ;;                           ___lltoft
   924 ;;                            ___ftsub
   925 ;;                            ___lldiv
   926 ;;                            ___llmod
   927 ;; ---------------------------------------------------------------------------------
   928 ;; (1) _lcd_clear                                            0     0      0     136
   929 ;;                          _lcd_write
   930 ;;                              _pause
   931 ;; ---------------------------------------------------------------------------------
   932 ;; (2) ___ftsub                                              6     0      6    1094
   933 ;;                                             40 BANK0      6     0      6
   934 ;;                            ___ftadd
   935 ;;                           ___lltoft (ARG)
   936 ;; ---------------------------------------------------------------------------------
   937 ;; (2) _scale                                               14    11      3    1688
   938 ;;                                             28 BANK0     11     8      3
   939 ;;                            ___awmod
   940 ;;                            ___awdiv
   941 ;;                            ___ftmul
   942 ;;                             ___bmul
   943 ;;                            ___fttol (ARG)
   944 ;; ---------------------------------------------------------------------------------
   945 ;; (2) _fround                                              13    10      3    1215
   946 ;;                                             40 BANK0     10     7      3
   947 ;;                            ___lbmod
   948 ;;                             ___bmul
   949 ;;                            ___lbdiv
   950 ;;                            ___ftmul
   951 ;;                            ___ftadd (ARG)
   952 ;; ---------------------------------------------------------------------------------
   953 ;; (2) _lcd_write                                            1     1      0      90
   954 ;;                                              4 COMMON     1     1      0
   955 ;;                              _pause
   956 ;; ---------------------------------------------------------------------------------
   957 ;; (2) ___lltoft                                             5     1      4     278
   958 ;;                                              8 COMMON     5     1      4
   959 ;;                           ___ftpack
   960 ;; ---------------------------------------------------------------------------------
   961 ;; (1) ___awtoft                                             4     1      3     300
   962 ;;                                              8 COMMON     4     1      3
   963 ;;                           ___ftpack
   964 ;; ---------------------------------------------------------------------------------
   965 ;; (3) ___ftmul                                             15     9      6     535
   966 ;;                                             13 BANK0     15     9      6
   967 ;;                           ___ftpack
   968 ;;                            ___fttol (ARG)
   969 ;;                            ___awdiv (ARG)
   970 ;;                            ___awmod (ARG)
   971 ;;                             ___bmul (ARG)
   972 ;;                            ___lbdiv (ARG)
   973 ;;                            ___lbmod (ARG)
   974 ;; ---------------------------------------------------------------------------------
   975 ;; (3) ___ftadd                                             12     6      6    1049
   976 ;;                                             28 BANK0     12     6      6
   977 ;;                           ___ftpack
   978 ;;                            ___lbmod (ARG)
   979 ;;                             ___bmul (ARG)
   980 ;;                            ___lbdiv (ARG)
   981 ;;                            ___ftmul (ARG)
   982 ;; ---------------------------------------------------------------------------------
   983 ;; (1) _pause                                                4     2      2      46
   984 ;;                                              0 COMMON     4     2      2
   985 ;;                           _msecbase
   986 ;; ---------------------------------------------------------------------------------
   987 ;; (3) ___awmod                                              6     2      4     296
   988 ;;                                              0 COMMON     6     2      4
   989 ;; ---------------------------------------------------------------------------------
   990 ;; (2) ___lldiv                                             13     5      8     162
   991 ;;                                              0 COMMON    13     5      8
   992 ;; ---------------------------------------------------------------------------------
   993 ;; (2) ___ftge                                               6     0      6     136
   994 ;;                                              0 COMMON     6     0      6
   995 ;; ---------------------------------------------------------------------------------
   996 ;; (2) ___ftneg                                              3     0      3      45
   997 ;;                                              0 COMMON     3     0      3
   998 ;; ---------------------------------------------------------------------------------
   999 ;; (2) ___llmod                                              9     1      8     159
  1000 ;;                                             13 COMMON     1     1      0
  1001 ;;                                              0 BANK0      8     0      8
  1002 ;;                            ___lldiv (ARG)
  1003 ;; ---------------------------------------------------------------------------------
  1004 ;; (3) ___awdiv                                              8     4      4     300
  1005 ;;                                              6 COMMON     8     4      4
  1006 ;;                            ___awmod (ARG)
  1007 ;; ---------------------------------------------------------------------------------
  1008 ;; (2) ___fttol                                             13     9      4     252
  1009 ;;                                              0 BANK0     13     9      4
  1010 ;;                           ___ftpack (ARG)
  1011 ;;                            ___awmod (ARG)
  1012 ;;                            ___awdiv (ARG)
  1013 ;;                             ___bmul (ARG)
  1014 ;; ---------------------------------------------------------------------------------
  1015 ;; (4) ___ftpack                                             8     3      5     209
  1016 ;;                                              0 COMMON     8     3      5
  1017 ;; ---------------------------------------------------------------------------------
  1018 ;; (3) ___lbmod                                              5     4      1     159
  1019 ;;                                              0 COMMON     5     4      1
  1020 ;; ---------------------------------------------------------------------------------
  1021 ;; (3) ___lbdiv                                              4     3      1     162
  1022 ;;                                              5 COMMON     4     3      1
  1023 ;;                            ___lbmod (ARG)
  1024 ;; ---------------------------------------------------------------------------------
  1025 ;; (2) ___wmul                                               6     2      4      92
  1026 ;;                                              0 COMMON     6     2      4
  1027 ;; ---------------------------------------------------------------------------------
  1028 ;; (3) ___bmul                                               3     2      1      68
  1029 ;;                                              9 COMMON     3     2      1
  1030 ;;                            ___lbmod (ARG)
  1031 ;;                            ___lbdiv (ARG)
  1032 ;; ---------------------------------------------------------------------------------
  1033 ;; (2) __div_to_l_                                          20    14      6     446
  1034 ;;                                              0 COMMON    14     8      6
  1035 ;;                                              0 BANK0      6     6      0
  1036 ;; ---------------------------------------------------------------------------------
  1037 ;; (2) __tdiv_to_l_                                         15     9      6     303
  1038 ;;                                              0 COMMON     9     3      6
  1039 ;;                                              0 BANK0      6     6      0
  1040 ;; ---------------------------------------------------------------------------------
  1041 ;; (2) _isdigit                                              2     2      0      68
  1042 ;;                                              0 COMMON     2     2      0
  1043 ;; ---------------------------------------------------------------------------------
  1044 ;; (2) _msecbase                                             0     0      0       0
  1045 ;; ---------------------------------------------------------------------------------
  1046 ;; (1) _init_comms                                           0     0      0       0
  1047 ;; ---------------------------------------------------------------------------------
  1048 ;; Estimated maximum stack depth 4
  1049 ;; ---------------------------------------------------------------------------------
  1050 ;; Call Graph Graphs:
  1051 ;; _main (ROOT)
  1052 ;;   _lcd_init
  1053 ;;     _pause
  1054 ;;       _msecbase
  1055 ;;     _lcd_write
  1056 ;;       _pause
  1057 ;;         _msecbase
  1058 ;;     _lcd_clear
  1059 ;;       _lcd_write
  1060 ;;         _pause
  1061 ;;           _msecbase
  1062 ;;       _pause
  1063 ;;         _msecbase
  1064 ;;   _lcd_clear
  1065 ;;     _lcd_write
  1066 ;;       _pause
  1067 ;;         _msecbase
  1068 ;;     _pause
  1069 ;;       _msecbase
  1070 ;;   _init_comms
  1071 ;;   ___awtoft
  1072 ;;     ___ftpack
  1073 ;;   ___ftmul
  1074 ;;     ___ftpack
  1075 ;;     ___fttol (ARG)
  1076 ;;       ___ftpack (ARG)
  1077 ;;       ___awmod (ARG)
  1078 ;;       ___awdiv (ARG)
  1079 ;;         ___awmod (ARG)
  1080 ;;       ___bmul (ARG)
  1081 ;;         ___lbmod (ARG)
  1082 ;;         ___lbdiv (ARG)
  1083 ;;           ___lbmod (ARG)
  1084 ;;     ___awdiv (ARG)
  1085 ;;       ___awmod (ARG)
  1086 ;;     ___awmod (ARG)
  1087 ;;     ___bmul (ARG)
  1088 ;;       ___lbmod (ARG)
  1089 ;;       ___lbdiv (ARG)
  1090 ;;         ___lbmod (ARG)
  1091 ;;     ___lbdiv (ARG)
  1092 ;;       ___lbmod (ARG)
  1093 ;;     ___lbmod (ARG)
  1094 ;;   _sprintf
  1095 ;;     _isdigit
  1096 ;;     ___wmul
  1097 ;;     ___ftge
  1098 ;;     ___ftneg
  1099 ;;     ___awdiv
  1100 ;;       ___awmod (ARG)
  1101 ;;     _scale
  1102 ;;       ___awmod
  1103 ;;       ___awdiv
  1104 ;;         ___awmod (ARG)
  1105 ;;       ___ftmul
  1106 ;;         ___ftpack
  1107 ;;         ___fttol (ARG)
  1108 ;;           ___ftpack (ARG)
  1109 ;;           ___awmod (ARG)
  1110 ;;           ___awdiv (ARG)
  1111 ;;             ___awmod (ARG)
  1112 ;;           ___bmul (ARG)
  1113 ;;             ___lbmod (ARG)
  1114 ;;             ___lbdiv (ARG)
  1115 ;;               ___lbmod (ARG)
  1116 ;;         ___awdiv (ARG)
  1117 ;;           ___awmod (ARG)
  1118 ;;         ___awmod (ARG)
  1119 ;;         ___bmul (ARG)
  1120 ;;           ___lbmod (ARG)
  1121 ;;           ___lbdiv (ARG)
  1122 ;;             ___lbmod (ARG)
  1123 ;;         ___lbdiv (ARG)
  1124 ;;           ___lbmod (ARG)
  1125 ;;         ___lbmod (ARG)
  1126 ;;       ___bmul
  1127 ;;         ___lbmod (ARG)
  1128 ;;         ___lbdiv (ARG)
  1129 ;;           ___lbmod (ARG)
  1130 ;;       ___fttol (ARG)
  1131 ;;         ___ftpack (ARG)
  1132 ;;         ___awmod (ARG)
  1133 ;;         ___awdiv (ARG)
  1134 ;;           ___awmod (ARG)
  1135 ;;         ___bmul (ARG)
  1136 ;;           ___lbmod (ARG)
  1137 ;;           ___lbdiv (ARG)
  1138 ;;             ___lbmod (ARG)
  1139 ;;     ___ftmul
  1140 ;;       ___ftpack
  1141 ;;       ___fttol (ARG)
  1142 ;;         ___ftpack (ARG)
  1143 ;;         ___awmod (ARG)
  1144 ;;         ___awdiv (ARG)
  1145 ;;           ___awmod (ARG)
  1146 ;;         ___bmul (ARG)
  1147 ;;           ___lbmod (ARG)
  1148 ;;           ___lbdiv (ARG)
  1149 ;;             ___lbmod (ARG)
  1150 ;;       ___awdiv (ARG)
  1151 ;;         ___awmod (ARG)
  1152 ;;       ___awmod (ARG)
  1153 ;;       ___bmul (ARG)
  1154 ;;         ___lbmod (ARG)
  1155 ;;         ___lbdiv (ARG)
  1156 ;;           ___lbmod (ARG)
  1157 ;;       ___lbdiv (ARG)
  1158 ;;         ___lbmod (ARG)
  1159 ;;       ___lbmod (ARG)
  1160 ;;     _fround
  1161 ;;       ___lbmod
  1162 ;;       ___bmul
  1163 ;;         ___lbmod (ARG)
  1164 ;;         ___lbdiv (ARG)
  1165 ;;           ___lbmod (ARG)
  1166 ;;       ___lbdiv
  1167 ;;         ___lbmod (ARG)
  1168 ;;       ___ftmul
  1169 ;;         ___ftpack
  1170 ;;         ___fttol (ARG)
  1171 ;;           ___ftpack (ARG)
  1172 ;;           ___awmod (ARG)
  1173 ;;           ___awdiv (ARG)
  1174 ;;             ___awmod (ARG)
  1175 ;;           ___bmul (ARG)
  1176 ;;             ___lbmod (ARG)
  1177 ;;             ___lbdiv (ARG)
  1178 ;;               ___lbmod (ARG)
  1179 ;;         ___awdiv (ARG)
  1180 ;;           ___awmod (ARG)
  1181 ;;         ___awmod (ARG)
  1182 ;;         ___bmul (ARG)
  1183 ;;           ___lbmod (ARG)
  1184 ;;           ___lbdiv (ARG)
  1185 ;;             ___lbmod (ARG)
  1186 ;;         ___lbdiv (ARG)
  1187 ;;           ___lbmod (ARG)
  1188 ;;         ___lbmod (ARG)
  1189 ;;       ___ftadd (ARG)
  1190 ;;         ___ftpack
  1191 ;;         ___lbmod (ARG)
  1192 ;;         ___bmul (ARG)
  1193 ;;           ___lbmod (ARG)
  1194 ;;           ___lbdiv (ARG)
  1195 ;;             ___lbmod (ARG)
  1196 ;;         ___lbdiv (ARG)
  1197 ;;           ___lbmod (ARG)
  1198 ;;         ___ftmul (ARG)
  1199 ;;           ___ftpack
  1200 ;;           ___fttol (ARG)
  1201 ;;             ___ftpack (ARG)
  1202 ;;             ___awmod (ARG)
  1203 ;;             ___awdiv (ARG)
  1204 ;;               ___awmod (ARG)
  1205 ;;             ___bmul (ARG)
  1206 ;;               ___lbmod (ARG)
  1207 ;;               ___lbdiv (ARG)
  1208 ;;                 ___lbmod (ARG)
  1209 ;;           ___awdiv (ARG)
  1210 ;;             ___awmod (ARG)
  1211 ;;           ___awmod (ARG)
  1212 ;;           ___bmul (ARG)
  1213 ;;             ___lbmod (ARG)
  1214 ;;             ___lbdiv (ARG)
  1215 ;;               ___lbmod (ARG)
  1216 ;;           ___lbdiv (ARG)
  1217 ;;             ___lbmod (ARG)
  1218 ;;           ___lbmod (ARG)
  1219 ;;     ___ftadd
  1220 ;;       ___ftpack
  1221 ;;       ___lbmod (ARG)
  1222 ;;       ___bmul (ARG)
  1223 ;;         ___lbmod (ARG)
  1224 ;;         ___lbdiv (ARG)
  1225 ;;           ___lbmod (ARG)
  1226 ;;       ___lbdiv (ARG)
  1227 ;;         ___lbmod (ARG)
  1228 ;;       ___ftmul (ARG)
  1229 ;;         ___ftpack
  1230 ;;         ___fttol (ARG)
  1231 ;;           ___ftpack (ARG)
  1232 ;;           ___awmod (ARG)
  1233 ;;           ___awdiv (ARG)
  1234 ;;             ___awmod (ARG)
  1235 ;;           ___bmul (ARG)
  1236 ;;             ___lbmod (ARG)
  1237 ;;             ___lbdiv (ARG)
  1238 ;;               ___lbmod (ARG)
  1239 ;;         ___awdiv (ARG)
  1240 ;;           ___awmod (ARG)
  1241 ;;         ___awmod (ARG)
  1242 ;;         ___bmul (ARG)
  1243 ;;           ___lbmod (ARG)
  1244 ;;           ___lbdiv (ARG)
  1245 ;;             ___lbmod (ARG)
  1246 ;;         ___lbdiv (ARG)
  1247 ;;           ___lbmod (ARG)
  1248 ;;         ___lbmod (ARG)
  1249 ;;     ___fttol
  1250 ;;       ___ftpack (ARG)
  1251 ;;       ___awmod (ARG)
  1252 ;;       ___awdiv (ARG)
  1253 ;;         ___awmod (ARG)
  1254 ;;       ___bmul (ARG)
  1255 ;;         ___lbmod (ARG)
  1256 ;;         ___lbdiv (ARG)
  1257 ;;           ___lbmod (ARG)
  1258 ;;     __div_to_l_
  1259 ;;     __tdiv_to_l_
  1260 ;;     ___lltoft
  1261 ;;       ___ftpack
  1262 ;;     ___ftsub
  1263 ;;       ___ftadd
  1264 ;;         ___ftpack
  1265 ;;         ___lbmod (ARG)
  1266 ;;         ___bmul (ARG)
  1267 ;;           ___lbmod (ARG)
  1268 ;;           ___lbdiv (ARG)
  1269 ;;             ___lbmod (ARG)
  1270 ;;         ___lbdiv (ARG)
  1271 ;;           ___lbmod (ARG)
  1272 ;;         ___ftmul (ARG)
  1273 ;;           ___ftpack
  1274 ;;           ___fttol (ARG)
  1275 ;;             ___ftpack (ARG)
  1276 ;;             ___awmod (ARG)
  1277 ;;             ___awdiv (ARG)
  1278 ;;               ___awmod (ARG)
  1279 ;;             ___bmul (ARG)
  1280 ;;               ___lbmod (ARG)
  1281 ;;               ___lbdiv (ARG)
  1282 ;;                 ___lbmod (ARG)
  1283 ;;           ___awdiv (ARG)
  1284 ;;             ___awmod (ARG)
  1285 ;;           ___awmod (ARG)
  1286 ;;           ___bmul (ARG)
  1287 ;;             ___lbmod (ARG)
  1288 ;;             ___lbdiv (ARG)
  1289 ;;               ___lbmod (ARG)
  1290 ;;           ___lbdiv (ARG)
  1291 ;;             ___lbmod (ARG)
  1292 ;;           ___lbmod (ARG)
  1293 ;;       ___lltoft (ARG)
  1294 ;;         ___ftpack
  1295 ;;     ___lldiv
  1296 ;;     ___llmod
  1297 ;;       ___lldiv (ARG)
  1298 ;;   _lcd_goto
  1299 ;;     _lcd_write
  1300 ;;       _pause
  1301 ;;         _msecbase
  1302 ;;   _lcd_puts
  1303 ;;     _lcd_write
  1304 ;;       _pause
  1305 ;;         _msecbase
  1306 ;;   _pause
  1307 ;;     _msecbase
  1308 ;;
  1309 ;; Address spaces:
  1310 ;;Name               Size   Autos  Total    Cost      Usage
  1311 ;;BITCOMMON            E      0       0       0        0.0%
  1312 ;;EEDATA             100      0       0       0        0.0%
  1313 ;;NULL                 0      0       0       0        0.0%
  1314 ;;CODE                 0      0       0       0        0.0%
  1315 ;;COMMON               E      E       E       1      100.0%
  1316 ;;BITSFR0              0      0       0       1        0.0%
  1317 ;;SFR0                 0      0       0       1        0.0%
  1318 ;;BITSFR1              0      0       0       2        0.0%
  1319 ;;SFR1                 0      0       0       2        0.0%
  1320 ;;STACK                0      0       5       2        0.0%
  1321 ;;ABS                  0      0      6A       3        0.0%
  1322 ;;BITBANK0            50      0       0       4        0.0%
  1323 ;;BITSFR3              0      0       0       4        0.0%
  1324 ;;SFR3                 0      0       0       4        0.0%
  1325 ;;BANK0               50     3B      43       5       83.8%
  1326 ;;BITSFR2              0      0       0       5        0.0%
  1327 ;;SFR2                 0      0       0       5        0.0%
  1328 ;;BITBANK1            50      0       0       6        0.0%
  1329 ;;BANK1               50     19      19       7       31.3%
  1330 ;;BITBANK3            60      0       0       8        0.0%
  1331 ;;BANK3               60      0       0       9        0.0%
  1332 ;;BITBANK2            60      0       0      10        0.0%
  1333 ;;BANK2               60      0       0      11        0.0%
  1334 ;;DATA                 0      0      6F      12        0.0%
  1335                           
  1336                           
  1337 ;; *************** function _main *****************
  1338 ;; Defined at:
  1339 ;;		line 41 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\LCD1\LCD1.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;		None
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;  input           1    0        unsigned char 
  1344 ;; Return value:  Size  Location     Type
  1345 ;;		None               void
  1346 ;; Registers used:
  1347 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1348 ;; Tracked objects:
  1349 ;;		On entry : 17F/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: FFE00/0
  1352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1353 ;;      Params:         0       0       0       0       0
  1354 ;;      Locals:         0       0       0       0       0
  1355 ;;      Temps:          0       0       0       0       0
  1356 ;;      Totals:         0       0       0       0       0
  1357 ;;Total ram usage:        0 bytes
  1358 ;; Hardware stack levels required when called:    5
  1359 ;; This function calls:
  1360 ;;		_lcd_init
  1361 ;;		_lcd_clear
  1362 ;;		_init_comms
  1363 ;;		___awtoft
  1364 ;;		___ftmul
  1365 ;;		_sprintf
  1366 ;;		_lcd_goto
  1367 ;;		_lcd_puts
  1368 ;;		_pause
  1369 ;; This function is called by:
  1370 ;;		Startup code after reset
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373  0A49                     _main:	
  1374                           
  1375                           ;LCD1.c: 43: unsigned char input;
  1376                           ;LCD1.c: 45: ANSEL = 0x00;
  1377                           
  1378                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1379  0A49  1683               	bsf	3,5	;RP0=1, select bank3
  1380  0A4A  1703               	bsf	3,6	;RP1=1, select bank3
  1381  0A4B  0188               	clrf	8	;volatile
  1382                           
  1383                           ;LCD1.c: 46: ANSELH = 0x00;
  1384  0A4C  0189               	clrf	9	;volatile
  1385                           
  1386                           ;LCD1.c: 47: TRISA= 0x00;
  1387  0A4D  1303               	bcf	3,6	;RP1=0, select bank1
  1388  0A4E  0185               	clrf	5	;volatile
  1389                           
  1390                           ;LCD1.c: 48: TRISC = 0x00;
  1391  0A4F  0187               	clrf	7	;volatile
  1392                           
  1393                           ;LCD1.c: 49: TRISD = 0x0F;
  1394  0A50  300F               	movlw	15
  1395  0A51  0088               	movwf	8	;volatile
  1396                           
  1397                           ;LCD1.c: 50: TRISE = 0x07;
  1398  0A52  3007               	movlw	7
  1399  0A53  0089               	movwf	9	;volatile
  1400                           
  1401                           ;LCD1.c: 51: ADCON1 = 0x80;
  1402  0A54  3080               	movlw	128
  1403  0A55  009F               	movwf	31	;volatile
  1404                           
  1405                           ;LCD1.c: 53: lcd_init();
  1406  0A56  120A  158A  2111   	fcall	_lcd_init
      +       120A  158A         
  1407                           
  1408                           ;LCD1.c: 54: lcd_clear();
  1409  0A5B  120A  158A  2176   	fcall	_lcd_clear
      +       120A  158A         
  1410                           
  1411                           ;LCD1.c: 56: init_comms();
  1412  0A60  120A  118A  2026   	fcall	_init_comms
      +       120A  158A         
  1413  0A65                     l5733:	
  1414                           
  1415                           ;LCD1.c: 59: {
  1416                           ;LCD1.c: 60: ADCON0 = 0xD5;
  1417  0A65  30D5               	movlw	213
  1418  0A66  1283               	bcf	3,5	;RP0=0, select bank0
  1419  0A67  1303               	bcf	3,6	;RP1=0, select bank0
  1420  0A68  009F               	movwf	31	;volatile
  1421                           
  1422                           ;LCD1.c: 61: GO_DONE = 1;
  1423  0A69  149F               	bsf	31,1
  1424  0A6A                     l1046:	
  1425                           ;LCD1.c: 62: while(GO_DONE);
  1426                           
  1427  0A6A  189F               	btfsc	31,1
  1428  0A6B  2A6A               	goto	l1046
  1429                           
  1430                           ;LCD1.c: 63: num = (ADRESH << 8)|ADRESL;
  1431  0A6C  081E               	movf	30,w	;volatile
  1432  0A6D  00F9               	movwf	?___awtoft+1
  1433  0A6E  01F8               	clrf	?___awtoft
  1434  0A6F  1683               	bsf	3,5	;RP0=1, select bank1
  1435  0A70  081E               	movf	30,w	;volatile
  1436  0A71  04F8               	iorwf	?___awtoft,f
  1437  0A72  120A  158A  24BD   	fcall	___awtoft
      +       120A  158A         
  1438  0A77  0878               	movf	?___awtoft,w
  1439  0A78  1283               	bcf	3,5	;RP0=0, select bank0
  1440  0A79  00DB               	movwf	_num
  1441  0A7A  0879               	movf	?___awtoft+1,w
  1442  0A7B  00DC               	movwf	_num+1
  1443  0A7C  087A               	movf	?___awtoft+2,w
  1444  0A7D  00DD               	movwf	_num+2
  1445                           
  1446                           ;LCD1.c: 64: num = num*0.0048875855327468;
  1447  0A7E  3028               	movlw	40
  1448  0A7F  00AD               	movwf	?___ftmul
  1449  0A80  30A0               	movlw	160
  1450  0A81  00AE               	movwf	?___ftmul+1
  1451  0A82  303B               	movlw	59
  1452  0A83  00AF               	movwf	?___ftmul+2
  1453  0A84  085B               	movf	_num,w
  1454  0A85  00B0               	movwf	?___ftmul+3
  1455  0A86  085C               	movf	_num+1,w
  1456  0A87  00B1               	movwf	?___ftmul+4
  1457  0A88  085D               	movf	_num+2,w
  1458  0A89  00B2               	movwf	?___ftmul+5
  1459  0A8A  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  1460  0A8F  082D               	movf	?___ftmul,w
  1461  0A90  00DB               	movwf	_num
  1462  0A91  082E               	movf	?___ftmul+1,w
  1463  0A92  00DC               	movwf	_num+1
  1464  0A93  082F               	movf	?___ftmul+2,w
  1465  0A94  00DD               	movwf	_num+2
  1466                           
  1467                           ;LCD1.c: 65: sprintf(carac, "%1.3f",num);
  1468  0A95  3077               	movlw	(STR_1-__stringbase)& (0+255)
  1469  0A96  00D2               	movwf	?_sprintf
  1470  0A97  085B               	movf	_num,w
  1471  0A98  00D3               	movwf	?_sprintf+1
  1472  0A99  085C               	movf	_num+1,w
  1473  0A9A  00D4               	movwf	?_sprintf+2
  1474  0A9B  085D               	movf	_num+2,w
  1475  0A9C  00D5               	movwf	?_sprintf+3
  1476  0A9D  305E               	movlw	_carac& (0+255)
  1477  0A9E  120A  118A  2035   	fcall	_sprintf
      +       120A  158A         
  1478                           
  1479                           ;LCD1.c: 67: lcd_goto(0x00);
  1480  0AA3  3000               	movlw	0
  1481  0AA4  120A  158A  20EE   	fcall	_lcd_goto
      +       120A  158A         
  1482                           
  1483                           ;LCD1.c: 68: lcd_puts("5:");
  1484  0AA9  307D               	movlw	low (STR_2-__stringbase)
  1485  0AAA  00F5               	movwf	?_lcd_puts
  1486  0AAB  3080               	movlw	128
  1487  0AAC  00F6               	movwf	?_lcd_puts+1
  1488  0AAD  120A  158A  20F4   	fcall	_lcd_puts
      +       120A  158A         
  1489                           
  1490                           ;LCD1.c: 69: lcd_puts(carac);
  1491  0AB2  305E               	movlw	_carac& (0+255)
  1492  0AB3  00F5               	movwf	?_lcd_puts
  1493  0AB4  3000               	movlw	0
  1494  0AB5  00F6               	movwf	?_lcd_puts+1
  1495  0AB6  120A  158A  20F4   	fcall	_lcd_puts
      +       120A  158A         
  1496                           
  1497                           ;LCD1.c: 72: ADCON0 = 0xD9;
  1498  0ABB  30D9               	movlw	217
  1499  0ABC  009F               	movwf	31	;volatile
  1500                           
  1501                           ;LCD1.c: 73: GO_DONE = 1;
  1502  0ABD  149F               	bsf	31,1
  1503  0ABE                     l1049:	
  1504                           ;LCD1.c: 74: while(GO_DONE);
  1505                           
  1506  0ABE  189F               	btfsc	31,1
  1507  0ABF  2ABE               	goto	l1049
  1508                           
  1509                           ;LCD1.c: 75: num= (ADRESH<< 8)|ADRESL;
  1510  0AC0  081E               	movf	30,w	;volatile
  1511  0AC1  00F9               	movwf	?___awtoft+1
  1512  0AC2  01F8               	clrf	?___awtoft
  1513  0AC3  1683               	bsf	3,5	;RP0=1, select bank1
  1514  0AC4  081E               	movf	30,w	;volatile
  1515  0AC5  04F8               	iorwf	?___awtoft,f
  1516  0AC6  120A  158A  24BD   	fcall	___awtoft
      +       120A  158A         
  1517  0ACB  0878               	movf	?___awtoft,w
  1518  0ACC  1283               	bcf	3,5	;RP0=0, select bank0
  1519  0ACD  00DB               	movwf	_num
  1520  0ACE  0879               	movf	?___awtoft+1,w
  1521  0ACF  00DC               	movwf	_num+1
  1522  0AD0  087A               	movf	?___awtoft+2,w
  1523  0AD1  00DD               	movwf	_num+2
  1524                           
  1525                           ;LCD1.c: 76: num = num*0.0048875855327468;
  1526  0AD2  3028               	movlw	40
  1527  0AD3  00AD               	movwf	?___ftmul
  1528  0AD4  30A0               	movlw	160
  1529  0AD5  00AE               	movwf	?___ftmul+1
  1530  0AD6  303B               	movlw	59
  1531  0AD7  00AF               	movwf	?___ftmul+2
  1532  0AD8  085B               	movf	_num,w
  1533  0AD9  00B0               	movwf	?___ftmul+3
  1534  0ADA  085C               	movf	_num+1,w
  1535  0ADB  00B1               	movwf	?___ftmul+4
  1536  0ADC  085D               	movf	_num+2,w
  1537  0ADD  00B2               	movwf	?___ftmul+5
  1538  0ADE  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  1539  0AE3  082D               	movf	?___ftmul,w
  1540  0AE4  00DB               	movwf	_num
  1541  0AE5  082E               	movf	?___ftmul+1,w
  1542  0AE6  00DC               	movwf	_num+1
  1543  0AE7  082F               	movf	?___ftmul+2,w
  1544  0AE8  00DD               	movwf	_num+2
  1545                           
  1546                           ;LCD1.c: 77: sprintf(carac,"%1.3f",num);
  1547  0AE9  3077               	movlw	(STR_1-__stringbase)& (0+255)
  1548  0AEA  00D2               	movwf	?_sprintf
  1549  0AEB  085B               	movf	_num,w
  1550  0AEC  00D3               	movwf	?_sprintf+1
  1551  0AED  085C               	movf	_num+1,w
  1552  0AEE  00D4               	movwf	?_sprintf+2
  1553  0AEF  085D               	movf	_num+2,w
  1554  0AF0  00D5               	movwf	?_sprintf+3
  1555  0AF1  305E               	movlw	_carac& (0+255)
  1556  0AF2  120A  118A  2035   	fcall	_sprintf
      +       120A  158A         
  1557                           
  1558                           ;LCD1.c: 79: lcd_goto(0x08);
  1559  0AF7  3008               	movlw	8
  1560  0AF8  120A  158A  20EE   	fcall	_lcd_goto
      +       120A  158A         
  1561                           
  1562                           ;LCD1.c: 80: lcd_puts("6:");
  1563  0AFD  3080               	movlw	low (STR_4-__stringbase)
  1564  0AFE  00F5               	movwf	?_lcd_puts
  1565  0AFF  3080               	movlw	128
  1566  0B00  00F6               	movwf	?_lcd_puts+1
  1567  0B01  120A  158A  20F4   	fcall	_lcd_puts
      +       120A  158A         
  1568                           
  1569                           ;LCD1.c: 81: lcd_puts(carac);
  1570  0B06  305E               	movlw	_carac& (0+255)
  1571  0B07  00F5               	movwf	?_lcd_puts
  1572  0B08  3000               	movlw	0
  1573  0B09  00F6               	movwf	?_lcd_puts+1
  1574  0B0A  120A  158A  20F4   	fcall	_lcd_puts
      +       120A  158A         
  1575                           
  1576                           ;LCD1.c: 83: ADCON0 = 0xDD;
  1577  0B0F  30DD               	movlw	221
  1578  0B10  009F               	movwf	31	;volatile
  1579                           
  1580                           ;LCD1.c: 84: GO_DONE = 1;
  1581  0B11  149F               	bsf	31,1
  1582  0B12                     l1052:	
  1583                           ;LCD1.c: 85: while(GO_DONE);
  1584                           
  1585  0B12  189F               	btfsc	31,1
  1586  0B13  2B12               	goto	l1052
  1587                           
  1588                           ;LCD1.c: 86: num= (ADRESH<< 8)|ADRESL;
  1589  0B14  081E               	movf	30,w	;volatile
  1590  0B15  00F9               	movwf	?___awtoft+1
  1591  0B16  01F8               	clrf	?___awtoft
  1592  0B17  1683               	bsf	3,5	;RP0=1, select bank1
  1593  0B18  081E               	movf	30,w	;volatile
  1594  0B19  04F8               	iorwf	?___awtoft,f
  1595  0B1A  120A  158A  24BD   	fcall	___awtoft
      +       120A  158A         
  1596  0B1F  0878               	movf	?___awtoft,w
  1597  0B20  1283               	bcf	3,5	;RP0=0, select bank0
  1598  0B21  00DB               	movwf	_num
  1599  0B22  0879               	movf	?___awtoft+1,w
  1600  0B23  00DC               	movwf	_num+1
  1601  0B24  087A               	movf	?___awtoft+2,w
  1602  0B25  00DD               	movwf	_num+2
  1603                           
  1604                           ;LCD1.c: 87: num = num*0.0048875855327468;
  1605  0B26  3028               	movlw	40
  1606  0B27  00AD               	movwf	?___ftmul
  1607  0B28  30A0               	movlw	160
  1608  0B29  00AE               	movwf	?___ftmul+1
  1609  0B2A  303B               	movlw	59
  1610  0B2B  00AF               	movwf	?___ftmul+2
  1611  0B2C  085B               	movf	_num,w
  1612  0B2D  00B0               	movwf	?___ftmul+3
  1613  0B2E  085C               	movf	_num+1,w
  1614  0B2F  00B1               	movwf	?___ftmul+4
  1615  0B30  085D               	movf	_num+2,w
  1616  0B31  00B2               	movwf	?___ftmul+5
  1617  0B32  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  1618  0B37  082D               	movf	?___ftmul,w
  1619  0B38  00DB               	movwf	_num
  1620  0B39  082E               	movf	?___ftmul+1,w
  1621  0B3A  00DC               	movwf	_num+1
  1622  0B3B  082F               	movf	?___ftmul+2,w
  1623  0B3C  00DD               	movwf	_num+2
  1624                           
  1625                           ;LCD1.c: 88: sprintf(carac, "%1.3f",num);
  1626  0B3D  3077               	movlw	(STR_1-__stringbase)& (0+255)
  1627  0B3E  00D2               	movwf	?_sprintf
  1628  0B3F  085B               	movf	_num,w
  1629  0B40  00D3               	movwf	?_sprintf+1
  1630  0B41  085C               	movf	_num+1,w
  1631  0B42  00D4               	movwf	?_sprintf+2
  1632  0B43  085D               	movf	_num+2,w
  1633  0B44  00D5               	movwf	?_sprintf+3
  1634  0B45  305E               	movlw	_carac& (0+255)
  1635  0B46  120A  118A  2035   	fcall	_sprintf
      +       120A  158A         
  1636                           
  1637                           ;LCD1.c: 90: lcd_goto(0x40);
  1638  0B4B  3040               	movlw	64
  1639  0B4C  120A  158A  20EE   	fcall	_lcd_goto
      +       120A  158A         
  1640                           
  1641                           ;LCD1.c: 91: lcd_puts("7:");
  1642  0B51  3083               	movlw	low (STR_6-__stringbase)
  1643  0B52  00F5               	movwf	?_lcd_puts
  1644  0B53  3080               	movlw	128
  1645  0B54  00F6               	movwf	?_lcd_puts+1
  1646  0B55  120A  158A  20F4   	fcall	_lcd_puts
      +       120A  158A         
  1647                           
  1648                           ;LCD1.c: 92: lcd_puts(carac);
  1649  0B5A  305E               	movlw	_carac& (0+255)
  1650  0B5B  00F5               	movwf	?_lcd_puts
  1651  0B5C  01F6               	clrf	?_lcd_puts+1
  1652  0B5D  120A  158A  20F4   	fcall	_lcd_puts
      +       120A  158A         
  1653                           
  1654                           ;LCD1.c: 94: pause(1);
  1655  0B62  01F0               	clrf	?_pause
  1656  0B63  0AF0               	incf	?_pause,f
  1657  0B64  01F1               	clrf	?_pause+1
  1658  0B65  120A  158A  2148   	fcall	_pause
      +       120A  158A         
  1659  0B6A  2A65               	goto	l5733
  1660  0B6B                     __end_of_main:	
  1661                           
  1662                           	psect	text523
  1663  08EE                     __ptext523:	
  1664 ;; =============== function _lcd_puts ends ============
  1665                           
  1666                           
  1667 ;; *************** function _lcd_goto *****************
  1668 ;; Defined at:
  1669 ;;		line 128 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\LCD1\LCD1.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;  pos             1    wreg     unsigned char 
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;  pos             1    5[COMMON] unsigned char 
  1674 ;; Return value:  Size  Location     Type
  1675 ;;		None               void
  1676 ;; Registers used:
  1677 ;;		wreg, status,2, status,0, pclath, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : 160/20
  1680 ;;		On exit  : 160/0
  1681 ;;		Unchanged: FFE9F/0
  1682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1683 ;;      Params:         0       0       0       0       0
  1684 ;;      Locals:         1       0       0       0       0
  1685 ;;      Temps:          0       0       0       0       0
  1686 ;;      Totals:         1       0       0       0       0
  1687 ;;Total ram usage:        1 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; Hardware stack levels required when called:    3
  1690 ;; This function calls:
  1691 ;;		_lcd_write
  1692 ;; This function is called by:
  1693 ;;		_main
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696  08EE                     _lcd_goto:	
  1697                           
  1698                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  1699                           ;lcd_goto@pos stored from wreg
  1700  08EE  00F5               	movwf	lcd_goto@pos
  1701                           
  1702                           ;LCD1.c: 129: RC3 = 0;
  1703  08EF  1283               	bcf	3,5	;RP0=0, select bank0
  1704  08F0  1187               	bcf	7,3
  1705                           
  1706                           ;LCD1.c: 130: lcd_write(0x80+pos);
  1707  08F1  0875               	movf	lcd_goto@pos,w
  1708  08F2  3E80               	addlw	128
  1709  08F3  2959               	ljmp	_lcd_write
  1710  08F4                     __end_of_lcd_goto:	
  1711  08F4                     __ptext522:	
  1712 ;; =============== function _lcd_init ends ============
  1713                           
  1714                           
  1715 ;; *************** function _lcd_puts *****************
  1716 ;; Defined at:
  1717 ;;		line 115 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\LCD1\LCD1.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;  s               2    5[COMMON] PTR const unsigned char 
  1720 ;;		 -> STR_6(3), STR_4(3), STR_2(3), carac(5), 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;		None
  1723 ;; Return value:  Size  Location     Type
  1724 ;;		None               void
  1725 ;; Registers used:
  1726 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1727 ;; Tracked objects:
  1728 ;;		On entry : 60/0
  1729 ;;		On exit  : 60/0
  1730 ;;		Unchanged: FFE9F/0
  1731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1732 ;;      Params:         2       0       0       0       0
  1733 ;;      Locals:         0       0       0       0       0
  1734 ;;      Temps:          0       0       0       0       0
  1735 ;;      Totals:         2       0       0       0       0
  1736 ;;Total ram usage:        2 bytes
  1737 ;; Hardware stack levels used:    1
  1738 ;; Hardware stack levels required when called:    3
  1739 ;; This function calls:
  1740 ;;		_lcd_write
  1741 ;; This function is called by:
  1742 ;;		_main
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745  08F4                     _lcd_puts:	
  1746                           
  1747                           ;LCD1.c: 116: RC3 = 1;
  1748                           
  1749                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1750  08F4  1587               	bsf	7,3
  1751  08F5                     l5675:	
  1752                           ;LCD1.c: 117: while(*s)
  1753                           
  1754  08F5  0876               	movf	lcd_puts@s+1,w
  1755  08F6  00FF               	movwf	127
  1756  08F7  0875               	movf	lcd_puts@s,w
  1757  08F8  0084               	movwf	4
  1758  08F9  120A  158A  2000   	fcall	stringtab
      +       120A  158A         
  1759  08FE  3800               	iorlw	0
  1760  08FF  1903               	btfsc	3,2
  1761  0900  0008               	return
  1762                           
  1763                           ;LCD1.c: 118: lcd_write(*s++);
  1764  0901  0876               	movf	lcd_puts@s+1,w
  1765  0902  00FF               	movwf	127
  1766  0903  0875               	movf	lcd_puts@s,w
  1767  0904  0084               	movwf	4
  1768  0905  120A  158A  2000   	fcall	stringtab
      +       120A  158A         
  1769  090A  2159  120A  158A   	fcall	_lcd_write
  1770  090D  0AF5               	incf	lcd_puts@s,f
  1771  090E  1903               	skipnz
  1772  090F  0AF6               	incf	lcd_puts@s+1,f
  1773  0910  28F5               	goto	l5675
  1774  0911                     __end_of_lcd_puts:	
  1775  0911                     __ptext521:	
  1776 ;; =============== function _main ends ============
  1777                           
  1778                           
  1779 ;; *************** function _lcd_init *****************
  1780 ;; Defined at:
  1781 ;;		line 134 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\LCD1\LCD1.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;		None
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;  init_value      1    0        unsigned char 
  1786 ;; Return value:  Size  Location     Type
  1787 ;;		None               void
  1788 ;; Registers used:
  1789 ;;		wreg, status,2, status,0, pclath, cstack
  1790 ;; Tracked objects:
  1791 ;;		On entry : 17F/20
  1792 ;;		On exit  : 17F/0
  1793 ;;		Unchanged: FFE80/0
  1794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1795 ;;      Params:         0       0       0       0       0
  1796 ;;      Locals:         1       0       0       0       0
  1797 ;;      Temps:          0       0       0       0       0
  1798 ;;      Totals:         1       0       0       0       0
  1799 ;;Total ram usage:        1 bytes
  1800 ;; Hardware stack levels used:    1
  1801 ;; Hardware stack levels required when called:    4
  1802 ;; This function calls:
  1803 ;;		_pause
  1804 ;;		_lcd_write
  1805 ;;		_lcd_clear
  1806 ;; This function is called by:
  1807 ;;		_main
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810  0911                     _lcd_init:	
  1811                           
  1812                           ;LCD1.c: 138: TRISC = 0;
  1813                           
  1814                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1815  0911  0187               	clrf	7	;volatile
  1816                           
  1817                           ;LCD1.c: 139: TRISD = 0;
  1818  0912  0188               	clrf	8	;volatile
  1819                           
  1820                           ;LCD1.c: 140: RC3 = 0;
  1821  0913  1283               	bcf	3,5	;RP0=0, select bank0
  1822  0914  300F               	movlw	15
  1823  0915  1187               	bcf	7,3
  1824                           
  1825                           ;LCD1.c: 141: RC0 = 0;
  1826  0916  1007               	bcf	7,0
  1827                           
  1828                           ;LCD1.c: 142: RC4 = 0;
  1829  0917  1207               	bcf	7,4
  1830                           
  1831                           ;LCD1.c: 144: pause(15);
  1832  0918  00F0               	movwf	?_pause
  1833  0919  01F1               	clrf	?_pause+1
  1834  091A  2148  120A  158A   	fcall	_pause
  1835                           
  1836                           ;LCD1.c: 145: PORTD = init_value;
  1837  091D  3003               	movlw	3
  1838  091E  1283               	bcf	3,5	;RP0=0, select bank0
  1839  091F  1303               	bcf	3,6	;RP1=0, select bank0
  1840  0920  0088               	movwf	8	;volatile
  1841  0921  300A               	movlw	10
  1842                           
  1843                           ;LCD1.c: 146: ((RC0 = 1 , RC0 = 0));
  1844  0922  1407               	bsf	7,0
  1845  0923  1007               	bcf	7,0
  1846                           
  1847                           ;LCD1.c: 147: pause(10);
  1848  0924  00F0               	movwf	?_pause
  1849  0925  01F1               	clrf	?_pause+1
  1850  0926  2148  120A  158A   	fcall	_pause
  1851                           
  1852                           ;LCD1.c: 148: ((RC0 = 1 , RC0 = 0));
  1853                           
  1854                           ;LCD1.c: 149: pause(10);
  1855  0929  217F  120A  158A   	fcall	PL27	;call to abstracted procedure
  1856  092C  2148  120A  158A   	fcall	_pause
  1857                           
  1858                           ;LCD1.c: 150: ((RC0 = 1 , RC0 = 0));
  1859                           
  1860                           ;LCD1.c: 151: pause(10);
  1861  092F  217F  120A  158A   	fcall	PL27	;call to abstracted procedure
  1862  0932  2148  120A  158A   	fcall	_pause
  1863                           
  1864                           ;LCD1.c: 152: PORTD=2;
  1865  0935  3002               	movlw	2
  1866  0936  1283               	bcf	3,5	;RP0=0, select bank0
  1867  0937  1303               	bcf	3,6	;RP1=0, select bank0
  1868  0938  0088               	movwf	8	;volatile
  1869  0939  3028               	movlw	40
  1870                           
  1871                           ;LCD1.c: 153: ((RC0 = 1 , RC0 = 0));
  1872  093A  1407               	bsf	7,0
  1873  093B  1007               	bcf	7,0
  1874                           
  1875                           ;LCD1.c: 155: lcd_write(0x28);
  1876  093C  2159  120A  158A   	fcall	_lcd_write
  1877                           
  1878                           ;LCD1.c: 157: lcd_write(0x0F);
  1879  093F  300F               	movlw	15
  1880  0940  2159  120A  158A   	fcall	_lcd_write
  1881                           
  1882                           ;LCD1.c: 158: lcd_clear();
  1883  0943  2176  120A  158A   	fcall	_lcd_clear
  1884                           
  1885                           ;LCD1.c: 159: lcd_write(0x06);
  1886  0946  3006               	movlw	6
  1887  0947  2959               	ljmp	_lcd_write
  1888  0948                     __end_of_lcd_init:	
  1889  0948                     __ptext534:	
  1890 ;; =============== function ___ftadd ends ============
  1891                           
  1892                           
  1893 ;; *************** function _pause *****************
  1894 ;; Defined at:
  1895 ;;		line 183 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\LCD1\LCD1.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;  usvalue         2    0[COMMON] unsigned short 
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;  x               2    2[COMMON] unsigned short 
  1900 ;; Return value:  Size  Location     Type
  1901 ;;		None               void
  1902 ;; Registers used:
  1903 ;;		wreg, status,2, status,0, pclath, cstack
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: FFF9F/0
  1908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1909 ;;      Params:         2       0       0       0       0
  1910 ;;      Locals:         2       0       0       0       0
  1911 ;;      Temps:          0       0       0       0       0
  1912 ;;      Totals:         4       0       0       0       0
  1913 ;;Total ram usage:        4 bytes
  1914 ;; Hardware stack levels used:    1
  1915 ;; Hardware stack levels required when called:    1
  1916 ;; This function calls:
  1917 ;;		_msecbase
  1918 ;; This function is called by:
  1919 ;;		_main
  1920 ;;		_lcd_write
  1921 ;;		_lcd_clear
  1922 ;;		_lcd_init
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925  0948                     _pause:	
  1926  0948                     l5159:	
  1927                           ; Regs used in _pause: [wreg+status,2+status,0+pclath+cstack]
  1928                           
  1929                           
  1930                           ;LCD1.c: 184: unsigned short x;
  1931                           ;LCD1.c: 186: for (x=0; x<=usvalue; x++)
  1932  0948  01F2               	clrf	pause@x
  1933  0949  01F3               	clrf	pause@x+1
  1934  094A                     l5165:	
  1935  094A  0873               	movf	pause@x+1,w
  1936  094B  0271               	subwf	pause@usvalue+1,w
  1937  094C  1D03               	skipz
  1938  094D  2950               	goto	u2335
  1939  094E  0872               	movf	pause@x,w
  1940  094F  0270               	subwf	pause@usvalue,w
  1941  0950                     u2335:	
  1942  0950  1C03               	btfss	3,0
  1943  0951  0008               	return
  1944                           
  1945                           ;LCD1.c: 187: {
  1946                           ;LCD1.c: 188: msecbase();
  1947  0952  216B  120A  158A   	fcall	_msecbase
  1948  0955  0AF2               	incf	pause@x,f
  1949  0956  1903               	skipnz
  1950  0957  0AF3               	incf	pause@x+1,f
  1951  0958  294A               	goto	l5165
  1952  0959                     __end_of_pause:	
  1953  0959                     __ptext529:	
  1954 ;; =============== function _fround ends ============
  1955                           
  1956                           
  1957 ;; *************** function _lcd_write *****************
  1958 ;; Defined at:
  1959 ;;		line 99 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\LCD1\LCD1.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  c               1    wreg     unsigned char 
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;  c               1    4[COMMON] unsigned char 
  1964 ;; Return value:  Size  Location     Type
  1965 ;;		None               void
  1966 ;; Registers used:
  1967 ;;		wreg, status,2, status,0, pclath, cstack
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 60/0
  1971 ;;		Unchanged: FFF9F/0
  1972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1973 ;;      Params:         0       0       0       0       0
  1974 ;;      Locals:         1       0       0       0       0
  1975 ;;      Temps:          0       0       0       0       0
  1976 ;;      Totals:         1       0       0       0       0
  1977 ;;Total ram usage:        1 bytes
  1978 ;; Hardware stack levels used:    1
  1979 ;; Hardware stack levels required when called:    2
  1980 ;; This function calls:
  1981 ;;		_pause
  1982 ;; This function is called by:
  1983 ;;		_lcd_clear
  1984 ;;		_lcd_puts
  1985 ;;		_lcd_goto
  1986 ;;		_lcd_init
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989  0959                     _lcd_write:	
  1990                           
  1991                           ; Regs used in _lcd_write: [wreg+status,2+status,0+pclath+cstack]
  1992                           ;lcd_write@c stored from wreg
  1993  0959  00F4               	movwf	lcd_write@c
  1994                           
  1995                           ;LCD1.c: 100: pause(1);
  1996  095A  01F0               	clrf	?_pause
  1997  095B  0AF0               	incf	?_pause,f
  1998  095C  01F1               	clrf	?_pause+1
  1999  095D  2148               	fcall	_pause
  2000                           
  2001                           ;LCD1.c: 101: PORTD = ( ( c >> 4) & 0x0F);
  2002  095E  0E74               	swapf	lcd_write@c,w
  2003  095F  390F               	andlw	15
  2004  0960  1283               	bcf	3,5	;RP0=0, select bank0
  2005  0961  1303               	bcf	3,6	;RP1=0, select bank0
  2006  0962  0088               	movwf	8	;volatile
  2007                           
  2008                           ;LCD1.c: 102: ((RC0 = 1 , RC0 = 0));
  2009  0963  1407               	bsf	7,0
  2010  0964  1007               	bcf	7,0
  2011                           
  2012                           ;LCD1.c: 103: PORTD = (c & 0x0F);
  2013  0965  0874               	movf	lcd_write@c,w
  2014  0966  390F               	andlw	15
  2015  0967  0088               	movwf	8	;volatile
  2016                           
  2017                           ;LCD1.c: 104: ((RC0 = 1 , RC0 = 0));
  2018  0968  1407               	bsf	7,0
  2019  0969  1007               	bcf	7,0
  2020  096A  0008               	return
  2021  096B                     __end_of_lcd_write:	
  2022  096B                     __ptext550:	
  2023 ;; =============== function _isdigit ends ============
  2024                           
  2025                           
  2026 ;; *************** function _msecbase *****************
  2027 ;; Defined at:
  2028 ;;		line 193 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\LCD1\LCD1.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;		None
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;		None
  2033 ;; Return value:  Size  Location     Type
  2034 ;;		None               void
  2035 ;; Registers used:
  2036 ;;		wreg
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: FFF9F/0
  2041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2042 ;;      Params:         0       0       0       0       0
  2043 ;;      Locals:         0       0       0       0       0
  2044 ;;      Temps:          0       0       0       0       0
  2045 ;;      Totals:         0       0       0       0       0
  2046 ;;Total ram usage:        0 bytes
  2047 ;; Hardware stack levels used:    1
  2048 ;; This function calls:
  2049 ;;		Nothing
  2050 ;; This function is called by:
  2051 ;;		_pause
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054  096B                     _msecbase:	
  2055                           
  2056                           ;LCD1.c: 194: OPTION_REG = 0b11010001;
  2057                           
  2058                           ; Regs used in _msecbase: [wreg]
  2059  096B  30D1               	movlw	209
  2060  096C  1683               	bsf	3,5	;RP0=1, select bank1
  2061  096D  1303               	bcf	3,6	;RP1=0, select bank1
  2062  096E  0081               	movwf	1	;volatile
  2063                           
  2064                           ;LCD1.c: 195: TMR0 = 0x0E;
  2065  096F  300E               	movlw	14
  2066  0970  1283               	bcf	3,5	;RP0=0, select bank0
  2067  0971  0081               	movwf	1	;volatile
  2068  0972                     l1096:	
  2069                           ;LCD1.c: 197: while(!T0IF);
  2070                           
  2071  0972  1D0B               	btfss	11,2
  2072  0973  2972               	goto	l1096
  2073                           
  2074                           ;LCD1.c: 198: T0IF = 0;
  2075  0974  110B               	bcf	11,2
  2076  0975  0008               	return
  2077  0976                     __end_of_msecbase:	
  2078  0976                     __ptext525:	
  2079 ;; =============== function _sprintf ends ============
  2080                           
  2081                           
  2082 ;; *************** function _lcd_clear *****************
  2083 ;; Defined at:
  2084 ;;		line 108 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\LCD1\LCD1.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;		None
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;		None
  2089 ;; Return value:  Size  Location     Type
  2090 ;;		None               void
  2091 ;; Registers used:
  2092 ;;		wreg, status,2, status,0, pclath, cstack
  2093 ;; Tracked objects:
  2094 ;;		On entry : 17F/0
  2095 ;;		On exit  : 11F/0
  2096 ;;		Unchanged: FFE80/0
  2097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2098 ;;      Params:         0       0       0       0       0
  2099 ;;      Locals:         0       0       0       0       0
  2100 ;;      Temps:          0       0       0       0       0
  2101 ;;      Totals:         0       0       0       0       0
  2102 ;;Total ram usage:        0 bytes
  2103 ;; Hardware stack levels used:    1
  2104 ;; Hardware stack levels required when called:    3
  2105 ;; This function calls:
  2106 ;;		_lcd_write
  2107 ;;		_pause
  2108 ;; This function is called by:
  2109 ;;		_main
  2110 ;;		_lcd_init
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113  0976                     _lcd_clear:	
  2114  0976  3001               	movlw	1
  2115                           
  2116                           ;LCD1.c: 109: RC3 = 0;
  2117                           
  2118                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  2119  0977  1187               	bcf	7,3
  2120                           
  2121                           ;LCD1.c: 110: lcd_write(0x01);
  2122  0978  2159  120A  158A   	fcall	_lcd_write
  2123                           
  2124                           ;LCD1.c: 111: pause (2);
  2125  097B  3002               	movlw	2
  2126  097C  00F0               	movwf	?_pause
  2127  097D  01F1               	clrf	?_pause+1
  2128  097E  2948               	ljmp	l5159
  2129  097F                     __end_of_lcd_clear:	
  2130  097F                     PL27:	
  2131  097F  1283               	bcf	3,5	;RP0=0, select bank0
  2132  0980  1303               	bcf	3,6	;RP1=0, select bank0
  2133  0981  300A               	movlw	10
  2134  0982  1407               	bsf	7,0
  2135  0983  1007               	bcf	7,0
  2136  0984  00F0               	movwf	?_pause
  2137  0985  01F1               	clrf	?_pause+1
  2138  0986  0008               	return
  2139                           
  2140                           	psect	text524
  2141  0035                     __ptext524:	
  2142 ;; =============== function _lcd_goto ends ============
  2143                           
  2144                           
  2145 ;; *************** function _sprintf *****************
  2146 ;; Defined at:
  2147 ;;		line 488 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;  sp              1    wreg     PTR unsigned char 
  2150 ;;		 -> carac(5), 
  2151 ;;  f               1   50[BANK0 ] PTR const unsigned char 
  2152 ;;		 -> STR_5(6), STR_3(6), STR_1(6), 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;  sp              1   18[BANK1 ] PTR unsigned char 
  2155 ;;		 -> carac(5), 
  2156 ;;  _val            4    8[BANK1 ] struct .
  2157 ;;  fval            3   19[BANK1 ] struct .
  2158 ;;  integ           3    5[BANK1 ] struct .
  2159 ;;  ival            3    0        struct .
  2160 ;;  prec            2   22[BANK1 ] int 
  2161 ;;  exp             2   16[BANK1 ] int 
  2162 ;;  width           2   14[BANK1 ] int 
  2163 ;;  flag            2   12[BANK1 ] unsigned short 
  2164 ;;  c               1   24[BANK1 ] char 
  2165 ;;  ap              1    4[BANK1 ] PTR void [1]
  2166 ;;		 -> ?_sprintf(2), 
  2167 ;;  d               1    0        unsigned char 
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  2   50[BANK0 ] int 
  2170 ;; Registers used:
  2171 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2172 ;; Tracked objects:
  2173 ;;		On entry : 60/0
  2174 ;;		On exit  : 160/20
  2175 ;;		Unchanged: FFE00/0
  2176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2177 ;;      Params:         0       4       0       0       0
  2178 ;;      Locals:         0       0      25       0       0
  2179 ;;      Temps:          0       5       0       0       0
  2180 ;;      Totals:         0       9      25       0       0
  2181 ;;Total ram usage:       34 bytes
  2182 ;; Hardware stack levels used:    1
  2183 ;; Hardware stack levels required when called:    3
  2184 ;; This function calls:
  2185 ;;		_isdigit
  2186 ;;		___wmul
  2187 ;;		___ftge
  2188 ;;		___ftneg
  2189 ;;		___awdiv
  2190 ;;		_scale
  2191 ;;		___ftmul
  2192 ;;		_fround
  2193 ;;		___ftadd
  2194 ;;		___fttol
  2195 ;;		__div_to_l_
  2196 ;;		__tdiv_to_l_
  2197 ;;		___lltoft
  2198 ;;		___ftsub
  2199 ;;		___lldiv
  2200 ;;		___llmod
  2201 ;; This function is called by:
  2202 ;;		_main
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205  0035                     _sprintf:	
  2206                           
  2207                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2208                           ;sprintf@sp stored from wreg
  2209  0035  1683               	bsf	3,5	;RP0=1, select bank1
  2210  0036  00B2               	movwf	sprintf@sp^(0+128)
  2211  0037  3053               	movlw	(?_sprintf+1)& (0+255)
  2212  0038  00A4               	movwf	sprintf@ap^(0+128)
  2213  0039                     l5659:	
  2214  0039  1283               	bcf	3,5	;RP0=0, select bank0
  2215  003A  0852               	movf	sprintf@f,w
  2216  003B  0AD2               	incf	sprintf@f,f
  2217  003C  0084               	movwf	4
  2218  003D  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2219  0042  1683               	bsf	3,5	;RP0=1, select bank1
  2220  0043  00B8               	movwf	sprintf@c^(0+128)
  2221  0044  08B8               	movf	sprintf@c^(0+128),f
  2222  0045  1903               	btfsc	3,2
  2223  0046  2CB1               	goto	l5661
  2224  0047  0838               	movf	sprintf@c^(0+128),w
  2225  0048  3A25               	xorlw	37
  2226  0049  1903               	skipnz
  2227  004A  284F               	goto	l5417
  2228  004B  0832               	movf	sprintf@sp^(0+128),w
  2229  004C  0084               	movwf	4
  2230  004D  0838               	movf	sprintf@c^(0+128),w
  2231  004E  2CAD               	goto	L4
  2232  004F                     l5417:	
  2233  004F  01AE               	clrf	sprintf@width^(0+128)
  2234  0050  01AF               	clrf	(sprintf@width+1)^(0+128)
  2235  0051  01AC               	clrf	sprintf@flag^(0+128)
  2236  0052  01AD               	clrf	(sprintf@flag+1)^(0+128)
  2237  0053  1283               	bcf	3,5	;RP0=0, select bank0
  2238  0054  0852               	movf	sprintf@f,w
  2239  0055  0084               	movwf	4
  2240  0056  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2241  005B  24E2  120A  118A   	fcall	_isdigit
  2242  005E  1C03               	btfss	3,0
  2243  005F  2888               	goto	l5429
  2244  0060  1683               	bsf	3,5	;RP0=1, select bank1
  2245  0061  01AE               	clrf	sprintf@width^(0+128)
  2246  0062  01AF               	clrf	(sprintf@width+1)^(0+128)
  2247  0063                     l5423:	
  2248  0063  1683               	bsf	3,5	;RP0=1, select bank1
  2249  0064  082F               	movf	(sprintf@width+1)^(0+128),w
  2250  0065  00F1               	movwf	?___wmul+1
  2251  0066  082E               	movf	sprintf@width^(0+128),w
  2252  0067  00F0               	movwf	?___wmul
  2253  0068  300A               	movlw	10
  2254  0069  00F2               	movwf	?___wmul+2
  2255  006A  01F3               	clrf	?___wmul+3
  2256  006B  24F0               	fcall	___wmul
  2257  006C  1283               	bcf	3,5	;RP0=0, select bank0
  2258  006D  0852               	movf	sprintf@f,w
  2259  006E  0084               	movwf	4
  2260  006F  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2261  0074  2779  120A  118A   	fcall	PL11	;call to abstracted procedure
  2262  0077  00AE               	movwf	sprintf@width^(0+128)
  2263  0078  27D2               	fcall	PL29	;call to abstracted procedure
  2264  0079  00AF               	movwf	(sprintf@width+1)^(0+128)
  2265  007A  1283               	bcf	3,5	;RP0=0, select bank0
  2266  007B  0AD2               	incf	sprintf@f,f
  2267  007C  0852               	movf	sprintf@f,w
  2268  007D  0084               	movwf	4
  2269  007E  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2270  0083  24E2  120A  118A   	fcall	_isdigit
  2271  0086  1803               	btfsc	3,0
  2272  0087  2863               	goto	l5423
  2273  0088                     l5429:	
  2274  0088  0852               	movf	sprintf@f,w
  2275  0089  0084               	movwf	4
  2276  008A  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2277  008F  3A2E               	xorlw	46
  2278  0090  1D03               	skipz
  2279  0091  28C2               	goto	l5443
  2280  0092  1683               	bsf	3,5	;RP0=1, select bank1
  2281  0093  172D               	bsf	(sprintf@flag^(0+128)+1),6
  2282  0094  1283               	bcf	3,5	;RP0=0, select bank0
  2283  0095  0AD2               	incf	sprintf@f,f
  2284  0096  1683               	bsf	3,5	;RP0=1, select bank1
  2285  0097  01B6               	clrf	sprintf@prec^(0+128)
  2286  0098  01B7               	clrf	(sprintf@prec+1)^(0+128)
  2287  0099                     l5441:	
  2288  0099  1283               	bcf	3,5	;RP0=0, select bank0
  2289  009A  0852               	movf	sprintf@f,w
  2290  009B  0084               	movwf	4
  2291  009C  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2292  00A1  24E2  120A  118A   	fcall	_isdigit
  2293  00A4  1C03               	btfss	3,0
  2294  00A5  28C9               	goto	l5449
  2295  00A6  1683               	bsf	3,5	;RP0=1, select bank1
  2296  00A7  0837               	movf	(sprintf@prec+1)^(0+128),w
  2297  00A8  00F1               	movwf	?___wmul+1
  2298  00A9  0836               	movf	sprintf@prec^(0+128),w
  2299  00AA  00F0               	movwf	?___wmul
  2300  00AB  300A               	movlw	10
  2301  00AC  00F2               	movwf	?___wmul+2
  2302  00AD  01F3               	clrf	?___wmul+3
  2303  00AE  24F0               	fcall	___wmul
  2304  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  2305  00B0  0852               	movf	sprintf@f,w
  2306  00B1  0084               	movwf	4
  2307  00B2  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2308  00B7  2779  120A  118A   	fcall	PL11	;call to abstracted procedure
  2309  00BA  00B6               	movwf	sprintf@prec^(0+128)
  2310  00BB  27D2  120A  118A   	fcall	PL29	;call to abstracted procedure
  2311  00BE  00B7               	movwf	(sprintf@prec+1)^(0+128)
  2312  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  2313  00C0  0AD2               	incf	sprintf@f,f
  2314  00C1  2899               	goto	l5441
  2315  00C2                     l5443:	
  2316  00C2  1683               	bsf	3,5	;RP0=1, select bank1
  2317  00C3  01B6               	clrf	sprintf@prec^(0+128)
  2318  00C4  01B7               	clrf	(sprintf@prec+1)^(0+128)
  2319  00C5  162D               	bsf	(sprintf@flag^(0+128)+1),4
  2320  00C6  28C9               	goto	l5449
  2321  00C7                     l1148:	
  2322  00C7  152D               	bsf	(sprintf@flag^(0+128)+1),2
  2323  00C8  28DB               	goto	l5451
  2324  00C9                     l5449:	
  2325  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  2326  00CA  0852               	movf	sprintf@f,w
  2327  00CB  0AD2               	incf	sprintf@f,f
  2328  00CC  0084               	movwf	4
  2329  00CD  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2330  00D2  1683               	bsf	3,5	;RP0=1, select bank1
  2331  00D3  00B8               	movwf	sprintf@c^(0+128)
  2332                           
  2333                           ; Switch size 1, requested type "space"
  2334                           ; Number of cases is 2, Range of values is 0 to 102
  2335                           ; switch strategies available:
  2336                           ; Name         Instructions Cycles
  2337                           ; simple_byte            7     4 (average)
  2338                           ; jumptable            260     6 (fixed)
  2339                           ; rangetable           107     6 (fixed)
  2340                           ; spacedrange          212     9 (fixed)
  2341                           ; locatedrange         103     3 (fixed)
  2342                           ;	Chosen strategy is simple_byte
  2343  00D4  3A00               	xorlw	0	; case 0
  2344  00D5  1903               	skipnz
  2345  00D6  2CB1               	goto	l5661
  2346  00D7  3A66               	xorlw	102	; case 102
  2347  00D8  1903               	skipnz
  2348  00D9  28C7               	goto	l1148
  2349  00DA  2839               	goto	l5659
  2350  00DB                     l5451:	
  2351  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  2352  00DC  3007               	movlw	7
  2353  00DD  01D6               	clrf	??_sprintf
  2354  00DE  1683               	bsf	3,5	;RP0=1, select bank1
  2355  00DF  052D               	andwf	(sprintf@flag+1)^(0+128),w
  2356  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  2357  00E1  00D7               	movwf	??_sprintf+1
  2358  00E2  0456               	iorwf	??_sprintf,w
  2359  00E3  1903               	skipnz
  2360  00E4  2C12               	goto	l5611
  2361  00E5  1683               	bsf	3,5	;RP0=1, select bank1
  2362  00E6  1E2D               	btfss	(sprintf@flag+1)^(0+128),4
  2363  00E7  28EB               	goto	l5457
  2364  00E8  3006               	movlw	6
  2365  00E9  00B6               	movwf	sprintf@prec^(0+128)
  2366  00EA  01B7               	clrf	(sprintf@prec+1)^(0+128)
  2367  00EB                     l5457:	
  2368  00EB  0824               	movf	sprintf@ap^(0+128),w
  2369  00EC  0084               	movwf	4
  2370  00ED  1383               	bcf	3,7	;select IRP bank0
  2371  00EE  0800               	movf	0,w
  2372  00EF  00B3               	movwf	sprintf@fval^(0+128)
  2373  00F0  0A84               	incf	4,f
  2374  00F1  0800               	movf	0,w
  2375  00F2  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2376  00F3  0A84               	incf	4,f
  2377  00F4  0800               	movf	0,w
  2378  00F5  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2379  00F6  3003               	movlw	3
  2380  00F7  07A4               	addwf	sprintf@ap^(0+128),f
  2381  00F8  0833               	movf	sprintf@fval^(0+128),w
  2382  00F9  00F0               	movwf	?___ftge
  2383  00FA  0834               	movf	(sprintf@fval+1)^(0+128),w
  2384  00FB  00F1               	movwf	?___ftge+1
  2385  00FC  0835               	movf	(sprintf@fval+2)^(0+128),w
  2386  00FD  00F2               	movwf	?___ftge+2
  2387  00FE  01F3               	clrf	?___ftge+3
  2388  00FF  01F4               	clrf	?___ftge+4
  2389  0100  01F5               	clrf	?___ftge+5
  2390  0101  24B6  120A  118A   	fcall	___ftge
  2391  0104  1803               	btfsc	3,0
  2392  0105  2917               	goto	l5467
  2393  0106  0833               	movf	sprintf@fval^(0+128),w
  2394  0107  00F0               	movwf	?___ftneg
  2395  0108  0834               	movf	(sprintf@fval+1)^(0+128),w
  2396  0109  00F1               	movwf	?___ftneg+1
  2397  010A  0835               	movf	(sprintf@fval+2)^(0+128),w
  2398  010B  00F2               	movwf	?___ftneg+2
  2399  010C  2662  120A  118A   	fcall	___ftneg
  2400  010F  0870               	movf	?___ftneg,w
  2401  0110  00B3               	movwf	sprintf@fval^(0+128)
  2402  0111  0871               	movf	?___ftneg+1,w
  2403  0112  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2404  0113  0872               	movf	?___ftneg+2,w
  2405  0114  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2406  0115  3003               	movlw	3
  2407  0116  04AC               	iorwf	sprintf@flag^(0+128),f
  2408  0117                     l5467:	
  2409  0117  01B0               	clrf	sprintf@exp^(0+128)
  2410  0118  01B1               	clrf	(sprintf@exp+1)^(0+128)
  2411  0119  0835               	movf	(sprintf@fval+2)^(0+128),w
  2412  011A  0434               	iorwf	(sprintf@fval+1)^(0+128),w
  2413  011B  0433               	iorwf	sprintf@fval^(0+128),w
  2414  011C  1903               	skipnz
  2415  011D  29B0               	goto	l5499
  2416  011E  30B3               	movlw	low sprintf@fval
  2417  011F  0084               	movwf	4
  2418  0120  0800               	movf	0,w
  2419  0121  1283               	bcf	3,5	;RP0=0, select bank0
  2420  0122  00D6               	movwf	??_sprintf
  2421  0123  0A84               	incf	4,f
  2422  0124  0800               	movf	0,w
  2423  0125  00D7               	movwf	??_sprintf+1
  2424  0126  0A84               	incf	4,f
  2425  0127  0800               	movf	0,w
  2426  0128  00D8               	movwf	??_sprintf+2
  2427  0129  0A84               	incf	4,f
  2428  012A  0800               	movf	0,w
  2429  012B  00D9               	movwf	??_sprintf+3
  2430  012C  300F               	movlw	15
  2431  012D                     u2805:	
  2432  012D  1003               	clrc
  2433  012E  0CD9               	rrf	??_sprintf+3,f
  2434  012F  0CD8               	rrf	??_sprintf+2,f
  2435  0130  0CD7               	rrf	??_sprintf+1,f
  2436  0131  0CD6               	rrf	??_sprintf,f
  2437  0132  3EFF               	addlw	-1
  2438  0133  1D03               	skipz
  2439  0134  292D               	goto	u2805
  2440  0135  0857               	movf	??_sprintf+1,w
  2441  0136  1683               	bsf	3,5	;RP0=1, select bank1
  2442  0137  00B1               	movwf	(sprintf@exp+1)^(0+128)
  2443  0138  1283               	bcf	3,5	;RP0=0, select bank0
  2444  0139  0856               	movf	??_sprintf,w
  2445  013A  1683               	bsf	3,5	;RP0=1, select bank1
  2446  013B  00B0               	movwf	sprintf@exp^(0+128)
  2447  013C  3082               	movlw	-126
  2448  013D  01B1               	clrf	(sprintf@exp+1)^(0+128)
  2449  013E  07B0               	addwf	sprintf@exp^(0+128),f
  2450  013F  1C03               	skipc
  2451  0140  03B1               	decf	(sprintf@exp+1)^(0+128),f
  2452  0141  30FF               	movlw	-1
  2453  0142  07B0               	addwf	sprintf@exp^(0+128),f
  2454  0143  1C03               	skipc
  2455  0144  03B1               	decf	(sprintf@exp+1)^(0+128),f
  2456  0145  3003               	movlw	3
  2457  0146  00F0               	movwf	?___wmul
  2458  0147  01F1               	clrf	?___wmul+1
  2459  0148  0831               	movf	(sprintf@exp+1)^(0+128),w
  2460  0149  00F3               	movwf	?___wmul+3
  2461  014A  0830               	movf	sprintf@exp^(0+128),w
  2462  014B  00F2               	movwf	?___wmul+2
  2463  014C  24F0               	fcall	___wmul
  2464  014D  0871               	movf	?___wmul+1,w
  2465  014E  00B1               	movwf	(sprintf@exp+1)^(0+128)
  2466  014F  0870               	movf	?___wmul,w
  2467  0150  00B0               	movwf	sprintf@exp^(0+128)
  2468  0151  300A               	movlw	10
  2469  0152  00F6               	movwf	?___awdiv
  2470  0153  01F7               	clrf	?___awdiv+1
  2471  0154  0831               	movf	(sprintf@exp+1)^(0+128),w
  2472  0155  00F9               	movwf	?___awdiv+3
  2473  0156  0830               	movf	sprintf@exp^(0+128),w
  2474  0157  00F8               	movwf	?___awdiv+2
  2475  0158  120A  158A  266A   	fcall	___awdiv
      +       120A  118A         
  2476  015D  0877               	movf	?___awdiv+1,w
  2477  015E  00B1               	movwf	(sprintf@exp+1)^(0+128)
  2478  015F  0876               	movf	?___awdiv,w
  2479  0160  00B0               	movwf	sprintf@exp^(0+128)
  2480  0161  1FB1               	btfss	(sprintf@exp+1)^(0+128),7
  2481  0162  2967               	goto	l5487
  2482  0163  30FF               	movlw	-1
  2483  0164  07B0               	addwf	sprintf@exp^(0+128),f
  2484  0165  1C03               	skipc
  2485  0166  03B1               	decf	(sprintf@exp+1)^(0+128),f
  2486  0167                     l5487:	
  2487  0167  0330               	decf	sprintf@exp^(0+128),w
  2488  0168  3AFF               	xorlw	255
  2489  0169  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  2490  016E  276C  120A  118A   	fcall	PL10	;call to abstracted procedure
  2491  0171  278F               	fcall	PL13	;call to abstracted procedure
  2492  0172  1683               	bsf	3,5	;RP0=1, select bank1
  2493  0173  0825               	movf	sprintf@integ^(0+128),w
  2494  0174  1283               	bcf	3,5	;RP0=0, select bank0
  2495  0175  00B0               	movwf	?___ftmul+3
  2496  0176  1683               	bsf	3,5	;RP0=1, select bank1
  2497  0177  0826               	movf	(sprintf@integ+1)^(0+128),w
  2498  0178  1283               	bcf	3,5	;RP0=0, select bank0
  2499  0179  00B1               	movwf	?___ftmul+4
  2500  017A  1683               	bsf	3,5	;RP0=1, select bank1
  2501  017B  0827               	movf	(sprintf@integ+2)^(0+128),w
  2502  017C  1283               	bcf	3,5	;RP0=0, select bank0
  2503  017D  00B2               	movwf	?___ftmul+5
  2504  017E  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2505  0183  082D               	movf	?___ftmul,w
  2506  0184  1683               	bsf	3,5	;RP0=1, select bank1
  2507  0185  00A5               	movwf	sprintf@integ^(0+128)
  2508  0186  1283               	bcf	3,5	;RP0=0, select bank0
  2509  0187  082E               	movf	?___ftmul+1,w
  2510  0188  1683               	bsf	3,5	;RP0=1, select bank1
  2511  0189  00A6               	movwf	(sprintf@integ+1)^(0+128)
  2512  018A  1283               	bcf	3,5	;RP0=0, select bank0
  2513  018B  082F               	movf	?___ftmul+2,w
  2514  018C  1683               	bsf	3,5	;RP0=1, select bank1
  2515  018D  00A7               	movwf	(sprintf@integ+2)^(0+128)
  2516  018E  27CB  120A  118A   	fcall	PL22	;call to abstracted procedure
  2517  0191  3080               	movlw	128
  2518  0192  01F3               	clrf	?___ftge+3
  2519  0193  00F4               	movwf	?___ftge+4
  2520  0194  303F               	movlw	63
  2521  0195  00F5               	movwf	?___ftge+5
  2522  0196  24B6  120A  118A   	fcall	___ftge
  2523  0199  1803               	btfsc	3,0
  2524  019A  29A0               	goto	l5495
  2525  019B  30FF               	movlw	-1
  2526  019C  07B0               	addwf	sprintf@exp^(0+128),f
  2527  019D  1C03               	skipc
  2528  019E  03B1               	decf	(sprintf@exp+1)^(0+128),f
  2529  019F  29B0               	goto	l5499
  2530  01A0                     l5495:	
  2531  01A0  27CB  120A  118A   	fcall	PL22	;call to abstracted procedure
  2532  01A3  3020               	movlw	32
  2533  01A4  01F3               	clrf	?___ftge+3
  2534  01A5  00F4               	movwf	?___ftge+4
  2535  01A6  3041               	movlw	65
  2536  01A7  00F5               	movwf	?___ftge+5
  2537  01A8  24B6  120A  118A   	fcall	___ftge
  2538  01AB  1C03               	btfss	3,0
  2539  01AC  29B0               	goto	l5499
  2540  01AD  0AB0               	incf	sprintf@exp^(0+128),f
  2541  01AE  1903               	skipnz
  2542  01AF  0AB1               	incf	(sprintf@exp+1)^(0+128),f
  2543  01B0                     l5499:	
  2544  01B0  0837               	movf	(sprintf@prec+1)^(0+128),w
  2545  01B1  3A80               	xorlw	128
  2546  01B2  00FF               	movwf	127
  2547  01B3  3080               	movlw	128
  2548  01B4  027F               	subwf	127,w
  2549  01B5  1D03               	skipz
  2550  01B6  29B9               	goto	u2845
  2551  01B7  300D               	movlw	13
  2552  01B8  0236               	subwf	sprintf@prec^(0+128),w
  2553  01B9                     u2845:	
  2554  01B9  1803               	skipnc
  2555  01BA  29E2               	goto	l5503
  2556  01BB  27E7               	call	PL33	;select bank 1
  2557  01BC  0836               	movf	sprintf@prec^(0+128),w
  2558  01BD  120A  158A  236B   	fcall	_fround
      +       120A  118A         
  2559  01C2  0848               	movf	?_fround,w
  2560  01C3  00BC               	movwf	?___ftadd
  2561  01C4  0849               	movf	?_fround+1,w
  2562  01C5  00BD               	movwf	?___ftadd+1
  2563  01C6  084A               	movf	?_fround+2,w
  2564  01C7  00BE               	movwf	?___ftadd+2
  2565  01C8  1683               	bsf	3,5	;RP0=1, select bank1
  2566  01C9  0833               	movf	sprintf@fval^(0+128),w
  2567  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  2568  01CB  00BF               	movwf	?___ftadd+3
  2569  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  2570  01CD  0834               	movf	(sprintf@fval+1)^(0+128),w
  2571  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  2572  01CF  00C0               	movwf	?___ftadd+4
  2573  01D0  1683               	bsf	3,5	;RP0=1, select bank1
  2574  01D1  0835               	movf	(sprintf@fval+2)^(0+128),w
  2575  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  2576  01D3  00C1               	movwf	?___ftadd+5
  2577  01D4  266A  120A  118A   	fcall	___ftadd
  2578  01D7  083C               	movf	?___ftadd,w
  2579  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  2580  01D9  00B3               	movwf	sprintf@fval^(0+128)
  2581  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  2582  01DB  083D               	movf	?___ftadd+1,w
  2583  01DC  1683               	bsf	3,5	;RP0=1, select bank1
  2584  01DD  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2585  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  2586  01DF  083E               	movf	?___ftadd+2,w
  2587  01E0  1683               	bsf	3,5	;RP0=1, select bank1
  2588  01E1  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2589  01E2                     l5503:	
  2590  01E2  27E7               	call	PL33	;select bank 1
  2591  01E3  0831               	movf	(sprintf@exp+1)^(0+128),w
  2592  01E4  3A80               	xorlw	128
  2593  01E5  00FF               	movwf	127
  2594  01E6  3080               	movlw	128
  2595  01E7  027F               	subwf	127,w
  2596  01E8  1D03               	skipz
  2597  01E9  29EC               	goto	u2855
  2598  01EA  300A               	movlw	10
  2599  01EB  0230               	subwf	sprintf@exp^(0+128),w
  2600  01EC                     u2855:	
  2601  01EC  1803               	skipnc
  2602  01ED  2A0D               	goto	l5511
  2603  01EE  27E7               	call	PL33	;select bank 1
  2604  01EF  0835               	movf	(sprintf@fval+2)^(0+128),w
  2605  01F0  0434               	iorwf	(sprintf@fval+1)^(0+128),w
  2606  01F1  0433               	iorwf	sprintf@fval^(0+128),w
  2607  01F2  1903               	skipnz
  2608  01F3  2A4E               	goto	l5527
  2609  01F4  0833               	movf	sprintf@fval^(0+128),w
  2610  01F5  2784  120A  118A   	fcall	PL12	;call to abstracted procedure
  2611  01F8  2509  120A  118A   	fcall	___fttol
  2612  01FB  0823               	movf	?___fttol+3,w
  2613  01FC  0422               	iorwf	?___fttol+2,w
  2614  01FD  0421               	iorwf	?___fttol+1,w
  2615  01FE  0420               	iorwf	?___fttol,w
  2616  01FF  1D03               	skipz
  2617  0200  2A4E               	goto	l5527
  2618  0201  1683               	bsf	3,5	;RP0=1, select bank1
  2619  0202  0831               	movf	(sprintf@exp+1)^(0+128),w
  2620  0203  3A80               	xorlw	128
  2621  0204  00FF               	movwf	127
  2622  0205  3080               	movlw	128
  2623  0206  027F               	subwf	127,w
  2624  0207  1D03               	skipz
  2625  0208  2A0B               	goto	u2885
  2626  0209  3002               	movlw	2
  2627  020A  0230               	subwf	sprintf@exp^(0+128),w
  2628  020B                     u2885:	
  2629  020B  1C03               	skipc
  2630  020C  2A4E               	goto	l5527
  2631  020D                     l5511:	
  2632  020D  27E7               	call	PL33	;select bank 1
  2633  020E  27CB  120A  118A   	fcall	PL22	;call to abstracted procedure
  2634  0211  3070               	movlw	112
  2635  0212  00F3               	movwf	?___ftge+3
  2636  0213  3089               	movlw	137
  2637  0214  00F4               	movwf	?___ftge+4
  2638  0215  3040               	movlw	64
  2639  0216  00F5               	movwf	?___ftge+5
  2640  0217  24B6  120A  118A   	fcall	___ftge
  2641  021A  1803               	btfsc	3,0
  2642  021B  2A1E               	goto	l5515
  2643  021C  30F7               	movlw	-9
  2644  021D  2A1F               	goto	L1
  2645  021E                     l5515:	
  2646  021E  30F8               	movlw	-8
  2647  021F                     L1:	
  2648  021F  07B0               	addwf	sprintf@exp^(0+128),f
  2649  0220  1C03               	skipc
  2650  0221  03B1               	decf	(sprintf@exp+1)^(0+128),f
  2651  0222  0830               	movf	sprintf@exp^(0+128),w
  2652  0223  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  2653  0228  276C  120A  118A   	fcall	PL10	;call to abstracted procedure
  2654  022B  00F0               	movwf	?__tdiv_to_l_
  2655  022C  0834               	movf	(sprintf@fval+1)^(0+128),w
  2656  022D  00F1               	movwf	?__tdiv_to_l_+1
  2657  022E  0835               	movf	(sprintf@fval+2)^(0+128),w
  2658  022F  00F2               	movwf	?__tdiv_to_l_+2
  2659  0230  0825               	movf	sprintf@integ^(0+128),w
  2660  0231  00F3               	movwf	?__tdiv_to_l_+3
  2661  0232  0826               	movf	(sprintf@integ+1)^(0+128),w
  2662  0233  00F4               	movwf	?__tdiv_to_l_+4
  2663  0234  0827               	movf	(sprintf@integ+2)^(0+128),w
  2664  0235  00F5               	movwf	?__tdiv_to_l_+5
  2665  0236  25EA  120A  118A   	fcall	__tdiv_to_l_
  2666  0239  0873               	movf	?__tdiv_to_l_+3,w
  2667  023A  1683               	bsf	3,5	;RP0=1, select bank1
  2668  023B  00A3               	movwf	(_sprintf$1901+3)^(0+128)
  2669  023C  0872               	movf	?__tdiv_to_l_+2,w
  2670  023D  00A2               	movwf	(_sprintf$1901+2)^(0+128)
  2671  023E  0871               	movf	?__tdiv_to_l_+1,w
  2672  023F  00A1               	movwf	(_sprintf$1901+1)^(0+128)
  2673  0240  0870               	movf	?__tdiv_to_l_,w
  2674  0241  00A0               	movwf	_sprintf$1901^(0+128)
  2675  0242  0823               	movf	(_sprintf$1901+3)^(0+128),w
  2676  0243  00AB               	movwf	(sprintf@_val+3)^(0+128)
  2677  0244  0822               	movf	(_sprintf$1901+2)^(0+128),w
  2678  0245  00AA               	movwf	(sprintf@_val+2)^(0+128)
  2679  0246  0821               	movf	(_sprintf$1901+1)^(0+128),w
  2680  0247  00A9               	movwf	(sprintf@_val+1)^(0+128)
  2681  0248  0820               	movf	_sprintf$1901^(0+128),w
  2682  0249  00A8               	movwf	sprintf@_val^(0+128)
  2683  024A  01B3               	clrf	sprintf@fval^(0+128)
  2684  024B  01B4               	clrf	(sprintf@fval+1)^(0+128)
  2685  024C  01B5               	clrf	(sprintf@fval+2)^(0+128)
  2686  024D  2A89               	goto	l5531
  2687  024E                     l5527:	
  2688  024E  27E7               	call	PL33	;select bank 1
  2689  024F  0833               	movf	sprintf@fval^(0+128),w
  2690  0250  2784  120A  118A   	fcall	PL12	;call to abstracted procedure
  2691  0253  2509  120A  118A   	fcall	___fttol
  2692  0256  275E  120A  118A   	fcall	PL5	;call to abstracted procedure
  2693  0259  1683               	bsf	3,5	;RP0=1, select bank1
  2694  025A  00A8               	movwf	sprintf@_val^(0+128)
  2695  025B  082B               	movf	(sprintf@_val+3)^(0+128),w
  2696  025C  00FB               	movwf	?___lltoft+3
  2697  025D  082A               	movf	(sprintf@_val+2)^(0+128),w
  2698  025E  00FA               	movwf	?___lltoft+2
  2699  025F  0829               	movf	(sprintf@_val+1)^(0+128),w
  2700  0260  00F9               	movwf	?___lltoft+1
  2701  0261  0828               	movf	sprintf@_val^(0+128),w
  2702  0262  00F8               	movwf	?___lltoft
  2703  0263  272C  120A  118A   	fcall	___lltoft
  2704  0266  0878               	movf	?___lltoft,w
  2705  0267  1283               	bcf	3,5	;RP0=0, select bank0
  2706  0268  00C8               	movwf	?___ftsub
  2707  0269  0879               	movf	?___lltoft+1,w
  2708  026A  00C9               	movwf	?___ftsub+1
  2709  026B  087A               	movf	?___lltoft+2,w
  2710  026C  00CA               	movwf	?___ftsub+2
  2711  026D  1683               	bsf	3,5	;RP0=1, select bank1
  2712  026E  0833               	movf	sprintf@fval^(0+128),w
  2713  026F  1283               	bcf	3,5	;RP0=0, select bank0
  2714  0270  00CB               	movwf	?___ftsub+3
  2715  0271  1683               	bsf	3,5	;RP0=1, select bank1
  2716  0272  0834               	movf	(sprintf@fval+1)^(0+128),w
  2717  0273  1283               	bcf	3,5	;RP0=0, select bank0
  2718  0274  00CC               	movwf	?___ftsub+4
  2719  0275  1683               	bsf	3,5	;RP0=1, select bank1
  2720  0276  0835               	movf	(sprintf@fval+2)^(0+128),w
  2721  0277  1283               	bcf	3,5	;RP0=0, select bank0
  2722  0278  00CD               	movwf	?___ftsub+5
  2723  0279  27EA  120A  118A   	fcall	___ftsub
  2724  027C  0848               	movf	?___ftsub,w
  2725  027D  1683               	bsf	3,5	;RP0=1, select bank1
  2726  027E  00B3               	movwf	sprintf@fval^(0+128)
  2727  027F  1283               	bcf	3,5	;RP0=0, select bank0
  2728  0280  0849               	movf	?___ftsub+1,w
  2729  0281  1683               	bsf	3,5	;RP0=1, select bank1
  2730  0282  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2731  0283  1283               	bcf	3,5	;RP0=0, select bank0
  2732  0284  084A               	movf	?___ftsub+2,w
  2733  0285  1683               	bsf	3,5	;RP0=1, select bank1
  2734  0286  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2735  0287  01B0               	clrf	sprintf@exp^(0+128)
  2736  0288  01B1               	clrf	(sprintf@exp+1)^(0+128)
  2737  0289                     l5531:	
  2738  0289  01B8               	clrf	sprintf@c^(0+128)
  2739  028A  0AB8               	incf	sprintf@c^(0+128),f
  2740  028B                     l5537:	
  2741  028B  274C               	fcall	PL3	;call to abstracted procedure
  2742  028C  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2743  0291  00D7               	movwf	??_sprintf+1
  2744  0292  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2745  0297  00D8               	movwf	??_sprintf+2
  2746  0298  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2747  029D  00D9               	movwf	??_sprintf+3
  2748  029E  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2749  02A3  00DA               	movwf	??_sprintf+4
  2750  02A4  1683               	bsf	3,5	;RP0=1, select bank1
  2751  02A5  022B               	subwf	(sprintf@_val+3)^(0+128),w
  2752  02A6  1D03               	skipz
  2753  02A7  2AB8               	goto	u2905
  2754  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  2755  02A9  0859               	movf	??_sprintf+3,w
  2756  02AA  1683               	bsf	3,5	;RP0=1, select bank1
  2757  02AB  022A               	subwf	(sprintf@_val+2)^(0+128),w
  2758  02AC  1D03               	skipz
  2759  02AD  2AB8               	goto	u2905
  2760  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  2761  02AF  0858               	movf	??_sprintf+2,w
  2762  02B0  1683               	bsf	3,5	;RP0=1, select bank1
  2763  02B1  0229               	subwf	(sprintf@_val+1)^(0+128),w
  2764  02B2  1D03               	skipz
  2765  02B3  2AB8               	goto	u2905
  2766  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  2767  02B5  0857               	movf	??_sprintf+1,w
  2768  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  2769  02B7  0228               	subwf	sprintf@_val^(0+128),w
  2770  02B8                     u2905:	
  2771  02B8  1C03               	btfss	3,0
  2772  02B9  2ABF               	goto	l5545
  2773  02BA  0AB8               	incf	sprintf@c^(0+128),f
  2774  02BB  0838               	movf	sprintf@c^(0+128),w
  2775  02BC  3A0A               	xorlw	10
  2776  02BD  1D03               	skipz
  2777  02BE  2A8B               	goto	l5537
  2778  02BF                     l5545:	
  2779  02BF  0836               	movf	sprintf@prec^(0+128),w
  2780  02C0  0738               	addwf	sprintf@c^(0+128),w
  2781  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  2782  02C2  00D6               	movwf	??_sprintf
  2783  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  2784  02C4  0837               	movf	(sprintf@prec+1)^(0+128),w
  2785  02C5  1803               	skipnc
  2786  02C6  0A37               	incf	(sprintf@prec+1)^(0+128),w
  2787  02C7  1BB8               	btfsc	sprintf@c^(0+128),7
  2788  02C8  3EFF               	addlw	255
  2789  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  2790  02CA  00D7               	movwf	??_sprintf+1
  2791  02CB  1683               	bsf	3,5	;RP0=1, select bank1
  2792  02CC  0830               	movf	sprintf@exp^(0+128),w
  2793  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  2794  02CE  0756               	addwf	??_sprintf,w
  2795  02CF  00D8               	movwf	??_sprintf+2
  2796  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  2797  02D1  0831               	movf	(sprintf@exp+1)^(0+128),w
  2798  02D2  1803               	skipnc
  2799  02D3  0A31               	incf	(sprintf@exp+1)^(0+128),w
  2800  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  2801  02D5  0757               	addwf	??_sprintf+1,w
  2802  02D6  00D9               	movwf	??_sprintf+3
  2803  02D7  0858               	movf	??_sprintf+2,w
  2804  02D8  1683               	bsf	3,5	;RP0=1, select bank1
  2805  02D9  02AE               	subwf	sprintf@width^(0+128),f
  2806  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  2807  02DB  0859               	movf	??_sprintf+3,w
  2808  02DC  1683               	bsf	3,5	;RP0=1, select bank1
  2809  02DD  1C03               	skipc
  2810  02DE  03AF               	decf	(sprintf@width+1)^(0+128),f
  2811  02DF  02AF               	subwf	(sprintf@width+1)^(0+128),f
  2812  02E0  0837               	movf	(sprintf@prec+1)^(0+128),w
  2813  02E1  0436               	iorwf	sprintf@prec^(0+128),w
  2814  02E2  1903               	skipnz
  2815  02E3  2AE8               	goto	l5551
  2816  02E4  30FF               	movlw	-1
  2817  02E5  07AE               	addwf	sprintf@width^(0+128),f
  2818  02E6  1C03               	skipc
  2819  02E7  03AF               	decf	(sprintf@width+1)^(0+128),f
  2820  02E8                     l5551:	
  2821  02E8  082C               	movf	sprintf@flag^(0+128),w
  2822  02E9  3903               	andlw	3
  2823  02EA  1D03               	btfss	3,2
  2824  02EB  2AFE               	goto	l5553
  2825  02EC                     l5561:	
  2826  02EC  082F               	movf	(sprintf@width+1)^(0+128),w
  2827  02ED  3A80               	xorlw	128
  2828  02EE  00FF               	movwf	127
  2829  02EF  3080               	movlw	128
  2830  02F0  027F               	subwf	127,w
  2831  02F1  1D03               	skipz
  2832  02F2  2AF5               	goto	u2945
  2833  02F3  3001               	movlw	1
  2834  02F4  022E               	subwf	sprintf@width^(0+128),w
  2835  02F5                     u2945:	
  2836  02F5  1C03               	btfss	3,0
  2837  02F6  2B03               	goto	l5563
  2838  02F7  27E7               	call	PL33	;select bank 1
  2839  02F8  0832               	movf	sprintf@sp^(0+128),w
  2840  02F9  0084               	movwf	4
  2841  02FA  3020               	movlw	32
  2842  02FB  1383               	bcf	3,7	;select IRP bank0
  2843  02FC  0080               	movwf	0
  2844  02FD  0AB2               	incf	sprintf@sp^(0+128),f
  2845  02FE                     l5553:	
  2846  02FE  30FF               	movlw	-1
  2847  02FF  07AE               	addwf	sprintf@width^(0+128),f
  2848  0300  1C03               	skipc
  2849  0301  03AF               	decf	(sprintf@width+1)^(0+128),f
  2850  0302  2AEC               	goto	l5561
  2851  0303                     l5563:	
  2852  0303  27E7               	call	PL33	;select bank 1
  2853  0304  082C               	movf	sprintf@flag^(0+128),w
  2854  0305  3903               	andlw	3
  2855  0306  1903               	btfsc	3,2
  2856  0307  2B3A               	goto	l5573
  2857  0308  0832               	movf	sprintf@sp^(0+128),w
  2858  0309  0084               	movwf	4
  2859  030A  302D               	movlw	45
  2860  030B  2B36               	goto	L5
  2861  030C                     l5569:	
  2862  030C  2756  120A  118A   	fcall	PL4	;call to abstracted procedure
  2863  030F  274C               	fcall	PL3	;call to abstracted procedure
  2864  0310  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2865  0315  00F0               	movwf	?___lldiv
  2866  0316  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2867  031B  00F1               	movwf	?___lldiv+1
  2868  031C  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2869  0321  00F2               	movwf	?___lldiv+2
  2870  0322  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2871  0327  279A  120A  118A   	fcall	PL14	;call to abstracted procedure
  2872  032A  25A2  120A  118A   	fcall	___lldiv
  2873  032D  27A5  120A  118A   	fcall	PL17	;call to abstracted procedure
  2874  0330  2564  120A  118A   	fcall	___llmod
  2875  0333  27B9  120A  118A   	fcall	PL20	;call to abstracted procedure
  2876  0336                     L5:	
  2877  0336  1383               	bcf	3,7	;select IRP bank0
  2878  0337  0080               	movwf	0
  2879  0338  1683               	bsf	3,5	;RP0=1, select bank1
  2880  0339  0AB2               	incf	sprintf@sp^(0+128),f
  2881  033A                     l5573:	
  2882  033A  03B8               	decf	sprintf@c^(0+128),f
  2883  033B  0F38               	incfsz	sprintf@c^(0+128),w
  2884  033C  2B0C               	goto	l5569
  2885  033D                     l5581:	
  2886  033D  0831               	movf	(sprintf@exp+1)^(0+128),w
  2887  033E  3A80               	xorlw	128
  2888  033F  00FF               	movwf	127
  2889  0340  3080               	movlw	128
  2890  0341  027F               	subwf	127,w
  2891  0342  1D03               	skipz
  2892  0343  2B46               	goto	u2975
  2893  0344  3001               	movlw	1
  2894  0345  0230               	subwf	sprintf@exp^(0+128),w
  2895  0346                     u2975:	
  2896  0346  1C03               	btfss	3,0
  2897  0347  2B51               	goto	l5583
  2898  0348  27E7               	call	PL33	;select bank 1
  2899  0349  0832               	movf	sprintf@sp^(0+128),w
  2900  034A  27E0  120A  118A   	fcall	PL32	;call to abstracted procedure
  2901  034D  07B0               	addwf	sprintf@exp^(0+128),f
  2902  034E  1C03               	skipc
  2903  034F  03B1               	decf	(sprintf@exp+1)^(0+128),f
  2904  0350  2B3D               	goto	l5581
  2905  0351                     l5583:	
  2906  0351  27E7               	call	PL33	;select bank 1
  2907  0352  0837               	movf	(sprintf@prec+1)^(0+128),w
  2908  0353  3A80               	xorlw	128
  2909  0354  00FF               	movwf	127
  2910  0355  3080               	movlw	128
  2911  0356  027F               	subwf	127,w
  2912  0357  1D03               	skipz
  2913  0358  2B5B               	goto	u2985
  2914  0359  3009               	movlw	9
  2915  035A  0236               	subwf	sprintf@prec^(0+128),w
  2916  035B                     u2985:	
  2917  035B  1C03               	skipc
  2918  035C  2B60               	goto	l5587
  2919  035D  3008               	movlw	8
  2920  035E  27E7               	call	PL33	;select bank 1
  2921  035F  2B62               	goto	L2
  2922  0360                     l5587:	
  2923  0360  27E7               	call	PL33	;select bank 1
  2924  0361  0836               	movf	sprintf@prec^(0+128),w
  2925  0362                     L2:	
  2926  0362  00B8               	movwf	sprintf@c^(0+128)
  2927  0363  1283               	bcf	3,5	;RP0=0, select bank0
  2928  0364  00D6               	movwf	??_sprintf
  2929  0365  01D7               	clrf	??_sprintf+1
  2930  0366  1BD6               	btfsc	??_sprintf,7
  2931  0367  03D7               	decf	??_sprintf+1,f
  2932  0368  1683               	bsf	3,5	;RP0=1, select bank1
  2933  0369  02B6               	subwf	sprintf@prec^(0+128),f
  2934  036A  1283               	bcf	3,5	;RP0=0, select bank0
  2935  036B  0857               	movf	??_sprintf+1,w
  2936  036C  1683               	bsf	3,5	;RP0=1, select bank1
  2937  036D  1C03               	skipc
  2938  036E  03B7               	decf	(sprintf@prec+1)^(0+128),f
  2939  036F  02B7               	subwf	(sprintf@prec+1)^(0+128),f
  2940  0370  0838               	movf	sprintf@c^(0+128),w
  2941  0371  1903               	btfsc	3,2
  2942  0372  2B79               	goto	l5593
  2943  0373  0832               	movf	sprintf@sp^(0+128),w
  2944  0374  0084               	movwf	4
  2945  0375  302E               	movlw	46
  2946  0376  1383               	bcf	3,7	;select IRP bank0
  2947  0377  0080               	movwf	0
  2948  0378  0AB2               	incf	sprintf@sp^(0+128),f
  2949  0379                     l5593:	
  2950  0379  0838               	movf	sprintf@c^(0+128),w
  2951  037A  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  2952  037F  083C               	movf	?_scale,w
  2953  0380  00B0               	movwf	?___ftmul+3
  2954  0381  083D               	movf	?_scale+1,w
  2955  0382  00B1               	movwf	?___ftmul+4
  2956  0383  083E               	movf	?_scale+2,w
  2957  0384  00B2               	movwf	?___ftmul+5
  2958  0385  1683               	bsf	3,5	;RP0=1, select bank1
  2959  0386  0833               	movf	sprintf@fval^(0+128),w
  2960  0387  278F               	fcall	PL13	;call to abstracted procedure
  2961  0388  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2962  038D  082D               	movf	?___ftmul,w
  2963  038E  00A0               	movwf	?___fttol
  2964  038F  082E               	movf	?___ftmul+1,w
  2965  0390  00A1               	movwf	?___fttol+1
  2966  0391  082F               	movf	?___ftmul+2,w
  2967  0392  00A2               	movwf	?___fttol+2
  2968  0393  2509  120A  118A   	fcall	___fttol
  2969  0396  275E  120A  118A   	fcall	PL5	;call to abstracted procedure
  2970  0399  2C01               	goto	L3
  2971  039A                     l5595:	
  2972  039A  2756  120A  118A   	fcall	PL4	;call to abstracted procedure
  2973  039D  274C               	fcall	PL3	;call to abstracted procedure
  2974  039E  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2975  03A3  00F0               	movwf	?___lldiv
  2976  03A4  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2977  03A9  00F1               	movwf	?___lldiv+1
  2978  03AA  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2979  03AF  00F2               	movwf	?___lldiv+2
  2980  03B0  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2981  03B5  279A  120A  118A   	fcall	PL14	;call to abstracted procedure
  2982  03B8  25A2  120A  118A   	fcall	___lldiv
  2983  03BB  27A5  120A  118A   	fcall	PL17	;call to abstracted procedure
  2984  03BE  2564  120A  118A   	fcall	___llmod
  2985  03C1  27B9  120A  118A   	fcall	PL20	;call to abstracted procedure
  2986  03C4  1383               	bcf	3,7	;select IRP bank0
  2987  03C5  0080               	movwf	0
  2988  03C6  1683               	bsf	3,5	;RP0=1, select bank1
  2989  03C7  0AB2               	incf	sprintf@sp^(0+128),f
  2990  03C8  274C               	fcall	PL3	;call to abstracted procedure
  2991  03C9  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2992  03CE  00A0               	movwf	?___llmod
  2993  03CF  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2994  03D4  00A1               	movwf	?___llmod+1
  2995  03D5  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2996  03DA  00A2               	movwf	?___llmod+2
  2997  03DB  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2998  03E0  00A3               	movwf	?___llmod+3
  2999  03E1  1683               	bsf	3,5	;RP0=1, select bank1
  3000  03E2  082B               	movf	(sprintf@_val+3)^(0+128),w
  3001  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  3002  03E4  00A7               	movwf	?___llmod+7
  3003  03E5  1683               	bsf	3,5	;RP0=1, select bank1
  3004  03E6  082A               	movf	(sprintf@_val+2)^(0+128),w
  3005  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  3006  03E8  00A6               	movwf	?___llmod+6
  3007  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  3008  03EA  0829               	movf	(sprintf@_val+1)^(0+128),w
  3009  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  3010  03EC  00A5               	movwf	?___llmod+5
  3011  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  3012  03EE  0828               	movf	sprintf@_val^(0+128),w
  3013  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  3014  03F0  00A4               	movwf	?___llmod+4
  3015  03F1  2564  120A  118A   	fcall	___llmod
  3016  03F4  0823               	movf	?___llmod+3,w
  3017  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  3018  03F6  00AB               	movwf	(sprintf@_val+3)^(0+128)
  3019  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  3020  03F8  0822               	movf	?___llmod+2,w
  3021  03F9  1683               	bsf	3,5	;RP0=1, select bank1
  3022  03FA  00AA               	movwf	(sprintf@_val+2)^(0+128)
  3023  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  3024  03FC  0821               	movf	?___llmod+1,w
  3025  03FD  1683               	bsf	3,5	;RP0=1, select bank1
  3026  03FE  00A9               	movwf	(sprintf@_val+1)^(0+128)
  3027  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  3028  0400  0820               	movf	?___llmod,w
  3029  0401                     L3:	
  3030  0401  1683               	bsf	3,5	;RP0=1, select bank1
  3031  0402  00A8               	movwf	sprintf@_val^(0+128)
  3032  0403  03B8               	decf	sprintf@c^(0+128),f
  3033  0404  0F38               	incfsz	sprintf@c^(0+128),w
  3034  0405  2B9A               	goto	l5595
  3035  0406                     l5609:	
  3036  0406  0837               	movf	(sprintf@prec+1)^(0+128),w
  3037  0407  0436               	iorwf	sprintf@prec^(0+128),w
  3038  0408  1903               	btfsc	3,2
  3039  0409  2839               	goto	l5659
  3040  040A  0832               	movf	sprintf@sp^(0+128),w
  3041  040B  27E0  120A  118A   	fcall	PL32	;call to abstracted procedure
  3042  040E  07B6               	addwf	sprintf@prec^(0+128),f
  3043  040F  1C03               	skipc
  3044  0410  03B7               	decf	(sprintf@prec+1)^(0+128),f
  3045  0411  2C06               	goto	l5609
  3046  0412                     l5611:	
  3047  0412  1683               	bsf	3,5	;RP0=1, select bank1
  3048  0413  0837               	movf	(sprintf@prec+1)^(0+128),w
  3049  0414  0436               	iorwf	sprintf@prec^(0+128),w
  3050  0415  1D03               	skipz
  3051  0416  2C1F               	goto	l5617
  3052  0417  082B               	movf	(sprintf@_val+3)^(0+128),w
  3053  0418  042A               	iorwf	(sprintf@_val+2)^(0+128),w
  3054  0419  0429               	iorwf	(sprintf@_val+1)^(0+128),w
  3055  041A  0428               	iorwf	sprintf@_val^(0+128),w
  3056  041B  1903               	btfsc	3,2
  3057  041C  0AB6               	incf	sprintf@prec^(0+128),f
  3058  041D  1903               	skipnz
  3059  041E  0AB7               	incf	(sprintf@prec+1)^(0+128),f
  3060  041F                     l5617:	
  3061  041F  0838               	movf	sprintf@c^(0+128),w
  3062  0420  27AF  120A  118A   	fcall	PL19	;call to abstracted procedure
  3063  0423  0837               	movf	(sprintf@prec+1)^(0+128),w
  3064  0424  3A80               	xorlw	128
  3065  0425  1283               	bcf	3,5	;RP0=0, select bank0
  3066  0426  0258               	subwf	??_sprintf+2,w
  3067  0427  1D03               	skipz
  3068  0428  2C2D               	goto	u3045
  3069  0429  1683               	bsf	3,5	;RP0=1, select bank1
  3070  042A  0836               	movf	sprintf@prec^(0+128),w
  3071  042B  1283               	bcf	3,5	;RP0=0, select bank0
  3072  042C  0256               	subwf	??_sprintf,w
  3073  042D                     u3045:	
  3074  042D  1803               	skipnc
  3075  042E  2C33               	goto	l5621
  3076  042F  27E7               	call	PL33	;select bank 1
  3077  0430  0836               	movf	sprintf@prec^(0+128),w
  3078  0431  00B8               	movwf	sprintf@c^(0+128)
  3079  0432  2C4B               	goto	l5625
  3080  0433                     l5621:	
  3081  0433  1683               	bsf	3,5	;RP0=1, select bank1
  3082  0434  27C2  120A  118A   	fcall	PL21	;call to abstracted procedure
  3083  0437  0837               	movf	(sprintf@prec+1)^(0+128),w
  3084  0438  3A80               	xorlw	128
  3085  0439  1283               	bcf	3,5	;RP0=0, select bank0
  3086  043A  00D8               	movwf	??_sprintf+2
  3087  043B  0857               	movf	??_sprintf+1,w
  3088  043C  3A80               	xorlw	128
  3089  043D  0258               	subwf	??_sprintf+2,w
  3090  043E  1D03               	skipz
  3091  043F  2C43               	goto	u3055
  3092  0440  0856               	movf	??_sprintf,w
  3093  0441  1683               	bsf	3,5	;RP0=1, select bank1
  3094  0442  0236               	subwf	sprintf@prec^(0+128),w
  3095  0443                     u3055:	
  3096  0443  1803               	skipnc
  3097  0444  2C4B               	goto	l5625
  3098  0445  27E7               	call	PL33	;select bank 1
  3099  0446  0838               	movf	sprintf@c^(0+128),w
  3100  0447  00B6               	movwf	sprintf@prec^(0+128)
  3101  0448  01B7               	clrf	(sprintf@prec+1)^(0+128)
  3102  0449  1BB6               	btfsc	sprintf@prec^(0+128),7
  3103  044A  03B7               	decf	(sprintf@prec+1)^(0+128),f
  3104  044B                     l5625:	
  3105  044B  27E7               	call	PL33	;select bank 1
  3106  044C  082F               	movf	(sprintf@width+1)^(0+128),w
  3107  044D  042E               	iorwf	sprintf@width^(0+128),w
  3108  044E  1903               	skipnz
  3109  044F  2C58               	goto	l5631
  3110  0450  082C               	movf	sprintf@flag^(0+128),w
  3111  0451  3903               	andlw	3
  3112  0452  1903               	btfsc	3,2
  3113  0453  2C58               	goto	l5631
  3114  0454  30FF               	movlw	-1
  3115  0455  07AE               	addwf	sprintf@width^(0+128),f
  3116  0456  1C03               	skipc
  3117  0457  03AF               	decf	(sprintf@width+1)^(0+128),f
  3118  0458                     l5631:	
  3119  0458  1F2D               	btfss	(sprintf@flag+1)^(0+128),6
  3120  0459  2C75               	goto	l5639
  3121  045A  0837               	movf	(sprintf@prec+1)^(0+128),w
  3122  045B  3A80               	xorlw	128
  3123  045C  1283               	bcf	3,5	;RP0=0, select bank0
  3124  045D  00D6               	movwf	??_sprintf
  3125  045E  1683               	bsf	3,5	;RP0=1, select bank1
  3126  045F  082F               	movf	(sprintf@width+1)^(0+128),w
  3127  0460  3A80               	xorlw	128
  3128  0461  1283               	bcf	3,5	;RP0=0, select bank0
  3129  0462  0256               	subwf	??_sprintf,w
  3130  0463  1D03               	skipz
  3131  0464  2C68               	goto	u3095
  3132  0465  1683               	bsf	3,5	;RP0=1, select bank1
  3133  0466  082E               	movf	sprintf@width^(0+128),w
  3134  0467  0236               	subwf	sprintf@prec^(0+128),w
  3135  0468                     u3095:	
  3136  0468  1803               	skipnc
  3137  0469  2C72               	goto	l5637
  3138  046A  27E7               	call	PL33	;select bank 1
  3139  046B  0836               	movf	sprintf@prec^(0+128),w
  3140  046C  02AE               	subwf	sprintf@width^(0+128),f
  3141  046D  0837               	movf	(sprintf@prec+1)^(0+128),w
  3142  046E  1C03               	skipc
  3143  046F  03AF               	decf	(sprintf@width+1)^(0+128),f
  3144  0470  02AF               	subwf	(sprintf@width+1)^(0+128),f
  3145  0471  2C75               	goto	l5639
  3146  0472                     l5637:	
  3147  0472  27E7               	call	PL33	;select bank 1
  3148  0473  01AE               	clrf	sprintf@width^(0+128)
  3149  0474  01AF               	clrf	(sprintf@width+1)^(0+128)
  3150  0475                     l5639:	
  3151  0475  0838               	movf	sprintf@c^(0+128),w
  3152  0476  27AF  120A  118A   	fcall	PL19	;call to abstracted procedure
  3153  0479  082F               	movf	(sprintf@width+1)^(0+128),w
  3154  047A  3A80               	xorlw	128
  3155  047B  1283               	bcf	3,5	;RP0=0, select bank0
  3156  047C  0258               	subwf	??_sprintf+2,w
  3157  047D  1D03               	skipz
  3158  047E  2C83               	goto	u3105
  3159  047F  1683               	bsf	3,5	;RP0=1, select bank1
  3160  0480  082E               	movf	sprintf@width^(0+128),w
  3161  0481  1283               	bcf	3,5	;RP0=0, select bank0
  3162  0482  0256               	subwf	??_sprintf,w
  3163  0483                     u3105:	
  3164  0483  1803               	skipnc
  3165  0484  2C91               	goto	l5643
  3166  0485  1683               	bsf	3,5	;RP0=1, select bank1
  3167  0486  27C2  120A  118A   	fcall	PL21	;call to abstracted procedure
  3168  0489  02AE               	subwf	sprintf@width^(0+128),f
  3169  048A  1283               	bcf	3,5	;RP0=0, select bank0
  3170  048B  0857               	movf	??_sprintf+1,w
  3171  048C  1683               	bsf	3,5	;RP0=1, select bank1
  3172  048D  1C03               	skipc
  3173  048E  03AF               	decf	(sprintf@width+1)^(0+128),f
  3174  048F  02AF               	subwf	(sprintf@width+1)^(0+128),f
  3175  0490  2C94               	goto	l5645
  3176  0491                     l5643:	
  3177  0491  27E7               	call	PL33	;select bank 1
  3178  0492  01AE               	clrf	sprintf@width^(0+128)
  3179  0493  01AF               	clrf	(sprintf@width+1)^(0+128)
  3180  0494                     l5645:	
  3181  0494  082F               	movf	(sprintf@width+1)^(0+128),w
  3182  0495  042E               	iorwf	sprintf@width^(0+128),w
  3183  0496  1903               	skipnz
  3184  0497  2CA6               	goto	l5653
  3185  0498                     l5647:	
  3186  0498  0832               	movf	sprintf@sp^(0+128),w
  3187  0499  0084               	movwf	4
  3188  049A  3020               	movlw	32
  3189  049B  1383               	bcf	3,7	;select IRP bank0
  3190  049C  0080               	movwf	0
  3191  049D  30FF               	movlw	-1
  3192  049E  0AB2               	incf	sprintf@sp^(0+128),f
  3193  049F  07AE               	addwf	sprintf@width^(0+128),f
  3194  04A0  1C03               	skipc
  3195  04A1  03AF               	decf	(sprintf@width+1)^(0+128),f
  3196  04A2  082F               	movf	(sprintf@width+1)^(0+128),w
  3197  04A3  042E               	iorwf	sprintf@width^(0+128),w
  3198  04A4  1D03               	skipz
  3199  04A5  2C98               	goto	l5647
  3200  04A6                     l5653:	
  3201  04A6  082C               	movf	sprintf@flag^(0+128),w
  3202  04A7  3903               	andlw	3
  3203  04A8  1903               	btfsc	3,2
  3204  04A9  2839               	goto	l5659
  3205  04AA  0832               	movf	sprintf@sp^(0+128),w
  3206  04AB  0084               	movwf	4
  3207  04AC  302D               	movlw	45
  3208  04AD                     L4:	
  3209  04AD  1383               	bcf	3,7	;select IRP bank0
  3210  04AE  0080               	movwf	0
  3211  04AF  0AB2               	incf	sprintf@sp^(0+128),f
  3212  04B0  2839               	goto	l5659
  3213  04B1                     l5661:	
  3214  04B1  0832               	movf	sprintf@sp^(0+128),w
  3215  04B2  0084               	movwf	4
  3216  04B3  1383               	bcf	3,7	;select IRP bank0
  3217  04B4  0180               	clrf	0
  3218  04B5  0008               	return
  3219  04B6                     __end_of_sprintf:	
  3220  04B6                     __ptext537:	
  3221 ;; =============== function ___lldiv ends ============
  3222                           
  3223                           
  3224 ;; *************** function ___ftge *****************
  3225 ;; Defined at:
  3226 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftge.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;  ff1             3    0[COMMON] float 
  3229 ;;  ff2             3    3[COMMON] float 
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;		None
  3232 ;; Return value:  Size  Location     Type
  3233 ;;		None               void
  3234 ;; Registers used:
  3235 ;;		wreg, status,2, status,0
  3236 ;; Tracked objects:
  3237 ;;		On entry : 60/20
  3238 ;;		On exit  : 60/20
  3239 ;;		Unchanged: FFF9F/0
  3240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3241 ;;      Params:         6       0       0       0       0
  3242 ;;      Locals:         0       0       0       0       0
  3243 ;;      Temps:          0       0       0       0       0
  3244 ;;      Totals:         6       0       0       0       0
  3245 ;;Total ram usage:        6 bytes
  3246 ;; Hardware stack levels used:    1
  3247 ;; This function calls:
  3248 ;;		Nothing
  3249 ;; This function is called by:
  3250 ;;		_sprintf
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253  04B6                     ___ftge:	
  3254                           
  3255                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3256  04B6  1FF2               	btfss	___ftge@ff1+2,7
  3257  04B7  2CC5               	goto	l5081
  3258  04B8  0870               	movf	___ftge@ff1,w
  3259  04B9  3C00               	sublw	0
  3260  04BA  00F0               	movwf	___ftge@ff1
  3261  04BB  0871               	movf	___ftge@ff1+1,w
  3262  04BC  1C03               	skipc
  3263  04BD  0F71               	incfsz	___ftge@ff1+1,w
  3264  04BE  3C00               	sublw	0
  3265  04BF  00F1               	movwf	___ftge@ff1+1
  3266  04C0  0872               	movf	___ftge@ff1+2,w
  3267  04C1  1C03               	skipc
  3268  04C2  0F72               	incfsz	___ftge@ff1+2,w
  3269  04C3  3C80               	sublw	128
  3270  04C4  00F2               	movwf	___ftge@ff1+2
  3271  04C5                     l5081:	
  3272  04C5  1FF5               	btfss	___ftge@ff2+2,7
  3273  04C6  2CD4               	goto	l5085
  3274  04C7  0873               	movf	___ftge@ff2,w
  3275  04C8  3C00               	sublw	0
  3276  04C9  00F3               	movwf	___ftge@ff2
  3277  04CA  0874               	movf	___ftge@ff2+1,w
  3278  04CB  1C03               	skipc
  3279  04CC  0F74               	incfsz	___ftge@ff2+1,w
  3280  04CD  3C00               	sublw	0
  3281  04CE  00F4               	movwf	___ftge@ff2+1
  3282  04CF  0875               	movf	___ftge@ff2+2,w
  3283  04D0  1C03               	skipc
  3284  04D1  0F75               	incfsz	___ftge@ff2+2,w
  3285  04D2  3C80               	sublw	128
  3286  04D3  00F5               	movwf	___ftge@ff2+2
  3287  04D4                     l5085:	
  3288  04D4  3080               	movlw	128
  3289  04D5  06F2               	xorwf	___ftge@ff1+2,f
  3290  04D6  06F5               	xorwf	___ftge@ff2+2,f
  3291  04D7  0875               	movf	___ftge@ff2+2,w
  3292  04D8  0272               	subwf	___ftge@ff1+2,w
  3293  04D9  1D03               	skipz
  3294  04DA  0008               	return
  3295  04DB  0874               	movf	___ftge@ff2+1,w
  3296  04DC  0271               	subwf	___ftge@ff1+1,w
  3297  04DD  1D03               	skipz
  3298  04DE  0008               	return
  3299  04DF  0873               	movf	___ftge@ff2,w
  3300  04E0  0270               	subwf	___ftge@ff1,w
  3301  04E1  0008               	return
  3302  04E2                     __end_of___ftge:	
  3303  04E2                     __ptext549:	
  3304 ;; =============== function __tdiv_to_l_ ends ============
  3305                           
  3306                           
  3307 ;; *************** function _isdigit *****************
  3308 ;; Defined at:
  3309 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\isdigit.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;  c               1    wreg     unsigned char 
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;  c               1    1[COMMON] unsigned char 
  3314 ;; Return value:  Size  Location     Type
  3315 ;;		None               void
  3316 ;; Registers used:
  3317 ;;		wreg, status,2, status,0
  3318 ;; Tracked objects:
  3319 ;;		On entry : 60/0
  3320 ;;		On exit  : 60/0
  3321 ;;		Unchanged: FFF9F/0
  3322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3323 ;;      Params:         0       0       0       0       0
  3324 ;;      Locals:         2       0       0       0       0
  3325 ;;      Temps:          0       0       0       0       0
  3326 ;;      Totals:         2       0       0       0       0
  3327 ;;Total ram usage:        2 bytes
  3328 ;; Hardware stack levels used:    1
  3329 ;; This function calls:
  3330 ;;		Nothing
  3331 ;; This function is called by:
  3332 ;;		_sprintf
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335  04E2                     _isdigit:	
  3336                           
  3337                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3338                           ;isdigit@c stored from wreg
  3339  04E2  00F1               	movwf	isdigit@c
  3340  04E3  303A               	movlw	58
  3341  04E4  01F0               	clrf	_isdigit$2409
  3342  04E5  0271               	subwf	isdigit@c,w
  3343  04E6  1803               	skipnc
  3344  04E7  2CEE               	goto	l4767
  3345  04E8  3030               	movlw	48
  3346  04E9  0271               	subwf	isdigit@c,w
  3347  04EA  1C03               	skipc
  3348  04EB  2CEE               	goto	l4767
  3349  04EC  01F0               	clrf	_isdigit$2409
  3350  04ED  0AF0               	incf	_isdigit$2409,f
  3351  04EE                     l4767:	
  3352  04EE  0C70               	rrf	_isdigit$2409,w
  3353  04EF  0008               	return
  3354  04F0                     __end_of_isdigit:	
  3355  04F0                     __ptext545:	
  3356 ;; =============== function ___lbdiv ends ============
  3357                           
  3358                           
  3359 ;; *************** function ___wmul *****************
  3360 ;; Defined at:
  3361 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\wmul.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;  multiplier      2    0[COMMON] unsigned int 
  3364 ;;  multiplicand    2    2[COMMON] unsigned int 
  3365 ;; Auto vars:     Size  Location     Type
  3366 ;;  product         2    4[COMMON] unsigned int 
  3367 ;; Return value:  Size  Location     Type
  3368 ;;                  2    0[COMMON] unsigned int 
  3369 ;; Registers used:
  3370 ;;		wreg, status,2, status,0
  3371 ;; Tracked objects:
  3372 ;;		On entry : 60/20
  3373 ;;		On exit  : 60/20
  3374 ;;		Unchanged: FFF9F/0
  3375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3376 ;;      Params:         4       0       0       0       0
  3377 ;;      Locals:         2       0       0       0       0
  3378 ;;      Temps:          0       0       0       0       0
  3379 ;;      Totals:         6       0       0       0       0
  3380 ;;Total ram usage:        6 bytes
  3381 ;; Hardware stack levels used:    1
  3382 ;; This function calls:
  3383 ;;		Nothing
  3384 ;; This function is called by:
  3385 ;;		_fround
  3386 ;;		_scale
  3387 ;;		_sprintf
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390  04F0                     ___wmul:	
  3391                           
  3392                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3393  04F0  01F4               	clrf	___wmul@product
  3394  04F1  01F5               	clrf	___wmul@product+1
  3395  04F2                     l4883:	
  3396  04F2  1C70               	btfss	___wmul@multiplier,0
  3397  04F3  2CFA               	goto	l4887
  3398  04F4  0872               	movf	___wmul@multiplicand,w
  3399  04F5  07F4               	addwf	___wmul@product,f
  3400  04F6  1803               	skipnc
  3401  04F7  0AF5               	incf	___wmul@product+1,f
  3402  04F8  0873               	movf	___wmul@multiplicand+1,w
  3403  04F9  07F5               	addwf	___wmul@product+1,f
  3404  04FA                     l4887:	
  3405  04FA  1003               	clrc
  3406  04FB  0DF2               	rlf	___wmul@multiplicand,f
  3407  04FC  0DF3               	rlf	___wmul@multiplicand+1,f
  3408  04FD  1003               	clrc
  3409  04FE  0CF1               	rrf	___wmul@multiplier+1,f
  3410  04FF  0CF0               	rrf	___wmul@multiplier,f
  3411  0500  0871               	movf	___wmul@multiplier+1,w
  3412  0501  0470               	iorwf	___wmul@multiplier,w
  3413  0502  1D03               	skipz
  3414  0503  2CF2               	goto	l4883
  3415  0504  0875               	movf	___wmul@product+1,w
  3416  0505  00F1               	movwf	?___wmul+1
  3417  0506  0874               	movf	___wmul@product,w
  3418  0507  00F0               	movwf	?___wmul
  3419  0508  0008               	return
  3420  0509                     __end_of___wmul:	
  3421  0509                     __ptext541:	
  3422 ;; =============== function ___awdiv ends ============
  3423                           
  3424                           
  3425 ;; *************** function ___fttol *****************
  3426 ;; Defined at:
  3427 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\fttol.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;  f1              3    0[BANK0 ] float 
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;  lval            4    8[BANK0 ] unsigned long 
  3432 ;;  exp1            1   12[BANK0 ] unsigned char 
  3433 ;;  sign1           1    7[BANK0 ] unsigned char 
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  4    0[BANK0 ] long 
  3436 ;; Registers used:
  3437 ;;		wreg, status,2, status,0
  3438 ;; Tracked objects:
  3439 ;;		On entry : 60/0
  3440 ;;		On exit  : 60/0
  3441 ;;		Unchanged: FFF9F/0
  3442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3443 ;;      Params:         0       4       0       0       0
  3444 ;;      Locals:         0       6       0       0       0
  3445 ;;      Temps:          0       3       0       0       0
  3446 ;;      Totals:         0      13       0       0       0
  3447 ;;Total ram usage:       13 bytes
  3448 ;; Hardware stack levels used:    1
  3449 ;; This function calls:
  3450 ;;		Nothing
  3451 ;; This function is called by:
  3452 ;;		_sprintf
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455  0509                     ___fttol:	
  3456                           
  3457                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3458  0509  27D9  120A  118A   	fcall	PL30	;call to abstracted procedure
  3459  050C  1003               	clrc
  3460  050D  0D25               	rlf	??___fttol+1,w
  3461  050E  0D26               	rlf	??___fttol+2,w
  3462  050F  00AC               	movwf	___fttol@exp1
  3463  0510  08AC               	movf	___fttol@exp1,f
  3464  0511  1D03               	skipz
  3465  0512  2D18               	goto	l4971
  3466  0513                     l4969:	
  3467  0513  01A0               	clrf	?___fttol
  3468  0514  01A1               	clrf	?___fttol+1
  3469  0515  01A2               	clrf	?___fttol+2
  3470  0516  01A3               	clrf	?___fttol+3
  3471  0517  0008               	return
  3472  0518                     l4971:	
  3473  0518  27D9  120A  118A   	fcall	PL30	;call to abstracted procedure
  3474  051B  3017               	movlw	23
  3475  051C                     u2005:	
  3476  051C  1003               	clrc
  3477  051D  0CA6               	rrf	??___fttol+2,f
  3478  051E  0CA5               	rrf	??___fttol+1,f
  3479  051F  0CA4               	rrf	??___fttol,f
  3480  0520  3EFF               	addlw	-1
  3481  0521  1D03               	skipz
  3482  0522  2D1C               	goto	u2005
  3483  0523  0824               	movf	??___fttol,w
  3484  0524  00A7               	movwf	___fttol@sign1
  3485  0525  17A1               	bsf	___fttol@f1+1,7
  3486  0526  01A2               	clrf	___fttol@f1+2
  3487  0527  0820               	movf	___fttol@f1,w
  3488  0528  00A8               	movwf	___fttol@lval
  3489  0529  0821               	movf	___fttol@f1+1,w
  3490  052A  00A9               	movwf	___fttol@lval+1
  3491  052B  0822               	movf	___fttol@f1+2,w
  3492  052C  00AA               	movwf	___fttol@lval+2
  3493  052D  308E               	movlw	142
  3494  052E  01AB               	clrf	___fttol@lval+3
  3495  052F  02AC               	subwf	___fttol@exp1,f
  3496  0530  1FAC               	btfss	___fttol@exp1,7
  3497  0531  2D3F               	goto	l4991
  3498  0532  082C               	movf	___fttol@exp1,w
  3499  0533  3A80               	xorlw	128
  3500  0534  3E8F               	addlw	143
  3501  0535  1C03               	btfss	3,0
  3502  0536  2D13               	goto	l4969
  3503  0537                     l4987:	
  3504  0537  1003               	clrc
  3505  0538  0CAB               	rrf	___fttol@lval+3,f
  3506  0539  0CAA               	rrf	___fttol@lval+2,f
  3507  053A  0CA9               	rrf	___fttol@lval+1,f
  3508  053B  0CA8               	rrf	___fttol@lval,f
  3509  053C  0FAC               	incfsz	___fttol@exp1,f
  3510  053D  2D37               	goto	l4987
  3511  053E  2D4D               	goto	l4997
  3512  053F                     l4991:	
  3513  053F  3018               	movlw	24
  3514  0540  022C               	subwf	___fttol@exp1,w
  3515  0541  1803               	btfsc	3,0
  3516  0542  2D13               	goto	l4969
  3517  0543                     l2324:	
  3518  0543  08AC               	movf	___fttol@exp1,f
  3519  0544  1903               	btfsc	3,2
  3520  0545  2D4D               	goto	l4997
  3521  0546  1003               	clrc
  3522  0547  0DA8               	rlf	___fttol@lval,f
  3523  0548  0DA9               	rlf	___fttol@lval+1,f
  3524  0549  0DAA               	rlf	___fttol@lval+2,f
  3525  054A  0DAB               	rlf	___fttol@lval+3,f
  3526  054B  03AC               	decf	___fttol@exp1,f
  3527  054C  2D43               	goto	l2324
  3528  054D                     l4997:	
  3529  054D  0827               	movf	___fttol@sign1,w
  3530  054E  1903               	btfsc	3,2
  3531  054F  2D5B               	goto	l5001
  3532  0550  09A8               	comf	___fttol@lval,f
  3533  0551  09A9               	comf	___fttol@lval+1,f
  3534  0552  09AA               	comf	___fttol@lval+2,f
  3535  0553  09AB               	comf	___fttol@lval+3,f
  3536  0554  0AA8               	incf	___fttol@lval,f
  3537  0555  1903               	skipnz
  3538  0556  0AA9               	incf	___fttol@lval+1,f
  3539  0557  1903               	skipnz
  3540  0558  0AAA               	incf	___fttol@lval+2,f
  3541  0559  1903               	skipnz
  3542  055A  0AAB               	incf	___fttol@lval+3,f
  3543  055B                     l5001:	
  3544  055B  082B               	movf	___fttol@lval+3,w
  3545  055C  00A3               	movwf	?___fttol+3
  3546  055D  082A               	movf	___fttol@lval+2,w
  3547  055E  00A2               	movwf	?___fttol+2
  3548  055F  0829               	movf	___fttol@lval+1,w
  3549  0560  00A1               	movwf	?___fttol+1
  3550  0561  0828               	movf	___fttol@lval,w
  3551  0562  00A0               	movwf	?___fttol
  3552  0563  0008               	return
  3553  0564                     __end_of___fttol:	
  3554  0564                     __ptext539:	
  3555 ;; =============== function ___ftneg ends ============
  3556                           
  3557                           
  3558 ;; *************** function ___llmod *****************
  3559 ;; Defined at:
  3560 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\llmod.c"
  3561 ;; Parameters:    Size  Location     Type
  3562 ;;  divisor         4    0[BANK0 ] unsigned long 
  3563 ;;  dividend        4    4[BANK0 ] unsigned long 
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;  counter         1   13[COMMON] unsigned char 
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  4    0[BANK0 ] unsigned long 
  3568 ;; Registers used:
  3569 ;;		wreg, status,2, status,0
  3570 ;; Tracked objects:
  3571 ;;		On entry : 60/0
  3572 ;;		On exit  : 60/0
  3573 ;;		Unchanged: FFF9F/0
  3574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3575 ;;      Params:         0       8       0       0       0
  3576 ;;      Locals:         1       0       0       0       0
  3577 ;;      Temps:          0       0       0       0       0
  3578 ;;      Totals:         1       8       0       0       0
  3579 ;;Total ram usage:        9 bytes
  3580 ;; Hardware stack levels used:    1
  3581 ;; This function calls:
  3582 ;;		Nothing
  3583 ;; This function is called by:
  3584 ;;		_sprintf
  3585 ;; This function uses a non-reentrant model
  3586 ;;
  3587  0564                     ___llmod:	
  3588                           
  3589                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3590  0564  0823               	movf	___llmod@divisor+3,w
  3591  0565  0422               	iorwf	___llmod@divisor+2,w
  3592  0566  0421               	iorwf	___llmod@divisor+1,w
  3593  0567  0420               	iorwf	___llmod@divisor,w
  3594  0568  1903               	skipnz
  3595  0569  2D99               	goto	l5065
  3596  056A  01FD               	clrf	___llmod@counter
  3597  056B                     L12:	
  3598  056B  0AFD               	incf	___llmod@counter,f
  3599  056C  1BA3               	btfsc	___llmod@divisor+3,7
  3600  056D  2D74               	goto	l5057
  3601  056E  1003               	clrc
  3602  056F  0DA0               	rlf	___llmod@divisor,f
  3603  0570  0DA1               	rlf	___llmod@divisor+1,f
  3604  0571  0DA2               	rlf	___llmod@divisor+2,f
  3605  0572  0DA3               	rlf	___llmod@divisor+3,f
  3606  0573  2D6B               	goto	L12
  3607  0574                     l5057:	
  3608  0574  0823               	movf	___llmod@divisor+3,w
  3609  0575  0227               	subwf	___llmod@dividend+3,w
  3610  0576  1D03               	skipz
  3611  0577  2D82               	goto	u2165
  3612  0578  0822               	movf	___llmod@divisor+2,w
  3613  0579  0226               	subwf	___llmod@dividend+2,w
  3614  057A  1D03               	skipz
  3615  057B  2D82               	goto	u2165
  3616  057C  0821               	movf	___llmod@divisor+1,w
  3617  057D  0225               	subwf	___llmod@dividend+1,w
  3618  057E  1D03               	skipz
  3619  057F  2D82               	goto	u2165
  3620  0580  0820               	movf	___llmod@divisor,w
  3621  0581  0224               	subwf	___llmod@dividend,w
  3622  0582                     u2165:	
  3623  0582  1C03               	skipc
  3624  0583  2D93               	goto	L13
  3625  0584  0820               	movf	___llmod@divisor,w
  3626  0585  02A4               	subwf	___llmod@dividend,f
  3627  0586  0821               	movf	___llmod@divisor+1,w
  3628  0587  1C03               	skipc
  3629  0588  0F21               	incfsz	___llmod@divisor+1,w
  3630  0589  02A5               	subwf	___llmod@dividend+1,f
  3631  058A  0822               	movf	___llmod@divisor+2,w
  3632  058B  1C03               	skipc
  3633  058C  0F22               	incfsz	___llmod@divisor+2,w
  3634  058D  02A6               	subwf	___llmod@dividend+2,f
  3635  058E  0823               	movf	___llmod@divisor+3,w
  3636  058F  1C03               	skipc
  3637  0590  0F23               	incfsz	___llmod@divisor+3,w
  3638  0591  02A7               	subwf	___llmod@dividend+3,f
  3639  0592  1003               	clrc
  3640  0593                     L13:	
  3641  0593  0CA3               	rrf	___llmod@divisor+3,f
  3642  0594  0CA2               	rrf	___llmod@divisor+2,f
  3643  0595  0CA1               	rrf	___llmod@divisor+1,f
  3644  0596  0CA0               	rrf	___llmod@divisor,f
  3645  0597  0BFD               	decfsz	___llmod@counter,f
  3646  0598  2D74               	goto	l5057
  3647  0599                     l5065:	
  3648  0599  0827               	movf	___llmod@dividend+3,w
  3649  059A  00A3               	movwf	?___llmod+3
  3650  059B  0826               	movf	___llmod@dividend+2,w
  3651  059C  00A2               	movwf	?___llmod+2
  3652  059D  0825               	movf	___llmod@dividend+1,w
  3653  059E  00A1               	movwf	?___llmod+1
  3654  059F  0824               	movf	___llmod@dividend,w
  3655  05A0  00A0               	movwf	?___llmod
  3656  05A1  0008               	return
  3657  05A2                     __end_of___llmod:	
  3658  05A2                     __ptext536:	
  3659 ;; =============== function ___awmod ends ============
  3660                           
  3661                           
  3662 ;; *************** function ___lldiv *****************
  3663 ;; Defined at:
  3664 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lldiv.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;  divisor         4    0[COMMON] unsigned long 
  3667 ;;  dividend        4    4[COMMON] unsigned long 
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;  quotient        4    8[COMMON] unsigned long 
  3670 ;;  counter         1   12[COMMON] unsigned char 
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  4    0[COMMON] unsigned long 
  3673 ;; Registers used:
  3674 ;;		wreg, status,2, status,0
  3675 ;; Tracked objects:
  3676 ;;		On entry : 60/20
  3677 ;;		On exit  : 60/20
  3678 ;;		Unchanged: FFF9F/0
  3679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3680 ;;      Params:         8       0       0       0       0
  3681 ;;      Locals:         5       0       0       0       0
  3682 ;;      Temps:          0       0       0       0       0
  3683 ;;      Totals:        13       0       0       0       0
  3684 ;;Total ram usage:       13 bytes
  3685 ;; Hardware stack levels used:    1
  3686 ;; This function calls:
  3687 ;;		Nothing
  3688 ;; This function is called by:
  3689 ;;		_sprintf
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692  05A2                     ___lldiv:	
  3693                           
  3694                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3695  05A2  01F8               	clrf	___lldiv@quotient
  3696  05A3  01F9               	clrf	___lldiv@quotient+1
  3697  05A4  01FA               	clrf	___lldiv@quotient+2
  3698  05A5  01FB               	clrf	___lldiv@quotient+3
  3699  05A6  0873               	movf	___lldiv@divisor+3,w
  3700  05A7  0472               	iorwf	___lldiv@divisor+2,w
  3701  05A8  0471               	iorwf	___lldiv@divisor+1,w
  3702  05A9  0470               	iorwf	___lldiv@divisor,w
  3703  05AA  1903               	skipnz
  3704  05AB  2DE1               	goto	l5119
  3705  05AC  01FC               	clrf	___lldiv@counter
  3706  05AD                     L9:	
  3707  05AD  0AFC               	incf	___lldiv@counter,f
  3708  05AE  1BF3               	btfsc	___lldiv@divisor+3,7
  3709  05AF  2DB6               	goto	l5107
  3710  05B0  1003               	clrc
  3711  05B1  0DF0               	rlf	___lldiv@divisor,f
  3712  05B2  0DF1               	rlf	___lldiv@divisor+1,f
  3713  05B3  0DF2               	rlf	___lldiv@divisor+2,f
  3714  05B4  0DF3               	rlf	___lldiv@divisor+3,f
  3715  05B5  2DAD               	goto	L9
  3716  05B6                     l5107:	
  3717  05B6  1003               	clrc
  3718  05B7  0DF8               	rlf	___lldiv@quotient,f
  3719  05B8  0DF9               	rlf	___lldiv@quotient+1,f
  3720  05B9  0DFA               	rlf	___lldiv@quotient+2,f
  3721  05BA  0DFB               	rlf	___lldiv@quotient+3,f
  3722  05BB  0873               	movf	___lldiv@divisor+3,w
  3723  05BC  0277               	subwf	___lldiv@dividend+3,w
  3724  05BD  1D03               	skipz
  3725  05BE  2DC9               	goto	u2245
  3726  05BF  0872               	movf	___lldiv@divisor+2,w
  3727  05C0  0276               	subwf	___lldiv@dividend+2,w
  3728  05C1  1D03               	skipz
  3729  05C2  2DC9               	goto	u2245
  3730  05C3  0871               	movf	___lldiv@divisor+1,w
  3731  05C4  0275               	subwf	___lldiv@dividend+1,w
  3732  05C5  1D03               	skipz
  3733  05C6  2DC9               	goto	u2245
  3734  05C7  0870               	movf	___lldiv@divisor,w
  3735  05C8  0274               	subwf	___lldiv@dividend,w
  3736  05C9                     u2245:	
  3737  05C9  1C03               	skipc
  3738  05CA  2DDB               	goto	L10
  3739  05CB  0870               	movf	___lldiv@divisor,w
  3740  05CC  02F4               	subwf	___lldiv@dividend,f
  3741  05CD  0871               	movf	___lldiv@divisor+1,w
  3742  05CE  1C03               	skipc
  3743  05CF  0F71               	incfsz	___lldiv@divisor+1,w
  3744  05D0  02F5               	subwf	___lldiv@dividend+1,f
  3745  05D1  0872               	movf	___lldiv@divisor+2,w
  3746  05D2  1C03               	skipc
  3747  05D3  0F72               	incfsz	___lldiv@divisor+2,w
  3748  05D4  02F6               	subwf	___lldiv@dividend+2,f
  3749  05D5  0873               	movf	___lldiv@divisor+3,w
  3750  05D6  1C03               	skipc
  3751  05D7  0F73               	incfsz	___lldiv@divisor+3,w
  3752  05D8  02F7               	subwf	___lldiv@dividend+3,f
  3753  05D9  1478               	bsf	___lldiv@quotient,0
  3754  05DA  1003               	clrc
  3755  05DB                     L10:	
  3756  05DB  0CF3               	rrf	___lldiv@divisor+3,f
  3757  05DC  0CF2               	rrf	___lldiv@divisor+2,f
  3758  05DD  0CF1               	rrf	___lldiv@divisor+1,f
  3759  05DE  0CF0               	rrf	___lldiv@divisor,f
  3760  05DF  0BFC               	decfsz	___lldiv@counter,f
  3761  05E0  2DB6               	goto	l5107
  3762  05E1                     l5119:	
  3763  05E1  087B               	movf	___lldiv@quotient+3,w
  3764  05E2  00F3               	movwf	?___lldiv+3
  3765  05E3  087A               	movf	___lldiv@quotient+2,w
  3766  05E4  00F2               	movwf	?___lldiv+2
  3767  05E5  0879               	movf	___lldiv@quotient+1,w
  3768  05E6  00F1               	movwf	?___lldiv+1
  3769  05E7  0878               	movf	___lldiv@quotient,w
  3770  05E8  00F0               	movwf	?___lldiv
  3771  05E9  0008               	return
  3772  05EA                     __end_of___lldiv:	
  3773  05EA                     __ptext548:	
  3774 ;; =============== function __div_to_l_ ends ============
  3775                           
  3776                           
  3777 ;; *************** function __tdiv_to_l_ *****************
  3778 ;; Defined at:
  3779 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftdivl.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;  f1              3    0[COMMON] float 
  3782 ;;  f2              3    3[COMMON] float 
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;  quot            4    0[BANK0 ] unsigned long 
  3785 ;;  exp1            1    5[BANK0 ] unsigned char 
  3786 ;;  cntr            1    4[BANK0 ] unsigned char 
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  4    0[COMMON] unsigned long 
  3789 ;; Registers used:
  3790 ;;		wreg, status,2, status,0
  3791 ;; Tracked objects:
  3792 ;;		On entry : 60/20
  3793 ;;		On exit  : 60/0
  3794 ;;		Unchanged: FFF9F/0
  3795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3796 ;;      Params:         6       0       0       0       0
  3797 ;;      Locals:         0       6       0       0       0
  3798 ;;      Temps:          3       0       0       0       0
  3799 ;;      Totals:         9       6       0       0       0
  3800 ;;Total ram usage:       15 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; This function calls:
  3803 ;;		Nothing
  3804 ;; This function is called by:
  3805 ;;		_sprintf
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808  05EA                     __tdiv_to_l_:	
  3809                           
  3810                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  3811  05EA  0870               	movf	__tdiv_to_l_@f1,w
  3812  05EB  00F6               	movwf	??__tdiv_to_l_
  3813  05EC  0871               	movf	__tdiv_to_l_@f1+1,w
  3814  05ED  00F7               	movwf	??__tdiv_to_l_+1
  3815  05EE  0872               	movf	__tdiv_to_l_@f1+2,w
  3816  05EF  00F8               	movwf	??__tdiv_to_l_+2
  3817  05F0  1003               	clrc
  3818  05F1  0D77               	rlf	??__tdiv_to_l_+1,w
  3819  05F2  0D78               	rlf	??__tdiv_to_l_+2,w
  3820  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  3821  05F4  00A5               	movwf	__tdiv_to_l_@exp1
  3822  05F5  08A5               	movf	__tdiv_to_l_@exp1,f
  3823  05F6  1D03               	skipz
  3824  05F7  2DFD               	goto	l4775
  3825  05F8                     l4773:	
  3826  05F8  01F0               	clrf	?__tdiv_to_l_
  3827  05F9  01F1               	clrf	?__tdiv_to_l_+1
  3828  05FA  01F2               	clrf	?__tdiv_to_l_+2
  3829  05FB  01F3               	clrf	?__tdiv_to_l_+3
  3830  05FC  0008               	return
  3831  05FD                     l4775:	
  3832  05FD  0873               	movf	__tdiv_to_l_@f2,w
  3833  05FE  00F6               	movwf	??__tdiv_to_l_
  3834  05FF  0874               	movf	__tdiv_to_l_@f2+1,w
  3835  0600  00F7               	movwf	??__tdiv_to_l_+1
  3836  0601  0875               	movf	__tdiv_to_l_@f2+2,w
  3837  0602  00F8               	movwf	??__tdiv_to_l_+2
  3838  0603  1003               	clrc
  3839  0604  0D77               	rlf	??__tdiv_to_l_+1,w
  3840  0605  0D78               	rlf	??__tdiv_to_l_+2,w
  3841  0606  00A4               	movwf	__tdiv_to_l_@cntr
  3842  0607  08A4               	movf	__tdiv_to_l_@cntr,f
  3843  0608  1903               	btfsc	3,2
  3844  0609  2DF8               	goto	l4773
  3845  060A  307F               	movlw	127
  3846  060B  17F1               	bsf	__tdiv_to_l_@f1+1,7
  3847  060C  01F2               	clrf	__tdiv_to_l_@f1+2
  3848  060D  17F4               	bsf	__tdiv_to_l_@f2+1,7
  3849  060E  01F5               	clrf	__tdiv_to_l_@f2+2
  3850  060F  01A0               	clrf	__tdiv_to_l_@quot
  3851  0610  01A1               	clrf	__tdiv_to_l_@quot+1
  3852  0611  01A2               	clrf	__tdiv_to_l_@quot+2
  3853  0612  01A3               	clrf	__tdiv_to_l_@quot+3
  3854  0613  02A5               	subwf	__tdiv_to_l_@exp1,f
  3855  0614  3098               	movlw	152
  3856  0615  0724               	addwf	__tdiv_to_l_@cntr,w
  3857  0616  00F6               	movwf	??__tdiv_to_l_
  3858  0617  02A5               	subwf	__tdiv_to_l_@exp1,f
  3859  0618  3018               	movlw	24
  3860  0619  00A4               	movwf	__tdiv_to_l_@cntr
  3861  061A                     l4789:	
  3862  061A  1003               	clrc
  3863  061B  0DA0               	rlf	__tdiv_to_l_@quot,f
  3864  061C  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  3865  061D  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  3866  061E  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  3867  061F  0875               	movf	__tdiv_to_l_@f2+2,w
  3868  0620  0272               	subwf	__tdiv_to_l_@f1+2,w
  3869  0621  1D03               	skipz
  3870  0622  2E29               	goto	u1655
  3871  0623  0874               	movf	__tdiv_to_l_@f2+1,w
  3872  0624  0271               	subwf	__tdiv_to_l_@f1+1,w
  3873  0625  1D03               	skipz
  3874  0626  2E29               	goto	u1655
  3875  0627  0873               	movf	__tdiv_to_l_@f2,w
  3876  0628  0270               	subwf	__tdiv_to_l_@f1,w
  3877  0629                     u1655:	
  3878  0629  1C03               	skipc
  3879  062A  2E37               	goto	L18
  3880  062B  0873               	movf	__tdiv_to_l_@f2,w
  3881  062C  02F0               	subwf	__tdiv_to_l_@f1,f
  3882  062D  0874               	movf	__tdiv_to_l_@f2+1,w
  3883  062E  1C03               	skipc
  3884  062F  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  3885  0630  02F1               	subwf	__tdiv_to_l_@f1+1,f
  3886  0631  0875               	movf	__tdiv_to_l_@f2+2,w
  3887  0632  1C03               	skipc
  3888  0633  0A75               	incf	__tdiv_to_l_@f2+2,w
  3889  0634  02F2               	subwf	__tdiv_to_l_@f1+2,f
  3890  0635  1420               	bsf	__tdiv_to_l_@quot,0
  3891  0636  1003               	clrc
  3892  0637                     L18:	
  3893  0637  0DF0               	rlf	__tdiv_to_l_@f1,f
  3894  0638  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  3895  0639  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  3896  063A  0BA4               	decfsz	__tdiv_to_l_@cntr,f
  3897  063B  2E1A               	goto	l4789
  3898  063C  1FA5               	btfss	__tdiv_to_l_@exp1,7
  3899  063D  2E4B               	goto	l4809
  3900  063E  0825               	movf	__tdiv_to_l_@exp1,w
  3901  063F  3A80               	xorlw	128
  3902  0640  3E97               	addlw	151
  3903  0641  1C03               	btfss	3,0
  3904  0642  2DF8               	goto	l4773
  3905  0643                     l4805:	
  3906  0643  1003               	clrc
  3907  0644  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  3908  0645  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  3909  0646  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  3910  0647  0CA0               	rrf	__tdiv_to_l_@quot,f
  3911  0648  0FA5               	incfsz	__tdiv_to_l_@exp1,f
  3912  0649  2E43               	goto	l4805
  3913  064A  2E59               	goto	l4815
  3914  064B                     l4809:	
  3915  064B  3018               	movlw	24
  3916  064C  0225               	subwf	__tdiv_to_l_@exp1,w
  3917  064D  1803               	btfsc	3,0
  3918  064E  2DF8               	goto	l4773
  3919  064F                     l2462:	
  3920  064F  08A5               	movf	__tdiv_to_l_@exp1,f
  3921  0650  1903               	btfsc	3,2
  3922  0651  2E59               	goto	l4815
  3923  0652  1003               	clrc
  3924  0653  0DA0               	rlf	__tdiv_to_l_@quot,f
  3925  0654  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  3926  0655  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  3927  0656  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  3928  0657  03A5               	decf	__tdiv_to_l_@exp1,f
  3929  0658  2E4F               	goto	l2462
  3930  0659                     l4815:	
  3931  0659  0823               	movf	__tdiv_to_l_@quot+3,w
  3932  065A  00F3               	movwf	?__tdiv_to_l_+3
  3933  065B  0822               	movf	__tdiv_to_l_@quot+2,w
  3934  065C  00F2               	movwf	?__tdiv_to_l_+2
  3935  065D  0821               	movf	__tdiv_to_l_@quot+1,w
  3936  065E  00F1               	movwf	?__tdiv_to_l_+1
  3937  065F  0820               	movf	__tdiv_to_l_@quot,w
  3938  0660  00F0               	movwf	?__tdiv_to_l_
  3939  0661  0008               	return
  3940  0662                     __end_of__tdiv_to_l_:	
  3941  0662                     __ptext538:	
  3942 ;; =============== function ___ftge ends ============
  3943                           
  3944                           
  3945 ;; *************** function ___ftneg *****************
  3946 ;; Defined at:
  3947 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftneg.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;  f1              3    0[COMMON] float 
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;		None
  3952 ;; Return value:  Size  Location     Type
  3953 ;;                  3    0[COMMON] float 
  3954 ;; Registers used:
  3955 ;;		wreg
  3956 ;; Tracked objects:
  3957 ;;		On entry : 160/20
  3958 ;;		On exit  : 160/20
  3959 ;;		Unchanged: FFE9F/0
  3960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3961 ;;      Params:         3       0       0       0       0
  3962 ;;      Locals:         0       0       0       0       0
  3963 ;;      Temps:          0       0       0       0       0
  3964 ;;      Totals:         3       0       0       0       0
  3965 ;;Total ram usage:        3 bytes
  3966 ;; Hardware stack levels used:    1
  3967 ;; This function calls:
  3968 ;;		Nothing
  3969 ;; This function is called by:
  3970 ;;		_sprintf
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973  0662                     ___ftneg:	
  3974                           
  3975                           ; Regs used in ___ftneg: [wreg]
  3976  0662  0872               	movf	___ftneg@f1+2,w
  3977  0663  0471               	iorwf	___ftneg@f1+1,w
  3978  0664  0470               	iorwf	___ftneg@f1,w
  3979  0665  1903               	skipnz
  3980  0666  0008               	return
  3981  0667  3080               	movlw	128
  3982  0668  06F2               	xorwf	___ftneg@f1+2,f
  3983  0669  0008               	return
  3984  066A                     __end_of___ftneg:	
  3985  066A                     __ptext533:	
  3986 ;; =============== function ___ftmul ends ============
  3987                           
  3988                           
  3989 ;; *************** function ___ftadd *****************
  3990 ;; Defined at:
  3991 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftadd.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;  f1              3   28[BANK0 ] float 
  3994 ;;  f2              3   31[BANK0 ] float 
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;  exp1            1   39[BANK0 ] unsigned char 
  3997 ;;  exp2            1   38[BANK0 ] unsigned char 
  3998 ;;  sign            1   37[BANK0 ] unsigned char 
  3999 ;; Return value:  Size  Location     Type
  4000 ;;                  3   28[BANK0 ] float 
  4001 ;; Registers used:
  4002 ;;		wreg, status,2, status,0, pclath, cstack
  4003 ;; Tracked objects:
  4004 ;;		On entry : 60/0
  4005 ;;		On exit  : 60/0
  4006 ;;		Unchanged: FFF9F/0
  4007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4008 ;;      Params:         0       6       0       0       0
  4009 ;;      Locals:         0       3       0       0       0
  4010 ;;      Temps:          0       3       0       0       0
  4011 ;;      Totals:         0      12       0       0       0
  4012 ;;Total ram usage:       12 bytes
  4013 ;; Hardware stack levels used:    1
  4014 ;; Hardware stack levels required when called:    1
  4015 ;; This function calls:
  4016 ;;		___ftpack
  4017 ;; This function is called by:
  4018 ;;		_sprintf
  4019 ;;		___ftsub
  4020 ;; This function uses a non-reentrant model
  4021 ;;
  4022  066A                     ___ftadd:	
  4023                           
  4024                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4025  066A  083C               	movf	___ftadd@f1,w
  4026  066B  00C2               	movwf	??___ftadd
  4027  066C  083D               	movf	___ftadd@f1+1,w
  4028  066D  00C3               	movwf	??___ftadd+1
  4029  066E  083E               	movf	___ftadd@f1+2,w
  4030  066F  00C4               	movwf	??___ftadd+2
  4031  0670  1003               	clrc
  4032  0671  0D43               	rlf	??___ftadd+1,w
  4033  0672  0D44               	rlf	??___ftadd+2,w
  4034  0673  00C7               	movwf	___ftadd@exp1
  4035  0674  083F               	movf	___ftadd@f2,w
  4036  0675  00C2               	movwf	??___ftadd
  4037  0676  0840               	movf	___ftadd@f2+1,w
  4038  0677  00C3               	movwf	??___ftadd+1
  4039  0678  0841               	movf	___ftadd@f2+2,w
  4040  0679  00C4               	movwf	??___ftadd+2
  4041  067A  1003               	clrc
  4042  067B  0D43               	rlf	??___ftadd+1,w
  4043  067C  0D44               	rlf	??___ftadd+2,w
  4044  067D  00C6               	movwf	___ftadd@exp2
  4045  067E  0847               	movf	___ftadd@exp1,w
  4046  067F  1903               	btfsc	3,2
  4047  0680  2E8D               	goto	l5175
  4048  0681  0846               	movf	___ftadd@exp2,w
  4049  0682  0247               	subwf	___ftadd@exp1,w
  4050  0683  0846               	movf	___ftadd@exp2,w
  4051  0684  1803               	skipnc
  4052  0685  2E95               	goto	L6
  4053  0686  00C2               	movwf	??___ftadd
  4054  0687  0847               	movf	___ftadd@exp1,w
  4055  0688  02C2               	subwf	??___ftadd,f
  4056  0689  3019               	movlw	25
  4057  068A  0242               	subwf	??___ftadd,w
  4058  068B  1C03               	skipc
  4059  068C  2E94               	goto	l5179
  4060  068D                     l5175:	
  4061  068D  083F               	movf	___ftadd@f2,w
  4062  068E  00BC               	movwf	?___ftadd
  4063  068F  0840               	movf	___ftadd@f2+1,w
  4064  0690  00BD               	movwf	?___ftadd+1
  4065  0691  0841               	movf	___ftadd@f2+2,w
  4066  0692  00BE               	movwf	?___ftadd+2
  4067  0693  0008               	return
  4068  0694                     l5179:	
  4069  0694  0846               	movf	___ftadd@exp2,w
  4070  0695                     L6:	
  4071  0695  1903               	btfsc	3,2
  4072  0696  0008               	return
  4073  0697  0847               	movf	___ftadd@exp1,w
  4074  0698  0246               	subwf	___ftadd@exp2,w
  4075  0699  1803               	skipnc
  4076  069A  2EA3               	goto	l5185
  4077  069B  0847               	movf	___ftadd@exp1,w
  4078  069C  00C2               	movwf	??___ftadd
  4079  069D  0846               	movf	___ftadd@exp2,w
  4080  069E  02C2               	subwf	??___ftadd,f
  4081  069F  3019               	movlw	25
  4082  06A0  0242               	subwf	??___ftadd,w
  4083  06A1  1803               	btfsc	3,0
  4084  06A2  0008               	return
  4085  06A3                     l5185:	
  4086  06A3  3006               	movlw	6
  4087  06A4  00C5               	movwf	___ftadd@sign
  4088  06A5  1BBE               	btfsc	___ftadd@f1+2,7
  4089  06A6  17C5               	bsf	___ftadd@sign,7
  4090  06A7  1BC1               	btfsc	___ftadd@f2+2,7
  4091  06A8  1745               	bsf	___ftadd@sign,6
  4092  06A9  17BD               	bsf	___ftadd@f1+1,7
  4093  06AA  01BE               	clrf	___ftadd@f1+2
  4094  06AB  17C0               	bsf	___ftadd@f2+1,7
  4095  06AC  01C1               	clrf	___ftadd@f2+2
  4096  06AD  0846               	movf	___ftadd@exp2,w
  4097  06AE  0247               	subwf	___ftadd@exp1,w
  4098  06AF  1803               	skipnc
  4099  06B0  2ECA               	goto	l5207
  4100  06B1                     l5197:	
  4101  06B1  1003               	clrc
  4102  06B2  0DBF               	rlf	___ftadd@f2,f
  4103  06B3  0DC0               	rlf	___ftadd@f2+1,f
  4104  06B4  0DC1               	rlf	___ftadd@f2+2,f
  4105  06B5  03C6               	decf	___ftadd@exp2,f
  4106  06B6  0846               	movf	___ftadd@exp2,w
  4107  06B7  0647               	xorwf	___ftadd@exp1,w
  4108  06B8  1903               	skipnz
  4109  06B9  2EC5               	goto	l5205
  4110  06BA  03C5               	decf	___ftadd@sign,f
  4111  06BB  0845               	movf	___ftadd@sign,w
  4112  06BC  3907               	andlw	7
  4113  06BD  1903               	btfsc	3,2
  4114  06BE  2EC5               	goto	l5205
  4115  06BF  2EB1               	goto	l5197
  4116  06C0                     l5203:	
  4117  06C0  1003               	clrc
  4118  06C1  0CBE               	rrf	___ftadd@f1+2,f
  4119  06C2  0CBD               	rrf	___ftadd@f1+1,f
  4120  06C3  0CBC               	rrf	___ftadd@f1,f
  4121  06C4  0AC7               	incf	___ftadd@exp1,f
  4122  06C5                     l5205:	
  4123  06C5  0847               	movf	___ftadd@exp1,w
  4124  06C6  0646               	xorwf	___ftadd@exp2,w
  4125  06C7  1903               	btfsc	3,2
  4126  06C8  2EE6               	goto	l2268
  4127  06C9  2EC0               	goto	l5203
  4128  06CA                     l5207:	
  4129  06CA  0847               	movf	___ftadd@exp1,w
  4130  06CB  0246               	subwf	___ftadd@exp2,w
  4131  06CC  1803               	skipnc
  4132  06CD  2EE6               	goto	l2268
  4133  06CE                     l5209:	
  4134  06CE  1003               	clrc
  4135  06CF  0DBC               	rlf	___ftadd@f1,f
  4136  06D0  0DBD               	rlf	___ftadd@f1+1,f
  4137  06D1  0DBE               	rlf	___ftadd@f1+2,f
  4138  06D2  03C7               	decf	___ftadd@exp1,f
  4139  06D3  0846               	movf	___ftadd@exp2,w
  4140  06D4  0647               	xorwf	___ftadd@exp1,w
  4141  06D5  1903               	skipnz
  4142  06D6  2EE2               	goto	l5217
  4143  06D7  03C5               	decf	___ftadd@sign,f
  4144  06D8  0845               	movf	___ftadd@sign,w
  4145  06D9  3907               	andlw	7
  4146  06DA  1903               	btfsc	3,2
  4147  06DB  2EE2               	goto	l5217
  4148  06DC  2ECE               	goto	l5209
  4149  06DD                     l5215:	
  4150  06DD  1003               	clrc
  4151  06DE  0CC1               	rrf	___ftadd@f2+2,f
  4152  06DF  0CC0               	rrf	___ftadd@f2+1,f
  4153  06E0  0CBF               	rrf	___ftadd@f2,f
  4154  06E1  0AC6               	incf	___ftadd@exp2,f
  4155  06E2                     l5217:	
  4156  06E2  0847               	movf	___ftadd@exp1,w
  4157  06E3  0646               	xorwf	___ftadd@exp2,w
  4158  06E4  1D03               	skipz
  4159  06E5  2EDD               	goto	l5215
  4160  06E6                     l2268:	
  4161  06E6  1FC5               	btfss	___ftadd@sign,7
  4162  06E7  2EF1               	goto	l5223
  4163  06E8  30FF               	movlw	255
  4164  06E9  06BC               	xorwf	___ftadd@f1,f
  4165  06EA  06BD               	xorwf	___ftadd@f1+1,f
  4166  06EB  06BE               	xorwf	___ftadd@f1+2,f
  4167  06EC  0ABC               	incf	___ftadd@f1,f
  4168  06ED  1903               	skipnz
  4169  06EE  0ABD               	incf	___ftadd@f1+1,f
  4170  06EF  1903               	skipnz
  4171  06F0  0ABE               	incf	___ftadd@f1+2,f
  4172  06F1                     l5223:	
  4173  06F1  1F45               	btfss	___ftadd@sign,6
  4174  06F2  2EFC               	goto	l5229
  4175  06F3  30FF               	movlw	255
  4176  06F4  06BF               	xorwf	___ftadd@f2,f
  4177  06F5  06C0               	xorwf	___ftadd@f2+1,f
  4178  06F6  06C1               	xorwf	___ftadd@f2+2,f
  4179  06F7  0ABF               	incf	___ftadd@f2,f
  4180  06F8  1903               	skipnz
  4181  06F9  0AC0               	incf	___ftadd@f2+1,f
  4182  06FA  1903               	skipnz
  4183  06FB  0AC1               	incf	___ftadd@f2+2,f
  4184  06FC                     l5229:	
  4185  06FC  01C5               	clrf	___ftadd@sign
  4186  06FD  083C               	movf	___ftadd@f1,w
  4187  06FE  07BF               	addwf	___ftadd@f2,f
  4188  06FF  083D               	movf	___ftadd@f1+1,w
  4189  0700  1103               	clrz
  4190  0701  1803               	skipnc
  4191  0702  0A3D               	incf	___ftadd@f1+1,w
  4192  0703  1D03               	btfss	3,2
  4193  0704  07C0               	addwf	___ftadd@f2+1,f
  4194  0705  083E               	movf	___ftadd@f1+2,w
  4195  0706  1103               	clrz
  4196  0707  1803               	skipnc
  4197  0708  0A3E               	incf	___ftadd@f1+2,w
  4198  0709  1D03               	btfss	3,2
  4199  070A  07C1               	addwf	___ftadd@f2+2,f
  4200  070B  1FC1               	btfss	___ftadd@f2+2,7
  4201  070C  2F18               	goto	l5241
  4202  070D  30FF               	movlw	255
  4203  070E  06BF               	xorwf	___ftadd@f2,f
  4204  070F  06C0               	xorwf	___ftadd@f2+1,f
  4205  0710  06C1               	xorwf	___ftadd@f2+2,f
  4206  0711  0ABF               	incf	___ftadd@f2,f
  4207  0712  1903               	skipnz
  4208  0713  0AC0               	incf	___ftadd@f2+1,f
  4209  0714  1903               	skipnz
  4210  0715  0AC1               	incf	___ftadd@f2+2,f
  4211  0716  01C5               	clrf	___ftadd@sign
  4212  0717  0AC5               	incf	___ftadd@sign,f
  4213  0718                     l5241:	
  4214  0718  083F               	movf	___ftadd@f2,w
  4215  0719  00F0               	movwf	?___ftpack
  4216  071A  0840               	movf	___ftadd@f2+1,w
  4217  071B  00F1               	movwf	?___ftpack+1
  4218  071C  0841               	movf	___ftadd@f2+2,w
  4219  071D  00F2               	movwf	?___ftpack+2
  4220  071E  0847               	movf	___ftadd@exp1,w
  4221  071F  00F3               	movwf	?___ftpack+3
  4222  0720  0845               	movf	___ftadd@sign,w
  4223  0721  00F4               	movwf	?___ftpack+4
  4224  0722  120A  158A  2769   	fcall	___ftpack
  4225  0725  0870               	movf	?___ftpack,w
  4226  0726  00BC               	movwf	?___ftadd
  4227  0727  0871               	movf	?___ftpack+1,w
  4228  0728  00BD               	movwf	?___ftadd+1
  4229  0729  0872               	movf	?___ftpack+2,w
  4230  072A  00BE               	movwf	?___ftadd+2
  4231  072B  0008               	return
  4232  072C                     __end_of___ftadd:	
  4233  072C                     __ptext530:	
  4234 ;; =============== function _lcd_write ends ============
  4235                           
  4236                           
  4237 ;; *************** function ___lltoft *****************
  4238 ;; Defined at:
  4239 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lltoft.c"
  4240 ;; Parameters:    Size  Location     Type
  4241 ;;  c               4    8[COMMON] unsigned long 
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;  exp             1   12[COMMON] unsigned char 
  4244 ;; Return value:  Size  Location     Type
  4245 ;;                  3    8[COMMON] float 
  4246 ;; Registers used:
  4247 ;;		wreg, status,2, status,0, pclath, cstack
  4248 ;; Tracked objects:
  4249 ;;		On entry : 60/20
  4250 ;;		On exit  : 60/20
  4251 ;;		Unchanged: FFF9F/0
  4252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4253 ;;      Params:         4       0       0       0       0
  4254 ;;      Locals:         1       0       0       0       0
  4255 ;;      Temps:          0       0       0       0       0
  4256 ;;      Totals:         5       0       0       0       0
  4257 ;;Total ram usage:        5 bytes
  4258 ;; Hardware stack levels used:    1
  4259 ;; Hardware stack levels required when called:    1
  4260 ;; This function calls:
  4261 ;;		___ftpack
  4262 ;; This function is called by:
  4263 ;;		_sprintf
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266  072C                     ___lltoft:	
  4267                           
  4268                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  4269  072C  308E               	movlw	142
  4270  072D  00FC               	movwf	___lltoft@exp
  4271  072E                     l5317:	
  4272  072E  30FF               	movlw	255
  4273  072F  057B               	andwf	___lltoft@c+3,w
  4274  0730  1903               	btfsc	3,2
  4275  0731  2F39               	goto	l5319
  4276  0732  1003               	clrc
  4277  0733  0CFB               	rrf	___lltoft@c+3,f
  4278  0734  0CFA               	rrf	___lltoft@c+2,f
  4279  0735  0CF9               	rrf	___lltoft@c+1,f
  4280  0736  0CF8               	rrf	___lltoft@c,f
  4281  0737  0AFC               	incf	___lltoft@exp,f
  4282  0738  2F2E               	goto	l5317
  4283  0739                     l5319:	
  4284  0739  0878               	movf	___lltoft@c,w
  4285  073A  00F0               	movwf	?___ftpack
  4286  073B  0879               	movf	___lltoft@c+1,w
  4287  073C  00F1               	movwf	?___ftpack+1
  4288  073D  087A               	movf	___lltoft@c+2,w
  4289  073E  00F2               	movwf	?___ftpack+2
  4290  073F  087C               	movf	___lltoft@exp,w
  4291  0740  00F3               	movwf	?___ftpack+3
  4292  0741  01F4               	clrf	?___ftpack+4
  4293  0742  120A  158A  2769   	fcall	___ftpack
  4294  0745  0870               	movf	?___ftpack,w
  4295  0746  00F8               	movwf	?___lltoft
  4296  0747  0871               	movf	?___ftpack+1,w
  4297  0748  00F9               	movwf	?___lltoft+1
  4298  0749  0872               	movf	?___ftpack+2,w
  4299  074A  00FA               	movwf	?___lltoft+2
  4300  074B  0008               	return
  4301  074C                     __end_of___lltoft:	
  4302  074C                     PL3:	
  4303  074C  0838               	movf	sprintf@c^(0+128),w
  4304  074D  1283               	bcf	3,5	;RP0=0, select bank0
  4305  074E  00D6               	movwf	??_sprintf
  4306  074F  1003               	clrc
  4307  0750  0DD6               	rlf	??_sprintf,f
  4308  0751  1003               	clrc
  4309  0752  0D56               	rlf	??_sprintf,w
  4310  0753  3E4F               	addlw	low (_dpowers-__stringbase)
  4311  0754  0084               	movwf	4
  4312  0755  0008               	return
  4313  0756                     PL4:	
  4314  0756  300A               	movlw	10
  4315  0757  1283               	bcf	3,5	;RP0=0, select bank0
  4316  0758  00A0               	movwf	?___llmod
  4317  0759  01A1               	clrf	?___llmod+1
  4318  075A  01A2               	clrf	?___llmod+2
  4319  075B  01A3               	clrf	?___llmod+3
  4320  075C  1683               	bsf	3,5	;RP0=1, select bank1
  4321  075D  0008               	return
  4322  075E                     PL5:	
  4323  075E  0823               	movf	?___fttol+3,w
  4324  075F  1683               	bsf	3,5	;RP0=1, select bank1
  4325  0760  00AB               	movwf	(sprintf@_val+3)^(0+128)
  4326  0761  1283               	bcf	3,5	;RP0=0, select bank0
  4327  0762  0822               	movf	?___fttol+2,w
  4328  0763  1683               	bsf	3,5	;RP0=1, select bank1
  4329  0764  00AA               	movwf	(sprintf@_val+2)^(0+128)
  4330  0765  1283               	bcf	3,5	;RP0=0, select bank0
  4331  0766  0821               	movf	?___fttol+1,w
  4332  0767  1683               	bsf	3,5	;RP0=1, select bank1
  4333  0768  00A9               	movwf	(sprintf@_val+1)^(0+128)
  4334  0769  1283               	bcf	3,5	;RP0=0, select bank0
  4335  076A  0820               	movf	?___fttol,w
  4336  076B  0008               	return
  4337  076C                     PL10:	
  4338  076C  083C               	movf	?_scale,w
  4339  076D  1683               	bsf	3,5	;RP0=1, select bank1
  4340  076E  00A5               	movwf	sprintf@integ^(0+128)
  4341  076F  1283               	bcf	3,5	;RP0=0, select bank0
  4342  0770  083D               	movf	?_scale+1,w
  4343  0771  1683               	bsf	3,5	;RP0=1, select bank1
  4344  0772  00A6               	movwf	(sprintf@integ+1)^(0+128)
  4345  0773  1283               	bcf	3,5	;RP0=0, select bank0
  4346  0774  083E               	movf	?_scale+2,w
  4347  0775  1683               	bsf	3,5	;RP0=1, select bank1
  4348  0776  00A7               	movwf	(sprintf@integ+2)^(0+128)
  4349  0777  0833               	movf	sprintf@fval^(0+128),w
  4350  0778  0008               	return
  4351  0779                     PL11:	
  4352  0779  0770               	addwf	?___wmul,w
  4353  077A  00D6               	movwf	??_sprintf
  4354  077B  3000               	movlw	0
  4355  077C  1803               	skipnc
  4356  077D  3001               	movlw	1
  4357  077E  0771               	addwf	?___wmul+1,w
  4358  077F  00D7               	movwf	??_sprintf+1
  4359  0780  0856               	movf	??_sprintf,w
  4360  0781  3ED0               	addlw	208
  4361  0782  1683               	bsf	3,5	;RP0=1, select bank1
  4362  0783  0008               	return
  4363  0784                     PL12:	
  4364  0784  1283               	bcf	3,5	;RP0=0, select bank0
  4365  0785  00A0               	movwf	?___fttol
  4366  0786  1683               	bsf	3,5	;RP0=1, select bank1
  4367  0787  0834               	movf	(sprintf@fval+1)^(0+128),w
  4368  0788  1283               	bcf	3,5	;RP0=0, select bank0
  4369  0789  00A1               	movwf	?___fttol+1
  4370  078A  1683               	bsf	3,5	;RP0=1, select bank1
  4371  078B  0835               	movf	(sprintf@fval+2)^(0+128),w
  4372  078C  1283               	bcf	3,5	;RP0=0, select bank0
  4373  078D  00A2               	movwf	?___fttol+2
  4374  078E  0008               	return
  4375  078F                     PL13:	
  4376  078F  1283               	bcf	3,5	;RP0=0, select bank0
  4377  0790  00AD               	movwf	?___ftmul
  4378  0791  1683               	bsf	3,5	;RP0=1, select bank1
  4379  0792  0834               	movf	(sprintf@fval+1)^(0+128),w
  4380  0793  1283               	bcf	3,5	;RP0=0, select bank0
  4381  0794  00AE               	movwf	?___ftmul+1
  4382  0795  1683               	bsf	3,5	;RP0=1, select bank1
  4383  0796  0835               	movf	(sprintf@fval+2)^(0+128),w
  4384  0797  1283               	bcf	3,5	;RP0=0, select bank0
  4385  0798  00AF               	movwf	?___ftmul+2
  4386  0799  0008               	return
  4387  079A                     PL14:	
  4388  079A  00F3               	movwf	?___lldiv+3
  4389  079B  1683               	bsf	3,5	;RP0=1, select bank1
  4390  079C  082B               	movf	(sprintf@_val+3)^(0+128),w
  4391  079D  00F7               	movwf	?___lldiv+7
  4392  079E  082A               	movf	(sprintf@_val+2)^(0+128),w
  4393  079F  00F6               	movwf	?___lldiv+6
  4394  07A0  0829               	movf	(sprintf@_val+1)^(0+128),w
  4395  07A1  00F5               	movwf	?___lldiv+5
  4396  07A2  0828               	movf	sprintf@_val^(0+128),w
  4397  07A3  00F4               	movwf	?___lldiv+4
  4398  07A4  0008               	return
  4399  07A5                     PL17:	
  4400  07A5  0873               	movf	?___lldiv+3,w
  4401  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  4402  07A7  00A7               	movwf	?___llmod+7
  4403  07A8  0872               	movf	?___lldiv+2,w
  4404  07A9  00A6               	movwf	?___llmod+6
  4405  07AA  0871               	movf	?___lldiv+1,w
  4406  07AB  00A5               	movwf	?___llmod+5
  4407  07AC  0870               	movf	?___lldiv,w
  4408  07AD  00A4               	movwf	?___llmod+4
  4409  07AE  0008               	return
  4410  07AF                     PL19:	
  4411  07AF  1283               	bcf	3,5	;RP0=0, select bank0
  4412  07B0  00D6               	movwf	??_sprintf
  4413  07B1  01D7               	clrf	??_sprintf+1
  4414  07B2  1BD6               	btfsc	??_sprintf,7
  4415  07B3  03D7               	decf	??_sprintf+1,f
  4416  07B4  0857               	movf	??_sprintf+1,w
  4417  07B5  3A80               	xorlw	128
  4418  07B6  00D8               	movwf	??_sprintf+2
  4419  07B7  1683               	bsf	3,5	;RP0=1, select bank1
  4420  07B8  0008               	return
  4421  07B9                     PL20:	
  4422  07B9  0820               	movf	?___llmod,w
  4423  07BA  3E30               	addlw	48
  4424  07BB  00D7               	movwf	??_sprintf+1
  4425  07BC  1683               	bsf	3,5	;RP0=1, select bank1
  4426  07BD  0832               	movf	sprintf@sp^(0+128),w
  4427  07BE  0084               	movwf	4
  4428  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  4429  07C0  0857               	movf	??_sprintf+1,w
  4430  07C1  0008               	return
  4431  07C2                     PL21:	
  4432  07C2  1303               	bcf	3,6	;RP1=0, select bank1
  4433  07C3  0838               	movf	sprintf@c^(0+128),w
  4434  07C4  1283               	bcf	3,5	;RP0=0, select bank0
  4435  07C5  00D6               	movwf	??_sprintf
  4436  07C6  01D7               	clrf	??_sprintf+1
  4437  07C7  1BD6               	btfsc	??_sprintf,7
  4438  07C8  03D7               	decf	??_sprintf+1,f
  4439  07C9  1683               	bsf	3,5	;RP0=1, select bank1
  4440  07CA  0008               	return
  4441  07CB                     PL22:	
  4442  07CB  0825               	movf	sprintf@integ^(0+128),w
  4443  07CC  00F0               	movwf	?___ftge
  4444  07CD  0826               	movf	(sprintf@integ+1)^(0+128),w
  4445  07CE  00F1               	movwf	?___ftge+1
  4446  07CF  0827               	movf	(sprintf@integ+2)^(0+128),w
  4447  07D0  00F2               	movwf	?___ftge+2
  4448  07D1  0008               	return
  4449  07D2                     PL29:	
  4450  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  4451  07D3  0857               	movf	??_sprintf+1,w
  4452  07D4  1803               	skipnc
  4453  07D5  3E01               	addlw	1
  4454  07D6  3EFF               	addlw	255
  4455  07D7  1683               	bsf	3,5	;RP0=1, select bank1
  4456  07D8  0008               	return
  4457  07D9                     PL30:	
  4458  07D9  0820               	movf	___fttol@f1,w
  4459  07DA  00A4               	movwf	??___fttol
  4460  07DB  0821               	movf	___fttol@f1+1,w
  4461  07DC  00A5               	movwf	??___fttol+1
  4462  07DD  0822               	movf	___fttol@f1+2,w
  4463  07DE  00A6               	movwf	??___fttol+2
  4464  07DF  0008               	return
  4465  07E0                     PL32:	
  4466  07E0  0084               	movwf	4
  4467  07E1  3030               	movlw	48
  4468  07E2  1383               	bcf	3,7	;select IRP bank0
  4469  07E3  0080               	movwf	0
  4470  07E4  30FF               	movlw	-1
  4471  07E5  0AB2               	incf	sprintf@sp^(0+128),f
  4472  07E6  0008               	return
  4473  07E7                     PL33:	
  4474  07E7  1683               	bsf	3,5	;RP0=1, select bank1
  4475  07E8  1303               	bcf	3,6	;RP1=0, select bank1
  4476  07E9  0008               	return
  4477  07EA                     __ptext526:	
  4478 ;; =============== function _lcd_clear ends ============
  4479                           
  4480                           
  4481 ;; *************** function ___ftsub *****************
  4482 ;; Defined at:
  4483 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftsub.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;  f2              3   40[BANK0 ] float 
  4486 ;;  f1              3   43[BANK0 ] float 
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;		None
  4489 ;; Return value:  Size  Location     Type
  4490 ;;                  3   40[BANK0 ] float 
  4491 ;; Registers used:
  4492 ;;		wreg, status,2, status,0, pclath, cstack
  4493 ;; Tracked objects:
  4494 ;;		On entry : 60/0
  4495 ;;		On exit  : 60/0
  4496 ;;		Unchanged: FFF9F/0
  4497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4498 ;;      Params:         0       6       0       0       0
  4499 ;;      Locals:         0       0       0       0       0
  4500 ;;      Temps:          0       0       0       0       0
  4501 ;;      Totals:         0       6       0       0       0
  4502 ;;Total ram usage:        6 bytes
  4503 ;; Hardware stack levels used:    1
  4504 ;; Hardware stack levels required when called:    2
  4505 ;; This function calls:
  4506 ;;		___ftadd
  4507 ;; This function is called by:
  4508 ;;		_sprintf
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511  07EA                     ___ftsub:	
  4512                           
  4513                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  4514  07EA  3080               	movlw	128
  4515  07EB  06CA               	xorwf	___ftsub@f2+2,f
  4516  07EC  084B               	movf	___ftsub@f1,w
  4517  07ED  00BC               	movwf	?___ftadd
  4518  07EE  084C               	movf	___ftsub@f1+1,w
  4519  07EF  00BD               	movwf	?___ftadd+1
  4520  07F0  084D               	movf	___ftsub@f1+2,w
  4521  07F1  00BE               	movwf	?___ftadd+2
  4522  07F2  0848               	movf	___ftsub@f2,w
  4523  07F3  00BF               	movwf	?___ftadd+3
  4524  07F4  0849               	movf	___ftsub@f2+1,w
  4525  07F5  00C0               	movwf	?___ftadd+4
  4526  07F6  084A               	movf	___ftsub@f2+2,w
  4527  07F7  00C1               	movwf	?___ftadd+5
  4528  07F8  266A               	fcall	___ftadd
  4529  07F9  083C               	movf	?___ftadd,w
  4530  07FA  00C8               	movwf	?___ftsub
  4531  07FB  083D               	movf	?___ftadd+1,w
  4532  07FC  00C9               	movwf	?___ftsub+1
  4533  07FD  083E               	movf	?___ftadd+2,w
  4534  07FE  00CA               	movwf	?___ftsub+2
  4535  07FF  0008               	return
  4536  0800                     __end_of___ftsub:	
  4537                           
  4538                           	psect	text528
  4539  0B6B                     __ptext528:	
  4540 ;; =============== function _scale ends ============
  4541                           
  4542                           
  4543 ;; *************** function _fround *****************
  4544 ;; Defined at:
  4545 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;  prec            1    wreg     unsigned char 
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;  prec            1   49[BANK0 ] unsigned char 
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  3   40[BANK0 ] unsigned char 
  4552 ;; Registers used:
  4553 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4554 ;; Tracked objects:
  4555 ;;		On entry : 60/20
  4556 ;;		On exit  : 60/0
  4557 ;;		Unchanged: FFF9F/0
  4558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4559 ;;      Params:         0       3       0       0       0
  4560 ;;      Locals:         0       7       0       0       0
  4561 ;;      Temps:          0       0       0       0       0
  4562 ;;      Totals:         0      10       0       0       0
  4563 ;;Total ram usage:       10 bytes
  4564 ;; Hardware stack levels used:    1
  4565 ;; Hardware stack levels required when called:    2
  4566 ;; This function calls:
  4567 ;;		___lbmod
  4568 ;;		___bmul
  4569 ;;		___lbdiv
  4570 ;;		___ftmul
  4571 ;; This function is called by:
  4572 ;;		_sprintf
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575  0B6B                     _fround:	
  4576                           
  4577                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4578                           ;fround@prec stored from wreg
  4579  0B6B  1283               	bcf	3,5	;RP0=0, select bank0
  4580  0B6C  00D1               	movwf	fround@prec
  4581  0B6D  306E               	movlw	110
  4582  0B6E  0251               	subwf	fround@prec,w
  4583  0B6F  1C03               	skipc
  4584  0B70  2BF6               	goto	l5347
  4585  0B71  3003               	movlw	3
  4586  0B72  00F9               	movwf	?___bmul
  4587  0B73  300A               	movlw	10
  4588  0B74  00F5               	movwf	?___lbdiv
  4589  0B75  3064               	movlw	100
  4590  0B76  00F0               	movwf	?___lbmod
  4591  0B77  0851               	movf	fround@prec,w
  4592  0B78  248B  120A  158A   	fcall	___lbmod
  4593  0B7B  2470               	fcall	___lbdiv
  4594  0B7C  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4595  0B81  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4596  0B82  0084               	movwf	4
  4597  0B83  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4598  0B88  00AD               	movwf	?___ftmul
  4599  0B89  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4600  0B8E  00AE               	movwf	?___ftmul+1
  4601  0B8F  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4602  0B94  00AF               	movwf	?___ftmul+2
  4603  0B95  3003               	movlw	3
  4604  0B96  00F9               	movwf	?___bmul
  4605  0B97  3064               	movlw	100
  4606  0B98  00F5               	movwf	?___lbdiv
  4607  0B99  0851               	movf	fround@prec,w
  4608  0B9A  2470               	fcall	___lbdiv
  4609  0B9B  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4610  0BA0  3E37               	addlw	low ((__npowers_-__stringbase+54))
  4611  0BA1  0084               	movwf	4
  4612  0BA2  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4613  0BA7  00B0               	movwf	?___ftmul+3
  4614  0BA8  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4615  0BAD  00B1               	movwf	?___ftmul+4
  4616  0BAE  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4617  0BB3  00B2               	movwf	?___ftmul+5
  4618  0BB4  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4619  0BB9  24B6  120A  158A   	fcall	PL31	;call to abstracted procedure
  4620  0BBC  3003               	movlw	3
  4621  0BBD  00F9               	movwf	?___bmul
  4622  0BBE  300A               	movlw	10
  4623  0BBF  00F0               	movwf	?___lbmod
  4624  0BC0  0851               	movf	fround@prec,w
  4625  0BC1  248B               	fcall	___lbmod
  4626  0BC2  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4627  0BC7  3E01               	addlw	low (__npowers_-__stringbase)
  4628  0BC8  0084               	movwf	4
  4629  0BC9  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4630  0BCE  00AD               	movwf	?___ftmul
  4631  0BCF  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4632  0BD4  00AE               	movwf	?___ftmul+1
  4633  0BD5  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4634  0BDA  24AE               	fcall	PL26	;call to abstracted procedure
  4635  0BDB  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4636  0BE0  082D               	movf	?___ftmul,w
  4637  0BE1  00CB               	movwf	_fround$2844
  4638  0BE2  082E               	movf	?___ftmul+1,w
  4639  0BE3  00CC               	movwf	_fround$2844+1
  4640  0BE4  082F               	movf	?___ftmul+2,w
  4641  0BE5  00CD               	movwf	_fround$2844+2
  4642  0BE6  303F               	movlw	63
  4643  0BE7  01AD               	clrf	?___ftmul
  4644  0BE8  01AE               	clrf	?___ftmul+1
  4645  0BE9  00AF               	movwf	?___ftmul+2
  4646  0BEA  084B               	movf	_fround$2844,w
  4647  0BEB  00B0               	movwf	?___ftmul+3
  4648  0BEC  084C               	movf	_fround$2844+1,w
  4649  0BED  00B1               	movwf	?___ftmul+4
  4650  0BEE  084D               	movf	_fround$2844+2,w
  4651  0BEF  00B2               	movwf	?___ftmul+5
  4652  0BF0  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4653  0BF5  2CA7               	ljmp	PL16	;call to abstracted procedure
  4654  0BF6                     l5347:	
  4655  0BF6  300B               	movlw	11
  4656  0BF7  0251               	subwf	fround@prec,w
  4657  0BF8  1C03               	skipc
  4658  0BF9  2C4A               	goto	l5355
  4659  0BFA  3003               	movlw	3
  4660  0BFB  00F9               	movwf	?___bmul
  4661  0BFC  300A               	movlw	10
  4662  0BFD  00F0               	movwf	?___lbmod
  4663  0BFE  0851               	movf	fround@prec,w
  4664  0BFF  248B               	fcall	___lbmod
  4665  0C00  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4666  0C05  3E01               	addlw	low (__npowers_-__stringbase)
  4667  0C06  0084               	movwf	4
  4668  0C07  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4669  0C0C  00AD               	movwf	?___ftmul
  4670  0C0D  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4671  0C12  00AE               	movwf	?___ftmul+1
  4672  0C13  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4673  0C18  00AF               	movwf	?___ftmul+2
  4674  0C19  3003               	movlw	3
  4675  0C1A  00F9               	movwf	?___bmul
  4676  0C1B  300A               	movlw	10
  4677  0C1C  00F5               	movwf	?___lbdiv
  4678  0C1D  0851               	movf	fround@prec,w
  4679  0C1E  2470               	fcall	___lbdiv
  4680  0C1F  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4681  0C24  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4682  0C25  0084               	movwf	4
  4683  0C26  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4684  0C2B  00B0               	movwf	?___ftmul+3
  4685  0C2C  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4686  0C31  00B1               	movwf	?___ftmul+4
  4687  0C32  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4688  0C37  00B2               	movwf	?___ftmul+5
  4689  0C38  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4690  0C3D  24B6  120A  158A   	fcall	PL31	;call to abstracted procedure
  4691  0C40  303F               	movlw	63
  4692  0C41  01AD               	clrf	?___ftmul
  4693  0C42  01AE               	clrf	?___ftmul+1
  4694  0C43  24AE               	fcall	PL26	;call to abstracted procedure
  4695  0C44  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4696  0C49  2CA7               	ljmp	PL16	;call to abstracted procedure
  4697  0C4A                     l5355:	
  4698  0C4A  303F               	movlw	63
  4699  0C4B  01AD               	clrf	?___ftmul
  4700  0C4C  01AE               	clrf	?___ftmul+1
  4701  0C4D  00AF               	movwf	?___ftmul+2
  4702  0C4E  3003               	movlw	3
  4703  0C4F  00F9               	movwf	?___bmul
  4704  0C50  0851               	movf	fround@prec,w
  4705  0C51  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4706  0C56  3E01               	addlw	low (__npowers_-__stringbase)
  4707  0C57  0084               	movwf	4
  4708  0C58  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4709  0C5D  00B0               	movwf	?___ftmul+3
  4710  0C5E  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4711  0C63  00B1               	movwf	?___ftmul+4
  4712  0C64  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4713  0C69  00B2               	movwf	?___ftmul+5
  4714  0C6A  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4715  0C6F  2CA7               	ljmp	PL16	;call to abstracted procedure
  4716  0C70                     __end_of_fround:	
  4717  0C70                     __ptext544:	
  4718 ;; =============== function ___lbmod ends ============
  4719                           
  4720                           
  4721 ;; *************** function ___lbdiv *****************
  4722 ;; Defined at:
  4723 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lbdiv.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;  dividend        1    wreg     unsigned char 
  4726 ;;  divisor         1    5[COMMON] unsigned char 
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;  dividend        1    6[COMMON] unsigned char 
  4729 ;;  quotient        1    8[COMMON] unsigned char 
  4730 ;;  counter         1    7[COMMON] unsigned char 
  4731 ;; Return value:  Size  Location     Type
  4732 ;;                  1    wreg      unsigned char 
  4733 ;; Registers used:
  4734 ;;		wreg, status,2, status,0
  4735 ;; Tracked objects:
  4736 ;;		On entry : 60/0
  4737 ;;		On exit  : 60/0
  4738 ;;		Unchanged: FFF9F/0
  4739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4740 ;;      Params:         1       0       0       0       0
  4741 ;;      Locals:         3       0       0       0       0
  4742 ;;      Temps:          0       0       0       0       0
  4743 ;;      Totals:         4       0       0       0       0
  4744 ;;Total ram usage:        4 bytes
  4745 ;; Hardware stack levels used:    1
  4746 ;; This function calls:
  4747 ;;		Nothing
  4748 ;; This function is called by:
  4749 ;;		_fround
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752  0C70                     ___lbdiv:	
  4753                           
  4754                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  4755                           ;___lbdiv@dividend stored from wreg
  4756  0C70  00F6               	movwf	___lbdiv@dividend
  4757  0C71  01F8               	clrf	___lbdiv@quotient
  4758  0C72  0875               	movf	___lbdiv@divisor,w
  4759  0C73  1903               	btfsc	3,2
  4760  0C74  2C89               	goto	l4917
  4761  0C75  01F7               	clrf	___lbdiv@counter
  4762  0C76                     l4903:	
  4763  0C76  0AF7               	incf	___lbdiv@counter,f
  4764  0C77  1BF5               	btfsc	___lbdiv@divisor,7
  4765  0C78  2C7C               	goto	l2237
  4766  0C79  1003               	clrc
  4767  0C7A  0DF5               	rlf	___lbdiv@divisor,f
  4768  0C7B  2C76               	goto	l4903
  4769  0C7C                     l2237:	
  4770  0C7C  1003               	clrc
  4771  0C7D  0DF8               	rlf	___lbdiv@quotient,f
  4772  0C7E  0875               	movf	___lbdiv@divisor,w
  4773  0C7F  0276               	subwf	___lbdiv@dividend,w
  4774  0C80  1C03               	skipc
  4775  0C81  2C86               	goto	L17
  4776  0C82  0875               	movf	___lbdiv@divisor,w
  4777  0C83  02F6               	subwf	___lbdiv@dividend,f
  4778  0C84  1478               	bsf	___lbdiv@quotient,0
  4779  0C85  1003               	clrc
  4780  0C86                     L17:	
  4781  0C86  0CF5               	rrf	___lbdiv@divisor,f
  4782  0C87  0BF7               	decfsz	___lbdiv@counter,f
  4783  0C88  2C7C               	goto	l2237
  4784  0C89                     l4917:	
  4785  0C89  0878               	movf	___lbdiv@quotient,w
  4786  0C8A  0008               	return
  4787  0C8B                     __end_of___lbdiv:	
  4788  0C8B                     __ptext543:	
  4789 ;; =============== function ___ftpack ends ============
  4790                           
  4791                           
  4792 ;; *************** function ___lbmod *****************
  4793 ;; Defined at:
  4794 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lbmod.c"
  4795 ;; Parameters:    Size  Location     Type
  4796 ;;  dividend        1    wreg     unsigned char 
  4797 ;;  divisor         1    0[COMMON] unsigned char 
  4798 ;; Auto vars:     Size  Location     Type
  4799 ;;  dividend        1    2[COMMON] unsigned char 
  4800 ;;  rem             1    4[COMMON] unsigned char 
  4801 ;;  counter         1    3[COMMON] unsigned char 
  4802 ;; Return value:  Size  Location     Type
  4803 ;;                  1    wreg      unsigned char 
  4804 ;; Registers used:
  4805 ;;		wreg, status,2, status,0
  4806 ;; Tracked objects:
  4807 ;;		On entry : 60/0
  4808 ;;		On exit  : 60/0
  4809 ;;		Unchanged: FFF9F/0
  4810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4811 ;;      Params:         1       0       0       0       0
  4812 ;;      Locals:         3       0       0       0       0
  4813 ;;      Temps:          1       0       0       0       0
  4814 ;;      Totals:         5       0       0       0       0
  4815 ;;Total ram usage:        5 bytes
  4816 ;; Hardware stack levels used:    1
  4817 ;; This function calls:
  4818 ;;		Nothing
  4819 ;; This function is called by:
  4820 ;;		_fround
  4821 ;; This function uses a non-reentrant model
  4822 ;;
  4823  0C8B                     ___lbmod:	
  4824                           
  4825                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  4826                           ;___lbmod@dividend stored from wreg
  4827  0C8B  00F2               	movwf	___lbmod@dividend
  4828  0C8C  3008               	movlw	8
  4829  0C8D  00F3               	movwf	___lbmod@counter
  4830  0C8E  01F4               	clrf	___lbmod@rem
  4831  0C8F                     l4925:	
  4832  0C8F  0872               	movf	___lbmod@dividend,w
  4833  0C90  00F1               	movwf	??___lbmod
  4834  0C91  3007               	movlw	7
  4835  0C92  1003               	clrc
  4836  0C93                     L16:	
  4837  0C93  0CF1               	rrf	??___lbmod,f
  4838  0C94  3EFF               	addlw	-1
  4839  0C95  1003               	clrc
  4840  0C96  1D03               	skipz
  4841  0C97  2C93               	goto	L16
  4842  0C98  0D74               	rlf	___lbmod@rem,w
  4843  0C99  0471               	iorwf	??___lbmod,w
  4844  0C9A  00F4               	movwf	___lbmod@rem
  4845  0C9B  1003               	clrc
  4846  0C9C  0DF2               	rlf	___lbmod@dividend,f
  4847  0C9D  0870               	movf	___lbmod@divisor,w
  4848  0C9E  0274               	subwf	___lbmod@rem,w
  4849  0C9F  1C03               	skipc
  4850  0CA0  2CA3               	goto	l4933
  4851  0CA1  0870               	movf	___lbmod@divisor,w
  4852  0CA2  02F4               	subwf	___lbmod@rem,f
  4853  0CA3                     l4933:	
  4854  0CA3  0BF3               	decfsz	___lbmod@counter,f
  4855  0CA4  2C8F               	goto	l4925
  4856  0CA5  0874               	movf	___lbmod@rem,w
  4857  0CA6  0008               	return
  4858  0CA7                     __end_of___lbmod:	
  4859  0CA7                     PL16:	
  4860  0CA7  082D               	movf	?___ftmul,w
  4861  0CA8  00C8               	movwf	?_fround
  4862  0CA9  082E               	movf	?___ftmul+1,w
  4863  0CAA  00C9               	movwf	?_fround+1
  4864  0CAB  082F               	movf	?___ftmul+2,w
  4865  0CAC  00CA               	movwf	?_fround+2
  4866  0CAD  0008               	return
  4867  0CAE                     PL26:	
  4868  0CAE  00AF               	movwf	?___ftmul+2
  4869  0CAF  084E               	movf	_fround$2843,w
  4870  0CB0  00B0               	movwf	?___ftmul+3
  4871  0CB1  084F               	movf	_fround$2843+1,w
  4872  0CB2  00B1               	movwf	?___ftmul+4
  4873  0CB3  0850               	movf	_fround$2843+2,w
  4874  0CB4  00B2               	movwf	?___ftmul+5
  4875  0CB5  0008               	return
  4876  0CB6                     PL31:	
  4877  0CB6  082D               	movf	?___ftmul,w
  4878  0CB7  00CE               	movwf	_fround$2843
  4879  0CB8  082E               	movf	?___ftmul+1,w
  4880  0CB9  00CF               	movwf	_fround$2843+1
  4881  0CBA  082F               	movf	?___ftmul+2,w
  4882  0CBB  00D0               	movwf	_fround$2843+2
  4883  0CBC  0008               	return
  4884                           
  4885                           	psect	text531
  4886  0CBD                     __ptext531:	
  4887 ;; =============== function ___lltoft ends ============
  4888                           
  4889                           
  4890 ;; *************** function ___awtoft *****************
  4891 ;; Defined at:
  4892 ;;		line 33 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awtoft.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;  c               2    8[COMMON] int 
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;  sign            1   11[COMMON] unsigned char 
  4897 ;; Return value:  Size  Location     Type
  4898 ;;                  3    8[COMMON] float 
  4899 ;; Registers used:
  4900 ;;		wreg, status,2, status,0, pclath, cstack
  4901 ;; Tracked objects:
  4902 ;;		On entry : 60/20
  4903 ;;		On exit  : 60/20
  4904 ;;		Unchanged: FFF9F/0
  4905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4906 ;;      Params:         3       0       0       0       0
  4907 ;;      Locals:         1       0       0       0       0
  4908 ;;      Temps:          0       0       0       0       0
  4909 ;;      Totals:         4       0       0       0       0
  4910 ;;Total ram usage:        4 bytes
  4911 ;; Hardware stack levels used:    1
  4912 ;; Hardware stack levels required when called:    1
  4913 ;; This function calls:
  4914 ;;		___ftpack
  4915 ;; This function is called by:
  4916 ;;		_main
  4917 ;; This function uses a non-reentrant model
  4918 ;;
  4919  0CBD                     ___awtoft:	
  4920                           
  4921                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  4922  0CBD  01FB               	clrf	___awtoft@sign
  4923  0CBE  1FF9               	btfss	___awtoft@c+1,7
  4924  0CBF  2CC7               	goto	l5309
  4925  0CC0  09F8               	comf	___awtoft@c,f
  4926  0CC1  09F9               	comf	___awtoft@c+1,f
  4927  0CC2  0AF8               	incf	___awtoft@c,f
  4928  0CC3  1903               	skipnz
  4929  0CC4  0AF9               	incf	___awtoft@c+1,f
  4930  0CC5  01FB               	clrf	___awtoft@sign
  4931  0CC6  0AFB               	incf	___awtoft@sign,f
  4932  0CC7                     l5309:	
  4933  0CC7  0878               	movf	___awtoft@c,w
  4934  0CC8  00F0               	movwf	?___ftpack
  4935  0CC9  0879               	movf	___awtoft@c+1,w
  4936  0CCA  00F1               	movwf	?___ftpack+1
  4937  0CCB  308E               	movlw	142
  4938  0CCC  01F2               	clrf	?___ftpack+2
  4939  0CCD  00F3               	movwf	?___ftpack+3
  4940  0CCE  087B               	movf	___awtoft@sign,w
  4941  0CCF  00F4               	movwf	?___ftpack+4
  4942  0CD0  2769               	fcall	___ftpack
  4943  0CD1  0870               	movf	?___ftpack,w
  4944  0CD2  00F8               	movwf	?___awtoft
  4945  0CD3  0871               	movf	?___ftpack+1,w
  4946  0CD4  00F9               	movwf	?___awtoft+1
  4947  0CD5  0872               	movf	?___ftpack+2,w
  4948  0CD6  00FA               	movwf	?___awtoft+2
  4949  0CD7  0008               	return
  4950  0CD8                     __end_of___awtoft:	
  4951  0CD8                     __ptext527:	
  4952 ;; =============== function ___ftsub ends ============
  4953                           
  4954                           
  4955 ;; *************** function _scale *****************
  4956 ;; Defined at:
  4957 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;  scl             1    wreg     char 
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;  scl             1   38[BANK0 ] char 
  4962 ;; Return value:  Size  Location     Type
  4963 ;;                  3   28[BANK0 ] char 
  4964 ;; Registers used:
  4965 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4966 ;; Tracked objects:
  4967 ;;		On entry : 60/20
  4968 ;;		On exit  : 60/0
  4969 ;;		Unchanged: FFF9F/0
  4970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4971 ;;      Params:         0       3       0       0       0
  4972 ;;      Locals:         0       4       0       0       0
  4973 ;;      Temps:          0       4       0       0       0
  4974 ;;      Totals:         0      11       0       0       0
  4975 ;;Total ram usage:       11 bytes
  4976 ;; Hardware stack levels used:    1
  4977 ;; Hardware stack levels required when called:    2
  4978 ;; This function calls:
  4979 ;;		___awmod
  4980 ;;		___awdiv
  4981 ;;		___ftmul
  4982 ;;		___bmul
  4983 ;; This function is called by:
  4984 ;;		_sprintf
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987  0CD8                     _scale:	
  4988                           
  4989                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4990                           ;scale@scl stored from wreg
  4991  0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  4992  0CD9  00C6               	movwf	scale@scl
  4993  0CDA  1FC6               	btfss	scale@scl,7
  4994  0CDB  2DA4               	goto	l5381
  4995  0CDC  09C6               	comf	scale@scl,f
  4996  0CDD  0AC6               	incf	scale@scl,f
  4997  0CDE  0846               	movf	scale@scl,w
  4998  0CDF  3A80               	xorlw	128
  4999  0CE0  3E12               	addlw	-238
  5000  0CE1  1C03               	skipc
  5001  0CE2  2D48               	goto	l5371
  5002  0CE3  300A               	movlw	10
  5003  0CE4  27CB  120A  158A   	fcall	PL15	;call to abstracted procedure
  5004  0CE7  26AF  120A  158A   	fcall	___awmod
  5005  0CEA  0871               	movf	?___awmod+1,w
  5006  0CEB  00F9               	movwf	?___awdiv+3
  5007  0CEC  0870               	movf	?___awmod,w
  5008  0CED  00F8               	movwf	?___awdiv+2
  5009  0CEE  266A  120A  158A   	fcall	___awdiv
  5010  0CF1  27E0               	fcall	PL23	;call to abstracted procedure
  5011  0CF2  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5012  0CF3  0084               	movwf	4
  5013  0CF4  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5014  0CF9  00AD               	movwf	?___ftmul
  5015  0CFA  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5016  0CFF  00AE               	movwf	?___ftmul+1
  5017  0D00  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5018  0D05  27F0  120A  158A   	fcall	PL25	;call to abstracted procedure
  5019  0D08  1BF8               	btfsc	?___awdiv+2,7
  5020  0D09  03F9               	decf	?___awdiv+3,f
  5021  0D0A  266A  120A  158A   	fcall	___awdiv
  5022  0D0D  27AF               	fcall	PL7	;call to abstracted procedure
  5023  0D0E  3E37               	addlw	low ((__npowers_-__stringbase+54))
  5024  0D0F  0084               	movwf	4
  5025  0D10  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5026  0D15  00B0               	movwf	?___ftmul+3
  5027  0D16  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5028  0D1B  00B1               	movwf	?___ftmul+4
  5029  0D1C  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5030  0D21  00B2               	movwf	?___ftmul+5
  5031  0D22  26EC  120A  158A   	fcall	___ftmul
  5032  0D25  27B7  120A  158A   	fcall	PL8	;call to abstracted procedure
  5033  0D28  1BF2               	btfsc	?___awmod+2,7
  5034  0D29  03F3               	decf	?___awmod+3,f
  5035  0D2A  26AF  120A  158A   	fcall	___awmod
  5036  0D2D  27A7               	fcall	PL6	;call to abstracted procedure
  5037  0D2E  3E01               	addlw	low (__npowers_-__stringbase)
  5038  0D2F  0084               	movwf	4
  5039  0D30  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5040  0D35  00AD               	movwf	?___ftmul
  5041  0D36  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5042  0D3B  00AE               	movwf	?___ftmul+1
  5043  0D3C  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5044  0D41  27E8  120A  158A   	fcall	PL24	;call to abstracted procedure
  5045  0D44  26EC  120A  158A   	fcall	___ftmul
  5046  0D47  2FC4               	ljmp	PL9	;call to abstracted procedure
  5047  0D48                     l5371:	
  5048  0D48  0846               	movf	scale@scl,w
  5049  0D49  3A80               	xorlw	128
  5050  0D4A  3E75               	addlw	-139
  5051  0D4B  1C03               	skipc
  5052  0D4C  2D8D               	goto	l5377
  5053  0D4D  300A               	movlw	10
  5054  0D4E  00F0               	movwf	?___awmod
  5055  0D4F  01F1               	clrf	?___awmod+1
  5056  0D50  0846               	movf	scale@scl,w
  5057  0D51  00F2               	movwf	?___awmod+2
  5058  0D52  01F3               	clrf	?___awmod+3
  5059  0D53  1BF2               	btfsc	?___awmod+2,7
  5060  0D54  03F3               	decf	?___awmod+3,f
  5061  0D55  26AF  120A  158A   	fcall	___awmod
  5062  0D58  27A7               	fcall	PL6	;call to abstracted procedure
  5063  0D59  3E01               	addlw	low (__npowers_-__stringbase)
  5064  0D5A  0084               	movwf	4
  5065  0D5B  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5066  0D60  00AD               	movwf	?___ftmul
  5067  0D61  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5068  0D66  00AE               	movwf	?___ftmul+1
  5069  0D67  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5070  0D6C  27F8  120A  158A   	fcall	PL28	;call to abstracted procedure
  5071  0D6F  1BF8               	btfsc	?___awdiv+2,7
  5072  0D70  03F9               	decf	?___awdiv+3,f
  5073  0D71  266A  120A  158A   	fcall	___awdiv
  5074  0D74  27AF               	fcall	PL7	;call to abstracted procedure
  5075  0D75  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5076  0D76  0084               	movwf	4
  5077  0D77  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5078  0D7C  00B0               	movwf	?___ftmul+3
  5079  0D7D  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5080  0D82  00B1               	movwf	?___ftmul+4
  5081  0D83  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5082  0D88  00B2               	movwf	?___ftmul+5
  5083  0D89  26EC  120A  158A   	fcall	___ftmul
  5084  0D8C  2FC4               	ljmp	PL9	;call to abstracted procedure
  5085  0D8D                     l5377:	
  5086  0D8D  3003               	movlw	3
  5087  0D8E  00F9               	movwf	?___bmul
  5088  0D8F  0846               	movf	scale@scl,w
  5089  0D90  275B               	fcall	___bmul
  5090  0D91  3E01               	addlw	low (__npowers_-__stringbase)
  5091  0D92  0084               	movwf	4
  5092  0D93  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5093  0D98  00BC               	movwf	?_scale
  5094  0D99  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5095  0D9E  00BD               	movwf	?_scale+1
  5096  0D9F  120A  158A  200A   	fcall	stringdir
  5097  0DA2  00BE               	movwf	?_scale+2
  5098  0DA3  0008               	return
  5099  0DA4                     l5381:	
  5100  0DA4  0846               	movf	scale@scl,w
  5101  0DA5  3A80               	xorlw	128
  5102  0DA6  3E12               	addlw	-238
  5103  0DA7  1C03               	skipc
  5104  0DA8  2E0E               	goto	l5389
  5105  0DA9  300A               	movlw	10
  5106  0DAA  27CB  120A  158A   	fcall	PL15	;call to abstracted procedure
  5107  0DAD  26AF  120A  158A   	fcall	___awmod
  5108  0DB0  0871               	movf	?___awmod+1,w
  5109  0DB1  00F9               	movwf	?___awdiv+3
  5110  0DB2  0870               	movf	?___awmod,w
  5111  0DB3  00F8               	movwf	?___awdiv+2
  5112  0DB4  266A  120A  158A   	fcall	___awdiv
  5113  0DB7  27E0               	fcall	PL23	;call to abstracted procedure
  5114  0DB8  3E43               	addlw	low ((__powers_-__stringbase+27))
  5115  0DB9  0084               	movwf	4
  5116  0DBA  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5117  0DBF  00AD               	movwf	?___ftmul
  5118  0DC0  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5119  0DC5  00AE               	movwf	?___ftmul+1
  5120  0DC6  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5121  0DCB  27F0  120A  158A   	fcall	PL25	;call to abstracted procedure
  5122  0DCE  1BF8               	btfsc	?___awdiv+2,7
  5123  0DCF  03F9               	decf	?___awdiv+3,f
  5124  0DD0  266A  120A  158A   	fcall	___awdiv
  5125  0DD3  27AF               	fcall	PL7	;call to abstracted procedure
  5126  0DD4  3E5E               	addlw	low ((__powers_-__stringbase+54))
  5127  0DD5  0084               	movwf	4
  5128  0DD6  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5129  0DDB  00B0               	movwf	?___ftmul+3
  5130  0DDC  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5131  0DE1  00B1               	movwf	?___ftmul+4
  5132  0DE2  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5133  0DE7  00B2               	movwf	?___ftmul+5
  5134  0DE8  26EC  120A  158A   	fcall	___ftmul
  5135  0DEB  27B7  120A  158A   	fcall	PL8	;call to abstracted procedure
  5136  0DEE  1BF2               	btfsc	?___awmod+2,7
  5137  0DEF  03F3               	decf	?___awmod+3,f
  5138  0DF0  26AF  120A  158A   	fcall	___awmod
  5139  0DF3  27A7               	fcall	PL6	;call to abstracted procedure
  5140  0DF4  3E28               	addlw	low (__powers_-__stringbase)
  5141  0DF5  0084               	movwf	4
  5142  0DF6  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5143  0DFB  00AD               	movwf	?___ftmul
  5144  0DFC  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5145  0E01  00AE               	movwf	?___ftmul+1
  5146  0E02  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5147  0E07  27E8  120A  158A   	fcall	PL24	;call to abstracted procedure
  5148  0E0A  26EC  120A  158A   	fcall	___ftmul
  5149  0E0D  2FC4               	ljmp	PL9	;call to abstracted procedure
  5150  0E0E                     l5389:	
  5151  0E0E  0846               	movf	scale@scl,w
  5152  0E0F  3A80               	xorlw	128
  5153  0E10  3E75               	addlw	-139
  5154  0E11  1C03               	skipc
  5155  0E12  2E53               	goto	l5395
  5156  0E13  300A               	movlw	10
  5157  0E14  00F0               	movwf	?___awmod
  5158  0E15  01F1               	clrf	?___awmod+1
  5159  0E16  0846               	movf	scale@scl,w
  5160  0E17  00F2               	movwf	?___awmod+2
  5161  0E18  01F3               	clrf	?___awmod+3
  5162  0E19  1BF2               	btfsc	?___awmod+2,7
  5163  0E1A  03F3               	decf	?___awmod+3,f
  5164  0E1B  26AF  120A  158A   	fcall	___awmod
  5165  0E1E  27A7               	fcall	PL6	;call to abstracted procedure
  5166  0E1F  3E28               	addlw	low (__powers_-__stringbase)
  5167  0E20  0084               	movwf	4
  5168  0E21  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5169  0E26  00AD               	movwf	?___ftmul
  5170  0E27  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5171  0E2C  00AE               	movwf	?___ftmul+1
  5172  0E2D  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5173  0E32  27F8  120A  158A   	fcall	PL28	;call to abstracted procedure
  5174  0E35  1BF8               	btfsc	?___awdiv+2,7
  5175  0E36  03F9               	decf	?___awdiv+3,f
  5176  0E37  266A  120A  158A   	fcall	___awdiv
  5177  0E3A  27AF               	fcall	PL7	;call to abstracted procedure
  5178  0E3B  3E43               	addlw	low ((__powers_-__stringbase+27))
  5179  0E3C  0084               	movwf	4
  5180  0E3D  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5181  0E42  00B0               	movwf	?___ftmul+3
  5182  0E43  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5183  0E48  00B1               	movwf	?___ftmul+4
  5184  0E49  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5185  0E4E  00B2               	movwf	?___ftmul+5
  5186  0E4F  26EC  120A  158A   	fcall	___ftmul
  5187  0E52  2FC4               	ljmp	PL9	;call to abstracted procedure
  5188  0E53                     l5395:	
  5189  0E53  3003               	movlw	3
  5190  0E54  00F9               	movwf	?___bmul
  5191  0E55  0846               	movf	scale@scl,w
  5192  0E56  275B               	fcall	___bmul
  5193  0E57  3E28               	addlw	low (__powers_-__stringbase)
  5194  0E58  0084               	movwf	4
  5195  0E59  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5196  0E5E  00BC               	movwf	?_scale
  5197  0E5F  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5198  0E64  00BD               	movwf	?_scale+1
  5199  0E65  120A  158A  200A   	fcall	stringdir
  5200  0E68  00BE               	movwf	?_scale+2
  5201  0E69  0008               	return
  5202  0E6A                     __end_of_scale:	
  5203  0E6A                     __ptext540:	
  5204 ;; =============== function ___llmod ends ============
  5205                           
  5206                           
  5207 ;; *************** function ___awdiv *****************
  5208 ;; Defined at:
  5209 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awdiv.c"
  5210 ;; Parameters:    Size  Location     Type
  5211 ;;  divisor         2    6[COMMON] int 
  5212 ;;  dividend        2    8[COMMON] int 
  5213 ;; Auto vars:     Size  Location     Type
  5214 ;;  quotient        2   12[COMMON] int 
  5215 ;;  sign            1   11[COMMON] unsigned char 
  5216 ;;  counter         1   10[COMMON] unsigned char 
  5217 ;; Return value:  Size  Location     Type
  5218 ;;                  2    6[COMMON] int 
  5219 ;; Registers used:
  5220 ;;		wreg, status,2, status,0
  5221 ;; Tracked objects:
  5222 ;;		On entry : 40/20
  5223 ;;		On exit  : 40/20
  5224 ;;		Unchanged: FFFBF/0
  5225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5226 ;;      Params:         4       0       0       0       0
  5227 ;;      Locals:         4       0       0       0       0
  5228 ;;      Temps:          0       0       0       0       0
  5229 ;;      Totals:         8       0       0       0       0
  5230 ;;Total ram usage:        8 bytes
  5231 ;; Hardware stack levels used:    1
  5232 ;; This function calls:
  5233 ;;		Nothing
  5234 ;; This function is called by:
  5235 ;;		_scale
  5236 ;;		_sprintf
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239  0E6A                     ___awdiv:	
  5240                           
  5241                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5242  0E6A  01FB               	clrf	___awdiv@sign
  5243  0E6B  1FF7               	btfss	___awdiv@divisor+1,7
  5244  0E6C  2E74               	goto	l5013
  5245  0E6D  09F6               	comf	___awdiv@divisor,f
  5246  0E6E  09F7               	comf	___awdiv@divisor+1,f
  5247  0E6F  0AF6               	incf	___awdiv@divisor,f
  5248  0E70  1903               	skipnz
  5249  0E71  0AF7               	incf	___awdiv@divisor+1,f
  5250  0E72  01FB               	clrf	___awdiv@sign
  5251  0E73  0AFB               	incf	___awdiv@sign,f
  5252  0E74                     l5013:	
  5253  0E74  1FF9               	btfss	___awdiv@dividend+1,7
  5254  0E75  2E7D               	goto	l5019
  5255  0E76  09F8               	comf	___awdiv@dividend,f
  5256  0E77  09F9               	comf	___awdiv@dividend+1,f
  5257  0E78  0AF8               	incf	___awdiv@dividend,f
  5258  0E79  1903               	skipnz
  5259  0E7A  0AF9               	incf	___awdiv@dividend+1,f
  5260  0E7B  3001               	movlw	1
  5261  0E7C  06FB               	xorwf	___awdiv@sign,f
  5262  0E7D                     l5019:	
  5263  0E7D  01FC               	clrf	___awdiv@quotient
  5264  0E7E  01FD               	clrf	___awdiv@quotient+1
  5265  0E7F  0877               	movf	___awdiv@divisor+1,w
  5266  0E80  0476               	iorwf	___awdiv@divisor,w
  5267  0E81  1903               	skipnz
  5268  0E82  2EA2               	goto	l5041
  5269  0E83  01FA               	clrf	___awdiv@counter
  5270  0E84                     L14:	
  5271  0E84  0AFA               	incf	___awdiv@counter,f
  5272  0E85  1BF7               	btfsc	___awdiv@divisor+1,7
  5273  0E86  2E8B               	goto	l5029
  5274  0E87  1003               	clrc
  5275  0E88  0DF6               	rlf	___awdiv@divisor,f
  5276  0E89  0DF7               	rlf	___awdiv@divisor+1,f
  5277  0E8A  2E84               	goto	L14
  5278  0E8B                     l5029:	
  5279  0E8B  1003               	clrc
  5280  0E8C  0DFC               	rlf	___awdiv@quotient,f
  5281  0E8D  0DFD               	rlf	___awdiv@quotient+1,f
  5282  0E8E  0877               	movf	___awdiv@divisor+1,w
  5283  0E8F  0279               	subwf	___awdiv@dividend+1,w
  5284  0E90  1D03               	skipz
  5285  0E91  2E94               	goto	u2115
  5286  0E92  0876               	movf	___awdiv@divisor,w
  5287  0E93  0278               	subwf	___awdiv@dividend,w
  5288  0E94                     u2115:	
  5289  0E94  1C03               	skipc
  5290  0E95  2E9E               	goto	L15
  5291  0E96  0876               	movf	___awdiv@divisor,w
  5292  0E97  02F8               	subwf	___awdiv@dividend,f
  5293  0E98  0877               	movf	___awdiv@divisor+1,w
  5294  0E99  1C03               	skipc
  5295  0E9A  03F9               	decf	___awdiv@dividend+1,f
  5296  0E9B  02F9               	subwf	___awdiv@dividend+1,f
  5297  0E9C  147C               	bsf	___awdiv@quotient,0
  5298  0E9D  1003               	clrc
  5299  0E9E                     L15:	
  5300  0E9E  0CF7               	rrf	___awdiv@divisor+1,f
  5301  0E9F  0CF6               	rrf	___awdiv@divisor,f
  5302  0EA0  0BFA               	decfsz	___awdiv@counter,f
  5303  0EA1  2E8B               	goto	l5029
  5304  0EA2                     l5041:	
  5305  0EA2  087B               	movf	___awdiv@sign,w
  5306  0EA3  1903               	btfsc	3,2
  5307  0EA4  2EAA               	goto	l5045
  5308  0EA5  09FC               	comf	___awdiv@quotient,f
  5309  0EA6  09FD               	comf	___awdiv@quotient+1,f
  5310  0EA7  0AFC               	incf	___awdiv@quotient,f
  5311  0EA8  1903               	skipnz
  5312  0EA9  0AFD               	incf	___awdiv@quotient+1,f
  5313  0EAA                     l5045:	
  5314  0EAA  087D               	movf	___awdiv@quotient+1,w
  5315  0EAB  00F7               	movwf	?___awdiv+1
  5316  0EAC  087C               	movf	___awdiv@quotient,w
  5317  0EAD  00F6               	movwf	?___awdiv
  5318  0EAE  0008               	return
  5319  0EAF                     __end_of___awdiv:	
  5320  0EAF                     __ptext535:	
  5321 ;; =============== function _pause ends ============
  5322                           
  5323                           
  5324 ;; *************** function ___awmod *****************
  5325 ;; Defined at:
  5326 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awmod.c"
  5327 ;; Parameters:    Size  Location     Type
  5328 ;;  divisor         2    0[COMMON] int 
  5329 ;;  dividend        2    2[COMMON] int 
  5330 ;; Auto vars:     Size  Location     Type
  5331 ;;  sign            1    5[COMMON] unsigned char 
  5332 ;;  counter         1    4[COMMON] unsigned char 
  5333 ;; Return value:  Size  Location     Type
  5334 ;;                  2    0[COMMON] int 
  5335 ;; Registers used:
  5336 ;;		wreg, status,2, status,0
  5337 ;; Tracked objects:
  5338 ;;		On entry : 60/0
  5339 ;;		On exit  : 60/0
  5340 ;;		Unchanged: FFF9F/0
  5341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5342 ;;      Params:         4       0       0       0       0
  5343 ;;      Locals:         2       0       0       0       0
  5344 ;;      Temps:          0       0       0       0       0
  5345 ;;      Totals:         6       0       0       0       0
  5346 ;;Total ram usage:        6 bytes
  5347 ;; Hardware stack levels used:    1
  5348 ;; This function calls:
  5349 ;;		Nothing
  5350 ;; This function is called by:
  5351 ;;		_scale
  5352 ;; This function uses a non-reentrant model
  5353 ;;
  5354  0EAF                     ___awmod:	
  5355                           
  5356                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5357  0EAF  01F5               	clrf	___awmod@sign
  5358  0EB0  1FF3               	btfss	___awmod@dividend+1,7
  5359  0EB1  2EB9               	goto	l5131
  5360  0EB2  09F2               	comf	___awmod@dividend,f
  5361  0EB3  09F3               	comf	___awmod@dividend+1,f
  5362  0EB4  0AF2               	incf	___awmod@dividend,f
  5363  0EB5  1903               	skipnz
  5364  0EB6  0AF3               	incf	___awmod@dividend+1,f
  5365  0EB7  01F5               	clrf	___awmod@sign
  5366  0EB8  0AF5               	incf	___awmod@sign,f
  5367  0EB9                     l5131:	
  5368  0EB9  1FF1               	btfss	___awmod@divisor+1,7
  5369  0EBA  2EC0               	goto	l5135
  5370  0EBB  09F0               	comf	___awmod@divisor,f
  5371  0EBC  09F1               	comf	___awmod@divisor+1,f
  5372  0EBD  0AF0               	incf	___awmod@divisor,f
  5373  0EBE  1903               	skipnz
  5374  0EBF  0AF1               	incf	___awmod@divisor+1,f
  5375  0EC0                     l5135:	
  5376  0EC0  0871               	movf	___awmod@divisor+1,w
  5377  0EC1  0470               	iorwf	___awmod@divisor,w
  5378  0EC2  1903               	skipnz
  5379  0EC3  2EDF               	goto	l5151
  5380  0EC4  01F4               	clrf	___awmod@counter
  5381  0EC5                     L7:	
  5382  0EC5  0AF4               	incf	___awmod@counter,f
  5383  0EC6  1BF1               	btfsc	___awmod@divisor+1,7
  5384  0EC7  2ECC               	goto	l5143
  5385  0EC8  1003               	clrc
  5386  0EC9  0DF0               	rlf	___awmod@divisor,f
  5387  0ECA  0DF1               	rlf	___awmod@divisor+1,f
  5388  0ECB  2EC5               	goto	L7
  5389  0ECC                     l5143:	
  5390  0ECC  0871               	movf	___awmod@divisor+1,w
  5391  0ECD  0273               	subwf	___awmod@dividend+1,w
  5392  0ECE  1D03               	skipz
  5393  0ECF  2ED2               	goto	u2305
  5394  0ED0  0870               	movf	___awmod@divisor,w
  5395  0ED1  0272               	subwf	___awmod@dividend,w
  5396  0ED2                     u2305:	
  5397  0ED2  1C03               	skipc
  5398  0ED3  2EDB               	goto	L8
  5399  0ED4  0870               	movf	___awmod@divisor,w
  5400  0ED5  02F2               	subwf	___awmod@dividend,f
  5401  0ED6  0871               	movf	___awmod@divisor+1,w
  5402  0ED7  1C03               	skipc
  5403  0ED8  03F3               	decf	___awmod@dividend+1,f
  5404  0ED9  02F3               	subwf	___awmod@dividend+1,f
  5405  0EDA  1003               	clrc
  5406  0EDB                     L8:	
  5407  0EDB  0CF1               	rrf	___awmod@divisor+1,f
  5408  0EDC  0CF0               	rrf	___awmod@divisor,f
  5409  0EDD  0BF4               	decfsz	___awmod@counter,f
  5410  0EDE  2ECC               	goto	l5143
  5411  0EDF                     l5151:	
  5412  0EDF  0875               	movf	___awmod@sign,w
  5413  0EE0  1903               	btfsc	3,2
  5414  0EE1  2EE7               	goto	l5155
  5415  0EE2  09F2               	comf	___awmod@dividend,f
  5416  0EE3  09F3               	comf	___awmod@dividend+1,f
  5417  0EE4  0AF2               	incf	___awmod@dividend,f
  5418  0EE5  1903               	skipnz
  5419  0EE6  0AF3               	incf	___awmod@dividend+1,f
  5420  0EE7                     l5155:	
  5421  0EE7  0873               	movf	___awmod@dividend+1,w
  5422  0EE8  00F1               	movwf	?___awmod+1
  5423  0EE9  0872               	movf	___awmod@dividend,w
  5424  0EEA  00F0               	movwf	?___awmod
  5425  0EEB  0008               	return
  5426  0EEC                     __end_of___awmod:	
  5427  0EEC                     __ptext532:	
  5428 ;; =============== function ___awtoft ends ============
  5429                           
  5430                           
  5431 ;; *************** function ___ftmul *****************
  5432 ;; Defined at:
  5433 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftmul.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;  f1              3   13[BANK0 ] float 
  5436 ;;  f2              3   16[BANK0 ] float 
  5437 ;; Auto vars:     Size  Location     Type
  5438 ;;  f3_as_produc    3   23[BANK0 ] unsigned um
  5439 ;;  sign            1   27[BANK0 ] unsigned char 
  5440 ;;  cntr            1   26[BANK0 ] unsigned char 
  5441 ;;  exp             1   22[BANK0 ] unsigned char 
  5442 ;; Return value:  Size  Location     Type
  5443 ;;                  3   13[BANK0 ] float 
  5444 ;; Registers used:
  5445 ;;		wreg, status,2, status,0, pclath, cstack
  5446 ;; Tracked objects:
  5447 ;;		On entry : 60/0
  5448 ;;		On exit  : 60/0
  5449 ;;		Unchanged: FFF9F/0
  5450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5451 ;;      Params:         0       6       0       0       0
  5452 ;;      Locals:         0       6       0       0       0
  5453 ;;      Temps:          0       3       0       0       0
  5454 ;;      Totals:         0      15       0       0       0
  5455 ;;Total ram usage:       15 bytes
  5456 ;; Hardware stack levels used:    1
  5457 ;; Hardware stack levels required when called:    1
  5458 ;; This function calls:
  5459 ;;		___ftpack
  5460 ;; This function is called by:
  5461 ;;		_main
  5462 ;;		_fround
  5463 ;;		_scale
  5464 ;;		_sprintf
  5465 ;; This function uses a non-reentrant model
  5466 ;;
  5467  0EEC                     ___ftmul:	
  5468                           
  5469                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5470  0EEC  082D               	movf	___ftmul@f1,w
  5471  0EED  00B3               	movwf	??___ftmul
  5472  0EEE  082E               	movf	___ftmul@f1+1,w
  5473  0EEF  00B4               	movwf	??___ftmul+1
  5474  0EF0  082F               	movf	___ftmul@f1+2,w
  5475  0EF1  00B5               	movwf	??___ftmul+2
  5476  0EF2  1003               	clrc
  5477  0EF3  0D34               	rlf	??___ftmul+1,w
  5478  0EF4  0D35               	rlf	??___ftmul+2,w
  5479  0EF5  00B6               	movwf	___ftmul@exp
  5480  0EF6  08B6               	movf	___ftmul@exp,f
  5481  0EF7  1D03               	skipz
  5482  0EF8  2EFD               	goto	l5251
  5483  0EF9  01AD               	clrf	?___ftmul
  5484  0EFA  01AE               	clrf	?___ftmul+1
  5485  0EFB  01AF               	clrf	?___ftmul+2
  5486  0EFC  0008               	return
  5487  0EFD                     l5251:	
  5488  0EFD  0830               	movf	___ftmul@f2,w
  5489  0EFE  00B3               	movwf	??___ftmul
  5490  0EFF  0831               	movf	___ftmul@f2+1,w
  5491  0F00  00B4               	movwf	??___ftmul+1
  5492  0F01  0832               	movf	___ftmul@f2+2,w
  5493  0F02  00B5               	movwf	??___ftmul+2
  5494  0F03  1003               	clrc
  5495  0F04  0D34               	rlf	??___ftmul+1,w
  5496  0F05  0D35               	rlf	??___ftmul+2,w
  5497  0F06  00BB               	movwf	___ftmul@sign
  5498  0F07  08BB               	movf	___ftmul@sign,f
  5499  0F08  1D03               	skipz
  5500  0F09  2F0E               	goto	l5257
  5501  0F0A  01AD               	clrf	?___ftmul
  5502  0F0B  01AE               	clrf	?___ftmul+1
  5503  0F0C  01AF               	clrf	?___ftmul+2
  5504  0F0D  0008               	return
  5505  0F0E                     l5257:	
  5506  0F0E  083B               	movf	___ftmul@sign,w
  5507  0F0F  3E7B               	addlw	123
  5508  0F10  07B6               	addwf	___ftmul@exp,f
  5509  0F11  082F               	movf	___ftmul@f1+2,w
  5510  0F12  00BB               	movwf	___ftmul@sign
  5511  0F13  0832               	movf	___ftmul@f2+2,w
  5512  0F14  06BB               	xorwf	___ftmul@sign,f
  5513  0F15  3080               	movlw	128
  5514  0F16  05BB               	andwf	___ftmul@sign,f
  5515  0F17  3007               	movlw	7
  5516  0F18  17AE               	bsf	___ftmul@f1+1,7
  5517  0F19  17B1               	bsf	___ftmul@f2+1,7
  5518  0F1A  01B2               	clrf	___ftmul@f2+2
  5519  0F1B  01B7               	clrf	___ftmul@f3_as_product
  5520  0F1C  01B8               	clrf	___ftmul@f3_as_product+1
  5521  0F1D  01B9               	clrf	___ftmul@f3_as_product+2
  5522  0F1E  00BA               	movwf	___ftmul@cntr
  5523  0F1F                     l5275:	
  5524  0F1F  1C2D               	btfss	___ftmul@f1,0
  5525  0F20  2F29               	goto	l5279
  5526  0F21  0830               	movf	___ftmul@f2,w
  5527  0F22  27D6  120A  158A   	fcall	PL18	;call to abstracted procedure
  5528  0F25  1803               	skipnc
  5529  0F26  0A32               	incf	___ftmul@f2+2,w
  5530  0F27  1D03               	btfss	3,2
  5531  0F28  07B9               	addwf	___ftmul@f3_as_product+2,f
  5532  0F29                     l5279:	
  5533  0F29  1003               	clrc
  5534  0F2A  0CAF               	rrf	___ftmul@f1+2,f
  5535  0F2B  0CAE               	rrf	___ftmul@f1+1,f
  5536  0F2C  0CAD               	rrf	___ftmul@f1,f
  5537  0F2D  1003               	clrc
  5538  0F2E  0DB0               	rlf	___ftmul@f2,f
  5539  0F2F  0DB1               	rlf	___ftmul@f2+1,f
  5540  0F30  0DB2               	rlf	___ftmul@f2+2,f
  5541  0F31  0BBA               	decfsz	___ftmul@cntr,f
  5542  0F32  2F1F               	goto	l5275
  5543  0F33  3009               	movlw	9
  5544  0F34  00BA               	movwf	___ftmul@cntr
  5545  0F35                     l5287:	
  5546  0F35  1C2D               	btfss	___ftmul@f1,0
  5547  0F36  2F3F               	goto	l5291
  5548  0F37  0830               	movf	___ftmul@f2,w
  5549  0F38  27D6  120A  158A   	fcall	PL18	;call to abstracted procedure
  5550  0F3B  1803               	skipnc
  5551  0F3C  0A32               	incf	___ftmul@f2+2,w
  5552  0F3D  1D03               	btfss	3,2
  5553  0F3E  07B9               	addwf	___ftmul@f3_as_product+2,f
  5554  0F3F                     l5291:	
  5555  0F3F  1003               	clrc
  5556  0F40  0CAF               	rrf	___ftmul@f1+2,f
  5557  0F41  0CAE               	rrf	___ftmul@f1+1,f
  5558  0F42  0CAD               	rrf	___ftmul@f1,f
  5559  0F43  1003               	clrc
  5560  0F44  0CB9               	rrf	___ftmul@f3_as_product+2,f
  5561  0F45  0CB8               	rrf	___ftmul@f3_as_product+1,f
  5562  0F46  0CB7               	rrf	___ftmul@f3_as_product,f
  5563  0F47  0BBA               	decfsz	___ftmul@cntr,f
  5564  0F48  2F35               	goto	l5287
  5565  0F49  0837               	movf	___ftmul@f3_as_product,w
  5566  0F4A  00F0               	movwf	?___ftpack
  5567  0F4B  0838               	movf	___ftmul@f3_as_product+1,w
  5568  0F4C  00F1               	movwf	?___ftpack+1
  5569  0F4D  0839               	movf	___ftmul@f3_as_product+2,w
  5570  0F4E  00F2               	movwf	?___ftpack+2
  5571  0F4F  0836               	movf	___ftmul@exp,w
  5572  0F50  00F3               	movwf	?___ftpack+3
  5573  0F51  083B               	movf	___ftmul@sign,w
  5574  0F52  00F4               	movwf	?___ftpack+4
  5575  0F53  2769               	fcall	___ftpack
  5576  0F54  0870               	movf	?___ftpack,w
  5577  0F55  00AD               	movwf	?___ftmul
  5578  0F56  0871               	movf	?___ftpack+1,w
  5579  0F57  00AE               	movwf	?___ftmul+1
  5580  0F58  0872               	movf	?___ftpack+2,w
  5581  0F59  00AF               	movwf	?___ftmul+2
  5582  0F5A  0008               	return
  5583  0F5B                     __end_of___ftmul:	
  5584  0F5B                     __ptext546:	
  5585 ;; =============== function ___wmul ends ============
  5586                           
  5587                           
  5588 ;; *************** function ___bmul *****************
  5589 ;; Defined at:
  5590 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\bmul.c"
  5591 ;; Parameters:    Size  Location     Type
  5592 ;;  multiplier      1    wreg     unsigned char 
  5593 ;;  multiplicand    1    9[COMMON] unsigned char 
  5594 ;; Auto vars:     Size  Location     Type
  5595 ;;  multiplier      1   11[COMMON] unsigned char 
  5596 ;;  product         1   10[COMMON] unsigned char 
  5597 ;; Return value:  Size  Location     Type
  5598 ;;                  1    wreg      unsigned char 
  5599 ;; Registers used:
  5600 ;;		wreg, status,2, status,0
  5601 ;; Tracked objects:
  5602 ;;		On entry : 60/0
  5603 ;;		On exit  : 60/0
  5604 ;;		Unchanged: FFF9F/0
  5605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5606 ;;      Params:         1       0       0       0       0
  5607 ;;      Locals:         2       0       0       0       0
  5608 ;;      Temps:          0       0       0       0       0
  5609 ;;      Totals:         3       0       0       0       0
  5610 ;;Total ram usage:        3 bytes
  5611 ;; Hardware stack levels used:    1
  5612 ;; This function calls:
  5613 ;;		Nothing
  5614 ;; This function is called by:
  5615 ;;		_fround
  5616 ;;		_scale
  5617 ;; This function uses a non-reentrant model
  5618 ;;
  5619  0F5B                     ___bmul:	
  5620                           
  5621                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5622                           ;___bmul@multiplier stored from wreg
  5623  0F5B  00FB               	movwf	___bmul@multiplier
  5624  0F5C  01FA               	clrf	___bmul@product
  5625  0F5D                     l4867:	
  5626  0F5D  0879               	movf	___bmul@multiplicand,w
  5627  0F5E  187B               	btfsc	___bmul@multiplier,0
  5628  0F5F  07FA               	addwf	___bmul@product,f
  5629  0F60  1003               	clrc
  5630  0F61  0DF9               	rlf	___bmul@multiplicand,f
  5631  0F62  1003               	clrc
  5632  0F63  0CFB               	rrf	___bmul@multiplier,f
  5633  0F64  08FB               	movf	___bmul@multiplier,f
  5634  0F65  1D03               	skipz
  5635  0F66  2F5D               	goto	l4867
  5636  0F67  087A               	movf	___bmul@product,w
  5637  0F68  0008               	return
  5638  0F69                     __end_of___bmul:	
  5639  0F69                     __ptext542:	
  5640 ;; =============== function ___fttol ends ============
  5641                           
  5642                           
  5643 ;; *************** function ___ftpack *****************
  5644 ;; Defined at:
  5645 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\float.c"
  5646 ;; Parameters:    Size  Location     Type
  5647 ;;  arg             3    0[COMMON] unsigned um
  5648 ;;  exp             1    3[COMMON] unsigned char 
  5649 ;;  sign            1    4[COMMON] unsigned char 
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;		None
  5652 ;; Return value:  Size  Location     Type
  5653 ;;                  3    0[COMMON] float 
  5654 ;; Registers used:
  5655 ;;		wreg, status,2, status,0
  5656 ;; Tracked objects:
  5657 ;;		On entry : 40/20
  5658 ;;		On exit  : 40/20
  5659 ;;		Unchanged: FFFBF/0
  5660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5661 ;;      Params:         5       0       0       0       0
  5662 ;;      Locals:         0       0       0       0       0
  5663 ;;      Temps:          3       0       0       0       0
  5664 ;;      Totals:         8       0       0       0       0
  5665 ;;Total ram usage:        8 bytes
  5666 ;; Hardware stack levels used:    1
  5667 ;; This function calls:
  5668 ;;		Nothing
  5669 ;; This function is called by:
  5670 ;;		___ftadd
  5671 ;;		___ftmul
  5672 ;;		___awtoft
  5673 ;;		___lltoft
  5674 ;; This function uses a non-reentrant model
  5675 ;;
  5676  0F69                     ___ftpack:	
  5677                           
  5678                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  5679  0F69  0873               	movf	___ftpack@exp,w
  5680  0F6A  1903               	btfsc	3,2
  5681  0F6B  2F71               	goto	l4943
  5682  0F6C  0872               	movf	___ftpack@arg+2,w
  5683  0F6D  0471               	iorwf	___ftpack@arg+1,w
  5684  0F6E  0470               	iorwf	___ftpack@arg,w
  5685  0F6F  1D03               	skipz
  5686  0F70  2F7A               	goto	l4949
  5687  0F71                     l4943:	
  5688  0F71  01F0               	clrf	?___ftpack
  5689  0F72  01F1               	clrf	?___ftpack+1
  5690  0F73  01F2               	clrf	?___ftpack+2
  5691  0F74  0008               	return
  5692  0F75                     l4947:	
  5693  0F75  0AF3               	incf	___ftpack@exp,f
  5694  0F76  1003               	clrc
  5695  0F77  0CF2               	rrf	___ftpack@arg+2,f
  5696  0F78  0CF1               	rrf	___ftpack@arg+1,f
  5697  0F79  0CF0               	rrf	___ftpack@arg,f
  5698  0F7A                     l4949:	
  5699  0F7A  30FE               	movlw	254
  5700  0F7B  0572               	andwf	___ftpack@arg+2,w
  5701  0F7C  1903               	btfsc	3,2
  5702  0F7D  2F89               	goto	l4953
  5703  0F7E  2F75               	goto	l4947
  5704  0F7F                     l4951:	
  5705  0F7F  0AF3               	incf	___ftpack@exp,f
  5706  0F80  0AF0               	incf	___ftpack@arg,f
  5707  0F81  1903               	skipnz
  5708  0F82  0AF1               	incf	___ftpack@arg+1,f
  5709  0F83  1903               	skipnz
  5710  0F84  0AF2               	incf	___ftpack@arg+2,f
  5711  0F85  1003               	clrc
  5712  0F86  0CF2               	rrf	___ftpack@arg+2,f
  5713  0F87  0CF1               	rrf	___ftpack@arg+1,f
  5714  0F88  0CF0               	rrf	___ftpack@arg,f
  5715  0F89                     l4953:	
  5716  0F89  30FF               	movlw	255
  5717  0F8A  0572               	andwf	___ftpack@arg+2,w
  5718  0F8B  1903               	btfsc	3,2
  5719  0F8C  2F93               	goto	l4957
  5720  0F8D  2F7F               	goto	l4951
  5721  0F8E                     l4955:	
  5722  0F8E  03F3               	decf	___ftpack@exp,f
  5723  0F8F  1003               	clrc
  5724  0F90  0DF0               	rlf	___ftpack@arg,f
  5725  0F91  0DF1               	rlf	___ftpack@arg+1,f
  5726  0F92  0DF2               	rlf	___ftpack@arg+2,f
  5727  0F93                     l4957:	
  5728  0F93  1FF1               	btfss	___ftpack@arg+1,7
  5729  0F94  2F8E               	goto	l4955
  5730  0F95  1C73               	btfss	___ftpack@exp,0
  5731  0F96  13F1               	bcf	___ftpack@arg+1,7
  5732  0F97  1003               	clrc
  5733  0F98  0CF3               	rrf	___ftpack@exp,f
  5734  0F99  0873               	movf	___ftpack@exp,w
  5735  0F9A  00F7               	movwf	??___ftpack+2
  5736  0F9B  01F6               	clrf	??___ftpack+1
  5737  0F9C  01F5               	clrf	??___ftpack
  5738  0F9D  0875               	movf	??___ftpack,w
  5739  0F9E  04F0               	iorwf	___ftpack@arg,f
  5740  0F9F  0876               	movf	??___ftpack+1,w
  5741  0FA0  04F1               	iorwf	___ftpack@arg+1,f
  5742  0FA1  0877               	movf	??___ftpack+2,w
  5743  0FA2  04F2               	iorwf	___ftpack@arg+2,f
  5744  0FA3  0874               	movf	___ftpack@sign,w
  5745  0FA4  1D03               	skipz
  5746  0FA5  17F2               	bsf	___ftpack@arg+2,7
  5747  0FA6  0008               	return
  5748  0FA7                     __end_of___ftpack:	
  5749  0FA7                     PL6:	
  5750  0FA7  0870               	movf	?___awmod,w
  5751  0FA8  00BF               	movwf	??_scale
  5752  0FA9  0871               	movf	?___awmod+1,w
  5753  0FAA  00C0               	movwf	??_scale+1
  5754  0FAB  083F               	movf	??_scale,w
  5755  0FAC  073F               	addwf	??_scale,w
  5756  0FAD  073F               	addwf	??_scale,w
  5757  0FAE  0008               	return
  5758  0FAF                     PL7:	
  5759  0FAF  0876               	movf	?___awdiv,w
  5760  0FB0  00C1               	movwf	??_scale+2
  5761  0FB1  0877               	movf	?___awdiv+1,w
  5762  0FB2  00C2               	movwf	??_scale+3
  5763  0FB3  0841               	movf	??_scale+2,w
  5764  0FB4  0741               	addwf	??_scale+2,w
  5765  0FB5  0741               	addwf	??_scale+2,w
  5766  0FB6  0008               	return
  5767  0FB7                     PL8:	
  5768  0FB7  082D               	movf	?___ftmul,w
  5769  0FB8  00C3               	movwf	_scale$2845
  5770  0FB9  082E               	movf	?___ftmul+1,w
  5771  0FBA  00C4               	movwf	_scale$2845+1
  5772  0FBB  082F               	movf	?___ftmul+2,w
  5773  0FBC  00C5               	movwf	_scale$2845+2
  5774  0FBD  300A               	movlw	10
  5775  0FBE  00F0               	movwf	?___awmod
  5776  0FBF  01F1               	clrf	?___awmod+1
  5777  0FC0  0846               	movf	scale@scl,w
  5778  0FC1  00F2               	movwf	?___awmod+2
  5779  0FC2  01F3               	clrf	?___awmod+3
  5780  0FC3  0008               	return
  5781  0FC4                     PL9:	
  5782  0FC4  082D               	movf	?___ftmul,w
  5783  0FC5  00BC               	movwf	?_scale
  5784  0FC6  082E               	movf	?___ftmul+1,w
  5785  0FC7  00BD               	movwf	?_scale+1
  5786  0FC8  082F               	movf	?___ftmul+2,w
  5787  0FC9  00BE               	movwf	?_scale+2
  5788  0FCA  0008               	return
  5789  0FCB                     PL15:	
  5790  0FCB  00F6               	movwf	?___awdiv
  5791  0FCC  01F7               	clrf	?___awdiv+1
  5792  0FCD  0846               	movf	scale@scl,w
  5793  0FCE  00F2               	movwf	?___awmod+2
  5794  0FCF  01F3               	clrf	?___awmod+3
  5795  0FD0  1BF2               	btfsc	?___awmod+2,7
  5796  0FD1  03F3               	decf	?___awmod+3,f
  5797  0FD2  3064               	movlw	100
  5798  0FD3  00F0               	movwf	?___awmod
  5799  0FD4  01F1               	clrf	?___awmod+1
  5800  0FD5  0008               	return
  5801  0FD6                     PL18:	
  5802  0FD6  07B7               	addwf	___ftmul@f3_as_product,f
  5803  0FD7  0831               	movf	___ftmul@f2+1,w
  5804  0FD8  1103               	clrz
  5805  0FD9  1803               	skipnc
  5806  0FDA  0A31               	incf	___ftmul@f2+1,w
  5807  0FDB  1D03               	btfss	3,2
  5808  0FDC  07B8               	addwf	___ftmul@f3_as_product+1,f
  5809  0FDD  0832               	movf	___ftmul@f2+2,w
  5810  0FDE  1103               	clrz
  5811  0FDF  0008               	return
  5812  0FE0                     PL23:	
  5813  0FE0  0876               	movf	?___awdiv,w
  5814  0FE1  00BF               	movwf	??_scale
  5815  0FE2  0877               	movf	?___awdiv+1,w
  5816  0FE3  00C0               	movwf	??_scale+1
  5817  0FE4  083F               	movf	??_scale,w
  5818  0FE5  073F               	addwf	??_scale,w
  5819  0FE6  073F               	addwf	??_scale,w
  5820  0FE7  0008               	return
  5821  0FE8                     PL24:	
  5822  0FE8  00AF               	movwf	?___ftmul+2
  5823  0FE9  0843               	movf	_scale$2845,w
  5824  0FEA  00B0               	movwf	?___ftmul+3
  5825  0FEB  0844               	movf	_scale$2845+1,w
  5826  0FEC  00B1               	movwf	?___ftmul+4
  5827  0FED  0845               	movf	_scale$2845+2,w
  5828  0FEE  00B2               	movwf	?___ftmul+5
  5829  0FEF  0008               	return
  5830  0FF0                     PL25:	
  5831  0FF0  00AF               	movwf	?___ftmul+2
  5832  0FF1  3064               	movlw	100
  5833  0FF2  00F6               	movwf	?___awdiv
  5834  0FF3  01F7               	clrf	?___awdiv+1
  5835  0FF4  0846               	movf	scale@scl,w
  5836  0FF5  00F8               	movwf	?___awdiv+2
  5837  0FF6  01F9               	clrf	?___awdiv+3
  5838  0FF7  0008               	return
  5839  0FF8                     PL28:	
  5840  0FF8  00AF               	movwf	?___ftmul+2
  5841  0FF9  300A               	movlw	10
  5842  0FFA  00F6               	movwf	?___awdiv
  5843  0FFB  01F7               	clrf	?___awdiv+1
  5844  0FFC  0846               	movf	scale@scl,w
  5845  0FFD  00F8               	movwf	?___awdiv+2
  5846  0FFE  01F9               	clrf	?___awdiv+3
  5847  0FFF  0008               	return
  5848                           
  5849                           	psect	text547
  5850  0987                     __ptext547:	
  5851 ;; =============== function ___bmul ends ============
  5852                           
  5853                           
  5854 ;; *************** function __div_to_l_ *****************
  5855 ;; Defined at:
  5856 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\fldivl.c"
  5857 ;; Parameters:    Size  Location     Type
  5858 ;;  f1              3    0[COMMON] unsigned char 
  5859 ;;  f2              3    3[COMMON] unsigned char 
  5860 ;; Auto vars:     Size  Location     Type
  5861 ;;  quot            4    0[BANK0 ] unsigned long 
  5862 ;;  exp1            1    5[BANK0 ] unsigned char 
  5863 ;;  cntr            1    4[BANK0 ] unsigned char 
  5864 ;; Return value:  Size  Location     Type
  5865 ;;                  4    0[COMMON] unsigned long 
  5866 ;; Registers used:
  5867 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5868 ;; Tracked objects:
  5869 ;;		On entry : 0/0
  5870 ;;		On exit  : 60/0
  5871 ;;		Unchanged: FFF9F/0
  5872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5873 ;;      Params:         6       0       0       0       0
  5874 ;;      Locals:         0       6       0       0       0
  5875 ;;      Temps:          8       0       0       0       0
  5876 ;;      Totals:        14       6       0       0       0
  5877 ;;Total ram usage:       20 bytes
  5878 ;; Hardware stack levels used:    1
  5879 ;; This function calls:
  5880 ;;		Nothing
  5881 ;; This function is called by:
  5882 ;;		_sprintf
  5883 ;; This function uses a non-reentrant model
  5884 ;;
  5885  0987                     __div_to_l_:	
  5886                           
  5887                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  5888  0987  3070               	movlw	low __div_to_l_@f1
  5889  0988  223C  120A  158A   	fcall	PL2	;call to abstracted procedure
  5890  098B  1003               	clrc
  5891  098C  0D78               	rlf	??__div_to_l_+2,w
  5892  098D  0D79               	rlf	??__div_to_l_+3,w
  5893  098E  1283               	bcf	3,5	;RP0=0, select bank0
  5894  098F  1303               	bcf	3,6	;RP1=0, select bank0
  5895  0990  00A5               	movwf	__div_to_l_@exp1
  5896  0991  08A5               	movf	__div_to_l_@exp1,f
  5897  0992  1D03               	skipz
  5898  0993  2999               	goto	l4823
  5899  0994                     l4821:	
  5900  0994  01F0               	clrf	?__div_to_l_
  5901  0995  01F1               	clrf	?__div_to_l_+1
  5902  0996  01F2               	clrf	?__div_to_l_+2
  5903  0997  01F3               	clrf	?__div_to_l_+3
  5904  0998  0008               	return
  5905  0999                     l4823:	
  5906  0999  3073               	movlw	low __div_to_l_@f2
  5907  099A  223C  120A  158A   	fcall	PL2	;call to abstracted procedure
  5908  099D  1003               	clrc
  5909  099E  0D78               	rlf	??__div_to_l_+2,w
  5910  099F  0D79               	rlf	??__div_to_l_+3,w
  5911  09A0  00A4               	movwf	__div_to_l_@cntr
  5912  09A1  08A4               	movf	__div_to_l_@cntr,f
  5913  09A2  1903               	btfsc	3,2
  5914  09A3  2994               	goto	l4821
  5915  09A4  3070               	movlw	low __div_to_l_@f1
  5916  09A5  0084               	movwf	4
  5917  09A6  3080               	movlw	128
  5918  09A7  0A84               	incf	4,f
  5919  09A8  0A84               	incf	4,f
  5920  09A9  0480               	iorwf	0,f
  5921  09AA  3070               	movlw	low __div_to_l_@f1
  5922  09AB  0A84               	incf	4,f
  5923  09AC  0084               	movwf	4
  5924  09AD  3073               	movlw	low __div_to_l_@f2
  5925  09AE  0A84               	incf	4,f
  5926  09AF  0A84               	incf	4,f
  5927  09B0  0A84               	incf	4,f
  5928  09B1  0180               	clrf	0
  5929  09B2  0084               	movwf	4
  5930  09B3  3080               	movlw	128
  5931  09B4  0A84               	incf	4,f
  5932  09B5  0A84               	incf	4,f
  5933  09B6  0480               	iorwf	0,f
  5934  09B7  3073               	movlw	low __div_to_l_@f2
  5935  09B8  0A84               	incf	4,f
  5936  09B9  0084               	movwf	4
  5937  09BA  307F               	movlw	127
  5938  09BB  0A84               	incf	4,f
  5939  09BC  0A84               	incf	4,f
  5940  09BD  0A84               	incf	4,f
  5941  09BE  0180               	clrf	0
  5942  09BF  01A0               	clrf	__div_to_l_@quot
  5943  09C0  01A1               	clrf	__div_to_l_@quot+1
  5944  09C1  01A2               	clrf	__div_to_l_@quot+2
  5945  09C2  01A3               	clrf	__div_to_l_@quot+3
  5946  09C3  02A5               	subwf	__div_to_l_@exp1,f
  5947  09C4  30A0               	movlw	160
  5948  09C5  0724               	addwf	__div_to_l_@cntr,w
  5949  09C6  00F6               	movwf	??__div_to_l_
  5950  09C7  02A5               	subwf	__div_to_l_@exp1,f
  5951  09C8  3020               	movlw	32
  5952  09C9  00A4               	movwf	__div_to_l_@cntr
  5953  09CA                     l4837:	
  5954  09CA  3073               	movlw	low __div_to_l_@f2
  5955  09CB  1003               	clrc
  5956  09CC  0DA0               	rlf	__div_to_l_@quot,f
  5957  09CD  0DA1               	rlf	__div_to_l_@quot+1,f
  5958  09CE  0DA2               	rlf	__div_to_l_@quot+2,f
  5959  09CF  0DA3               	rlf	__div_to_l_@quot+3,f
  5960  09D0  223C  120A  158A   	fcall	PL2	;call to abstracted procedure
  5961  09D3  3070               	movlw	low __div_to_l_@f1
  5962  09D4  0084               	movwf	4
  5963  09D5  0800               	movf	0,w
  5964  09D6  00FA               	movwf	??__div_to_l_+4
  5965  09D7  0A84               	incf	4,f
  5966  09D8  0800               	movf	0,w
  5967  09D9  00FB               	movwf	??__div_to_l_+5
  5968  09DA  0A84               	incf	4,f
  5969  09DB  0800               	movf	0,w
  5970  09DC  00FC               	movwf	??__div_to_l_+6
  5971  09DD  0A84               	incf	4,f
  5972  09DE  0800               	movf	0,w
  5973  09DF  00FD               	movwf	??__div_to_l_+7
  5974  09E0  0879               	movf	??__div_to_l_+3,w
  5975  09E1  027D               	subwf	??__div_to_l_+7,w
  5976  09E2  1D03               	skipz
  5977  09E3  29EE               	goto	u1745
  5978  09E4  0878               	movf	??__div_to_l_+2,w
  5979  09E5  027C               	subwf	??__div_to_l_+6,w
  5980  09E6  1D03               	skipz
  5981  09E7  29EE               	goto	u1745
  5982  09E8  0877               	movf	??__div_to_l_+1,w
  5983  09E9  027B               	subwf	??__div_to_l_+5,w
  5984  09EA  1D03               	skipz
  5985  09EB  29EE               	goto	u1745
  5986  09EC  0876               	movf	??__div_to_l_,w
  5987  09ED  027A               	subwf	??__div_to_l_+4,w
  5988  09EE                     u1745:	
  5989  09EE  1C03               	skipc
  5990  09EF  2A0A               	goto	l2497
  5991  09F0  3073               	movlw	low __div_to_l_@f2
  5992  09F1  223C  120A  158A   	fcall	PL2	;call to abstracted procedure
  5993  09F4  3070               	movlw	low __div_to_l_@f1
  5994  09F5  0084               	movwf	4
  5995  09F6  0876               	movf	??__div_to_l_,w
  5996  09F7  0280               	subwf	0,f
  5997  09F8  0A84               	incf	4,f
  5998  09F9  0877               	movf	??__div_to_l_+1,w
  5999  09FA  1C03               	skipc
  6000  09FB  0F77               	incfsz	??__div_to_l_+1,w
  6001  09FC  0280               	subwf	0,f
  6002  09FD  0A84               	incf	4,f
  6003  09FE  0878               	movf	??__div_to_l_+2,w
  6004  09FF  1C03               	skipc
  6005  0A00  0F78               	incfsz	??__div_to_l_+2,w
  6006  0A01  0280               	subwf	0,f
  6007  0A02  0A84               	incf	4,f
  6008  0A03  0879               	movf	??__div_to_l_+3,w
  6009  0A04  1C03               	skipc
  6010  0A05  0A79               	incf	??__div_to_l_+3,w
  6011  0A06  0280               	subwf	0,f
  6012  0A07  3003               	movlw	3
  6013  0A08  0284               	subwf	4,f
  6014  0A09  1420               	bsf	__div_to_l_@quot,0
  6015  0A0A                     l2497:	
  6016  0A0A  3070               	movlw	low __div_to_l_@f1
  6017  0A0B  0084               	movwf	4
  6018  0A0C  1003               	clrc
  6019  0A0D  0D80               	rlf	0,f
  6020  0A0E  0A84               	incf	4,f
  6021  0A0F  0D80               	rlf	0,f
  6022  0A10  0A84               	incf	4,f
  6023  0A11  0D80               	rlf	0,f
  6024  0A12  0A84               	incf	4,f
  6025  0A13  0D80               	rlf	0,f
  6026  0A14  0BA4               	decfsz	__div_to_l_@cntr,f
  6027  0A15  29CA               	goto	l4837
  6028  0A16  1FA5               	btfss	__div_to_l_@exp1,7
  6029  0A17  2A25               	goto	l4855
  6030  0A18  0825               	movf	__div_to_l_@exp1,w
  6031  0A19  3A80               	xorlw	128
  6032  0A1A  3E9F               	addlw	159
  6033  0A1B  1C03               	btfss	3,0
  6034  0A1C  2994               	goto	l4821
  6035  0A1D                     l4851:	
  6036  0A1D  1003               	clrc
  6037  0A1E  0CA3               	rrf	__div_to_l_@quot+3,f
  6038  0A1F  0CA2               	rrf	__div_to_l_@quot+2,f
  6039  0A20  0CA1               	rrf	__div_to_l_@quot+1,f
  6040  0A21  0CA0               	rrf	__div_to_l_@quot,f
  6041  0A22  0FA5               	incfsz	__div_to_l_@exp1,f
  6042  0A23  2A1D               	goto	l4851
  6043  0A24  2A33               	goto	l4861
  6044  0A25                     l4855:	
  6045  0A25  3020               	movlw	32
  6046  0A26  0225               	subwf	__div_to_l_@exp1,w
  6047  0A27  1803               	btfsc	3,0
  6048  0A28  2994               	goto	l4821
  6049  0A29                     l2505:	
  6050  0A29  08A5               	movf	__div_to_l_@exp1,f
  6051  0A2A  1903               	btfsc	3,2
  6052  0A2B  2A33               	goto	l4861
  6053  0A2C  1003               	clrc
  6054  0A2D  0DA0               	rlf	__div_to_l_@quot,f
  6055  0A2E  0DA1               	rlf	__div_to_l_@quot+1,f
  6056  0A2F  0DA2               	rlf	__div_to_l_@quot+2,f
  6057  0A30  0DA3               	rlf	__div_to_l_@quot+3,f
  6058  0A31  03A5               	decf	__div_to_l_@exp1,f
  6059  0A32  2A29               	goto	l2505
  6060  0A33                     l4861:	
  6061  0A33  0823               	movf	__div_to_l_@quot+3,w
  6062  0A34  00F3               	movwf	?__div_to_l_+3
  6063  0A35  0822               	movf	__div_to_l_@quot+2,w
  6064  0A36  00F2               	movwf	?__div_to_l_+2
  6065  0A37  0821               	movf	__div_to_l_@quot+1,w
  6066  0A38  00F1               	movwf	?__div_to_l_+1
  6067  0A39  0820               	movf	__div_to_l_@quot,w
  6068  0A3A  00F0               	movwf	?__div_to_l_
  6069  0A3B  0008               	return
  6070  0A3C                     __end_of__div_to_l_:	
  6071  0A3C                     PL2:	
  6072  0A3C  0084               	movwf	4
  6073  0A3D  0800               	movf	0,w
  6074  0A3E  00F6               	movwf	??__div_to_l_
  6075  0A3F  0A84               	incf	4,f
  6076  0A40  0800               	movf	0,w
  6077  0A41  00F7               	movwf	??__div_to_l_+1
  6078  0A42  0A84               	incf	4,f
  6079  0A43  0800               	movf	0,w
  6080  0A44  00F8               	movwf	??__div_to_l_+2
  6081  0A45  0A84               	incf	4,f
  6082  0A46  0800               	movf	0,w
  6083  0A47  00F9               	movwf	??__div_to_l_+3
  6084  0A48  0008               	return
  6085                           
  6086                           	psect	text551
  6087  0026                     __ptext551:	
  6088 ;; =============== function _msecbase ends ============
  6089                           
  6090                           
  6091 ;; *************** function _init_comms *****************
  6092 ;; Defined at:
  6093 ;;		line 172 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\LCD1\LCD1.c"
  6094 ;; Parameters:    Size  Location     Type
  6095 ;;		None
  6096 ;; Auto vars:     Size  Location     Type
  6097 ;;		None
  6098 ;; Return value:  Size  Location     Type
  6099 ;;		None               void
  6100 ;; Registers used:
  6101 ;;		wreg, status,2
  6102 ;; Tracked objects:
  6103 ;;		On entry : 11F/0
  6104 ;;		On exit  : 17F/60
  6105 ;;		Unchanged: FFE80/0
  6106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6107 ;;      Params:         0       0       0       0       0
  6108 ;;      Locals:         0       0       0       0       0
  6109 ;;      Temps:          0       0       0       0       0
  6110 ;;      Totals:         0       0       0       0       0
  6111 ;;Total ram usage:        0 bytes
  6112 ;; Hardware stack levels used:    1
  6113 ;; This function calls:
  6114 ;;		Nothing
  6115 ;; This function is called by:
  6116 ;;		_main
  6117 ;; This function uses a non-reentrant model
  6118 ;;
  6119  0026                     _init_comms:	
  6120                           
  6121                           ;LCD1.c: 173: TRISC6 = 1;
  6122                           
  6123                           ; Regs used in _init_comms: [wreg+status,2]
  6124  0026  1683               	bsf	3,5	;RP0=1, select bank1
  6125  0027  1303               	bcf	3,6	;RP1=0, select bank1
  6126  0028  3005               	movlw	5
  6127  0029  1707               	bsf	7,6
  6128                           
  6129                           ;LCD1.c: 174: TRISC7 = 0;
  6130  002A  1387               	bcf	7,7
  6131                           
  6132                           ;LCD1.c: 175: SPBRG = ((int)(4000000L/(64UL * 9600) -1));
  6133  002B  0099               	movwf	25	;volatile
  6134                           
  6135                           ;LCD1.c: 177: RCSTA = 0x90;
  6136  002C  3090               	movlw	144
  6137  002D  1283               	bcf	3,5	;RP0=0, select bank0
  6138  002E  0098               	movwf	24	;volatile
  6139                           
  6140                           ;LCD1.c: 178: TXSTA = 0x20;
  6141  002F  3020               	movlw	32
  6142  0030  1683               	bsf	3,5	;RP0=1, select bank1
  6143  0031  0098               	movwf	24	;volatile
  6144                           
  6145                           ;LCD1.c: 179: BAUDCTL = 0;
  6146  0032  1703               	bsf	3,6	;RP1=1, select bank3
  6147  0033  0187               	clrf	7	;volatile
  6148  0034  0008               	return
  6149  0035                     __end_of_init_comms:	
  6150                           
  6151                           	psect	text552
  6152  0000                     __ptext552:	
  6153 ;; =============== function _init_comms ends ============
  6154                           
  6155  007E                     btemp	set	126	;btemp
  6156  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Thu May 12 13:52:17 2022

                    pc 0002         ___bmul@product 007A           ___awdiv@sign 007B                     fsr 0004  
  ___wmul@multiplicand 0072           ___ftadd@exp1 0047           ___ftadd@exp2 0046           ___ftadd@sign 0045  
                  _RC0 0038                    _RC3 003B                    _RC4 003C                    _num 005B  
                  fsr0 0004                    indf 0000           ___awmod@sign 0075            lcd_goto@pos 0075  
                 l1060 0000                   l1052 0B12                   l1046 0A6A                   l1063 0000  
                 l1209 0000                   l1049 0ABE                   l2210 0000                   l1075 0000  
                 l2204 0000                   l1148 00C7                   l1093 0000                   l1069 0000  
                 l1078 0000                   l1087 0000                   l1096 0972                   l2240 0000  
                 l1099 0000                   l2324 0543                   l2237 0C7C                   l2246 0000  
                 l2344 0000                   l2505 0A29                   l5001 055B                   l2425 0000  
                 l2194 0000                   l2290 0000                   l5011 0000                   l2371 0000  
                 l2268 06E6                   l2357 0000                   l5021 0000                   l5013 0E74  
                 l5005 0000                   l2462 064F                   l2455 0000                   l5031 0000  
                 l5007 0000                   l2367 0000                   l2447 0000                   l5041 0EA2  
                 l5017 0000                   l5113 0000                   l2386 0000                   l5043 0000  
                 l5035 0000                   l5019 0E7D                   l5107 05B6                   l5131 0EB9  
                 l5123 0000                   l5211 0000                   l5203 06C0                   l5045 0EAA  
                 l5029 0E8B                   l5117 0000                   l5109 0000                   l5125 0000  
                 l5221 0000                   l5205 06C5                   l5301 0000                   l5039 0000  
                 l5063 0000                   l5119 05E1                   l5143 0ECC                   l5151 0EDF  
                 l5135 0EC0                   l5231 0000                   l5223 06F1                   l5215 06DD  
                 l5207 06CA                   l5303 0000                   l2497 0A0A                   l5057 0574  
                 l5065 0599                   l5049 0000                   l5081 04C5                   l5153 0000  
                 l5129 0000                   l5241 0718                   l5233 0000                   l5217 06E2  
                 l5209 06CE                   l5313 0000                   l5401 0000                   l2498 0000  
                 l5155 0EE7                   l5163 0000                   l5227 0000                   l5171 0000  
                 l5251 0EFD                   l5307 0000                   l5331 0000                   l5323 0000  
                 l5069 0000                   l5085 04D4                   l5077 0000                   l5149 0000  
                 l5165 094A                   l5237 0000                   l5229 06FC                   l5181 0000  
                 l5261 0000                   l5245 0000                   l5309 0CC7                   l5317 072E  
                 l5333 0000                   l5325 0000                   l5341 0000                   l5405 0000  
                 l5087 0000                   l5159 0948                   l5239 0000                   l5175 068D  
                 l5167 0000                   l5271 0000                   l5263 0000                   l5319 0739  
                 l5335 0000                   l5327 0000                   l5351 0000                   l5407 0000  
                 l5511 020D                   l5503 01E2                   l5423 0063                   l5089 0000  
                 l5097 0000                   l5193 0000                   l5185 06A3                   l5169 0000  
                 l5281 0000                   l5273 0000                   l5265 0000                   l5257 0F0E  
                 l5329 0000                   l5337 0000                   l5521 0000                   l5441 0099  
                 l5433 0000                   l5425 0000                   l5417 004F                   l5409 0000  
                 l5099 0000                   l5195 0000                   l5187 0000                   l5179 0694  
                 l5291 0F3F                   l5283 0000                   l5275 0F1F                   l5267 0000  
                 l5259 0000                   l5355 0C4A                   l5347 0BF6                   l5371 0D48  
                 l5363 0000                   l5531 0289                   l5523 0000                   l5515 021E  
                 l5611 0412                   l5451 00DB                   l5435 0000                   l5443 00C2  
                 l5427 0000                   l5419 0000                   l4805 0643                   l4821 0994  
                 l4901 0000                   l5197 06B1                   l5293 0000                   l5285 0000  
                 l5269 0000                   l5381 0DA4                   l5621 0433                   l5605 0000  
                 l5525 0000                   l5461 0000                   l5445 0000                   l5429 0088  
                 l5701 0000                   l4751 0000                   l4815 0659                   l4807 0000  
                 l4831 0000                   l4823 0999                   l4911 0000                   l4903 0C76  
                 l5199 0000                   l5295 0000                   l5287 0F35                   l5279 0F29  
                 l5359 0000                   l5631 0458                   l5607 0000                   l5551 02E8  
                 l5543 0000                   l5527 024E                   l5439 0000                   l5711 0000  
                 l5703 0000                   l4753 0000                   l4761 0000                   l4809 064B  
                 l4833 0000                   l4921 0000                   l5297 0000                   l5377 0D8D  
                 l5625 044B                   l5617 041F                   l5609 0406                   l5553 02FE  
                 l5561 02EC                   l5545 02BF                   l5537 028B                   l5529 0000  
                 l5481 0000                   l5473 0000                   l5465 0000                   l5457 00EB  
                 l5449 00C9                   l5713 0000                   l5705 0000                   l5721 0000  
                 l4755 0000                   l4771 0000                   l4851 0A1D                   l4843 0000  
                 l4835 0000                   l4819 0000                   l4915 0000                   l4907 0000  
                 l4923 0000                   l5395 0E53                   l5651 0000                   l5643 0491  
                 l5563 0303                   l5547 0000                   l5491 0000                   l5483 0000  
                 l5475 0000                   l5467 0117                   l5459 0000                   l5715 0000  
                 l5707 0000                   l5731 0000                   l5723 0000                   l4757 0000  
                 l4781 0000                   l4773 05F8                   l4861 0A33                   l4853 0000  
                 l4845 0000                   l4837 09CA                   l4829 0000                   l4917 0C89  
                 l4933 0CA3                   l4925 0C8F                   l4941 0000                   l5389 0E0E  
                 l5653 04A6                   l5645 0494                   l5637 0472                   l5581 033D  
                 l5573 033A                   l5557 0000                   l5477 0000                   l5469 0000  
                 l5661 04B1                   l5717 0000                   l5709 0000                   l5741 0000  
                 l5733 0A65                   l5725 0000                   l4767 04EE                   l4759 0000  
                 l4791 0000                   l4783 0000                   l4775 05FD                   l4855 0A25  
                 l4839 0000                   l4935 0000                   l4927 0000                   l4951 0F7F  
                 l4943 0F71                   l5399 0000                   l5647 0498                   l5639 0475  
                 l5591 0000                   l5583 0351                   l5495 01A0                   l5487 0167  
                 l5479 0000                   l5751 0000                   l5743 0000                   l5735 0000  
                 l5727 0000                   l5719 0000                   l4785 0000                   l4873 0000  
                 l4865 0000                   l4881 0000                   l4929 0000                   l4961 0000  
                 l4953 0F89                   l5649 0000                   l5593 0379                   l5577 0000  
                 l5569 030C                   l5489 0000                   l5665 0000                   l5673 0000  
                 l5681 0000                   l5761 0000                   l5753 0000                   l5745 0000  
                 l5729 0000                   l4795 0000                   l4787 0000                   l4779 0000  
                 l4875 0000                   l4867 0F5D                   l4891 0000                   l4883 04F2  
                 l4963 0000                   l4955 0F8E                   l4947 0F75                   l4939 0000  
                 l4971 0518                   l5595 039A                   l5587 0360                   l5579 0000  
                 l5499 01B0                   l5659 0039                   l5667 0000                   l5675 08F5  
                 l5691 0000                   l5683 0000                   l5763 0000                   l5755 0000  
                 l5739 0000                   l4789 061A                   l4965 0000                   l4957 0F93  
                 l4949 0F7A                   l4981 0000                   l4973 0000                   l5597 0000  
                 l5589 0000                   l5669 0000                   l5693 0000                   l5685 0000  
                 l5677 0000                   l5749 0000                   l4799 0000                   l4887 04FA  
                 l4991 053F                   l4975 0000                   l4967 0000                   l5599 0000  
                 l5695 0000                   l5687 0000                   l5679 0000                   l5759 0000  
                 l4889 0000                   l4897 0000                   l4977 0000                   l4969 0513  
                 l5697 0000                   l5689 0000                   l4899 0000                   l4987 0537  
                 l4979 0000                   l5699 0000                   l4997 054D                   l4989 0000  
                 l4999 0000                   STR_1 0886                   STR_2 088C                   STR_3 0886  
                 STR_4 088F                   STR_5 0886                   STR_6 0892                   _T0IF 005A  
                 u2000 0000                   u2005 051C                   u2115 0E94                   u2305 0ED2  
                 u3105 0483                   u2165 0582                   u2245 05C9                   u3045 042D  
                 u2335 0950                   u3055 0443                   u1655 0629                   u3095 0468  
                 u2800 0000                   u1745 09EE                   u2805 012D                   u2905 02B8  
                 u2845 01B9                   u2855 01EC                   u2945 02F5                   u2885 020B  
                 u2975 0346                   u2985 035B                   _TMR0 0001                   _main 0A49  
         ___ftpack@arg 0070           ___ftpack@exp 0073                   btemp 007E                   start 0000  
         _sprintf$1901 00A0      ___bmul@multiplier 007B           ___ftmul@cntr 003A           ___ftmul@sign 003B  
         ___fttol@exp1 002C           ___fttol@lval 0028                  ?_main 0070        __end_of___awdiv 0EAF  
      __end_of___lbdiv 0C8B        __end_of___ftadd 072C        __end_of___awmod 0EEC        __end_of___lbmod 0CA7  
      __end_of___ftneg 066A                  _ANSEL 0188        __end_of___lldiv 05EA        __end_of___ftmul 0F5B  
      ___awdiv@divisor 0076        __end_of___llmod 05A2        __end_of___ftsub 0800        __end_of___fttol 0564  
      ___awdiv@counter 007A                  _RCSTA 0018                  _SPBRG 0099                  _PORTD 0008  
                _TRISA 0085                  _TRISC 0087                  _TRISD 0088                  _TRISE 0089  
                _TXSTA 0098           ___lltoft@exp 007C                  _carac 005E          ___awtoft@sign 007B  
                _scale 0CD8        __end_of_isdigit 04F0                  _pause 0948          ___ftpack@sign 0074  
                pclath 000A                  status 0003                  wtemp0 007E        __end_of_sprintf 04B6  
      ___lbdiv@divisor 0075        ___lbdiv@counter 0077           __end_of_main 0B6B                 ??_main 007E  
        ___fttol@sign1 0027   __size_of__tdiv_to_l_ 0078                 _ADCON0 001F                 _ADCON1 009F  
     ___llmod@dividend 0024                 ?_scale 003C                 _ADRESH 001E                 _ADRESL 009E  
               ?_pause 0070       ___awdiv@dividend 0078       __end_of___awtoft 0CD8       __end_of___ftpack 0FA7  
               _ANSELH 0189       __end_of___lltoft 074C                 _TRISC6 043E                 _TRISC7 043F  
     __end_of_lcd_init 0948       __end_of_lcd_goto 08F4                 ___bmul 0F5B       __end_of_lcd_puts 0911  
               ___ftge 04B6                 ___wmul 04F0              ??___awdiv 007A              ??___lbdiv 0076  
            ??___ftadd 0042              ??___awmod 0074              ??___lbmod 0071              ??___ftneg 0073  
            ??___lldiv 0078              ??___ftmul 0033              ??___llmod 007D              ??___ftsub 007E  
            ??___fttol 0024                 _fround 0B6B       ___awdiv@quotient 007C        ___awmod@divisor 0070  
      ___awmod@counter 0074       __end_of_msecbase 0976  ___ftmul@f3_as_product 0037              ??_isdigit 0070  
               pause@x 0072              ??_sprintf 0056       ___lbdiv@dividend 0076        ___lbmod@divisor 0070  
      ___lbmod@counter 0073             ___ftadd@f1 003C             ___ftadd@f2 003F             ___ftge@ff1 0070  
           ___ftge@ff2 0073             ___ftneg@f1 0070             ___awtoft@c 0078    ___bmul@multiplicand 0079  
           ___ftmul@f1 002D             ___ftmul@f2 0030             ___ftsub@f1 004B             ___ftsub@f2 0048  
           ___fttol@f1 0020         __pcstackCOMMON 0070             ___lltoft@c 0078          __end_of_scale 0E6A  
        __end_of_pause 0959       ___lbdiv@quotient 0078             __div_to_l_ 0987     __size_of_lcd_clear 0009  
      __div_to_l_@exp1 0025     __size_of_lcd_write 0012        __div_to_l_@cntr 0024           sprintf@integ 00A5  
              ??_scale 003F                ??_pause 0072        __div_to_l_@quot 0020           sprintf@width 00AE  
           __pbssBANK0 005B          __div_to_l_@f1 0070          __div_to_l_@f2 0073             __pmaintext 0A49  
              ?___bmul 0079                ?___ftge 0070                ?___wmul 0070                _BAUDCTL 0187  
              ?_fround 0048              ?___awtoft 0078              ?___ftpack 0070              ?___lltoft 0078  
              _GO_DONE 00F9              ?_lcd_init 0070              ?_lcd_goto 0070              ?_lcd_puts 0075  
            ?_msecbase 0070             _scale$2845 0043      __end_of_lcd_clear 097F        __size_of___bmul 000E  
      __size_of___ftge 002C                ___awdiv 0E6A                ___lbdiv 0C70                ___ftadd 066A  
              ___awmod 0EAF                ___lbmod 0C8B      __end_of_lcd_write 096B                ___ftneg 0662  
              ___lldiv 05A2        __size_of___wmul 0019                ___ftmul 0EEC                ___llmod 0564  
              ___ftsub 07EA                ___fttol 0509             _init_comms 0026             ??___awtoft 007B  
           ??___ftpack 0075        __size_of_fround 0105             ??___lltoft 007C            ?__div_to_l_ 0070  
              _dpowers 085E                _isdigit 04E2       ___awmod@dividend 0072                _sprintf 0035  
           ??_lcd_init 0075             ??_lcd_goto 0075             ??_lcd_puts 0077   end_of_initialization 0022  
           ??_msecbase 0070        ___lldiv@divisor 0070        ___lldiv@counter 007C         __tdiv_to_l_@f1 0070  
       __tdiv_to_l_@f2 0073          ??__tdiv_to_l_ 0076       ___lbmod@dividend 0072            ___lbmod@rem 0074  
  __size_of__div_to_l_ 00B5             lcd_write@c 0074            ___ftmul@exp 0036         __end_of___bmul 0F69  
       __end_of___ftge 04E2            ?_init_comms 0070         __end_of___wmul 0509         __end_of_fround 0C70  
  start_initialization 001A    __end_of__tdiv_to_l_ 0662        ___llmod@divisor 0020        ___llmod@counter 007D  
             ??___bmul 007A               ??___ftge 0076               ??___wmul 0074               ??_fround 007E  
           fround@prec 0051      __size_of___awtoft 001B      __size_of___ftpack 003E           pause@usvalue 0070  
    __size_of___lltoft 0020          __pcstackBANK0 0020          __pcstackBANK1 00A0           _isdigit$2409 0070  
  __size_of_init_comms 000F      __size_of_lcd_init 0037      __size_of_lcd_goto 0006            sprintf@_val 00A8  
          sprintf@flag 00AC      __size_of_lcd_puts 001D            sprintf@fval 00B3            sprintf@prec 00B6  
    __size_of_msecbase 000B               ?___awdiv 0076               ?___lbdiv 0075               ?___ftadd 003C  
            __ptext521 0911              __ptext530 072C              __ptext522 08F4              __ptext531 0CBD  
            __ptext523 08EE               ?___awmod 0070              __ptext540 0E6A              __ptext532 0EEC  
            __ptext524 0035              __ptext541 0509              __ptext533 066A              __ptext525 0976  
            __ptext550 096B              __ptext542 0F69              __ptext534 0948              __ptext526 07EA  
            __ptext551 0026              __ptext543 0C8B              __ptext535 0EAF              __ptext527 0CD8  
            __ptext552 0000              __ptext544 0C70              __ptext536 05A2              __ptext528 0B6B  
            __ptext545 04F0              __ptext537 04B6              __ptext529 0959              __ptext546 0F5B  
            __ptext538 0662              __ptext547 0987              __ptext539 0564               ?___lbmod 0070  
            __ptext548 05EA              __ptext549 04E2               ?___ftneg 0070               ?___lldiv 0070  
             ?___ftmul 002D               ?___llmod 0020               ?___ftsub 0048              __npowers_ 0810  
             ?___fttol 0020              _lcd_clear 0976              __pstrings 0800            __tdiv_to_l_ 05EA  
            _lcd_write 0959           ??__div_to_l_ 0076               ?_isdigit 0070               ?_sprintf 0052  
       __size_of_scale 0192         __size_of_pause 0011         ___wmul@product 0074     __end_of__div_to_l_ 0A3C  
           ?_lcd_clear 0070            __stringbase 080F             ?_lcd_write 0070      ___wmul@multiplier 0070  
            lcd_puts@s 0075           ??_init_comms 0070       __size_of___awdiv 0045       __size_of___lbdiv 001B  
     __size_of___ftadd 00C2       __size_of___awmod 003D       __size_of___lbmod 001C       __size_of___ftneg 0008  
     __size_of___lldiv 0048       __size_of___ftmul 006F       __size_of___llmod 003E       __size_of___ftsub 0016  
     __size_of___fttol 005B               ___awtoft 0CBD               ___ftpack 0F69            _fround$2843 004E  
          _fround$2844 004B               ___lltoft 072C             sprintf@exp 00B0       __size_of_isdigit 000E  
             __powers_ 0837               _lcd_init 0911               _lcd_goto 08EE               _lcd_puts 08F4  
     __size_of_sprintf 0481          __size_of_main 0122     __end_of_init_comms 0035               _msecbase 096B  
          ??_lcd_clear 0075            ??_lcd_write 0074               isdigit@c 0071               scale@scl 0046  
            sprintf@ap 00A4       __tdiv_to_l_@exp1 0025       __tdiv_to_l_@cntr 0024              sprintf@sp 00B2  
     __tdiv_to_l_@quot 0020       ___lldiv@dividend 0074              stringcode 080A           ?__tdiv_to_l_ 0070  
           _OPTION_REG 0081               sprintf@c 00B8               sprintf@f 0052       ___lldiv@quotient 0078  
             stringdir 080A               stringtab 0800  
