

HI-TECH Software PIC PRO Macro Assembler V9.82 build 9453 
                                                                                               Mon May 02 20:16:38 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 9453
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,delta=2
    13                           	psect	text346,local,class=CODE,delta=2
    14                           	psect	text349,local,class=CODE,delta=2
    15                           	psect	text356,local,class=CODE,delta=2
    16                           	psect	text359,local,class=CODE,delta=2
    17                           	psect	pa_nodes,global,class=CODE,delta=2
    18                           	dabs	1,0x7E,2
    19  000A                     	;#
    20                           
    21                           	psect	config
    22  2007  E0F4               	dw	57588	;#
    23  2008  FFFF               	dw	65535	;#
    24                           
    25                           	psect	idataBANK0
    26  0000                     __pidataBANK0:	
    27                           
    28                           	psect	stringtext
    29  0800                     __pstringtext:	
    30  0800                     stringtab:	
    31                           ;	global	stringtab,__stringbase
    32                           
    33                           
    34                           ;	String table - string pointers are 2 bytes each
    35  0800  1BFF               	btfsc	btemp+1,7
    36  0801  280A               	ljmp	stringcode
    37  0802  1383               	bcf	3,7
    38  0803  187F               	btfsc	btemp+1,0
    39  0804  1783               	bsf	3,7
    40  0805  0800               	movf	0,w
    41  0806  0A84               	incf	4,f
    42  0807  1903               	skipnz
    43  0808  0AFF               	incf	btemp+1,f
    44  0809  0008               	return
    45  080A                     stringcode:	
    46  080A  087F               	movf	btemp+1,w
    47  080B  397F               	andlw	127
    48  080C  008A               	movwf	10
    49  080D  0804               	movf	4,w
    50  080E  0A84               	incf	4,f
    51  080F  1903               	skipnz
    52  0810  0AFF               	incf	btemp+1,f
    53  0811  0082               	movwf	2
    54  0812                     __stringbase:	
    55  0812                     _dpowers:	
    56  0812  3401               	retlw	1
    57  0813  3400               	retlw	0
    58  0814  340A               	retlw	10
    59  0815  3400               	retlw	0
    60  0816  3464               	retlw	100
    61  0817  3400               	retlw	0
    62  0818  34E8               	retlw	232
    63  0819  3403               	retlw	3
    64  081A  3410               	retlw	16
    65  081B  3427               	retlw	39
    66  001F                     _ADCON0	set	31
    67  001E                     _ADRESH	set	30
    68  0017                     _CCP1CON	set	23
    69  001D                     _CCP2CON	set	29
    70  0015                     _CCPR1L	set	21
    71  001B                     _CCPR2L	set	27
    72  0005                     _PORTA	set	5
    73  0006                     _PORTB	set	6
    74  0008                     _PORTD	set	8
    75  001A                     _RCREG	set	26
    76  0018                     _RCSTA	set	24
    77  0012                     _T2CON	set	18
    78  0001                     _TMR0	set	1
    79  0019                     _TXREG	set	25
    80  00F9                     _GO_DONE	set	249
    81  0038                     _RC0	set	56
    82  003B                     _RC3	set	59
    83  003C                     _RC4	set	60
    84  0065                     _RCIF	set	101
    85  005A                     _T0IF	set	90
    86  0064                     _TXIF	set	100
    87  0081                     _OPTION_REG	set	129
    88  0092                     _PR2	set	146
    89  0099                     _SPBRG	set	153
    90  0085                     _TRISA	set	133
    91  0086                     _TRISB	set	134
    92  0087                     _TRISC	set	135
    93  0088                     _TRISD	set	136
    94  0089                     _TRISE	set	137
    95  0098                     _TXSTA	set	152
    96  04FF                     _ADFM	set	1279
    97  043E                     _TRISC6	set	1086
    98  043F                     _TRISC7	set	1087
    99  0188                     _ANSEL	set	392
   100  0189                     _ANSELH	set	393
   101  0187                     _BAUDCTL	set	391
   102  009E                     _ADRESL	set	158
   103  081C                     STR_16:	
   104  081C  340A               	retlw	10
   105  081D  340D               	retlw	13
   106  081E  340A               	retlw	10
   107  081F  3445               	retlw	69	;'E'
   108  0820  346C               	retlw	108	;'l'
   109  0821  3469               	retlw	105	;'i'
   110  0822  3467               	retlw	103	;'g'
   111  0823  3465               	retlw	101	;'e'
   112  0824  3420               	retlw	32	;' '
   113  0825  3475               	retlw	117	;'u'
   114  0826  346E               	retlw	110	;'n'
   115  0827  3420               	retlw	32	;' '
   116  0828  3476               	retlw	118	;'v'
   117  0829  3461               	retlw	97	;'a'
   118  082A  346C               	retlw	108	;'l'
   119  082B  346F               	retlw	111	;'o'
   120  082C  3472               	retlw	114	;'r'
   121  082D  3420               	retlw	32	;' '
   122  082E  3465               	retlw	101	;'e'
   123  082F  346E               	retlw	110	;'n'
   124  0830  3474               	retlw	116	;'t'
   125  0831  3472               	retlw	114	;'r'
   126  0832  3465               	retlw	101	;'e'
   127  0833  3420               	retlw	32	;' '
   128  0834  3430               	retlw	48	;'0'
   129  0835  3420               	retlw	32	;' '
   130  0836  3479               	retlw	121	;'y'
   131  0837  3420               	retlw	32	;' '
   132  0838  3431               	retlw	49	;'1'
   133  0839  3430               	retlw	48	;'0'
   134  083A  3432               	retlw	50	;'2'
   135  083B  3433               	retlw	51	;'3'
   136  083C  3420               	retlw	32	;' '
   137  083D  3470               	retlw	112	;'p'
   138  083E  3461               	retlw	97	;'a'
   139  083F  3472               	retlw	114	;'r'
   140  0840  3461               	retlw	97	;'a'
   141  0841  3420               	retlw	32	;' '
   142  0842  3465               	retlw	101	;'e'
   143  0843  346C               	retlw	108	;'l'
   144  0844  3420               	retlw	32	;' '
   145  0845  3450               	retlw	80	;'P'
   146  0846  3457               	retlw	87	;'W'
   147  0847  344D               	retlw	77	;'M'
   148  0848  3431               	retlw	49	;'1'
   149  0849  343A               	retlw	58	;':'
   150  084A  3400               	retlw	0
   151  084B                     STR_18:	
   152  084B  340A               	retlw	10
   153  084C  340D               	retlw	13
   154  084D  340A               	retlw	10
   155  084E  3445               	retlw	69	;'E'
   156  084F  346C               	retlw	108	;'l'
   157  0850  3469               	retlw	105	;'i'
   158  0851  3467               	retlw	103	;'g'
   159  0852  3465               	retlw	101	;'e'
   160  0853  3420               	retlw	32	;' '
   161  0854  3475               	retlw	117	;'u'
   162  0855  346E               	retlw	110	;'n'
   163  0856  3420               	retlw	32	;' '
   164  0857  3476               	retlw	118	;'v'
   165  0858  3461               	retlw	97	;'a'
   166  0859  346C               	retlw	108	;'l'
   167  085A  346F               	retlw	111	;'o'
   168  085B  3472               	retlw	114	;'r'
   169  085C  3420               	retlw	32	;' '
   170  085D  3465               	retlw	101	;'e'
   171  085E  346E               	retlw	110	;'n'
   172  085F  3474               	retlw	116	;'t'
   173  0860  3472               	retlw	114	;'r'
   174  0861  3465               	retlw	101	;'e'
   175  0862  3420               	retlw	32	;' '
   176  0863  3430               	retlw	48	;'0'
   177  0864  3420               	retlw	32	;' '
   178  0865  3479               	retlw	121	;'y'
   179  0866  3420               	retlw	32	;' '
   180  0867  3431               	retlw	49	;'1'
   181  0868  3430               	retlw	48	;'0'
   182  0869  3432               	retlw	50	;'2'
   183  086A  3434               	retlw	52	;'4'
   184  086B  3420               	retlw	32	;' '
   185  086C  3470               	retlw	112	;'p'
   186  086D  3461               	retlw	97	;'a'
   187  086E  3472               	retlw	114	;'r'
   188  086F  3461               	retlw	97	;'a'
   189  0870  3420               	retlw	32	;' '
   190  0871  3465               	retlw	101	;'e'
   191  0872  346C               	retlw	108	;'l'
   192  0873  3420               	retlw	32	;' '
   193  0874  3450               	retlw	80	;'P'
   194  0875  3457               	retlw	87	;'W'
   195  0876  344D               	retlw	77	;'M'
   196  0877  3432               	retlw	50	;'2'
   197  0878  343A               	retlw	58	;':'
   198  0879  3400               	retlw	0
   199  087A                     STR_13:	
   200  087A  340A               	retlw	10
   201  087B  340D               	retlw	13
   202  087C  3445               	retlw	69	;'E'
   203  087D  346C               	retlw	108	;'l'
   204  087E  3469               	retlw	105	;'i'
   205  087F  3467               	retlw	103	;'g'
   206  0880  3465               	retlw	101	;'e'
   207  0881  3420               	retlw	32	;' '
   208  0882  3475               	retlw	117	;'u'
   209  0883  346E               	retlw	110	;'n'
   210  0884  3420               	retlw	32	;' '
   211  0885  3476               	retlw	118	;'v'
   212  0886  3461               	retlw	97	;'a'
   213  0887  346C               	retlw	108	;'l'
   214  0888  346F               	retlw	111	;'o'
   215  0889  3472               	retlw	114	;'r'
   216  088A  3420               	retlw	32	;' '
   217  088B  3461               	retlw	97	;'a'
   218  088C  3420               	retlw	32	;' '
   219  088D  346D               	retlw	109	;'m'
   220  088E  346F               	retlw	111	;'o'
   221  088F  3473               	retlw	115	;'s'
   222  0890  3474               	retlw	116	;'t'
   223  0891  3472               	retlw	114	;'r'
   224  0892  3461               	retlw	97	;'a'
   225  0893  3472               	retlw	114	;'r'
   226  0894  3420               	retlw	32	;' '
   227  0895  3465               	retlw	101	;'e'
   228  0896  346E               	retlw	110	;'n'
   229  0897  3420               	retlw	32	;' '
   230  0898  3465               	retlw	101	;'e'
   231  0899  346C               	retlw	108	;'l'
   232  089A  3420               	retlw	32	;' '
   233  089B  3470               	retlw	112	;'p'
   234  089C  3475               	retlw	117	;'u'
   235  089D  3465               	retlw	101	;'e'
   236  089E  3472               	retlw	114	;'r'
   237  089F  3474               	retlw	116	;'t'
   238  08A0  346F               	retlw	111	;'o'
   239  08A1  3420               	retlw	32	;' '
   240  08A2  3441               	retlw	65	;'A'
   241  08A3  343A               	retlw	58	;':'
   242  08A4  3400               	retlw	0
   243  08A5                     STR_22:	
   244  08A5  340A               	retlw	10
   245  08A6  340D               	retlw	13
   246  08A7  3456               	retlw	86	;'V'
   247  08A8  3461               	retlw	97	;'a'
   248  08A9  346C               	retlw	108	;'l'
   249  08AA  346F               	retlw	111	;'o'
   250  08AB  3472               	retlw	114	;'r'
   251  08AC  3420               	retlw	32	;' '
   252  08AD  3464               	retlw	100	;'d'
   253  08AE  3465               	retlw	101	;'e'
   254  08AF  346C               	retlw	108	;'l'
   255  08B0  3420               	retlw	32	;' '
   256  08B1  3463               	retlw	99	;'c'
   257  08B2  3461               	retlw	97	;'a'
   258  08B3  346E               	retlw	110	;'n'
   259  08B4  3461               	retlw	97	;'a'
   260  08B5  346C               	retlw	108	;'l'
   261  08B6  3420               	retlw	32	;' '
   262  08B7  3443               	retlw	67	;'C'
   263  08B8  3435               	retlw	53	;'5'
   264  08B9  343A               	retlw	58	;':'
   265  08BA  3420               	retlw	32	;' '
   266  08BB  3425               	retlw	37	;'%'
   267  08BC  3464               	retlw	100	;'d'
   268  08BD  3420               	retlw	32	;' '
   269  08BE  3400               	retlw	0
   270  08BF                     STR_23:	
   271  08BF  340A               	retlw	10
   272  08C0  340D               	retlw	13
   273  08C1  3456               	retlw	86	;'V'
   274  08C2  3461               	retlw	97	;'a'
   275  08C3  346C               	retlw	108	;'l'
   276  08C4  346F               	retlw	111	;'o'
   277  08C5  3472               	retlw	114	;'r'
   278  08C6  3420               	retlw	32	;' '
   279  08C7  3464               	retlw	100	;'d'
   280  08C8  3465               	retlw	101	;'e'
   281  08C9  346C               	retlw	108	;'l'
   282  08CA  3420               	retlw	32	;' '
   283  08CB  3463               	retlw	99	;'c'
   284  08CC  3461               	retlw	97	;'a'
   285  08CD  346E               	retlw	110	;'n'
   286  08CE  3461               	retlw	97	;'a'
   287  08CF  346C               	retlw	108	;'l'
   288  08D0  3420               	retlw	32	;' '
   289  08D1  3443               	retlw	67	;'C'
   290  08D2  3436               	retlw	54	;'6'
   291  08D3  343A               	retlw	58	;':'
   292  08D4  3420               	retlw	32	;' '
   293  08D5  3425               	retlw	37	;'%'
   294  08D6  3464               	retlw	100	;'d'
   295  08D7  3420               	retlw	32	;' '
   296  08D8  3400               	retlw	0
   297  08D9                     STR_10:	
   298  08D9  340D               	retlw	13
   299  08DA  340A               	retlw	10
   300  08DB  340A               	retlw	10
   301  08DC  3456               	retlw	86	;'V'
   302  08DD  3461               	retlw	97	;'a'
   303  08DE  346C               	retlw	108	;'l'
   304  08DF  346F               	retlw	111	;'o'
   305  08E0  3472               	retlw	114	;'r'
   306  08E1  3420               	retlw	32	;' '
   307  08E2  3464               	retlw	100	;'d'
   308  08E3  3465               	retlw	101	;'e'
   309  08E4  346C               	retlw	108	;'l'
   310  08E5  3420               	retlw	32	;' '
   311  08E6  3470               	retlw	112	;'p'
   312  08E7  3475               	retlw	117	;'u'
   313  08E8  3465               	retlw	101	;'e'
   314  08E9  3472               	retlw	114	;'r'
   315  08EA  3474               	retlw	116	;'t'
   316  08EB  346F               	retlw	111	;'o'
   317  08EC  3420               	retlw	32	;' '
   318  08ED  3442               	retlw	66	;'B'
   319  08EE  343A               	retlw	58	;':'
   320  08EF  3425               	retlw	37	;'%'
   321  08F0  3464               	retlw	100	;'d'
   322  08F1  3400               	retlw	0
   323  08F2                     STR_5:	
   324  08F2  340D               	retlw	13
   325  08F3  340A               	retlw	10
   326  08F4  3433               	retlw	51	;'3'
   327  08F5  342E               	retlw	46	;'.'
   328  08F6  342D               	retlw	45	;'-'
   329  08F7  3420               	retlw	32	;' '
   330  08F8  3445               	retlw	69	;'E'
   331  08F9  346E               	retlw	110	;'n'
   332  08FA  3476               	retlw	118	;'v'
   333  08FB  3469               	retlw	105	;'i'
   334  08FC  3461               	retlw	97	;'a'
   335  08FD  3472               	retlw	114	;'r'
   336  08FE  3420               	retlw	32	;' '
   337  08FF  3470               	retlw	112	;'p'
   338  0900  3475               	retlw	117	;'u'
   339  0901  3465               	retlw	101	;'e'
   340  0902  3472               	retlw	114	;'r'
   341  0903  3474               	retlw	116	;'t'
   342  0904  346F               	retlw	111	;'o'
   343  0905  3420               	retlw	32	;' '
   344  0906  3441               	retlw	65	;'A'
   345  0907  3400               	retlw	0
   346  0908                     STR_7:	
   347  0908  340D               	retlw	13
   348  0909  340A               	retlw	10
   349  090A  340A               	retlw	10
   350  090B  3445               	retlw	69	;'E'
   351  090C  346C               	retlw	108	;'l'
   352  090D  3469               	retlw	105	;'i'
   353  090E  3467               	retlw	103	;'g'
   354  090F  3465               	retlw	101	;'e'
   355  0910  3420               	retlw	32	;' '
   356  0911  3475               	retlw	117	;'u'
   357  0912  346E               	retlw	110	;'n'
   358  0913  3461               	retlw	97	;'a'
   359  0914  3420               	retlw	32	;' '
   360  0915  346F               	retlw	111	;'o'
   361  0916  3470               	retlw	112	;'p'
   362  0917  3463               	retlw	99	;'c'
   363  0918  3469               	retlw	105	;'i'
   364  0919  346F               	retlw	111	;'o'
   365  091A  346E               	retlw	110	;'n'
   366  091B  343A               	retlw	58	;':'
   367  091C  3400               	retlw	0
   368  091D                     STR_4:	
   369  091D  340D               	retlw	13
   370  091E  340A               	retlw	10
   371  091F  3432               	retlw	50	;'2'
   372  0920  342E               	retlw	46	;'.'
   373  0921  342D               	retlw	45	;'-'
   374  0922  3420               	retlw	32	;' '
   375  0923  3456               	retlw	86	;'V'
   376  0924  3461               	retlw	97	;'a'
   377  0925  346C               	retlw	108	;'l'
   378  0926  346F               	retlw	111	;'o'
   379  0927  3472               	retlw	114	;'r'
   380  0928  3420               	retlw	32	;' '
   381  0929  3470               	retlw	112	;'p'
   382  092A  3475               	retlw	117	;'u'
   383  092B  3465               	retlw	101	;'e'
   384  092C  3472               	retlw	114	;'r'
   385  092D  3474               	retlw	116	;'t'
   386  092E  346F               	retlw	111	;'o'
   387  092F  3420               	retlw	32	;' '
   388  0930  3442               	retlw	66	;'B'
   389  0931  3400               	retlw	0
   390  0932                     STR_20:	
   391  0932  340D               	retlw	13
   392  0933  340A               	retlw	10
   393  0934  340A               	retlw	10
   394  0935  344F               	retlw	79	;'O'
   395  0936  3470               	retlw	112	;'p'
   396  0937  3463               	retlw	99	;'c'
   397  0938  3469               	retlw	105	;'i'
   398  0939  346F               	retlw	111	;'o'
   399  093A  346E               	retlw	110	;'n'
   400  093B  3420               	retlw	32	;' '
   401  093C  346E               	retlw	110	;'n'
   402  093D  346F               	retlw	111	;'o'
   403  093E  3420               	retlw	32	;' '
   404  093F  3476               	retlw	118	;'v'
   405  0940  3461               	retlw	97	;'a'
   406  0941  346C               	retlw	108	;'l'
   407  0942  3469               	retlw	105	;'i'
   408  0943  3464               	retlw	100	;'d'
   409  0944  3461               	retlw	97	;'a'
   410  0945  3400               	retlw	0
   411  0946                     STR_6:	
   412  0946  340D               	retlw	13
   413  0947  340A               	retlw	10
   414  0948  3434               	retlw	52	;'4'
   415  0949  342E               	retlw	46	;'.'
   416  094A  342D               	retlw	45	;'-'
   417  094B  3420               	retlw	32	;' '
   418  094C  3445               	retlw	69	;'E'
   419  094D  346E               	retlw	110	;'n'
   420  094E  3476               	retlw	118	;'v'
   421  094F  3469               	retlw	105	;'i'
   422  0950  3461               	retlw	97	;'a'
   423  0951  3472               	retlw	114	;'r'
   424  0952  3420               	retlw	32	;' '
   425  0953  3461               	retlw	97	;'a'
   426  0954  3420               	retlw	32	;' '
   427  0955  3450               	retlw	80	;'P'
   428  0956  3457               	retlw	87	;'W'
   429  0957  344D               	retlw	77	;'M'
   430  0958  3400               	retlw	0
   431  0959                     STR_3:	
   432  0959  340D               	retlw	13
   433  095A  340A               	retlw	10
   434  095B  3431               	retlw	49	;'1'
   435  095C  342E               	retlw	46	;'.'
   436  095D  342D               	retlw	45	;'-'
   437  095E  3420               	retlw	32	;' '
   438  095F  3456               	retlw	86	;'V'
   439  0960  3461               	retlw	97	;'a'
   440  0961  346C               	retlw	108	;'l'
   441  0962  346F               	retlw	111	;'o'
   442  0963  3472               	retlw	114	;'r'
   443  0964  3465               	retlw	101	;'e'
   444  0965  3473               	retlw	115	;'s'
   445  0966  3420               	retlw	32	;' '
   446  0967  3441               	retlw	65	;'A'
   447  0968  3444               	retlw	68	;'D'
   448  0969  3443               	retlw	67	;'C'
   449  096A  3400               	retlw	0
   450  096B                     STR_2:	
   451  096B  340D               	retlw	13
   452  096C  340A               	retlw	10
   453  096D  3400               	retlw	0
   454  096E                     STR_12:	
   455  096E  340A               	retlw	10
   456  096F  340D               	retlw	13
   457  0970  3400               	retlw	0
   458  0971                     STR_8:	
   459  0971  3425               	retlw	37	;'%'
   460  0972  3463               	retlw	99	;'c'
   461  0973  3400               	retlw	0
   462  0974                     STR_1:	
   463  0974  340C               	retlw	12
   464  0975  3400               	retlw	0
   465  096E                     
   466                           	psect	cinit
   467  0394                     start_initialization:	
   468  0394  3002               	movlw	2
   469                           
   470                           ; Clear objects allocated to BANK0
   471  0395  01B3               	clrf	__pbssBANK0& (0+127)
   472  0396  01B4               	clrf	(__pbssBANK0+1)& (0+127)
   473  0397  01B5               	clrf	(__pbssBANK0+2)& (0+127)
   474  0398  01B6               	clrf	(__pbssBANK0+3)& (0+127)
   475  0399  01B7               	clrf	(__pbssBANK0+4)& (0+127)
   476  039A  01B8               	clrf	(__pbssBANK0+5)& (0+127)
   477  039B  01B9               	clrf	(__pbssBANK0+6)& (0+127)
   478  039C  01BA               	clrf	(__pbssBANK0+7)& (0+127)
   479                           
   480                           ;initializer for _vadc1
   481  039D  01BB               	clrf	__pdataBANK0& (0+127)
   482  039E  00BC               	movwf	(__pdataBANK0+1)& (0+127)
   483                           
   484                           ;initializer for _vadc2
   485  039F  01BD               	clrf	(__pdataBANK0+2)& (0+127)
   486  03A0  00BE               	movwf	(__pdataBANK0+3)& (0+127)
   487  03A1                     end_of_initialization:	
   488                           ;End of C runtime variable initialization code
   489                           
   490  03A1  0183               	clrf	3
   491  03A2  120A  118A  2C27   	ljmp	_main	;jump to C main() function
   492                           
   493                           	psect	bssBANK0
   494  0033                     __pbssBANK0:	
   495  0033                     _a:	
   496  0033                     	ds	2
   497  0035                     _PA:	
   498  0035                     	ds	6
   499                           
   500                           	psect	dataBANK0
   501  003B                     __pdataBANK0:	
   502  003B                     _vadc1:	
   503  003B                     	ds	2
   504  003D                     _vadc2:	
   505  003D                     	ds	2
   506                           
   507                           	psect	cstackCOMMON
   508  0070                     __pcstackCOMMON:	
   509  0070                     ?_lcd_init:	
   510  0070                     ?_valadc:	
   511                           ; 0 bytes @ 0x0
   512                           
   513  0070                     ?_pwm:	
   514                           ; 0 bytes @ 0x0
   515                           
   516  0070                     ?_pause:	
   517                           ; 0 bytes @ 0x0
   518                           
   519  0070                     ?_msecbase:	
   520                           ; 0 bytes @ 0x0
   521                           
   522  0070                     ??_msecbase:	
   523                           ; 0 bytes @ 0x0
   524                           
   525  0070                     ?_isdigit:	
   526                           ; 0 bytes @ 0x0
   527                           
   528  0070                     ??_isdigit:	
   529                           ; 1 bit 
   530                           
   531  0070                     ?_putch:	
   532                           ; 0 bytes @ 0x0
   533                           
   534  0070                     ??_putch:	
   535                           ; 0 bytes @ 0x0
   536                           
   537  0070                     ??_getch:	
   538                           ; 0 bytes @ 0x0
   539                           
   540  0070                     ?_init_comms:	
   541                           ; 0 bytes @ 0x0
   542                           
   543  0070                     ??_init_comms:	
   544                           ; 0 bytes @ 0x0
   545                           
   546  0070                     ?_main:	
   547                           ; 0 bytes @ 0x0
   548                           
   549  0070                     ?_lcd_write:	
   550                           ; 0 bytes @ 0x0
   551                           
   552  0070                     ?_lcd_clear:	
   553                           ; 0 bytes @ 0x0
   554                           
   555  0070                     ?_getch:	
   556                           ; 0 bytes @ 0x0
   557                           
   558  0070                     ?___wmul:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?___lwdiv:	
   562                           ; 2 bytes @ 0x0
   563                           
   564  0070                     putch@byte:	
   565                           ; 2 bytes @ 0x0
   566                           
   567  0070                     _isdigit$2408:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     pause@usvalue:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ___wmul@multiplier:	
   574                           ; 2 bytes @ 0x0
   575                           
   576  0070                     ___lwdiv@divisor:	
   577                           ; 2 bytes @ 0x0
   578                           
   579                           
   580                           ; 2 bytes @ 0x0
   581  0070                     	ds	1
   582  0071                     isdigit@c:	
   583                           
   584                           ; 1 bytes @ 0x1
   585  0071                     	ds	1
   586  0072                     ??_pause:	
   587  0072                     pause@x:	
   588                           ; 0 bytes @ 0x2
   589                           
   590  0072                     ___wmul@multiplicand:	
   591                           ; 2 bytes @ 0x2
   592                           
   593  0072                     ___lwdiv@dividend:	
   594                           ; 2 bytes @ 0x2
   595                           
   596                           
   597                           ; 2 bytes @ 0x2
   598  0072                     	ds	2
   599  0074                     ??_pwm:	
   600  0074                     ??_lcd_write:	
   601                           ; 0 bytes @ 0x4
   602                           
   603  0074                     ??___wmul:	
   604                           ; 0 bytes @ 0x4
   605                           
   606  0074                     ??___lwdiv:	
   607                           ; 0 bytes @ 0x4
   608                           
   609  0074                     lcd_write@c:	
   610                           ; 0 bytes @ 0x4
   611                           
   612  0074                     ___wmul@product:	
   613                           ; 1 bytes @ 0x4
   614                           
   615  0074                     ___lwdiv@quotient:	
   616                           ; 2 bytes @ 0x4
   617                           
   618                           
   619                           ; 2 bytes @ 0x4
   620  0074                     	ds	1
   621  0075                     ??_lcd_init:	
   622  0075                     ??_lcd_clear:	
   623                           ; 0 bytes @ 0x5
   624                           
   625                           
   626                           ; 0 bytes @ 0x5
   627  0075                     	ds	1
   628  0076                     ?_atoi:	
   629  0076                     ___lwdiv@counter:	
   630                           ; 2 bytes @ 0x6
   631                           
   632                           
   633                           ; 1 bytes @ 0x6
   634  0076                     	ds	1
   635  0077                     ?___lwmod:	
   636  0077                     ___lwmod@divisor:	
   637                           ; 2 bytes @ 0x7
   638                           
   639                           
   640                           ; 2 bytes @ 0x7
   641  0077                     	ds	1
   642  0078                     ??_atoi:	
   643                           
   644                           ; 0 bytes @ 0x8
   645  0078                     	ds	1
   646  0079                     ___lwmod@dividend:	
   647                           
   648                           ; 2 bytes @ 0x9
   649  0079                     	ds	1
   650  007A                     atoi@sign:	
   651                           
   652                           ; 1 bytes @ 0xA
   653  007A                     	ds	1
   654  007B                     ??___lwmod:	
   655  007B                     ___lwmod@counter:	
   656                           ; 0 bytes @ 0xB
   657                           
   658  007B                     atoi@a:	
   659                           ; 1 bytes @ 0xB
   660                           
   661                           
   662                           ; 2 bytes @ 0xB
   663  007B                     	ds	1
   664  007C                     ??_printf:	
   665                           
   666                           ; 0 bytes @ 0xC
   667  007C                     	ds	1
   668  007D                     atoi@s:	
   669                           
   670                           ; 1 bytes @ 0xD
   671  007D                     	ds	1
   672  007E                     ??_main:	
   673                           
   674                           	psect	cstackBANK0
   675  0020                     __pcstackBANK0:	
   676                           ; 0 bytes @ 0xE
   677                           
   678  0020                     ?_printf:	
   679  0020                     printf@f:	
   680                           ; 2 bytes @ 0x0
   681                           
   682                           
   683                           ; 2 bytes @ 0x0
   684  0020                     	ds	4
   685  0024                     printf@flag:	
   686                           
   687                           ; 1 bytes @ 0x4
   688  0024                     	ds	1
   689  0025                     printf@prec:	
   690                           
   691                           ; 1 bytes @ 0x5
   692  0025                     	ds	1
   693  0026                     printf@ap:	
   694                           
   695                           ; 1 bytes @ 0x6
   696  0026                     	ds	1
   697  0027                     printf@_val:	
   698                           
   699                           ; 4 bytes @ 0x7
   700  0027                     	ds	4
   701  002B                     printf@c:	
   702                           
   703                           ; 1 bytes @ 0xB
   704  002B                     	ds	1
   705  002C                     ??_valadc:	
   706                           
   707                           ; 0 bytes @ 0xC
   708  002C                     	ds	1
   709  002D                     main@i:	
   710                           
   711                           ; 2 bytes @ 0xD
   712  002D                     	ds	2
   713  002F                     main@i_1838:	
   714                           
   715                           ; 2 bytes @ 0xF
   716  002F                     	ds	2
   717  0031                     main@i_1841:	
   718                           
   719                           ; 2 bytes @ 0x11
   720  0031                     	ds	2
   721                           
   722                           	psect	maintext
   723  0427                     __pmaintext:	
   724 ;;Data sizes: Strings 346, constant 10, data 4, bss 8, persistent 0 stack 0
   725 ;;Auto spaces:   Size  Autos    Used
   726 ;; COMMON          14     14      14
   727 ;; BANK0           80     19      31
   728 ;; BANK1           80      0       0
   729 ;; BANK3           96      0       0
   730 ;; BANK2           96      0       0
   731 ;;
   732 ;; Pointer list with targets:
   733 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   734 ;;
   735 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   736 ;;
   737 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   738 ;;
   739 ;; ?_atoi	int  size(1) Largest target is 0
   740 ;;
   741 ;; atoi@s	PTR const unsigned char  size(1) Largest target is 6
   742 ;;		 -> PA(BANK0[6]), 
   743 ;;
   744 ;; printf@f	PTR const unsigned char  size(2) Largest target is 47
   745 ;;		 -> STR_23(CODE[26]), STR_22(CODE[26]), STR_21(CODE[3]), STR_20(CODE[20]), 
   746 ;;		 -> STR_19(CODE[3]), STR_18(CODE[47]), STR_17(CODE[3]), STR_16(CODE[47]), 
   747 ;;		 -> STR_15(CODE[3]), STR_14(CODE[3]), STR_13(CODE[43]), STR_12(CODE[3]), 
   748 ;;		 -> STR_11(CODE[3]), STR_10(CODE[25]), STR_9(CODE[3]), STR_8(CODE[3]), 
   749 ;;		 -> STR_7(CODE[21]), STR_6(CODE[19]), STR_5(CODE[22]), STR_4(CODE[21]), 
   750 ;;		 -> STR_3(CODE[18]), STR_2(CODE[3]), STR_1(CODE[2]), 
   751 ;;
   752 ;; ?_printf	int  size(1) Largest target is 0
   753 ;;
   754 ;; printf@ap	PTR void [1] size(1) Largest target is 2
   755 ;;		 -> ?_printf(BANK0[2]), 
   756 ;;
   757 ;; S1881$_cp	PTR const unsigned char  size(1) Largest target is 0
   758 ;;
   759 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   760 ;;
   761 ;;
   762 ;; Critical Paths under _main in COMMON
   763 ;;
   764 ;;   _main->_printf
   765 ;;   _main->_atoi
   766 ;;   _lcd_init->_lcd_write
   767 ;;   _lcd_clear->_lcd_write
   768 ;;   _lcd_write->_pause
   769 ;;   _pwm->_pause
   770 ;;   _valadc->_printf
   771 ;;   _atoi->___wmul
   772 ;;   _printf->___lwmod
   773 ;;   ___lwmod->___lwdiv
   774 ;;
   775 ;; Critical Paths under _main in BANK0
   776 ;;
   777 ;;   _main->_valadc
   778 ;;   _valadc->_printf
   779 ;;
   780 ;; Critical Paths under _main in BANK1
   781 ;;
   782 ;;   None.
   783 ;;
   784 ;; Critical Paths under _main in BANK3
   785 ;;
   786 ;;   None.
   787 ;;
   788 ;; Critical Paths under _main in BANK2
   789 ;;
   790 ;;   None.
   791 ;;
   792 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   793 ;;
   794 ;;
   795 ;;Call Graph Tables:
   796 ;;
   797 ;; ---------------------------------------------------------------------------------
   798 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   799 ;; ---------------------------------------------------------------------------------
   800 ;; (0) _main                                                 6     6      0    2983
   801 ;;                                             13 BANK0      6     6      0
   802 ;;                           _lcd_init
   803 ;;                         _init_comms
   804 ;;                             _printf
   805 ;;                             _valadc
   806 ;;                              _getch
   807 ;;                               _atoi
   808 ;;                                _pwm
   809 ;;                              _pause
   810 ;; ---------------------------------------------------------------------------------
   811 ;; (1) _lcd_init                                             1     1      0     295
   812 ;;                                              5 COMMON     1     1      0
   813 ;;                              _pause
   814 ;;                          _lcd_write
   815 ;;                          _lcd_clear
   816 ;; ---------------------------------------------------------------------------------
   817 ;; (2) _lcd_clear                                            0     0      0     136
   818 ;;                          _lcd_write
   819 ;;                              _pause
   820 ;; ---------------------------------------------------------------------------------
   821 ;; (3) _lcd_write                                            1     1      0      90
   822 ;;                                              4 COMMON     1     1      0
   823 ;;                              _pause
   824 ;; ---------------------------------------------------------------------------------
   825 ;; (1) _pwm                                                  2     2      0     250
   826 ;;                                              4 COMMON     2     2      0
   827 ;;                              _pause
   828 ;;                              _getch
   829 ;;                               _main
   830 ;; ---------------------------------------------------------------------------------
   831 ;; (1) _valadc                                               1     1      0    1025
   832 ;;                                             12 BANK0      1     1      0
   833 ;;                              _pause
   834 ;;                             _printf
   835 ;;                              _getch
   836 ;;                               _main
   837 ;; ---------------------------------------------------------------------------------
   838 ;; (1) _pause                                                4     2      2      46
   839 ;;                                              0 COMMON     4     2      2
   840 ;;                           _msecbase
   841 ;; ---------------------------------------------------------------------------------
   842 ;; (1) _atoi                                                 8     6      2     388
   843 ;;                                              6 COMMON     8     6      2
   844 ;;                             ___wmul
   845 ;;                            _isdigit
   846 ;; ---------------------------------------------------------------------------------
   847 ;; (2) _printf                                              14    10      4     775
   848 ;;                                             12 COMMON     2     2      0
   849 ;;                                              0 BANK0     12     8      4
   850 ;;                              _putch
   851 ;;                            ___lwdiv
   852 ;;                            ___lwmod
   853 ;; ---------------------------------------------------------------------------------
   854 ;; (3) ___lwmod                                              5     1      4     159
   855 ;;                                              7 COMMON     5     1      4
   856 ;;                            ___lwdiv (ARG)
   857 ;; ---------------------------------------------------------------------------------
   858 ;; (3) ___lwdiv                                              7     3      4     162
   859 ;;                                              0 COMMON     7     3      4
   860 ;; ---------------------------------------------------------------------------------
   861 ;; (2) ___wmul                                               6     2      4      92
   862 ;;                                              0 COMMON     6     2      4
   863 ;; ---------------------------------------------------------------------------------
   864 ;; (2) _isdigit                                              2     2      0      68
   865 ;;                                              0 COMMON     2     2      0
   866 ;; ---------------------------------------------------------------------------------
   867 ;; (2) _msecbase                                             0     0      0       0
   868 ;; ---------------------------------------------------------------------------------
   869 ;; (1) _init_comms                                           0     0      0       0
   870 ;; ---------------------------------------------------------------------------------
   871 ;; (2) _getch                                                0     0      0       0
   872 ;; ---------------------------------------------------------------------------------
   873 ;; (3) _putch                                                1     1      0      22
   874 ;;                                              0 COMMON     1     1      0
   875 ;; ---------------------------------------------------------------------------------
   876 ;; Estimated maximum stack depth 3
   877 ;; ---------------------------------------------------------------------------------
   878 ;; Call Graph Graphs:
   879 ;; _main (ROOT)
   880 ;;   _lcd_init
   881 ;;     _pause
   882 ;;       _msecbase
   883 ;;     _lcd_write
   884 ;;       _pause
   885 ;;         _msecbase
   886 ;;     _lcd_clear
   887 ;;       _lcd_write
   888 ;;         _pause
   889 ;;           _msecbase
   890 ;;       _pause
   891 ;;         _msecbase
   892 ;;   _init_comms
   893 ;;   _printf
   894 ;;     _putch
   895 ;;     ___lwdiv
   896 ;;     ___lwmod
   897 ;;       ___lwdiv (ARG)
   898 ;;   _valadc
   899 ;;     _pause
   900 ;;       _msecbase
   901 ;;     _printf
   902 ;;       _putch
   903 ;;       ___lwdiv
   904 ;;       ___lwmod
   905 ;;         ___lwdiv (ARG)
   906 ;;     _getch
   907 ;;   _getch
   908 ;;   _atoi
   909 ;;     ___wmul
   910 ;;     _isdigit
   911 ;;   _pwm
   912 ;;     _pause
   913 ;;       _msecbase
   914 ;;     _getch
   915 ;;   _pause
   916 ;;     _msecbase
   917 ;;
   918 ;; Address spaces:
   919 ;;Name               Size   Autos  Total    Cost      Usage
   920 ;;BANK3               60      0       0       9        0.0%
   921 ;;BITBANK3            60      0       0       8        0.0%
   922 ;;SFR3                 0      0       0       4        0.0%
   923 ;;BITSFR3              0      0       0       4        0.0%
   924 ;;BANK2               60      0       0      11        0.0%
   925 ;;BITBANK2            60      0       0      10        0.0%
   926 ;;SFR2                 0      0       0       5        0.0%
   927 ;;BITSFR2              0      0       0       5        0.0%
   928 ;;SFR1                 0      0       0       2        0.0%
   929 ;;BITSFR1              0      0       0       2        0.0%
   930 ;;BANK1               50      0       0       7        0.0%
   931 ;;BITBANK1            50      0       0       6        0.0%
   932 ;;CODE                 0      0       0       0        0.0%
   933 ;;DATA                 0      0      32      12        0.0%
   934 ;;ABS                  0      0      2D       3        0.0%
   935 ;;NULL                 0      0       0       0        0.0%
   936 ;;STACK                0      0       5       2        0.0%
   937 ;;BANK0               50     13      1F       5       38.8%
   938 ;;BITBANK0            50      0       0       4        0.0%
   939 ;;SFR0                 0      0       0       1        0.0%
   940 ;;BITSFR0              0      0       0       1        0.0%
   941 ;;COMMON               E      E       E       1      100.0%
   942 ;;BITCOMMON            E      0       0       0        0.0%
   943 ;;EEDATA             100      0       0       0        0.0%
   944                           
   945                           
   946 ;; *************** function _main *****************
   947 ;; Defined at:
   948 ;;		line 82 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\USART3\USART3.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;		None
   951 ;; Auto vars:     Size  Location     Type
   952 ;;  i               2   17[BANK0 ] int 
   953 ;;  i               2   15[BANK0 ] int 
   954 ;;  i               2   13[BANK0 ] int 
   955 ;; Return value:  Size  Location     Type
   956 ;;		None               void
   957 ;; Registers used:
   958 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   959 ;; Tracked objects:
   960 ;;		On entry : 60/0
   961 ;;		On exit  : 60/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   964 ;;      Params:         0       0       0       0       0
   965 ;;      Locals:         0       6       0       0       0
   966 ;;      Temps:          0       0       0       0       0
   967 ;;      Totals:         0       6       0       0       0
   968 ;;Total ram usage:        6 bytes
   969 ;; Hardware stack levels required when called:    5
   970 ;; This function calls:
   971 ;;		_lcd_init
   972 ;;		_init_comms
   973 ;;		_printf
   974 ;;		_valadc
   975 ;;		_getch
   976 ;;		_atoi
   977 ;;		_pwm
   978 ;;		_pause
   979 ;; This function is called by:
   980 ;;		_pwm
   981 ;;		_valadc
   982 ;; This function uses a non-reentrant model
   983 ;;
   984  0427                     _main:	
   985                           
   986                           ;USART3.c: 85: ANSEL = 0X60;
   987                           
   988                           ; Regs used in _main: [allreg]
   989  0427  3060               	movlw	96
   990  0428  1683               	bsf	3,5	;RP0=1, select bank3
   991  0429  1703               	bsf	3,6	;RP1=1, select bank3
   992  042A  0088               	movwf	8	;volatile
   993                           
   994                           ;USART3.c: 86: ANSELH = 0;
   995  042B  0189               	clrf	9	;volatile
   996                           
   997                           ;USART3.c: 87: TRISB=0XFF;
   998  042C  30FF               	movlw	255
   999  042D  1303               	bcf	3,6	;RP1=0, select bank1
  1000  042E  0086               	movwf	6	;volatile
  1001                           
  1002                           ;USART3.c: 88: TRISA=0;
  1003  042F  0185               	clrf	5	;volatile
  1004                           
  1005                           ;USART3.c: 90: TRISD =0;
  1006  0430  0188               	clrf	8	;volatile
  1007                           
  1008                           ;USART3.c: 91: TRISC =0;
  1009  0431  0187               	clrf	7	;volatile
  1010                           
  1011                           ;USART3.c: 92: TRISE=0X07;
  1012  0432  3007               	movlw	7
  1013  0433  0089               	movwf	9	;volatile
  1014                           
  1015                           ;USART3.c: 93: T2CON=0X07;
  1016  0434  1283               	bcf	3,5	;RP0=0, select bank0
  1017  0435  0092               	movwf	18	;volatile
  1018                           
  1019                           ;USART3.c: 94: PR2=0XFF;
  1020  0436  30FF               	movlw	255
  1021  0437  1683               	bsf	3,5	;RP0=1, select bank1
  1022  0438  0092               	movwf	18	;volatile
  1023                           
  1024                           ;USART3.c: 96: CCPR1L=0X80;
  1025  0439  3080               	movlw	128
  1026  043A  1283               	bcf	3,5	;RP0=0, select bank0
  1027  043B  0095               	movwf	21	;volatile
  1028                           
  1029                           ;USART3.c: 97: CCP1CON=0X0C;
  1030  043C  300C               	movlw	12
  1031  043D  0097               	movwf	23	;volatile
  1032                           
  1033                           ;USART3.c: 98: lcd_init();
  1034  043E  120A  118A  2755   	fcall	_lcd_init
      +       120A  118A         
  1035                           
  1036                           ;USART3.c: 99: init_comms();
  1037  0443  120A  118A  2386   	fcall	_init_comms
      +       120A  118A         
  1038                           
  1039                           ;USART3.c: 100: ADFM=0;
  1040  0448  1303               	bcf	3,6	;RP1=0, select bank1
  1041  0449  139F               	bcf	31,7
  1042                           
  1043                           ;USART3.c: 112: switch(a=getch()){
  1044  044A  2D82               	goto	l3349
  1045  044B                     l3363:	
  1046                           
  1047                           ;USART3.c: 116: printf("%c",a);
  1048  044B  3071               	movlw	low (STR_8| (0+32768))
  1049  044C  00A0               	movwf	?_printf
  1050  044D  3089               	movlw	high (STR_8| (0+32768))
  1051  044E  00A1               	movwf	?_printf+1
  1052  044F  0834               	movf	_a+1,w
  1053  0450  00A3               	movwf	?_printf+3
  1054  0451  0833               	movf	_a,w
  1055  0452  00A2               	movwf	?_printf+2
  1056  0453  120A  118A  2664   	fcall	_printf
      +       120A  118A         
  1057                           
  1058                           ;USART3.c: 117: valadc();
  1059  0458  120A  118A  2601   	fcall	_valadc
      +       120A  118A         
  1060  045D                     l3367:	
  1061                           
  1062                           ;USART3.c: 118: getch();
  1063  045D  120A  118A  27AF   	fcall	_getch
      +       120A  118A         
  1064                           
  1065                           ;USART3.c: 119: break;
  1066  0462  2D82               	goto	l3349
  1067  0463                     l3369:	
  1068                           
  1069                           ;USART3.c: 123: printf("%c",a);
  1070  0463  3071               	movlw	low (STR_8| (0+32768))
  1071  0464  00A0               	movwf	?_printf
  1072  0465  3089               	movlw	high (STR_8| (0+32768))
  1073  0466  00A1               	movwf	?_printf+1
  1074  0467  0834               	movf	_a+1,w
  1075  0468  00A3               	movwf	?_printf+3
  1076  0469  0833               	movf	_a,w
  1077  046A  00A2               	movwf	?_printf+2
  1078  046B  120A  118A  2664   	fcall	_printf
      +       120A  118A         
  1079                           
  1080                           ;USART3.c: 124: a=PORTB;
  1081  0470  0806               	movf	6,w	;volatile
  1082  0471  00B3               	movwf	_a
  1083  0472  30D9               	movlw	low (STR_10| (0+32768))
  1084  0473  01B4               	clrf	_a+1
  1085                           
  1086                           ;USART3.c: 125: printf("\r\n\nValor del puerto B:%d",a);
  1087  0474  00A0               	movwf	?_printf
  1088  0475  3088               	movlw	high (STR_10| (0+32768))
  1089  0476  00A1               	movwf	?_printf+1
  1090  0477  0834               	movf	_a+1,w
  1091  0478  00A3               	movwf	?_printf+3
  1092  0479  0833               	movf	_a,w
  1093  047A  00A2               	movwf	?_printf+2
  1094  047B  120A  118A  2664   	fcall	_printf
      +       120A  118A         
  1095  0480  2C5D               	goto	l3367
  1096  0481                     l3377:	
  1097                           
  1098                           ;USART3.c: 131: printf("%c",a);
  1099  0481  3071               	movlw	low (STR_8| (0+32768))
  1100  0482  00A0               	movwf	?_printf
  1101  0483  3089               	movlw	high (STR_8| (0+32768))
  1102  0484  00A1               	movwf	?_printf+1
  1103  0485  0834               	movf	_a+1,w
  1104  0486  00A3               	movwf	?_printf+3
  1105  0487  0833               	movf	_a,w
  1106  0488  00A2               	movwf	?_printf+2
  1107  0489  120A  118A  2664   	fcall	_printf
      +       120A  118A         
  1108                           
  1109                           ;USART3.c: 132: printf("\n\r");
  1110  048E  306E               	movlw	low (STR_12| (0+32768))
  1111  048F  00A0               	movwf	?_printf
  1112  0490  3089               	movlw	high (STR_12| (0+32768))
  1113  0491  00A1               	movwf	?_printf+1
  1114  0492  120A  118A  2664   	fcall	_printf
      +       120A  118A         
  1115                           
  1116                           ;USART3.c: 133: printf("\n\rElige un valor a mostrar en el puerto A:");
  1117  0497  307A               	movlw	low (STR_13| (0+32768))
  1118  0498  00A0               	movwf	?_printf
  1119  0499  3088               	movlw	high (STR_13| (0+32768))
  1120  049A  00A1               	movwf	?_printf+1
  1121  049B  120A  118A  2664   	fcall	_printf
      +       120A  118A         
  1122                           
  1123                           ;USART3.c: 135: for(int i=0;i<=2;i++){
  1124  04A0  01AD               	clrf	main@i
  1125  04A1  01AE               	clrf	main@i+1
  1126  04A2                     l3385:	
  1127                           
  1128                           ;USART3.c: 136: PA[i]=getch();}
  1129  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  1130  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  1131  04A4  082D               	movf	main@i,w
  1132  04A5  3E35               	addlw	_PA& (0+255)
  1133  04A6  0084               	movwf	4
  1134  04A7  120A  118A  27AF   	fcall	_getch
      +       120A  118A         
  1135  04AC  1383               	bcf	3,7	;select IRP bank0
  1136  04AD  0080               	movwf	0
  1137  04AE  0AAD               	incf	main@i,f
  1138  04AF  1903               	skipnz
  1139  04B0  0AAE               	incf	main@i+1,f
  1140  04B1  082E               	movf	main@i+1,w
  1141  04B2  3A80               	xorlw	128
  1142  04B3  00FF               	movwf	127
  1143  04B4  3080               	movlw	128
  1144  04B5  027F               	subwf	127,w
  1145  04B6  1D03               	skipz
  1146  04B7  2CBA               	goto	u705
  1147  04B8  3003               	movlw	3
  1148  04B9  022D               	subwf	main@i,w
  1149  04BA                     u705:	
  1150  04BA  1C03               	skipc
  1151  04BB  2CA2               	goto	l3385
  1152                           
  1153                           ;USART3.c: 138: a=atoi(PA);
  1154  04BC  3035               	movlw	_PA& (0+255)
  1155  04BD  120A  118A  23A5   	fcall	_atoi
      +       120A  118A         
  1156  04C2  0877               	movf	?_atoi+1,w
  1157  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  1158  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  1159  04C5  00B4               	movwf	_a+1
  1160  04C6  0876               	movf	?_atoi,w
  1161  04C7  00B3               	movwf	_a
  1162                           
  1163                           ;USART3.c: 139: printf("%d",a);
  1164  04C8  30EF               	movlw	low ((STR_10+22)| (0+32768))
  1165  04C9  00A0               	movwf	?_printf
  1166  04CA  3088               	movlw	high ((STR_10+22)| (0+32768))
  1167  04CB  00A1               	movwf	?_printf+1
  1168  04CC  0834               	movf	_a+1,w
  1169  04CD  00A3               	movwf	?_printf+3
  1170  04CE  0833               	movf	_a,w
  1171  04CF  00A2               	movwf	?_printf+2
  1172  04D0  120A  118A  2664   	fcall	_printf
      +       120A  118A         
  1173                           
  1174                           ;USART3.c: 140: PORTA=0;
  1175  04D5  0185               	clrf	5	;volatile
  1176                           
  1177                           ;USART3.c: 141: PORTA=a;
  1178  04D6  0833               	movf	_a,w
  1179  04D7  0085               	movwf	5	;volatile
  1180  04D8  2C5D               	goto	l3367
  1181  04D9                     l3401:	
  1182                           
  1183                           ;USART3.c: 147: printf("%c",a);
  1184  04D9  3071               	movlw	low (STR_8| (0+32768))
  1185  04DA  00A0               	movwf	?_printf
  1186  04DB  3089               	movlw	high (STR_8| (0+32768))
  1187  04DC  00A1               	movwf	?_printf+1
  1188  04DD  0834               	movf	_a+1,w
  1189  04DE  00A3               	movwf	?_printf+3
  1190  04DF  0833               	movf	_a,w
  1191  04E0  00A2               	movwf	?_printf+2
  1192  04E1  120A  118A  2664   	fcall	_printf
      +       120A  118A         
  1193                           
  1194                           ;USART3.c: 148: printf("\n\r\nElige un valor entre 0 y 1023 para el PWM1:");
  1195  04E6  301C               	movlw	low (STR_16| (0+32768))
  1196  04E7  00A0               	movwf	?_printf
  1197  04E8  3088               	movlw	high (STR_16| (0+32768))
  1198  04E9  00A1               	movwf	?_printf+1
  1199  04EA  120A  118A  2664   	fcall	_printf
      +       120A  118A         
  1200                           
  1201                           ;USART3.c: 150: for(int i=0;i<=3;i++){
  1202  04EF  01AF               	clrf	main@i_1838
  1203  04F0  01B0               	clrf	main@i_1838+1
  1204  04F1                     l3409:	
  1205                           
  1206                           ;USART3.c: 151: PA[i]=getch();}
  1207  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  1208  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  1209  04F3  082F               	movf	main@i_1838,w
  1210  04F4  3E35               	addlw	_PA& (0+255)
  1211  04F5  0084               	movwf	4
  1212  04F6  120A  118A  27AF   	fcall	_getch
      +       120A  118A         
  1213  04FB  1383               	bcf	3,7	;select IRP bank0
  1214  04FC  0080               	movwf	0
  1215  04FD  0AAF               	incf	main@i_1838,f
  1216  04FE  1903               	skipnz
  1217  04FF  0AB0               	incf	main@i_1838+1,f
  1218  0500  0830               	movf	main@i_1838+1,w
  1219  0501  3A80               	xorlw	128
  1220  0502  00FF               	movwf	127
  1221  0503  3080               	movlw	128
  1222  0504  027F               	subwf	127,w
  1223  0505  1D03               	skipz
  1224  0506  2D09               	goto	u715
  1225  0507  3004               	movlw	4
  1226  0508  022F               	subwf	main@i_1838,w
  1227  0509                     u715:	
  1228  0509  1C03               	skipc
  1229  050A  2CF1               	goto	l3409
  1230                           
  1231                           ;USART3.c: 152: a=atoi(PA);
  1232  050B  3035               	movlw	_PA& (0+255)
  1233  050C  120A  118A  23A5   	fcall	_atoi
      +       120A  118A         
  1234  0511  0877               	movf	?_atoi+1,w
  1235  0512  1283               	bcf	3,5	;RP0=0, select bank0
  1236  0513  1303               	bcf	3,6	;RP1=0, select bank0
  1237  0514  00B4               	movwf	_a+1
  1238  0515  0876               	movf	?_atoi,w
  1239  0516  00B3               	movwf	_a
  1240                           
  1241                           ;USART3.c: 153: printf("%d",a);
  1242  0517  30EF               	movlw	low ((STR_10+22)| (0+32768))
  1243  0518  00A0               	movwf	?_printf
  1244  0519  3088               	movlw	high ((STR_10+22)| (0+32768))
  1245  051A  00A1               	movwf	?_printf+1
  1246  051B  0834               	movf	_a+1,w
  1247  051C  00A3               	movwf	?_printf+3
  1248  051D  0833               	movf	_a,w
  1249  051E  00A2               	movwf	?_printf+2
  1250  051F  120A  118A  2664   	fcall	_printf
      +       120A  118A         
  1251                           
  1252                           ;USART3.c: 154: vadc1=a;
  1253  0524  0834               	movf	_a+1,w
  1254  0525  00BC               	movwf	_vadc1+1
  1255  0526  0833               	movf	_a,w
  1256  0527  00BB               	movwf	_vadc1
  1257                           
  1258                           ;USART3.c: 157: printf("\n\r\nElige un valor entre 0 y 1024 para el PWM2:");
  1259  0528  304B               	movlw	low (STR_18| (0+32768))
  1260  0529  00A0               	movwf	?_printf
  1261  052A  3088               	movlw	high (STR_18| (0+32768))
  1262  052B  00A1               	movwf	?_printf+1
  1263  052C  120A  118A  2664   	fcall	_printf
      +       120A  118A         
  1264                           
  1265                           ;USART3.c: 159: for(int i=0;i<=3;i++){
  1266  0531  01B1               	clrf	main@i_1841
  1267  0532  01B2               	clrf	main@i_1841+1
  1268  0533                     l3429:	
  1269                           
  1270                           ;USART3.c: 160: PA[i]=getch();}
  1271  0533  1283               	bcf	3,5	;RP0=0, select bank0
  1272  0534  1303               	bcf	3,6	;RP1=0, select bank0
  1273  0535  0831               	movf	main@i_1841,w
  1274  0536  3E35               	addlw	_PA& (0+255)
  1275  0537  0084               	movwf	4
  1276  0538  120A  118A  27AF   	fcall	_getch
      +       120A  118A         
  1277  053D  1383               	bcf	3,7	;select IRP bank0
  1278  053E  0080               	movwf	0
  1279  053F  0AB1               	incf	main@i_1841,f
  1280  0540  1903               	skipnz
  1281  0541  0AB2               	incf	main@i_1841+1,f
  1282  0542  0832               	movf	main@i_1841+1,w
  1283  0543  3A80               	xorlw	128
  1284  0544  00FF               	movwf	127
  1285  0545  3080               	movlw	128
  1286  0546  027F               	subwf	127,w
  1287  0547  1D03               	skipz
  1288  0548  2D4B               	goto	u725
  1289  0549  3004               	movlw	4
  1290  054A  0231               	subwf	main@i_1841,w
  1291  054B                     u725:	
  1292  054B  1C03               	skipc
  1293  054C  2D33               	goto	l3429
  1294                           
  1295                           ;USART3.c: 161: a=atoi(PA);
  1296  054D  3035               	movlw	_PA& (0+255)
  1297  054E  120A  118A  23A5   	fcall	_atoi
      +       120A  118A         
  1298  0553  0877               	movf	?_atoi+1,w
  1299  0554  1283               	bcf	3,5	;RP0=0, select bank0
  1300  0555  1303               	bcf	3,6	;RP1=0, select bank0
  1301  0556  00B4               	movwf	_a+1
  1302  0557  0876               	movf	?_atoi,w
  1303  0558  00B3               	movwf	_a
  1304                           
  1305                           ;USART3.c: 162: printf("%d",a);
  1306  0559  30EF               	movlw	low ((STR_10+22)| (0+32768))
  1307  055A  00A0               	movwf	?_printf
  1308  055B  3088               	movlw	high ((STR_10+22)| (0+32768))
  1309  055C  00A1               	movwf	?_printf+1
  1310  055D  0834               	movf	_a+1,w
  1311  055E  00A3               	movwf	?_printf+3
  1312  055F  0833               	movf	_a,w
  1313  0560  00A2               	movwf	?_printf+2
  1314  0561  120A  118A  2664   	fcall	_printf
      +       120A  118A         
  1315                           
  1316                           ;USART3.c: 163: vadc2=a;
  1317  0566  0834               	movf	_a+1,w
  1318  0567  00BE               	movwf	_vadc2+1
  1319  0568  0833               	movf	_a,w
  1320  0569  00BD               	movwf	_vadc2
  1321                           
  1322                           ;USART3.c: 165: pwm();
  1323  056A  120A  118A  25E0   	fcall	_pwm
      +       120A  118A         
  1324  056F  2C5D               	goto	l3367
  1325  0570                     l3445:	
  1326                           
  1327                           ;USART3.c: 172: printf("\r\n\nOpcion no valida");
  1328  0570  3032               	movlw	low (STR_20| (0+32768))
  1329  0571  00A0               	movwf	?_printf
  1330  0572  3089               	movlw	high (STR_20| (0+32768))
  1331  0573  00A1               	movwf	?_printf+1
  1332  0574  120A  118A  2664   	fcall	_printf
      +       120A  118A         
  1333                           
  1334                           ;USART3.c: 173: pause(1000);
  1335  0579  30E8               	movlw	232
  1336  057A  00F0               	movwf	?_pause
  1337  057B  3003               	movlw	3
  1338  057C  00F1               	movwf	?_pause+1
  1339  057D  120A  118A  278B   	fcall	_pause
      +       120A  118A         
  1340  0582                     l3349:	
  1341                           ;USART3.c: 175: }}
  1342                           
  1343                           
  1344                           ;USART3.c: 104: printf("\f");
  1345  0582  3074               	movlw	low (STR_1| (0+32768))
  1346  0583  1283               	bcf	3,5	;RP0=0, select bank0
  1347  0584  1303               	bcf	3,6	;RP1=0, select bank0
  1348  0585  00A0               	movwf	?_printf
  1349  0586  3089               	movlw	high (STR_1| (0+32768))
  1350  0587  00A1               	movwf	?_printf+1
  1351  0588  120A  118A  2664   	fcall	_printf
      +       120A  118A         
  1352                           
  1353                           ;USART3.c: 105: printf("\r\n");
  1354  058D  306B               	movlw	low (STR_2| (0+32768))
  1355  058E  00A0               	movwf	?_printf
  1356  058F  3089               	movlw	high (STR_2| (0+32768))
  1357  0590  00A1               	movwf	?_printf+1
  1358  0591  120A  118A  2664   	fcall	_printf
      +       120A  118A         
  1359                           
  1360                           ;USART3.c: 106: printf("\r\n1.- Valores ADC");
  1361  0596  3059               	movlw	low (STR_3| (0+32768))
  1362  0597  00A0               	movwf	?_printf
  1363  0598  3089               	movlw	high (STR_3| (0+32768))
  1364  0599  00A1               	movwf	?_printf+1
  1365  059A  120A  118A  2664   	fcall	_printf
      +       120A  118A         
  1366                           
  1367                           ;USART3.c: 107: printf("\r\n2.- Valor puerto B");
  1368  059F  301D               	movlw	low (STR_4| (0+32768))
  1369  05A0  00A0               	movwf	?_printf
  1370  05A1  3089               	movlw	high (STR_4| (0+32768))
  1371  05A2  00A1               	movwf	?_printf+1
  1372  05A3  120A  118A  2664   	fcall	_printf
      +       120A  118A         
  1373                           
  1374                           ;USART3.c: 108: printf("\r\n3.- Enviar puerto A");
  1375  05A8  30F2               	movlw	low (STR_5| (0+32768))
  1376  05A9  00A0               	movwf	?_printf
  1377  05AA  3088               	movlw	high (STR_5| (0+32768))
  1378  05AB  00A1               	movwf	?_printf+1
  1379  05AC  120A  118A  2664   	fcall	_printf
      +       120A  118A         
  1380                           
  1381                           ;USART3.c: 109: printf("\r\n4.- Enviar a PWM");
  1382  05B1  3046               	movlw	low (STR_6| (0+32768))
  1383  05B2  00A0               	movwf	?_printf
  1384  05B3  3089               	movlw	high (STR_6| (0+32768))
  1385  05B4  00A1               	movwf	?_printf+1
  1386  05B5  120A  118A  2664   	fcall	_printf
      +       120A  118A         
  1387                           
  1388                           ;USART3.c: 110: printf("\r\n\nElige una opcion:");
  1389  05BA  3008               	movlw	low (STR_7| (0+32768))
  1390  05BB  00A0               	movwf	?_printf
  1391  05BC  3089               	movlw	high (STR_7| (0+32768))
  1392  05BD  00A1               	movwf	?_printf+1
  1393  05BE  120A  118A  2664   	fcall	_printf
      +       120A  118A         
  1394  05C3  120A  118A  27AF   	fcall	_getch
      +       120A  118A         
  1395  05C8  00B3               	movwf	_a
  1396  05C9  01B4               	clrf	_a+1
  1397                           
  1398                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1399                           ; Switch size 1, requested type "space"
  1400                           ; Number of cases is 1, Range of values is 0 to 0
  1401                           ; switch strategies available:
  1402                           ; Name         Instructions Cycles
  1403                           ; simple_byte            4     3 (average)
  1404                           ; direct_byte           11     8 (fixed)
  1405                           ; jumptable            260     6 (fixed)
  1406                           ; rangetable             5     6 (fixed)
  1407                           ; spacedrange            8     9 (fixed)
  1408                           ; locatedrange           1     3 (fixed)
  1409                           ;	Chosen strategy is simple_byte
  1410  05CA  0834               	movf	_a+1,w
  1411  05CB  3A00               	xorlw	0	; case 0
  1412  05CC  1903               	skipnz
  1413  05CD  2DCF               	goto	l3481
  1414  05CE  2D70               	goto	l3445
  1415  05CF                     l3481:	
  1416                           
  1417                           ; Switch size 1, requested type "space"
  1418                           ; Number of cases is 4, Range of values is 49 to 52
  1419                           ; switch strategies available:
  1420                           ; Name         Instructions Cycles
  1421                           ; simple_byte           13     7 (average)
  1422                           ; direct_byte           23    11 (fixed)
  1423                           ; jumptable            263     9 (fixed)
  1424                           ;	Chosen strategy is simple_byte
  1425  05CF  0833               	movf	_a,w
  1426  05D0  3A31               	xorlw	49	; case 49
  1427  05D1  1903               	skipnz
  1428  05D2  2C4B               	goto	l3363
  1429  05D3  3A03               	xorlw	3	; case 50
  1430  05D4  1903               	skipnz
  1431  05D5  2C63               	goto	l3369
  1432  05D6  3A01               	xorlw	1	; case 51
  1433  05D7  1903               	skipnz
  1434  05D8  2C81               	goto	l3377
  1435  05D9  3A07               	xorlw	7	; case 52
  1436  05DA  1903               	skipnz
  1437  05DB  2CD9               	goto	l3401
  1438  05DC  2D70               	goto	l3445
  1439  05DD  120A  118A  2800   	ljmp	start
  1440  05E0                     __end_of_main:	
  1441                           
  1442                           	psect	text346
  1443  05E0                     __ptext346:	
  1444 ;; =============== function _lcd_write ends ============
  1445                           
  1446                           
  1447 ;; *************** function _pwm *****************
  1448 ;; Defined at:
  1449 ;;		line 178 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\USART3\USART3.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;		None
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;		None
  1454 ;; Return value:  Size  Location     Type
  1455 ;;		None               void
  1456 ;; Registers used:
  1457 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1458 ;; Tracked objects:
  1459 ;;		On entry : 60/0
  1460 ;;		On exit  : 60/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1463 ;;      Params:         0       0       0       0       0
  1464 ;;      Locals:         0       0       0       0       0
  1465 ;;      Temps:          2       0       0       0       0
  1466 ;;      Totals:         2       0       0       0       0
  1467 ;;Total ram usage:        2 bytes
  1468 ;; Hardware stack levels used:    1
  1469 ;; Hardware stack levels required when called:    2
  1470 ;; This function calls:
  1471 ;;		_pause
  1472 ;;		_getch
  1473 ;;		_main
  1474 ;; This function is called by:
  1475 ;;		_main
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478  05E0                     _pwm:	
  1479                           
  1480                           ;USART3.c: 181: ADRESH=vadc1>>2;
  1481                           
  1482                           ; Regs used in _pwm: [allreg]
  1483  05E0  083C               	movf	_vadc1+1,w
  1484  05E1  00F5               	movwf	??_pwm+1
  1485  05E2  083B               	movf	_vadc1,w
  1486                           
  1487                           ;USART3.c: 182: ADRESL=vadc1<<8;
  1488                           
  1489                           ;USART3.c: 184: CCPR1L=ADRESH;
  1490  05E3  27C9  120A  118A   	fcall	PL2	;call to abstracted procedure
  1491  05E6  0095               	movwf	21	;volatile
  1492                           
  1493                           ;USART3.c: 185: CCP1CON=0X0C|(ADRESL>>2);
  1494  05E7  27E3  120A  118A   	fcall	PL4	;call to abstracted procedure
  1495  05EA  0097               	movwf	23	;volatile
  1496                           
  1497                           ;USART3.c: 187: pause(1);
  1498  05EB  01F0               	clrf	?_pause
  1499  05EC  0AF0               	incf	?_pause,f
  1500  05ED  01F1               	clrf	?_pause+1
  1501  05EE  278B  120A  118A   	fcall	_pause
  1502  05F1  27FD               	call	PL7	;select bank 0
  1503                           
  1504                           ;USART3.c: 189: ADRESH=vadc2>>2;
  1505  05F2  083E               	movf	_vadc2+1,w
  1506  05F3  00F5               	movwf	??_pwm+1
  1507  05F4  083D               	movf	_vadc2,w
  1508                           
  1509                           ;USART3.c: 190: ADRESL=vadc2<<8;
  1510                           
  1511                           ;USART3.c: 192: CCPR2L=ADRESH;
  1512  05F5  27C9  120A  118A   	fcall	PL2	;call to abstracted procedure
  1513  05F8  009B               	movwf	27	;volatile
  1514                           
  1515                           ;USART3.c: 193: CCP2CON=0X0C|(ADRESL>>2);
  1516  05F9  27E3  120A  118A   	fcall	PL4	;call to abstracted procedure
  1517  05FC  009D               	movwf	29	;volatile
  1518                           
  1519                           ;USART3.c: 195: getch();
  1520  05FD  27AF               	fcall	_getch
  1521                           
  1522                           ;USART3.c: 196: main();
  1523  05FE  120A  118A  2C27   	ljmp	_main
  1524  0601                     __end_of_pwm:	
  1525  0601                     __ptext347:	
  1526 ;; =============== function _pwm ends ============
  1527                           
  1528                           
  1529 ;; *************** function _valadc *****************
  1530 ;; Defined at:
  1531 ;;		line 201 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\USART3\USART3.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;		None
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;		None
  1536 ;; Return value:  Size  Location     Type
  1537 ;;		None               void
  1538 ;; Registers used:
  1539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1540 ;; Tracked objects:
  1541 ;;		On entry : 60/0
  1542 ;;		On exit  : 60/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1545 ;;      Params:         0       0       0       0       0
  1546 ;;      Locals:         0       0       0       0       0
  1547 ;;      Temps:          0       1       0       0       0
  1548 ;;      Totals:         0       1       0       0       0
  1549 ;;Total ram usage:        1 bytes
  1550 ;; Hardware stack levels used:    1
  1551 ;; Hardware stack levels required when called:    2
  1552 ;; This function calls:
  1553 ;;		_pause
  1554 ;;		_printf
  1555 ;;		_getch
  1556 ;;		_main
  1557 ;; This function is called by:
  1558 ;;		_main
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561  0601                     _valadc:	
  1562                           
  1563                           ;USART3.c: 204: ADCON0=0XD5;
  1564                           
  1565                           ; Regs used in _valadc: [allreg]
  1566  0601  30D5               	movlw	213
  1567  0602  009F               	movwf	31	;volatile
  1568                           
  1569                           ;USART3.c: 205: GO_DONE=1;
  1570  0603  149F               	bsf	31,1
  1571  0604                     l1090:	
  1572                           ;USART3.c: 206: while(GO_DONE);
  1573                           
  1574  0604  189F               	btfsc	31,1
  1575  0605  2E04               	goto	l1090
  1576                           
  1577                           ;USART3.c: 208: vadc1=(ADRESH<<2)|(ADRESL>>6);
  1578  0606  081E               	movf	30,w	;volatile
  1579  0607  00BB               	movwf	_vadc1
  1580  0608  01BC               	clrf	_vadc1+1
  1581  0609  1003               	clrc
  1582  060A  0DBB               	rlf	_vadc1,f
  1583  060B  0DBC               	rlf	_vadc1+1,f
  1584  060C  1003               	clrc
  1585  060D  0DBB               	rlf	_vadc1,f
  1586  060E  0DBC               	rlf	_vadc1+1,f
  1587  060F  1683               	bsf	3,5	;RP0=1, select bank1
  1588  0610  081E               	movf	30,w	;volatile
  1589  0611  1283               	bcf	3,5	;RP0=0, select bank0
  1590  0612  00AC               	movwf	??_valadc
  1591  0613  3006               	movlw	6
  1592  0614                     u675:	
  1593  0614  1003               	clrc
  1594  0615  0CAC               	rrf	??_valadc,f
  1595  0616  3EFF               	addlw	-1
  1596  0617  1D03               	skipz
  1597  0618  2E14               	goto	u675
  1598  0619  082C               	movf	??_valadc,w
  1599  061A  04BB               	iorwf	_vadc1,f
  1600                           
  1601                           ;USART3.c: 210: pause(1);
  1602  061B  01F0               	clrf	?_pause
  1603  061C  0AF0               	incf	?_pause,f
  1604  061D  01F1               	clrf	?_pause+1
  1605  061E  278B  120A  118A   	fcall	_pause
  1606                           
  1607                           ;USART3.c: 212: ADCON0=0XD9;
  1608  0621  30D9               	movlw	217
  1609  0622  27FD               	call	PL7	;select bank 0
  1610  0623  009F               	movwf	31	;volatile
  1611                           
  1612                           ;USART3.c: 213: GO_DONE=1;
  1613  0624  149F               	bsf	31,1
  1614  0625                     l1093:	
  1615                           ;USART3.c: 214: while(GO_DONE);
  1616                           
  1617  0625  189F               	btfsc	31,1
  1618  0626  2E25               	goto	l1093
  1619                           
  1620                           ;USART3.c: 216: vadc2=(ADRESH<<2)|(ADRESL>>6);
  1621  0627  081E               	movf	30,w	;volatile
  1622  0628  00BD               	movwf	_vadc2
  1623  0629  01BE               	clrf	_vadc2+1
  1624  062A  1003               	clrc
  1625  062B  0DBD               	rlf	_vadc2,f
  1626  062C  0DBE               	rlf	_vadc2+1,f
  1627  062D  1003               	clrc
  1628  062E  0DBD               	rlf	_vadc2,f
  1629  062F  0DBE               	rlf	_vadc2+1,f
  1630  0630  1683               	bsf	3,5	;RP0=1, select bank1
  1631  0631  081E               	movf	30,w	;volatile
  1632  0632  1283               	bcf	3,5	;RP0=0, select bank0
  1633  0633  00AC               	movwf	??_valadc
  1634  0634  3006               	movlw	6
  1635  0635                     u695:	
  1636  0635  1003               	clrc
  1637  0636  0CAC               	rrf	??_valadc,f
  1638  0637  3EFF               	addlw	-1
  1639  0638  1D03               	skipz
  1640  0639  2E35               	goto	u695
  1641  063A  082C               	movf	??_valadc,w
  1642  063B  04BD               	iorwf	_vadc2,f
  1643                           
  1644                           ;USART3.c: 218: pause(1);
  1645  063C  01F0               	clrf	?_pause
  1646  063D  0AF0               	incf	?_pause,f
  1647  063E  01F1               	clrf	?_pause+1
  1648  063F  278B  120A  118A   	fcall	_pause
  1649                           
  1650                           ;USART3.c: 220: printf("\n\r");
  1651  0642  306E               	movlw	low (STR_12| (0+32768))
  1652  0643  27FD               	call	PL7	;select bank 0
  1653  0644  00A0               	movwf	?_printf
  1654  0645  3089               	movlw	high (STR_12| (0+32768))
  1655  0646  00A1               	movwf	?_printf+1
  1656  0647  2664  120A  118A   	fcall	_printf
  1657                           
  1658                           ;USART3.c: 221: printf("\n\rValor del canal C5: %d ",vadc1);
  1659  064A  30A5               	movlw	low (STR_22| (0+32768))
  1660  064B  00A0               	movwf	?_printf
  1661  064C  3088               	movlw	high (STR_22| (0+32768))
  1662  064D  00A1               	movwf	?_printf+1
  1663  064E  083C               	movf	_vadc1+1,w
  1664  064F  00A3               	movwf	?_printf+3
  1665  0650  083B               	movf	_vadc1,w
  1666  0651  00A2               	movwf	?_printf+2
  1667  0652  2664  120A  118A   	fcall	_printf
  1668                           
  1669                           ;USART3.c: 222: printf("\n\rValor del canal C6: %d ",vadc2);
  1670  0655  30BF               	movlw	low (STR_23| (0+32768))
  1671  0656  00A0               	movwf	?_printf
  1672  0657  3088               	movlw	high (STR_23| (0+32768))
  1673  0658  00A1               	movwf	?_printf+1
  1674  0659  083E               	movf	_vadc2+1,w
  1675  065A  00A3               	movwf	?_printf+3
  1676  065B  083D               	movf	_vadc2,w
  1677  065C  00A2               	movwf	?_printf+2
  1678  065D  2664  120A  118A   	fcall	_printf
  1679                           
  1680                           ;USART3.c: 224: getch();
  1681  0660  27AF               	fcall	_getch
  1682                           
  1683                           ;USART3.c: 225: main();
  1684  0661  120A  118A  2C27   	ljmp	_main
  1685  0664                     __end_of_valadc:	
  1686  0664                     __ptext350:	
  1687 ;; =============== function _atoi ends ============
  1688                           
  1689                           
  1690 ;; *************** function _printf *****************
  1691 ;; Defined at:
  1692 ;;		line 461 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  1695 ;;		 -> STR_23(26), STR_22(26), STR_21(3), STR_20(20), 
  1696 ;;		 -> STR_19(3), STR_18(47), STR_17(3), STR_16(47), 
  1697 ;;		 -> STR_15(3), STR_14(3), STR_13(43), STR_12(3), 
  1698 ;;		 -> STR_11(3), STR_10(25), STR_9(3), STR_8(3), 
  1699 ;;		 -> STR_7(21), STR_6(19), STR_5(22), STR_4(21), 
  1700 ;;		 -> STR_3(18), STR_2(3), STR_1(2), 
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;  _val            4    7[BANK0 ] struct .
  1703 ;;  c               1   11[BANK0 ] char 
  1704 ;;  ap              1    6[BANK0 ] PTR void [1]
  1705 ;;		 -> ?_printf(2), 
  1706 ;;  prec            1    5[BANK0 ] char 
  1707 ;;  flag            1    4[BANK0 ] unsigned char 
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  2    0[BANK0 ] int 
  1710 ;; Registers used:
  1711 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1712 ;; Tracked objects:
  1713 ;;		On entry : 60/0
  1714 ;;		On exit  : 60/0
  1715 ;;		Unchanged: FFE9F/0
  1716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1717 ;;      Params:         0       4       0       0       0
  1718 ;;      Locals:         0       8       0       0       0
  1719 ;;      Temps:          2       0       0       0       0
  1720 ;;      Totals:         2      12       0       0       0
  1721 ;;Total ram usage:       14 bytes
  1722 ;; Hardware stack levels used:    1
  1723 ;; Hardware stack levels required when called:    1
  1724 ;; This function calls:
  1725 ;;		_putch
  1726 ;;		___lwdiv
  1727 ;;		___lwmod
  1728 ;; This function is called by:
  1729 ;;		_main
  1730 ;;		_valadc
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733  0664                     _printf:	
  1734                           
  1735                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1736  0664  3022               	movlw	(?_printf+2)& (0+255)
  1737  0665  00A6               	movwf	printf@ap
  1738  0666                     l3175:	
  1739  0666  27D7               	fcall	PL3	;call to abstracted procedure
  1740  0667  120A  158A  2000   	fcall	stringtab
      +       120A  118A         
  1741  066C  00AB               	movwf	printf@c
  1742  066D  08AB               	movf	printf@c,f
  1743  066E  1903               	btfsc	3,2
  1744  066F  0008               	return
  1745  0670  3A25               	xorlw	37
  1746  0671  1903               	skipnz
  1747  0672  2E78               	goto	l3129
  1748  0673  082B               	movf	printf@c,w
  1749  0674  2701  120A  118A   	fcall	_putch
  1750  0677  2E66               	goto	l3175
  1751  0678                     l3129:	
  1752  0678  01A4               	clrf	printf@flag
  1753  0679  2E86               	goto	l3139
  1754  067A                     l3131:	
  1755  067A  0826               	movf	printf@ap,w
  1756  067B  0084               	movwf	4
  1757  067C  1383               	bcf	3,7	;select IRP bank0
  1758  067D  0800               	movf	0,w
  1759  067E  00AB               	movwf	printf@c
  1760  067F  0AA6               	incf	printf@ap,f
  1761  0680  0AA6               	incf	printf@ap,f
  1762  0681                     l3135:	
  1763  0681  082B               	movf	printf@c,w
  1764  0682  2701  120A  118A   	fcall	_putch
  1765  0685  2E66               	goto	l3175
  1766  0686                     l3139:	
  1767  0686  27D7               	fcall	PL3	;call to abstracted procedure
  1768  0687  120A  158A  2000   	fcall	stringtab
      +       120A  118A         
  1769  068C  00AB               	movwf	printf@c
  1770                           
  1771                           ; Switch size 1, requested type "space"
  1772                           ; Number of cases is 4, Range of values is 0 to 105
  1773                           ; switch strategies available:
  1774                           ; Name         Instructions Cycles
  1775                           ; simple_byte           13     7 (average)
  1776                           ; jumptable            260     6 (fixed)
  1777                           ; rangetable           110     6 (fixed)
  1778                           ; spacedrange          218     9 (fixed)
  1779                           ; locatedrange         106     3 (fixed)
  1780                           ;	Chosen strategy is simple_byte
  1781  068D  3A00               	xorlw	0	; case 0
  1782  068E  1903               	skipnz
  1783  068F  2F00               	goto	l1160
  1784  0690  3A63               	xorlw	99	; case 99
  1785  0691  1903               	skipnz
  1786  0692  2E7A               	goto	l3131
  1787  0693  3A07               	xorlw	7	; case 100
  1788  0694  1903               	skipnz
  1789  0695  2E9A               	goto	l3141
  1790  0696  3A0D               	xorlw	13	; case 105
  1791  0697  1903               	skipnz
  1792  0698  2E9A               	goto	l3141
  1793  0699  2E81               	goto	l3135
  1794  069A                     l3141:	
  1795  069A  0826               	movf	printf@ap,w
  1796  069B  0084               	movwf	4
  1797  069C  1383               	bcf	3,7	;select IRP bank0
  1798  069D  0800               	movf	0,w
  1799  069E  00A7               	movwf	printf@_val
  1800  069F  0A84               	incf	4,f
  1801  06A0  0800               	movf	0,w
  1802  06A1  00A8               	movwf	printf@_val+1
  1803  06A2  0AA6               	incf	printf@ap,f
  1804  06A3  0AA6               	incf	printf@ap,f
  1805  06A4  1FA8               	btfss	printf@_val+1,7
  1806  06A5  2EAD               	goto	l3151
  1807  06A6  3003               	movlw	3
  1808  06A7  04A4               	iorwf	printf@flag,f
  1809  06A8  09A7               	comf	printf@_val,f
  1810  06A9  09A8               	comf	printf@_val+1,f
  1811  06AA  0AA7               	incf	printf@_val,f
  1812  06AB  1903               	skipnz
  1813  06AC  0AA8               	incf	printf@_val+1,f
  1814  06AD                     l3151:	
  1815  06AD  01AB               	clrf	printf@c
  1816  06AE  0AAB               	incf	printf@c,f
  1817  06AF                     l3155:	
  1818  06AF  1003               	clrc
  1819  06B0  0D2B               	rlf	printf@c,w
  1820  06B1  27F6               	fcall	PL6	;call to abstracted procedure
  1821  06B2  120A  158A  2000   	fcall	stringtab
      +       120A  118A         
  1822  06B7  00FC               	movwf	??_printf
  1823  06B8  120A  158A  2000   	fcall	stringtab
      +       120A  118A         
  1824  06BD  00FD               	movwf	??_printf+1
  1825  06BE  0228               	subwf	printf@_val+1,w
  1826  06BF  1D03               	skipz
  1827  06C0  2EC3               	goto	u545
  1828  06C1  087C               	movf	??_printf,w
  1829  06C2  0227               	subwf	printf@_val,w
  1830  06C3                     u545:	
  1831  06C3  1C03               	btfss	3,0
  1832  06C4  2ECA               	goto	l3163
  1833  06C5  0AAB               	incf	printf@c,f
  1834  06C6  082B               	movf	printf@c,w
  1835  06C7  3A05               	xorlw	5
  1836  06C8  1D03               	skipz
  1837  06C9  2EAF               	goto	l3155
  1838  06CA                     l3163:	
  1839  06CA  0824               	movf	printf@flag,w
  1840  06CB  3903               	andlw	3
  1841  06CC  1903               	btfsc	3,2
  1842  06CD  2ED2               	goto	l3167
  1843  06CE  302D               	movlw	45
  1844  06CF  2701  120A  118A   	fcall	_putch
  1845  06D2                     l3167:	
  1846  06D2  082B               	movf	printf@c,w
  1847  06D3  00A5               	movwf	printf@prec
  1848  06D4  2EFC               	goto	l3173
  1849  06D5                     l3169:	
  1850  06D5  300A               	movlw	10
  1851  06D6  00F7               	movwf	?___lwmod
  1852  06D7  01F8               	clrf	?___lwmod+1
  1853  06D8  1003               	clrc
  1854  06D9  0D25               	rlf	printf@prec,w
  1855  06DA  27F6               	fcall	PL6	;call to abstracted procedure
  1856  06DB  120A  158A  2000   	fcall	stringtab
      +       120A  118A         
  1857  06E0  00F0               	movwf	?___lwdiv
  1858  06E1  120A  158A  2000   	fcall	stringtab
      +       120A  118A         
  1859  06E6  00F1               	movwf	?___lwdiv+1
  1860  06E7  0828               	movf	printf@_val+1,w
  1861  06E8  00F3               	movwf	?___lwdiv+3
  1862  06E9  0827               	movf	printf@_val,w
  1863  06EA  00F2               	movwf	?___lwdiv+2
  1864  06EB  2707  120A  118A   	fcall	___lwdiv
  1865  06EE  0871               	movf	?___lwdiv+1,w
  1866  06EF  00FA               	movwf	?___lwmod+3
  1867  06F0  0870               	movf	?___lwdiv,w
  1868  06F1  00F9               	movwf	?___lwmod+2
  1869  06F2  2731  120A  118A   	fcall	___lwmod
  1870  06F5  0877               	movf	?___lwmod,w
  1871  06F6  3E30               	addlw	48
  1872  06F7  00AB               	movwf	printf@c
  1873  06F8  082B               	movf	printf@c,w
  1874  06F9  2701  120A  118A   	fcall	_putch
  1875  06FC                     l3173:	
  1876  06FC  03A5               	decf	printf@prec,f
  1877  06FD  0F25               	incfsz	printf@prec,w
  1878  06FE  2ED5               	goto	l3169
  1879  06FF  2E66               	goto	l3175
  1880  0700                     l1160:	
  1881  0700  0008               	return
  1882  0701                     __end_of_printf:	
  1883  0701                     __ptext358:	
  1884 ;; =============== function _getch ends ============
  1885                           
  1886                           
  1887 ;; *************** function _putch *****************
  1888 ;; Defined at:
  1889 ;;		line 45 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\USART3\USART3.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;  byte            1    wreg     unsigned char 
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;  byte            1    0[COMMON] unsigned char 
  1894 ;; Return value:  Size  Location     Type
  1895 ;;		None               void
  1896 ;; Registers used:
  1897 ;;		wreg
  1898 ;; Tracked objects:
  1899 ;;		On entry : 60/0
  1900 ;;		On exit  : 60/0
  1901 ;;		Unchanged: FFF9F/0
  1902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1903 ;;      Params:         0       0       0       0       0
  1904 ;;      Locals:         1       0       0       0       0
  1905 ;;      Temps:          0       0       0       0       0
  1906 ;;      Totals:         1       0       0       0       0
  1907 ;;Total ram usage:        1 bytes
  1908 ;; Hardware stack levels used:    1
  1909 ;; This function calls:
  1910 ;;		Nothing
  1911 ;; This function is called by:
  1912 ;;		_printf
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915  0701                     _putch:	
  1916                           
  1917                           ; Regs used in _putch: [wreg]
  1918                           ;putch@byte stored from wreg
  1919  0701  00F0               	movwf	putch@byte
  1920  0702                     l1053:	
  1921                           ;USART3.c: 47: while(!TXIF)
  1922                           
  1923  0702  1E0C               	btfss	12,4
  1924  0703  2F02               	goto	l1053
  1925                           
  1926                           ;USART3.c: 49: TXREG = byte;
  1927  0704  0870               	movf	putch@byte,w
  1928  0705  0099               	movwf	25	;volatile
  1929  0706  0008               	return
  1930  0707                     __end_of_putch:	
  1931  0707                     __ptext352:	
  1932 ;; =============== function ___lwmod ends ============
  1933                           
  1934                           
  1935 ;; *************** function ___lwdiv *****************
  1936 ;; Defined at:
  1937 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwdiv.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;  divisor         2    0[COMMON] unsigned int 
  1940 ;;  dividend        2    2[COMMON] unsigned int 
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;  quotient        2    4[COMMON] unsigned int 
  1943 ;;  counter         1    6[COMMON] unsigned char 
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  2    0[COMMON] unsigned int 
  1946 ;; Registers used:
  1947 ;;		wreg, status,2, status,0
  1948 ;; Tracked objects:
  1949 ;;		On entry : 60/0
  1950 ;;		On exit  : 60/0
  1951 ;;		Unchanged: FFF9F/0
  1952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1953 ;;      Params:         4       0       0       0       0
  1954 ;;      Locals:         3       0       0       0       0
  1955 ;;      Temps:          0       0       0       0       0
  1956 ;;      Totals:         7       0       0       0       0
  1957 ;;Total ram usage:        7 bytes
  1958 ;; Hardware stack levels used:    1
  1959 ;; This function calls:
  1960 ;;		Nothing
  1961 ;; This function is called by:
  1962 ;;		_printf
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965  0707                     ___lwdiv:	
  1966                           
  1967                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1968  0707  01F4               	clrf	___lwdiv@quotient
  1969  0708  01F5               	clrf	___lwdiv@quotient+1
  1970  0709  0871               	movf	___lwdiv@divisor+1,w
  1971  070A  0470               	iorwf	___lwdiv@divisor,w
  1972  070B  1903               	skipnz
  1973  070C  2F2C               	goto	l3099
  1974  070D  01F6               	clrf	___lwdiv@counter
  1975  070E                     L3:	
  1976  070E  0AF6               	incf	___lwdiv@counter,f
  1977  070F  1BF1               	btfsc	___lwdiv@divisor+1,7
  1978  0710  2F15               	goto	l3087
  1979  0711  1003               	clrc
  1980  0712  0DF0               	rlf	___lwdiv@divisor,f
  1981  0713  0DF1               	rlf	___lwdiv@divisor+1,f
  1982  0714  2F0E               	goto	L3
  1983  0715                     l3087:	
  1984  0715  1003               	clrc
  1985  0716  0DF4               	rlf	___lwdiv@quotient,f
  1986  0717  0DF5               	rlf	___lwdiv@quotient+1,f
  1987  0718  0871               	movf	___lwdiv@divisor+1,w
  1988  0719  0273               	subwf	___lwdiv@dividend+1,w
  1989  071A  1D03               	skipz
  1990  071B  2F1E               	goto	u465
  1991  071C  0870               	movf	___lwdiv@divisor,w
  1992  071D  0272               	subwf	___lwdiv@dividend,w
  1993  071E                     u465:	
  1994  071E  1C03               	skipc
  1995  071F  2F28               	goto	L4
  1996  0720  0870               	movf	___lwdiv@divisor,w
  1997  0721  02F2               	subwf	___lwdiv@dividend,f
  1998  0722  0871               	movf	___lwdiv@divisor+1,w
  1999  0723  1C03               	skipc
  2000  0724  03F3               	decf	___lwdiv@dividend+1,f
  2001  0725  02F3               	subwf	___lwdiv@dividend+1,f
  2002  0726  1474               	bsf	___lwdiv@quotient,0
  2003  0727  1003               	clrc
  2004  0728                     L4:	
  2005  0728  0CF1               	rrf	___lwdiv@divisor+1,f
  2006  0729  0CF0               	rrf	___lwdiv@divisor,f
  2007  072A  0BF6               	decfsz	___lwdiv@counter,f
  2008  072B  2F15               	goto	l3087
  2009  072C                     l3099:	
  2010  072C  0875               	movf	___lwdiv@quotient+1,w
  2011  072D  00F1               	movwf	?___lwdiv+1
  2012  072E  0874               	movf	___lwdiv@quotient,w
  2013  072F  00F0               	movwf	?___lwdiv
  2014  0730  0008               	return
  2015  0731                     __end_of___lwdiv:	
  2016  0731                     __ptext351:	
  2017 ;; =============== function _printf ends ============
  2018                           
  2019                           
  2020 ;; *************** function ___lwmod *****************
  2021 ;; Defined at:
  2022 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwmod.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;  divisor         2    7[COMMON] unsigned int 
  2025 ;;  dividend        2    9[COMMON] unsigned int 
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;  counter         1   11[COMMON] unsigned char 
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  2    7[COMMON] unsigned int 
  2030 ;; Registers used:
  2031 ;;		wreg, status,2, status,0
  2032 ;; Tracked objects:
  2033 ;;		On entry : 60/0
  2034 ;;		On exit  : 60/0
  2035 ;;		Unchanged: FFF9F/0
  2036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2037 ;;      Params:         4       0       0       0       0
  2038 ;;      Locals:         1       0       0       0       0
  2039 ;;      Temps:          0       0       0       0       0
  2040 ;;      Totals:         5       0       0       0       0
  2041 ;;Total ram usage:        5 bytes
  2042 ;; Hardware stack levels used:    1
  2043 ;; This function calls:
  2044 ;;		Nothing
  2045 ;; This function is called by:
  2046 ;;		_printf
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049  0731                     ___lwmod:	
  2050                           
  2051                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2052  0731  0878               	movf	___lwmod@divisor+1,w
  2053  0732  0477               	iorwf	___lwmod@divisor,w
  2054  0733  1903               	skipnz
  2055  0734  2F50               	goto	l3119
  2056  0735  01FB               	clrf	___lwmod@counter
  2057  0736                     L1:	
  2058  0736  0AFB               	incf	___lwmod@counter,f
  2059  0737  1BF8               	btfsc	___lwmod@divisor+1,7
  2060  0738  2F3D               	goto	l3111
  2061  0739  1003               	clrc
  2062  073A  0DF7               	rlf	___lwmod@divisor,f
  2063  073B  0DF8               	rlf	___lwmod@divisor+1,f
  2064  073C  2F36               	goto	L1
  2065  073D                     l3111:	
  2066  073D  0878               	movf	___lwmod@divisor+1,w
  2067  073E  027A               	subwf	___lwmod@dividend+1,w
  2068  073F  1D03               	skipz
  2069  0740  2F43               	goto	u505
  2070  0741  0877               	movf	___lwmod@divisor,w
  2071  0742  0279               	subwf	___lwmod@dividend,w
  2072  0743                     u505:	
  2073  0743  1C03               	skipc
  2074  0744  2F4C               	goto	L2
  2075  0745  0877               	movf	___lwmod@divisor,w
  2076  0746  02F9               	subwf	___lwmod@dividend,f
  2077  0747  0878               	movf	___lwmod@divisor+1,w
  2078  0748  1C03               	skipc
  2079  0749  03FA               	decf	___lwmod@dividend+1,f
  2080  074A  02FA               	subwf	___lwmod@dividend+1,f
  2081  074B  1003               	clrc
  2082  074C                     L2:	
  2083  074C  0CF8               	rrf	___lwmod@divisor+1,f
  2084  074D  0CF7               	rrf	___lwmod@divisor,f
  2085  074E  0BFB               	decfsz	___lwmod@counter,f
  2086  074F  2F3D               	goto	l3111
  2087  0750                     l3119:	
  2088  0750  087A               	movf	___lwmod@dividend+1,w
  2089  0751  00F8               	movwf	?___lwmod+1
  2090  0752  0879               	movf	___lwmod@dividend,w
  2091  0753  00F7               	movwf	?___lwmod
  2092  0754  0008               	return
  2093  0755                     __end_of___lwmod:	
  2094  0755                     __ptext343:	
  2095 ;; =============== function _main ends ============
  2096                           
  2097                           
  2098 ;; *************** function _lcd_init *****************
  2099 ;; Defined at:
  2100 ;;		line 264 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\USART3\USART3.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;		None
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;  init_value      1    0        unsigned char 
  2105 ;; Return value:  Size  Location     Type
  2106 ;;		None               void
  2107 ;; Registers used:
  2108 ;;		wreg, status,2, status,0, pclath, cstack
  2109 ;; Tracked objects:
  2110 ;;		On entry : 60/0
  2111 ;;		On exit  : 60/0
  2112 ;;		Unchanged: FFF9F/0
  2113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2114 ;;      Params:         0       0       0       0       0
  2115 ;;      Locals:         1       0       0       0       0
  2116 ;;      Temps:          0       0       0       0       0
  2117 ;;      Totals:         1       0       0       0       0
  2118 ;;Total ram usage:        1 bytes
  2119 ;; Hardware stack levels used:    1
  2120 ;; Hardware stack levels required when called:    4
  2121 ;; This function calls:
  2122 ;;		_pause
  2123 ;;		_lcd_write
  2124 ;;		_lcd_clear
  2125 ;; This function is called by:
  2126 ;;		_main
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129  0755                     _lcd_init:	
  2130  0755  300F               	movlw	15
  2131                           
  2132                           ;USART3.c: 269: RC3 = 0;
  2133                           
  2134                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2135  0756  1187               	bcf	7,3
  2136                           
  2137                           ;USART3.c: 270: RC0 = 0;
  2138  0757  1007               	bcf	7,0
  2139                           
  2140                           ;USART3.c: 271: RC4 = 0;
  2141  0758  1207               	bcf	7,4
  2142                           
  2143                           ;USART3.c: 273: pause(15);
  2144  0759  00F0               	movwf	?_pause
  2145  075A  01F1               	clrf	?_pause+1
  2146  075B  278B  120A  118A   	fcall	_pause
  2147                           
  2148                           ;USART3.c: 274: PORTD = init_value;
  2149  075E  3003               	movlw	3
  2150  075F  27FD               	call	PL7	;select bank 0
  2151  0760  0088               	movwf	8	;volatile
  2152  0761  300A               	movlw	10
  2153                           
  2154                           ;USART3.c: 275: ((RC0 = 1),(RC0=0));
  2155  0762  1407               	bsf	7,0
  2156  0763  1007               	bcf	7,0
  2157                           
  2158                           ;USART3.c: 276: pause(10);
  2159  0764  00F0               	movwf	?_pause
  2160  0765  01F1               	clrf	?_pause+1
  2161  0766  278B  120A  118A   	fcall	_pause
  2162                           
  2163                           ;USART3.c: 277: ((RC0 = 1),(RC0=0));
  2164                           
  2165                           ;USART3.c: 278: pause(10);
  2166  0769  27EE  120A  118A   	fcall	PL5	;call to abstracted procedure
  2167  076C  278B  120A  118A   	fcall	_pause
  2168                           
  2169                           ;USART3.c: 279: ((RC0 = 1),(RC0=0));
  2170                           
  2171                           ;USART3.c: 280: pause(10);
  2172  076F  27EE  120A  118A   	fcall	PL5	;call to abstracted procedure
  2173  0772  278B  120A  118A   	fcall	_pause
  2174                           
  2175                           ;USART3.c: 281: PORTD= 2;
  2176  0775  3002               	movlw	2
  2177  0776  27FD               	call	PL7	;select bank 0
  2178  0777  0088               	movwf	8	;volatile
  2179  0778  3028               	movlw	40
  2180                           
  2181                           ;USART3.c: 282: ((RC0 = 1),(RC0=0));
  2182  0779  1407               	bsf	7,0
  2183  077A  1007               	bcf	7,0
  2184                           
  2185                           ;USART3.c: 284: lcd_write(0x28);
  2186  077B  279C  120A  118A   	fcall	_lcd_write
  2187                           
  2188                           ;USART3.c: 285: lcd_write(0x0C);
  2189  077E  300C               	movlw	12
  2190  077F  279C  120A  118A   	fcall	_lcd_write
  2191                           
  2192                           ;USART3.c: 286: lcd_write(0x0F);
  2193  0782  300F               	movlw	15
  2194  0783  279C  120A  118A   	fcall	_lcd_write
  2195                           
  2196                           ;USART3.c: 287: lcd_clear();
  2197  0786  27C0  120A  118A   	fcall	_lcd_clear
  2198                           
  2199                           ;USART3.c: 288: lcd_write(0x06);
  2200  0789  3006               	movlw	6
  2201  078A  2F9C               	ljmp	_lcd_write
  2202  078B                     __end_of_lcd_init:	
  2203  078B                     __ptext348:	
  2204 ;; =============== function _valadc ends ============
  2205                           
  2206                           
  2207 ;; *************** function _pause *****************
  2208 ;; Defined at:
  2209 ;;		line 292 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\USART3\USART3.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;  usvalue         2    0[COMMON] unsigned short 
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;  x               2    2[COMMON] unsigned short 
  2214 ;; Return value:  Size  Location     Type
  2215 ;;		None               void
  2216 ;; Registers used:
  2217 ;;		wreg, status,2, status,0, pclath, cstack
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: FFF9F/0
  2222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2223 ;;      Params:         2       0       0       0       0
  2224 ;;      Locals:         2       0       0       0       0
  2225 ;;      Temps:          0       0       0       0       0
  2226 ;;      Totals:         4       0       0       0       0
  2227 ;;Total ram usage:        4 bytes
  2228 ;; Hardware stack levels used:    1
  2229 ;; Hardware stack levels required when called:    1
  2230 ;; This function calls:
  2231 ;;		_msecbase
  2232 ;; This function is called by:
  2233 ;;		_main
  2234 ;;		_pwm
  2235 ;;		_valadc
  2236 ;;		_lcd_write
  2237 ;;		_lcd_clear
  2238 ;;		_lcd_init
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241  078B                     _pause:	
  2242  078B                     l3211:	
  2243                           ; Regs used in _pause: [wreg+status,2+status,0+pclath+cstack]
  2244                           
  2245                           
  2246                           ;USART3.c: 293: unsigned short x;
  2247                           ;USART3.c: 295: for (x=0; x<=usvalue; x++)
  2248  078B  01F2               	clrf	pause@x
  2249  078C  01F3               	clrf	pause@x+1
  2250  078D                     l3217:	
  2251  078D  0873               	movf	pause@x+1,w
  2252  078E  0271               	subwf	pause@usvalue+1,w
  2253  078F  1D03               	skipz
  2254  0790  2F93               	goto	u655
  2255  0791  0872               	movf	pause@x,w
  2256  0792  0270               	subwf	pause@usvalue,w
  2257  0793                     u655:	
  2258  0793  1C03               	btfss	3,0
  2259  0794  0008               	return
  2260                           
  2261                           ;USART3.c: 296: {
  2262                           ;USART3.c: 297: msecbase();
  2263  0795  27B3  120A  118A   	fcall	_msecbase
  2264  0798  0AF2               	incf	pause@x,f
  2265  0799  1903               	skipnz
  2266  079A  0AF3               	incf	pause@x+1,f
  2267  079B  2F8D               	goto	l3217
  2268  079C                     __end_of_pause:	
  2269  079C                     __ptext345:	
  2270 ;; =============== function _lcd_clear ends ============
  2271                           
  2272                           
  2273 ;; *************** function _lcd_write *****************
  2274 ;; Defined at:
  2275 ;;		line 229 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\USART3\USART3.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;  c               1    wreg     unsigned char 
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;  c               1    4[COMMON] unsigned char 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;		None               void
  2282 ;; Registers used:
  2283 ;;		wreg, status,2, status,0, pclath, cstack
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 60/0
  2287 ;;		Unchanged: FFF9F/0
  2288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2289 ;;      Params:         0       0       0       0       0
  2290 ;;      Locals:         1       0       0       0       0
  2291 ;;      Temps:          0       0       0       0       0
  2292 ;;      Totals:         1       0       0       0       0
  2293 ;;Total ram usage:        1 bytes
  2294 ;; Hardware stack levels used:    1
  2295 ;; Hardware stack levels required when called:    2
  2296 ;; This function calls:
  2297 ;;		_pause
  2298 ;; This function is called by:
  2299 ;;		_lcd_clear
  2300 ;;		_lcd_init
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303  079C                     _lcd_write:	
  2304                           
  2305                           ; Regs used in _lcd_write: [wreg+status,2+status,0+pclath+cstack]
  2306                           ;lcd_write@c stored from wreg
  2307  079C  00F4               	movwf	lcd_write@c
  2308                           
  2309                           ;USART3.c: 230: pause(1);
  2310  079D  01F0               	clrf	?_pause
  2311  079E  0AF0               	incf	?_pause,f
  2312  079F  01F1               	clrf	?_pause+1
  2313  07A0  278B  120A  118A   	fcall	_pause
  2314                           
  2315                           ;USART3.c: 231: PORTD = ( ( c >> 4) & 0x0F);
  2316  07A3  0E74               	swapf	lcd_write@c,w
  2317  07A4  390F               	andlw	15
  2318  07A5  27FD               	call	PL7	;select bank 0
  2319  07A6  0088               	movwf	8	;volatile
  2320                           
  2321                           ;USART3.c: 232: ((RC0 = 1),(RC0=0));
  2322  07A7  1407               	bsf	7,0
  2323  07A8  1007               	bcf	7,0
  2324                           
  2325                           ;USART3.c: 233: PORTD = (c & 0x0F);
  2326  07A9  0874               	movf	lcd_write@c,w
  2327  07AA  390F               	andlw	15
  2328  07AB  0088               	movwf	8	;volatile
  2329                           
  2330                           ;USART3.c: 234: ((RC0 = 1),(RC0=0));
  2331  07AC  1407               	bsf	7,0
  2332  07AD  1007               	bcf	7,0
  2333  07AE  0008               	return
  2334  07AF                     __end_of_lcd_write:	
  2335  07AF                     __ptext357:	
  2336 ;; =============== function _init_comms ends ============
  2337                           
  2338                           
  2339 ;; *************** function _getch *****************
  2340 ;; Defined at:
  2341 ;;		line 53 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\USART3\USART3.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;		None
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;		None
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  1    wreg      unsigned char 
  2348 ;; Registers used:
  2349 ;;		wreg
  2350 ;; Tracked objects:
  2351 ;;		On entry : 60/0
  2352 ;;		On exit  : 60/0
  2353 ;;		Unchanged: FFF9F/0
  2354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2355 ;;      Params:         0       0       0       0       0
  2356 ;;      Locals:         0       0       0       0       0
  2357 ;;      Temps:          0       0       0       0       0
  2358 ;;      Totals:         0       0       0       0       0
  2359 ;;Total ram usage:        0 bytes
  2360 ;; Hardware stack levels used:    1
  2361 ;; This function calls:
  2362 ;;		Nothing
  2363 ;; This function is called by:
  2364 ;;		_main
  2365 ;;		_pwm
  2366 ;;		_valadc
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369  07AF                     _getch:	
  2370  07AF                     l1059:	
  2371                           ;USART3.c: 55: while(!RCIF)
  2372                           
  2373                           ; Regs used in _getch: [wreg]
  2374                           
  2375  07AF  1E8C               	btfss	12,5
  2376  07B0  2FAF               	goto	l1059
  2377                           
  2378                           ;USART3.c: 57: return RCREG;
  2379  07B1  081A               	movf	26,w	;volatile
  2380  07B2  0008               	return
  2381  07B3                     __end_of_getch:	
  2382  07B3                     __ptext355:	
  2383 ;; =============== function _isdigit ends ============
  2384                           
  2385                           
  2386 ;; *************** function _msecbase *****************
  2387 ;; Defined at:
  2388 ;;		line 302 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\USART3\USART3.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;		None
  2391 ;; Auto vars:     Size  Location     Type
  2392 ;;		None
  2393 ;; Return value:  Size  Location     Type
  2394 ;;		None               void
  2395 ;; Registers used:
  2396 ;;		wreg
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: FFF9F/0
  2401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2402 ;;      Params:         0       0       0       0       0
  2403 ;;      Locals:         0       0       0       0       0
  2404 ;;      Temps:          0       0       0       0       0
  2405 ;;      Totals:         0       0       0       0       0
  2406 ;;Total ram usage:        0 bytes
  2407 ;; Hardware stack levels used:    1
  2408 ;; This function calls:
  2409 ;;		Nothing
  2410 ;; This function is called by:
  2411 ;;		_pause
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414  07B3                     _msecbase:	
  2415                           
  2416                           ;USART3.c: 303: OPTION_REG = 0b11010001;
  2417                           
  2418                           ; Regs used in _msecbase: [wreg]
  2419  07B3  30D1               	movlw	209
  2420  07B4  1683               	bsf	3,5	;RP0=1, select bank1
  2421  07B5  1303               	bcf	3,6	;RP1=0, select bank1
  2422  07B6  0081               	movwf	1	;volatile
  2423                           
  2424                           ;USART3.c: 304: TMR0 = 0x0E;
  2425  07B7  300E               	movlw	14
  2426  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  2427  07B9  0081               	movwf	1	;volatile
  2428                           
  2429                           ;USART3.c: 305: TMR0 = 0x8E;
  2430  07BA  308E               	movlw	142
  2431  07BB  0081               	movwf	1	;volatile
  2432  07BC                     l1126:	
  2433                           ;USART3.c: 306: while(!T0IF);
  2434                           
  2435  07BC  1D0B               	btfss	11,2
  2436  07BD  2FBC               	goto	l1126
  2437                           
  2438                           ;USART3.c: 307: T0IF = 0;
  2439  07BE  110B               	bcf	11,2
  2440  07BF  0008               	return
  2441  07C0                     __end_of_msecbase:	
  2442  07C0                     __ptext344:	
  2443 ;; =============== function _lcd_init ends ============
  2444                           
  2445                           
  2446 ;; *************** function _lcd_clear *****************
  2447 ;; Defined at:
  2448 ;;		line 238 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\USART3\USART3.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;		None
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;		None
  2453 ;; Return value:  Size  Location     Type
  2454 ;;		None               void
  2455 ;; Registers used:
  2456 ;;		wreg, status,2, status,0, pclath, cstack
  2457 ;; Tracked objects:
  2458 ;;		On entry : 60/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: FFF9F/0
  2461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2462 ;;      Params:         0       0       0       0       0
  2463 ;;      Locals:         0       0       0       0       0
  2464 ;;      Temps:          0       0       0       0       0
  2465 ;;      Totals:         0       0       0       0       0
  2466 ;;Total ram usage:        0 bytes
  2467 ;; Hardware stack levels used:    1
  2468 ;; Hardware stack levels required when called:    3
  2469 ;; This function calls:
  2470 ;;		_lcd_write
  2471 ;;		_pause
  2472 ;; This function is called by:
  2473 ;;		_lcd_init
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476  07C0                     _lcd_clear:	
  2477  07C0  3001               	movlw	1
  2478                           
  2479                           ;USART3.c: 239: RC3 = 0;
  2480                           
  2481                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  2482  07C1  1187               	bcf	7,3
  2483                           
  2484                           ;USART3.c: 240: lcd_write(0x01);
  2485  07C2  279C  120A  118A   	fcall	_lcd_write
  2486                           
  2487                           ;USART3.c: 241: pause (2);
  2488  07C5  3002               	movlw	2
  2489  07C6  00F0               	movwf	?_pause
  2490  07C7  01F1               	clrf	?_pause+1
  2491  07C8  2F8B               	ljmp	l3211
  2492  07C9                     __end_of_lcd_clear:	
  2493  07C9                     PL2:	
  2494  07C9  00F4               	movwf	??_pwm
  2495  07CA  1003               	clrc
  2496  07CB  0CF5               	rrf	??_pwm+1,f
  2497  07CC  0CF4               	rrf	??_pwm,f
  2498  07CD  1003               	clrc
  2499  07CE  0CF5               	rrf	??_pwm+1,f
  2500  07CF  0CF4               	rrf	??_pwm,f
  2501  07D0  0874               	movf	??_pwm,w
  2502  07D1  009E               	movwf	30	;volatile
  2503  07D2  1683               	bsf	3,5	;RP0=1, select bank1
  2504  07D3  019E               	clrf	30	;volatile
  2505  07D4  1283               	bcf	3,5	;RP0=0, select bank0
  2506  07D5  081E               	movf	30,w	;volatile
  2507  07D6  0008               	return
  2508  07D7                     PL3:	
  2509  07D7  0821               	movf	printf@f+1,w
  2510  07D8  00FD               	movwf	??_printf+1
  2511  07D9  0820               	movf	printf@f,w
  2512  07DA  00FC               	movwf	??_printf
  2513  07DB  0AA0               	incf	printf@f,f
  2514  07DC  1903               	skipnz
  2515  07DD  0AA1               	incf	printf@f+1,f
  2516  07DE  087D               	movf	??_printf+1,w
  2517  07DF  00FF               	movwf	127
  2518  07E0  087C               	movf	??_printf,w
  2519  07E1  0084               	movwf	4
  2520  07E2  0008               	return
  2521  07E3                     PL4:	
  2522  07E3  1683               	bsf	3,5	;RP0=1, select bank1
  2523  07E4  081E               	movf	30,w	;volatile
  2524  07E5  00F4               	movwf	??_pwm
  2525  07E6  1003               	clrc
  2526  07E7  0CF4               	rrf	??_pwm,f
  2527  07E8  1003               	clrc
  2528  07E9  0CF4               	rrf	??_pwm,f
  2529  07EA  0874               	movf	??_pwm,w
  2530  07EB  380C               	iorlw	12
  2531  07EC  1283               	bcf	3,5	;RP0=0, select bank0
  2532  07ED  0008               	return
  2533  07EE                     PL5:	
  2534  07EE  1283               	bcf	3,5	;RP0=0, select bank0
  2535  07EF  1303               	bcf	3,6	;RP1=0, select bank0
  2536  07F0  300A               	movlw	10
  2537  07F1  1407               	bsf	7,0
  2538  07F2  1007               	bcf	7,0
  2539  07F3  00F0               	movwf	?_pause
  2540  07F4  01F1               	clrf	?_pause+1
  2541  07F5  0008               	return
  2542  07F6                     PL6:	
  2543  07F6  3E12               	addlw	low (_dpowers| (0+32768))
  2544  07F7  0084               	movwf	4
  2545  07F8  3088               	movlw	high (_dpowers| (0+32768))
  2546  07F9  1803               	skipnc
  2547  07FA  3E01               	addlw	1
  2548  07FB  00FF               	movwf	127
  2549  07FC  0008               	return
  2550  07FD                     PL7:	
  2551  07FD  1283               	bcf	3,5	;RP0=0, select bank0
  2552  07FE  1303               	bcf	3,6	;RP1=0, select bank0
  2553  07FF  0008               	return
  2554                           
  2555                           	psect	text349
  2556  03A5                     __ptext349:	
  2557 ;; =============== function _pause ends ============
  2558                           
  2559                           
  2560 ;; *************** function _atoi *****************
  2561 ;; Defined at:
  2562 ;;		line 6 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\atoi.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;  s               1    wreg     PTR const unsigned char 
  2565 ;;		 -> PA(6), 
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;  s               1   13[COMMON] PTR const unsigned char 
  2568 ;;		 -> PA(6), 
  2569 ;;  a               2   11[COMMON] int 
  2570 ;;  sign            1   10[COMMON] unsigned char 
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  2    6[COMMON] int 
  2573 ;; Registers used:
  2574 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 100/0
  2578 ;;		Unchanged: FFEFF/0
  2579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2580 ;;      Params:         2       0       0       0       0
  2581 ;;      Locals:         4       0       0       0       0
  2582 ;;      Temps:          2       0       0       0       0
  2583 ;;      Totals:         8       0       0       0       0
  2584 ;;Total ram usage:        8 bytes
  2585 ;; Hardware stack levels used:    1
  2586 ;; Hardware stack levels required when called:    1
  2587 ;; This function calls:
  2588 ;;		___wmul
  2589 ;;		_isdigit
  2590 ;; This function is called by:
  2591 ;;		_main
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594  03A5                     _atoi:	
  2595                           
  2596                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2597                           ;atoi@s stored from wreg
  2598  03A5  00FD               	movwf	atoi@s
  2599  03A6                     l3181:	
  2600  03A6  087D               	movf	atoi@s,w
  2601  03A7  0084               	movwf	4
  2602  03A8  1383               	bcf	3,7	;select IRP bank0
  2603  03A9  0800               	movf	0,w
  2604  03AA  3A20               	xorlw	32
  2605  03AB  1D03               	btfss	3,2
  2606  03AC  2BAF               	goto	l3183
  2607  03AD                     l3179:	
  2608  03AD  0AFD               	incf	atoi@s,f
  2609  03AE  2BA6               	goto	l3181
  2610  03AF                     l3183:	
  2611  03AF  087D               	movf	atoi@s,w
  2612  03B0  0084               	movwf	4
  2613  03B1  0800               	movf	0,w
  2614  03B2  3A09               	xorlw	9
  2615  03B3  1903               	skipnz
  2616  03B4  2BAD               	goto	l3179
  2617  03B5  01FB               	clrf	atoi@a
  2618  03B6  01FC               	clrf	atoi@a+1
  2619  03B7  01FA               	clrf	atoi@sign
  2620  03B8  087D               	movf	atoi@s,w
  2621  03B9  0084               	movwf	4
  2622  03BA  0800               	movf	0,w
  2623  03BB  3A2D               	xorlw	45
  2624  03BC  1D03               	skipz
  2625  03BD  2BC0               	goto	l3191
  2626  03BE  0AFA               	incf	atoi@sign,f
  2627  03BF  2BEA               	goto	l3193
  2628  03C0                     l3191:	
  2629  03C0  087D               	movf	atoi@s,w
  2630  03C1  0084               	movwf	4
  2631  03C2  0800               	movf	0,w
  2632  03C3  3A2B               	xorlw	43
  2633  03C4  1903               	btfsc	3,2
  2634  03C5  2BEA               	goto	l3193
  2635  03C6                     l3199:	
  2636  03C6  087D               	movf	atoi@s,w
  2637  03C7  0084               	movwf	4
  2638  03C8  0800               	movf	0,w
  2639  03C9  2400  120A  118A   	fcall	_isdigit
  2640  03CC  1C03               	btfss	3,0
  2641  03CD  2BEC               	goto	l3201
  2642  03CE  087D               	movf	atoi@s,w
  2643  03CF  0084               	movwf	4
  2644  03D0  087C               	movf	atoi@a+1,w
  2645  03D1  00F1               	movwf	?___wmul+1
  2646  03D2  087B               	movf	atoi@a,w
  2647  03D3  00F0               	movwf	?___wmul
  2648  03D4  300A               	movlw	10
  2649  03D5  00F2               	movwf	?___wmul+2
  2650  03D6  01F3               	clrf	?___wmul+3
  2651  03D7  240E  120A  118A   	fcall	___wmul
  2652  03DA  0800               	movf	0,w
  2653  03DB  0770               	addwf	?___wmul,w
  2654  03DC  00F8               	movwf	??_atoi
  2655  03DD  3000               	movlw	0
  2656  03DE  1803               	skipnc
  2657  03DF  3001               	movlw	1
  2658  03E0  0771               	addwf	?___wmul+1,w
  2659  03E1  00F9               	movwf	??_atoi+1
  2660  03E2  0878               	movf	??_atoi,w
  2661  03E3  3ED0               	addlw	208
  2662  03E4  00FB               	movwf	atoi@a
  2663  03E5  0879               	movf	??_atoi+1,w
  2664  03E6  1803               	skipnc
  2665  03E7  3E01               	addlw	1
  2666  03E8  3EFF               	addlw	255
  2667  03E9  00FC               	movwf	atoi@a+1
  2668  03EA                     l3193:	
  2669  03EA  0AFD               	incf	atoi@s,f
  2670  03EB  2BC6               	goto	l3199
  2671  03EC                     l3201:	
  2672  03EC  087A               	movf	atoi@sign,w
  2673  03ED  1903               	btfsc	3,2
  2674  03EE  2BFB               	goto	l3207
  2675  03EF  097B               	comf	atoi@a,w
  2676  03F0  00F8               	movwf	??_atoi
  2677  03F1  097C               	comf	atoi@a+1,w
  2678  03F2  00F9               	movwf	??_atoi+1
  2679  03F3  0AF8               	incf	??_atoi,f
  2680  03F4  1903               	skipnz
  2681  03F5  0AF9               	incf	??_atoi+1,f
  2682  03F6  0878               	movf	??_atoi,w
  2683  03F7  00F6               	movwf	?_atoi
  2684  03F8  0879               	movf	??_atoi+1,w
  2685  03F9  00F7               	movwf	?_atoi+1
  2686  03FA  0008               	return
  2687  03FB                     l3207:	
  2688  03FB  087C               	movf	atoi@a+1,w
  2689  03FC  00F7               	movwf	?_atoi+1
  2690  03FD  087B               	movf	atoi@a,w
  2691  03FE  00F6               	movwf	?_atoi
  2692  03FF  0008               	return
  2693  0400                     __end_of_atoi:	
  2694  0400                     __ptext354:	
  2695 ;; =============== function ___wmul ends ============
  2696                           
  2697                           
  2698 ;; *************** function _isdigit *****************
  2699 ;; Defined at:
  2700 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\isdigit.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  c               1    wreg     unsigned char 
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;  c               1    1[COMMON] unsigned char 
  2705 ;; Return value:  Size  Location     Type
  2706 ;;		None               void
  2707 ;; Registers used:
  2708 ;;		wreg, status,2, status,0
  2709 ;; Tracked objects:
  2710 ;;		On entry : 100/0
  2711 ;;		On exit  : 100/0
  2712 ;;		Unchanged: FFEFF/0
  2713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2714 ;;      Params:         0       0       0       0       0
  2715 ;;      Locals:         2       0       0       0       0
  2716 ;;      Temps:          0       0       0       0       0
  2717 ;;      Totals:         2       0       0       0       0
  2718 ;;Total ram usage:        2 bytes
  2719 ;; Hardware stack levels used:    1
  2720 ;; This function calls:
  2721 ;;		Nothing
  2722 ;; This function is called by:
  2723 ;;		_atoi
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726  0400                     _isdigit:	
  2727                           
  2728                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2729                           ;isdigit@c stored from wreg
  2730  0400  00F1               	movwf	isdigit@c
  2731  0401  303A               	movlw	58
  2732  0402  01F0               	clrf	_isdigit$2408
  2733  0403  0271               	subwf	isdigit@c,w
  2734  0404  1803               	skipnc
  2735  0405  2C0C               	goto	l3057
  2736  0406  3030               	movlw	48
  2737  0407  0271               	subwf	isdigit@c,w
  2738  0408  1C03               	skipc
  2739  0409  2C0C               	goto	l3057
  2740  040A  01F0               	clrf	_isdigit$2408
  2741  040B  0AF0               	incf	_isdigit$2408,f
  2742  040C                     l3057:	
  2743  040C  0C70               	rrf	_isdigit$2408,w
  2744  040D  0008               	return
  2745  040E                     __end_of_isdigit:	
  2746  040E                     __ptext353:	
  2747 ;; =============== function ___lwdiv ends ============
  2748                           
  2749                           
  2750 ;; *************** function ___wmul *****************
  2751 ;; Defined at:
  2752 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\wmul.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  multiplier      2    0[COMMON] unsigned int 
  2755 ;;  multiplicand    2    2[COMMON] unsigned int 
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;  product         2    4[COMMON] unsigned int 
  2758 ;; Return value:  Size  Location     Type
  2759 ;;                  2    0[COMMON] unsigned int 
  2760 ;; Registers used:
  2761 ;;		wreg, status,2, status,0
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 100/0
  2765 ;;		Unchanged: FFEFF/0
  2766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2767 ;;      Params:         4       0       0       0       0
  2768 ;;      Locals:         2       0       0       0       0
  2769 ;;      Temps:          0       0       0       0       0
  2770 ;;      Totals:         6       0       0       0       0
  2771 ;;Total ram usage:        6 bytes
  2772 ;; Hardware stack levels used:    1
  2773 ;; This function calls:
  2774 ;;		Nothing
  2775 ;; This function is called by:
  2776 ;;		_atoi
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779  040E                     ___wmul:	
  2780                           
  2781                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2782  040E  01F4               	clrf	___wmul@product
  2783  040F  01F5               	clrf	___wmul@product+1
  2784  0410                     l3063:	
  2785  0410  1C70               	btfss	___wmul@multiplier,0
  2786  0411  2C18               	goto	l3067
  2787  0412  0872               	movf	___wmul@multiplicand,w
  2788  0413  07F4               	addwf	___wmul@product,f
  2789  0414  1803               	skipnc
  2790  0415  0AF5               	incf	___wmul@product+1,f
  2791  0416  0873               	movf	___wmul@multiplicand+1,w
  2792  0417  07F5               	addwf	___wmul@product+1,f
  2793  0418                     l3067:	
  2794  0418  1003               	clrc
  2795  0419  0DF2               	rlf	___wmul@multiplicand,f
  2796  041A  0DF3               	rlf	___wmul@multiplicand+1,f
  2797  041B  1003               	clrc
  2798  041C  0CF1               	rrf	___wmul@multiplier+1,f
  2799  041D  0CF0               	rrf	___wmul@multiplier,f
  2800  041E  0871               	movf	___wmul@multiplier+1,w
  2801  041F  0470               	iorwf	___wmul@multiplier,w
  2802  0420  1D03               	skipz
  2803  0421  2C10               	goto	l3063
  2804  0422  0875               	movf	___wmul@product+1,w
  2805  0423  00F1               	movwf	?___wmul+1
  2806  0424  0874               	movf	___wmul@product,w
  2807  0425  00F0               	movwf	?___wmul
  2808  0426  0008               	return
  2809  0427                     __end_of___wmul:	
  2810                           
  2811                           	psect	text356
  2812  0386                     __ptext356:	
  2813 ;; =============== function _msecbase ends ============
  2814                           
  2815                           
  2816 ;; *************** function _init_comms *****************
  2817 ;; Defined at:
  2818 ;;		line 61 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\USART3\USART3.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;		None
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;		None
  2823 ;; Return value:  Size  Location     Type
  2824 ;;		None               void
  2825 ;; Registers used:
  2826 ;;		wreg, status,2
  2827 ;; Tracked objects:
  2828 ;;		On entry : 60/0
  2829 ;;		On exit  : 60/60
  2830 ;;		Unchanged: FFF9F/0
  2831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2832 ;;      Params:         0       0       0       0       0
  2833 ;;      Locals:         0       0       0       0       0
  2834 ;;      Temps:          0       0       0       0       0
  2835 ;;      Totals:         0       0       0       0       0
  2836 ;;Total ram usage:        0 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; This function calls:
  2839 ;;		Nothing
  2840 ;; This function is called by:
  2841 ;;		_main
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844  0386                     _init_comms:	
  2845                           
  2846                           ;USART3.c: 62: TRISC7 = 1;
  2847                           
  2848                           ; Regs used in _init_comms: [wreg+status,2]
  2849  0386  1683               	bsf	3,5	;RP0=1, select bank1
  2850  0387  3019               	movlw	25
  2851  0388  1787               	bsf	7,7
  2852                           
  2853                           ;USART3.c: 63: TRISC6 = 0;
  2854  0389  1307               	bcf	7,6
  2855                           
  2856                           ;USART3.c: 64: SPBRG = 0x19;
  2857  038A  0099               	movwf	25	;volatile
  2858                           
  2859                           ;USART3.c: 66: RCSTA = 0x90;
  2860  038B  3090               	movlw	144
  2861  038C  1283               	bcf	3,5	;RP0=0, select bank0
  2862  038D  0098               	movwf	24	;volatile
  2863                           
  2864                           ;USART3.c: 67: TXSTA = 0x26;
  2865  038E  3026               	movlw	38
  2866  038F  1683               	bsf	3,5	;RP0=1, select bank1
  2867  0390  0098               	movwf	24	;volatile
  2868                           
  2869                           ;USART3.c: 68: BAUDCTL = 0;
  2870  0391  1703               	bsf	3,6	;RP1=1, select bank3
  2871  0392  0187               	clrf	7	;volatile
  2872  0393  0008               	return
  2873  0394                     __end_of_init_comms:	
  2874                           
  2875                           	psect	text359
  2876  0000                     __ptext359:	
  2877 ;; =============== function _putch ends ============
  2878                           
  2879  007E                     btemp	set	126	;btemp
  2880  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Mon May 02 20:16:38 2022

                   _a 0033                     pc 0002                    _PA 0035                    fsr 0004  
 ___wmul@multiplicand 0072                   _RC0 0038                   _RC3 003B                   _RC4 003C  
                 _PR2 0092                   u505 0743                   u465 071E                   u545 06C3  
                 u705 04BA                   u715 0509                   u725 054B                   u655 0793  
                 u675 0614                   u695 0635                   fsr0 0004                   _pwm 05E0  
                 indf 0000                  l1102 0000                  l1123 0000                  l1053 0702  
                l1117 0000                  l1062 0000                  l1126 07BC                  l1056 0000  
                l1160 0700                  l1065 0000                  l1129 0000                  l1090 0604  
                l1059 07AF                  l1093 0625                  l3031 0000                  l3111 073D  
                l3103 0000                  l1087 0000                  l2160 0000                  l1096 0000  
                l3041 0000                  l3201 03EC                  l3035 0000                  l3043 0000  
                l3051 0000                  l3131 067A                  l3123 0000                  l3203 0000  
                l3211 078B                  l1099 0000                  l2172 0000                  l3045 0000  
                l3061 0000                  l3117 0000                  l3141 069A                  l3133 0000  
                l3221 0000                  l3301 0000                  l2182 0000                  l3047 0000  
                l3071 0000                  l3063 0410                  l3119 0750                  l3151 06AD  
                l3143 0000                  l3135 0681                  l3207 03FB                  l3215 0000  
                l3231 0000                  l3311 0000                  l3303 0000                  l2192 0000  
                l3057 040C                  l3049 0000                  l3161 0000                  l3145 0000  
                l3129 0678                  l3217 078D                  l3241 0000                  l3225 0000  
                l3321 0000                  l3313 0000                  l3305 0000                  l3401 04D9  
                l3067 0418                  l3171 0000                  l3163 06CA                  l3155 06AF  
                l3139 0686                  l3243 0000                  l3235 0000                  l3227 0000  
                l3219 0000                  l3251 0000                  l3323 0000                  l3315 0000  
                l3307 0000                  l3411 0000                  l3403 0000                  l3331 0000  
                l3069 0000                  l3093 0000                  l3077 0000                  l3173 06FC  
                l3149 0000                  l3181 03A6                  l3245 0000                  l3237 0000  
                l3229 0000                  l3261 0000                  l3253 0000                  l3325 0000  
                l3317 0000                  l3309 0000                  l3421 0000                  l3413 0000  
                l3341 0000                  l3333 0000                  l3087 0715                  l3079 0000  
                l3167 06D2                  l3175 0666                  l3191 03C0                  l3183 03AF  
                l3247 0000                  l3239 0000                  l3263 0000                  l3255 0000  
                l3271 0000                  l3319 0000                  l3431 0000                  l3423 0000  
                l3351 0000                  l3343 0000                  l3335 0000                  l3327 0000  
                l3097 0000                  l3089 0000                  l3169 06D5                  l3193 03EA  
                l3177 0000                  l3265 0000                  l3257 0000                  l3249 0000  
                l3281 0000                  l3273 0000                  l3441 0000                  l3433 0000  
                l3417 0000                  l3409 04F1                  l3361 0000                  l3353 0000  
                l3345 0000                  l3337 0000                  l3329 0000                  l3099 072C  
                l3187 0000                  l3179 03AD                  l3267 0000                  l3259 0000  
                l3275 0000                  l3283 0000                  l3291 0000                  l3419 0000  
                l3371 0000                  l3363 044B                  l3355 0000                  l3347 0000  
                l3339 0000                  l3277 0000                  l3269 0000                  l3285 0000  
                l3293 0000                  l3445 0570                  l3437 0000                  l3429 0533  
                l3373 0000                  l3365 0000                  l3357 0000                  l3349 0582  
                l3199 03C6                  l3279 0000                  l3295 0000                  l3287 0000  
                l3447 0000                  l3439 0000                  l3367 045D                  l3359 0000  
                l3297 0000                  l3289 0000                  l3481 05CF                  l3393 0000  
                l3385 04A2                  l3377 0481                  l3369 0463                  l3299 0000  
                l3395 0000                  l3387 0000                  l3379 0000                  l3397 0000  
                l3389 0000                  _ADFM 04FF                  ?_pwm 0070                  STR_1 0974  
                STR_2 096B                  STR_3 0959                  STR_4 091D                  STR_5 08F2  
                STR_6 0946                  STR_7 0908                  STR_8 0971                  STR_9 0971  
                _T0IF 005A                  _RCIF 0065                  _TMR0 0001                  _TXIF 0064  
                _atoi 03A5                  _main 0427                  btemp 007E                  start 0000  
               ??_pwm 0074                 ?_atoi 0076                 ?_main 0070                 STR_10 08D9  
               STR_11 0971                 STR_12 096E                 STR_20 0932                 STR_21 096E  
               STR_13 087A                 STR_14 08EF                 STR_22 08A5                 STR_15 0971  
               STR_23 08BF                 STR_16 081C                 STR_17 08EF                 STR_18 084B  
               STR_19 08EF                 _ANSEL 0188                 _T2CON 0012       __end_of___lwdiv 0731  
     __end_of___lwmod 0755                 _RCREG 001A                 _RCSTA 0018                 _SPBRG 0099  
               _PORTA 0005                 _PORTB 0006                 _PORTD 0008                 _TRISA 0085  
               _TRISB 0086                 _TRISC 0087                 _TRISD 0088                 _TRISE 0089  
               _TXREG 0019                 _TXSTA 0098                 _getch 07AF                 _vadc1 003B  
               _vadc2 003D       __end_of_isdigit 040E                 _pause 078B                 atoi@a 007B  
               atoi@s 007D                 _putch 0701                 main@i 002D                 pclath 000A  
               status 0003                 wtemp0 007E          __end_of_atoi 0400          __end_of_main 05E0  
              ??_atoi 0078                ??_main 007E                ?_getch 0070                _ADCON0 001F  
              _ADRESH 001E                _ADRESL 009E                _CCPR1L 0015                ?_pause 0070  
              _CCPR2L 001B                ?_putch 0070                _ANSELH 0189                _TRISC6 043E  
              _TRISC7 043F      __end_of_lcd_init 078B                ___wmul 040E             ??___lwdiv 0074  
           ??___lwmod 007B                _valadc 0601                _printf 0664      __end_of_msecbase 07C0  
           ??_isdigit 0070                pause@x 0072        __pcstackCOMMON 0070          __pidataBANK0 0000  
       __end_of_getch 07B3         __end_of_pause 079C         __end_of_putch 0707    __size_of_lcd_clear 0009  
             ??_getch 0070    __size_of_lcd_write 0013               ??_pause 0072               ??_putch 0070  
          __pbssBANK0 0033            __pmaintext 0427               ?___wmul 0070               _CCP1CON 0017  
             _CCP2CON 001D               _BAUDCTL 0187               ?_valadc 0070               ?_printf 0020  
             _GO_DONE 00F9             ?_lcd_init 0070             ?_msecbase 0070     __end_of_lcd_clear 07C9  
   __end_of_lcd_write 07AF       __size_of___wmul 0019               ___lwdiv 0707               ___lwmod 0731  
          _init_comms 0386       __size_of_valadc 0063       __size_of_printf 009D               _dpowers 0812  
             _isdigit 0400          __size_of_pwm 0021            ??_lcd_init 0075  end_of_initialization 03A1  
          ??_msecbase 0070               printf@c 002B               printf@f 0020          __pstringtext 0800  
          main@i_1841 0031            main@i_1838 002F            lcd_write@c 0074           ?_init_comms 0070  
      __end_of___wmul 0427        __end_of_valadc 0664        __end_of_printf 0701   start_initialization 0394  
         __end_of_pwm 0601              ??___wmul 0074           __pdataBANK0 003B              ??_valadc 002C  
            ??_printf 007C          pause@usvalue 0070         __pcstackBANK0 0020          _isdigit$2408 0070  
 __size_of_init_comms 000E     __size_of_lcd_init 0036      ___lwdiv@dividend 0072     __size_of_msecbase 000D  
           __ptext350 0664             __ptext351 0731             __ptext343 0755             __ptext352 0707  
           __ptext344 07C0             __ptext353 040E             __ptext345 079C             __ptext354 0400  
           __ptext346 05E0             __ptext355 07B3             __ptext347 0601             __ptext356 0386  
           __ptext348 078B             __ptext357 07AF             __ptext349 03A5             __ptext358 0701  
           __ptext359 0000              ?___lwdiv 0070              ?___lwmod 0077             _lcd_clear 07C0  
           _lcd_write 079C              ?_isdigit 0070      ___lwdiv@quotient 0074        __size_of_getch 0004  
      __size_of_pause 0011        __size_of_putch 0006        ___wmul@product 0074            ?_lcd_clear 0070  
         __stringbase 0812            ?_lcd_write 0070     ___wmul@multiplier 0070            printf@_val 0027  
          printf@flag 0024            printf@prec 0025          ??_init_comms 0070      __size_of___lwdiv 002A  
    __size_of___lwmod 0024      __size_of_isdigit 000E       ___lwdiv@divisor 0070       ___lwdiv@counter 0076  
            _lcd_init 0755         __size_of_atoi 005B         __size_of_main 01B9    __end_of_init_comms 0394  
            _msecbase 07B3              atoi@sign 007A           ??_lcd_clear 0075           ??_lcd_write 0074  
           putch@byte 0070              isdigit@c 0071      ___lwmod@dividend 0079             stringcode 080A  
            printf@ap 0026            _OPTION_REG 0081       ___lwmod@divisor 0077       ___lwmod@counter 007B  
            stringtab 0800  
