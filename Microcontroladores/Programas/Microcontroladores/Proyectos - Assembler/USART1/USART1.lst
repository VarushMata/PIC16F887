

HI-TECH Software PIC PRO Macro Assembler V9.82 build 9453 
                                                                                               Thu Apr 28 13:30:43 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 9453
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,delta=2
    12                           	psect	text560,local,class=CODE,delta=2
    13                           	psect	text561,local,class=CODE,delta=2
    14                           	psect	text565,local,class=CODE,delta=2
    15                           	psect	text567,local,class=CODE,delta=2
    16                           	psect	text569,local,class=CODE,delta=2
    17                           	psect	text576,local,class=CODE,delta=2
    18                           	psect	text581,local,class=CODE,delta=2
    19                           	psect	text587,local,class=CODE,delta=2
    20                           	psect	text588,local,class=CODE,delta=2
    21                           	psect	text590,local,class=CODE,delta=2
    22                           	psect	text591,local,class=CODE,delta=2
    23                           	psect	text592,local,class=CODE,delta=2
    24                           	psect	functab,global,reloc=256,class=CODE,delta=2
    25                           	psect	pa_nodes,global,class=CODE,delta=2
    26                           	dabs	1,0x7E,2
    27  000A                     	;#
    28                           
    29                           	psect	config
    30  2007  E0D4               	dw	57556	;#
    31  2008  FFFF               	dw	65535	;#
    32                           
    33                           	psect	strings
    34  0003                     __pstrings:	
    35  0003                     stringtab:	
    36                           ;	global	stringdir,stringtab,__stringbase
    37                           
    38                           
    39                           ;	String table - string pointers are 1 byte each
    40  0003  1BFF               	btfsc	btemp+1,7
    41  0004  280D               	ljmp	stringcode
    42  0005  1383               	bcf	3,7
    43  0006  187F               	btfsc	btemp+1,0
    44  0007  1783               	bsf	3,7
    45  0008  0800               	movf	0,w
    46  0009  0A84               	incf	4,f
    47  000A  1903               	skipnz
    48  000B  0AFF               	incf	btemp+1,f
    49  000C  0008               	return
    50  000D                     stringcode:	
    51  000D                     stringdir:	
    52  000D  3000               	movlw	high stringdir
    53  000E  008A               	movwf	10
    54  000F  0804               	movf	4,w
    55  0010  0A84               	incf	4,f
    56  0011  0782               	addwf	2,f
    57  0012                     __stringbase:	
    58  0012  3400               	retlw	0
    59  0013                     __npowers_:	
    60  0013  3400               	retlw	0
    61  0014  3480               	retlw	128
    62  0015  343F               	retlw	63
    63  0016  34CD               	retlw	205
    64  0017  34CC               	retlw	204
    65  0018  343D               	retlw	61
    66  0019  34D7               	retlw	215
    67  001A  3423               	retlw	35
    68  001B  343C               	retlw	60
    69  001C  3412               	retlw	18
    70  001D  3483               	retlw	131
    71  001E  343A               	retlw	58
    72  001F  34B7               	retlw	183
    73  0020  34D1               	retlw	209
    74  0021  3438               	retlw	56
    75  0022  34C6               	retlw	198
    76  0023  3427               	retlw	39
    77  0024  3437               	retlw	55
    78  0025  3438               	retlw	56
    79  0026  3486               	retlw	134
    80  0027  3435               	retlw	53
    81  0028  34C0               	retlw	192
    82  0029  34D6               	retlw	214
    83  002A  3433               	retlw	51
    84  002B  34CC               	retlw	204
    85  002C  342B               	retlw	43
    86  002D  3432               	retlw	50
    87  002E  3470               	retlw	112
    88  002F  3489               	retlw	137
    89  0030  3430               	retlw	48
    90  0031  34E7               	retlw	231
    91  0032  34DB               	retlw	219
    92  0033  342E               	retlw	46
    93  0034  34E5               	retlw	229
    94  0035  343C               	retlw	60
    95  0036  341E               	retlw	30
    96  0037  3442               	retlw	66
    97  0038  34A2               	retlw	162
    98  0039  340D               	retlw	13
    99  003A                     __powers_:	
   100  003A  3400               	retlw	0
   101  003B  3480               	retlw	128
   102  003C  343F               	retlw	63
   103  003D  3400               	retlw	0
   104  003E  3420               	retlw	32
   105  003F  3441               	retlw	65
   106  0040  3400               	retlw	0
   107  0041  34C8               	retlw	200
   108  0042  3442               	retlw	66
   109  0043  3400               	retlw	0
   110  0044  347A               	retlw	122
   111  0045  3444               	retlw	68
   112  0046  3440               	retlw	64
   113  0047  341C               	retlw	28
   114  0048  3446               	retlw	70
   115  0049  3450               	retlw	80
   116  004A  34C3               	retlw	195
   117  004B  3447               	retlw	71
   118  004C  3424               	retlw	36
   119  004D  3474               	retlw	116
   120  004E  3449               	retlw	73
   121  004F  3497               	retlw	151
   122  0050  3418               	retlw	24
   123  0051  344B               	retlw	75
   124  0052  34BC               	retlw	188
   125  0053  34BE               	retlw	190
   126  0054  344C               	retlw	76
   127  0055  346B               	retlw	107
   128  0056  346E               	retlw	110
   129  0057  344E               	retlw	78
   130  0058  3403               	retlw	3
   131  0059  3415               	retlw	21
   132  005A  3450               	retlw	80
   133  005B  3479               	retlw	121
   134  005C  34AD               	retlw	173
   135  005D  3460               	retlw	96
   136  005E  34F3               	retlw	243
   137  005F  3449               	retlw	73
   138  0060  3471               	retlw	113
   139  0061                     _dpowers:	
   140  0061  3401               	retlw	1
   141  0062  3400               	retlw	0
   142  0063  3400               	retlw	0
   143  0064  3400               	retlw	0
   144  0065  340A               	retlw	10
   145  0066  3400               	retlw	0
   146  0067  3400               	retlw	0
   147  0068  3400               	retlw	0
   148  0069  3464               	retlw	100
   149  006A  3400               	retlw	0
   150  006B  3400               	retlw	0
   151  006C  3400               	retlw	0
   152  006D  34E8               	retlw	232
   153  006E  3403               	retlw	3
   154  006F  3400               	retlw	0
   155  0070  3400               	retlw	0
   156  0071  3410               	retlw	16
   157  0072  3427               	retlw	39
   158  0073  3400               	retlw	0
   159  0074  3400               	retlw	0
   160  0075  34A0               	retlw	160
   161  0076  3486               	retlw	134
   162  0077  3401               	retlw	1
   163  0078  3400               	retlw	0
   164  0079  3440               	retlw	64
   165  007A  3442               	retlw	66
   166  007B  340F               	retlw	15
   167  007C  3400               	retlw	0
   168  007D  3480               	retlw	128
   169  007E  3496               	retlw	150
   170  007F  3498               	retlw	152
   171  0080  3400               	retlw	0
   172  0081  3400               	retlw	0
   173  0082  34E1               	retlw	225
   174  0083  34F5               	retlw	245
   175  0084  3405               	retlw	5
   176  0085  3400               	retlw	0
   177  0086  34CA               	retlw	202
   178  0087  349A               	retlw	154
   179  0088  343B               	retlw	59
   180  0008                     _PORTD	set	8
   181  001A                     _RCREG	set	26
   182  0018                     _RCSTA	set	24
   183  0001                     _TMR0	set	1
   184  0019                     _TXREG	set	25
   185  0038                     _RC0	set	56
   186  003B                     _RC3	set	59
   187  003C                     _RC4	set	60
   188  0065                     _RCIF	set	101
   189  005A                     _T0IF	set	90
   190  0064                     _TXIF	set	100
   191  009F                     _ADCON1	set	159
   192  0081                     _OPTION_REG	set	129
   193  0099                     _SPBRG	set	153
   194  0085                     _TRISA	set	133
   195  0086                     _TRISB	set	134
   196  0087                     _TRISC	set	135
   197  0088                     _TRISD	set	136
   198  0089                     _TRISE	set	137
   199  0098                     _TXSTA	set	152
   200  043E                     _TRISC6	set	1086
   201  043F                     _TRISC7	set	1087
   202  0188                     _ANSEL	set	392
   203  0189                     _ANSELH	set	393
   204  0187                     _BAUDCTL	set	391
   205  0089                     STR_7:	
   206  0089  340D               	retlw	13
   207  008A  340A               	retlw	10
   208  008B  3444               	retlw	68	;'D'
   209  008C  3461               	retlw	97	;'a'
   210  008D  3420               	retlw	32	;' '
   211  008E  3463               	retlw	99	;'c'
   212  008F  346C               	retlw	108	;'l'
   213  0090  3469               	retlw	105	;'i'
   214  0091  3463               	retlw	99	;'c'
   215  0092  3420               	retlw	32	;' '
   216  0093  3461               	retlw	97	;'a'
   217  0094  3420               	retlw	32	;' '
   218  0095  3475               	retlw	117	;'u'
   219  0096  346E               	retlw	110	;'n'
   220  0097  3461               	retlw	97	;'a'
   221  0098  3420               	retlw	32	;' '
   222  0099  3474               	retlw	116	;'t'
   223  009A  3465               	retlw	101	;'e'
   224  009B  3463               	retlw	99	;'c'
   225  009C  346C               	retlw	108	;'l'
   226  009D  3461               	retlw	97	;'a'
   227  009E  343A               	retlw	58	;':'
   228  009F  340D               	retlw	13
   229  00A0  340A               	retlw	10
   230  00A1  3400               	retlw	0
   231  00A2                     STR_9:	
   232  00A2  344C               	retlw	76	;'L'
   233  00A3  3461               	retlw	97	;'a'
   234  00A4  3420               	retlw	32	;' '
   235  00A5  3474               	retlw	116	;'t'
   236  00A6  3465               	retlw	101	;'e'
   237  00A7  3463               	retlw	99	;'c'
   238  00A8  346C               	retlw	108	;'l'
   239  00A9  3461               	retlw	97	;'a'
   240  00AA  3420               	retlw	32	;' '
   241  00AB  3465               	retlw	101	;'e'
   242  00AC  3473               	retlw	115	;'s'
   243  00AD  343A               	retlw	58	;':'
   244  00AE  345B               	retlw	91	;'['
   245  00AF  3425               	retlw	37	;'%'
   246  00B0  3463               	retlw	99	;'c'
   247  00B1  345D               	retlw	93	;']'
   248  00B2  340D               	retlw	13
   249  00B3  340A               	retlw	10
   250  00B4  3400               	retlw	0
   251  00B5                     STR_8:	
   252  00B5  344C               	retlw	76	;'L'
   253  00B6  3461               	retlw	97	;'a'
   254  00B7  3420               	retlw	32	;' '
   255  00B8  3474               	retlw	116	;'t'
   256  00B9  3465               	retlw	101	;'e'
   257  00BA  3463               	retlw	99	;'c'
   258  00BB  346C               	retlw	108	;'l'
   259  00BC  3461               	retlw	97	;'a'
   260  00BD  3420               	retlw	32	;' '
   261  00BE  3465               	retlw	101	;'e'
   262  00BF  3473               	retlw	115	;'s'
   263  00C0  343A               	retlw	58	;':'
   264  00C1  3400               	retlw	0
   265  00C2                     STR_12:	
   266  00C2  3425               	retlw	37	;'%'
   267  00C3  3463               	retlw	99	;'c'
   268  00C4  3400               	retlw	0
   269  00C5                     STR_2:	
   270  00C5  3425               	retlw	37	;'%'
   271  00C6  3466               	retlw	102	;'f'
   272  00C7  3400               	retlw	0
   273  00C8                     STR_1:	
   274  00C8  342C               	retlw	44	;','
   275  00C9  3400               	retlw	0
   276  00A2                     
   277                           	psect	cinit
   278  018D                     start_initialization:	
   279                           
   280                           ; Clear objects allocated to BANK1
   281  018D  1683               	bsf	3,5	;RP0=1, select bank1
   282  018E  01AE               	clrf	__pbssBANK1& (0+127)
   283  018F                     end_of_initialization:	
   284                           ;End of C runtime variable initialization code
   285                           
   286  018F  0183               	clrf	3
   287  0190  120A  118A  2D65   	ljmp	_main	;jump to C main() function
   288                           
   289                           	psect	bssBANK1
   290  00AE                     __pbssBANK1:	
   291  00AE                     _carac:	
   292  00AE                     	ds	1
   293                           
   294                           	psect	cstackBANK1
   295  00A0                     __pcstackBANK1:	
   296  00A0                     ?_printf:	
   297  00A0                     ?_sprintf:	
   298                           ; 2 bytes @ 0x0
   299                           
   300  00A0                     sprintf@f:	
   301                           ; 2 bytes @ 0x0
   302                           
   303                           
   304                           ; 1 bytes @ 0x0
   305  00A0                     	ds	2
   306  00A2                     printf@f:	
   307                           
   308                           ; 1 bytes @ 0x2
   309  00A2                     	ds	1
   310  00A3                     printf@ap:	
   311  00A3                     sprintf@wh:	
   312                           ; 1 bytes @ 0x3
   313                           
   314                           
   315                           ; 1 bytes @ 0x3
   316  00A3                     	ds	1
   317  00A4                     sprintf@ap:	
   318  00A4                     printf@pb:	
   319                           ; 1 bytes @ 0x4
   320                           
   321                           
   322                           ; 2 bytes @ 0x4
   323  00A4                     	ds	1
   324  00A5                     sprintf@pb:	
   325                           
   326                           ; 2 bytes @ 0x5
   327  00A5                     	ds	2
   328  00A7                     main@num:	
   329                           
   330                           ; 3 bytes @ 0x7
   331  00A7                     	ds	3
   332  00AA                     main@count_1835:	
   333                           
   334                           ; 1 bytes @ 0xA
   335  00AA                     	ds	1
   336  00AB                     main@count_1838:	
   337                           
   338                           ; 1 bytes @ 0xB
   339  00AB                     	ds	1
   340  00AC                     main@input:	
   341                           
   342                           ; 1 bytes @ 0xC
   343  00AC                     	ds	1
   344  00AD                     main@count:	
   345                           
   346                           ; 1 bytes @ 0xD
   347  00AD                     	ds	1
   348                           
   349                           	psect	cstackCOMMON
   350  0070                     __pcstackCOMMON:	
   351  0070                     ?_lcd_init:	
   352  0070                     ?_lcd_clear:	
   353                           ; 0 bytes @ 0x0
   354                           
   355  0070                     ?_lcd_goto:	
   356                           ; 0 bytes @ 0x0
   357                           
   358  0070                     ?_pause:	
   359                           ; 0 bytes @ 0x0
   360                           
   361  0070                     ?_msecbase:	
   362                           ; 0 bytes @ 0x0
   363                           
   364  0070                     ??_msecbase:	
   365                           ; 0 bytes @ 0x0
   366                           
   367  0070                     ??_getch:	
   368                           ; 0 bytes @ 0x0
   369                           
   370  0070                     ?_init_comms:	
   371                           ; 0 bytes @ 0x0
   372                           
   373  0070                     ??_init_comms:	
   374                           ; 0 bytes @ 0x0
   375                           
   376  0070                     ?_main:	
   377                           ; 0 bytes @ 0x0
   378                           
   379  0070                     ?_lcd_write:	
   380                           ; 0 bytes @ 0x0
   381                           
   382  0070                     ?___ftge:	
   383                           ; 0 bytes @ 0x0
   384                           
   385  0070                     ?_getch:	
   386                           ; 1 bit 
   387                           
   388  0070                     ?___lbmod:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ?___wmul:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ?___awmod:	
   395                           ; 2 bytes @ 0x0
   396                           
   397  0070                     ?___ftpack:	
   398                           ; 2 bytes @ 0x0
   399                           
   400  0070                     ?___ftneg:	
   401                           ; 3 bytes @ 0x0
   402                           
   403  0070                     ?__tdiv_to_l_:	
   404                           ; 3 bytes @ 0x0
   405                           
   406  0070                     ?__div_to_l_:	
   407                           ; 4 bytes @ 0x0
   408                           
   409  0070                     ?___lldiv:	
   410                           ; 4 bytes @ 0x0
   411                           
   412  0070                     ___lbmod@divisor:	
   413                           ; 4 bytes @ 0x0
   414                           
   415  0070                     pause@usvalue:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ___wmul@multiplier:	
   419                           ; 2 bytes @ 0x0
   420                           
   421  0070                     ___awmod@divisor:	
   422                           ; 2 bytes @ 0x0
   423                           
   424  0070                     ___ftneg@f1:	
   425                           ; 2 bytes @ 0x0
   426                           
   427  0070                     ___ftge@ff1:	
   428                           ; 3 bytes @ 0x0
   429                           
   430  0070                     __tdiv_to_l_@f1:	
   431                           ; 3 bytes @ 0x0
   432                           
   433  0070                     __div_to_l_@f1:	
   434                           ; 3 bytes @ 0x0
   435                           
   436  0070                     ___ftpack@arg:	
   437                           ; 3 bytes @ 0x0
   438                           
   439  0070                     ___lldiv@divisor:	
   440                           ; 3 bytes @ 0x0
   441                           
   442                           
   443                           ; 4 bytes @ 0x0
   444  0070                     	ds	1
   445  0071                     ??___lbmod:	
   446                           
   447                           ; 0 bytes @ 0x1
   448  0071                     	ds	1
   449  0072                     ??_pause:	
   450  0072                     ___lbmod@dividend:	
   451                           ; 0 bytes @ 0x2
   452                           
   453  0072                     pause@x:	
   454                           ; 1 bytes @ 0x2
   455                           
   456  0072                     ___wmul@multiplicand:	
   457                           ; 2 bytes @ 0x2
   458                           
   459  0072                     ___awmod@dividend:	
   460                           ; 2 bytes @ 0x2
   461                           
   462                           
   463                           ; 2 bytes @ 0x2
   464  0072                     	ds	1
   465  0073                     ??___ftneg:	
   466  0073                     ___lbmod@counter:	
   467                           ; 0 bytes @ 0x3
   468                           
   469  0073                     ___ftpack@exp:	
   470                           ; 1 bytes @ 0x3
   471                           
   472  0073                     ___ftge@ff2:	
   473                           ; 1 bytes @ 0x3
   474                           
   475  0073                     __tdiv_to_l_@f2:	
   476                           ; 3 bytes @ 0x3
   477                           
   478  0073                     __div_to_l_@f2:	
   479                           ; 3 bytes @ 0x3
   480                           
   481                           
   482                           ; 3 bytes @ 0x3
   483  0073                     	ds	1
   484  0074                     ??_lcd_write:	
   485  0074                     ??___wmul:	
   486                           ; 0 bytes @ 0x4
   487                           
   488  0074                     ??___awmod:	
   489                           ; 0 bytes @ 0x4
   490                           
   491  0074                     lcd_write@c:	
   492                           ; 0 bytes @ 0x4
   493                           
   494  0074                     ___lbmod@rem:	
   495                           ; 1 bytes @ 0x4
   496                           
   497  0074                     ___awmod@counter:	
   498                           ; 1 bytes @ 0x4
   499                           
   500  0074                     ___ftpack@sign:	
   501                           ; 1 bytes @ 0x4
   502                           
   503  0074                     ___wmul@product:	
   504                           ; 1 bytes @ 0x4
   505                           
   506  0074                     ___lldiv@dividend:	
   507                           ; 2 bytes @ 0x4
   508                           
   509                           
   510                           ; 4 bytes @ 0x4
   511  0074                     	ds	1
   512  0075                     ??_lcd_init:	
   513  0075                     ??_lcd_clear:	
   514                           ; 0 bytes @ 0x5
   515                           
   516  0075                     ??_lcd_goto:	
   517                           ; 0 bytes @ 0x5
   518                           
   519  0075                     ?_lcd_puts:	
   520                           ; 0 bytes @ 0x5
   521                           
   522  0075                     ??___ftpack:	
   523                           ; 0 bytes @ 0x5
   524                           
   525  0075                     ?___lbdiv:	
   526                           ; 0 bytes @ 0x5
   527                           
   528  0075                     lcd_goto@pos:	
   529                           ; 1 bytes @ 0x5
   530                           
   531  0075                     ___lbdiv@divisor:	
   532                           ; 1 bytes @ 0x5
   533                           
   534  0075                     ___awmod@sign:	
   535                           ; 1 bytes @ 0x5
   536                           
   537  0075                     lcd_puts@s:	
   538                           ; 1 bytes @ 0x5
   539                           
   540                           
   541                           ; 2 bytes @ 0x5
   542  0075                     	ds	1
   543  0076                     ??__tdiv_to_l_:	
   544  0076                     ??__div_to_l_:	
   545                           ; 0 bytes @ 0x6
   546                           
   547  0076                     ??___lbdiv:	
   548                           ; 0 bytes @ 0x6
   549                           
   550  0076                     ??___ftge:	
   551                           ; 0 bytes @ 0x6
   552                           
   553  0076                     ?___awdiv:	
   554                           ; 0 bytes @ 0x6
   555                           
   556  0076                     ___lbdiv@dividend:	
   557                           ; 2 bytes @ 0x6
   558                           
   559  0076                     ___awdiv@divisor:	
   560                           ; 1 bytes @ 0x6
   561                           
   562                           
   563                           ; 2 bytes @ 0x6
   564  0076                     	ds	1
   565  0077                     ??_lcd_puts:	
   566  0077                     ___lbdiv@counter:	
   567                           ; 0 bytes @ 0x7
   568                           
   569                           
   570                           ; 1 bytes @ 0x7
   571  0077                     	ds	1
   572  0078                     ??___lldiv:	
   573  0078                     ?___lltoft:	
   574                           ; 0 bytes @ 0x8
   575                           
   576  0078                     ___lbdiv@quotient:	
   577                           ; 3 bytes @ 0x8
   578                           
   579  0078                     ___awdiv@dividend:	
   580                           ; 1 bytes @ 0x8
   581                           
   582  0078                     ___lldiv@quotient:	
   583                           ; 2 bytes @ 0x8
   584                           
   585  0078                     ___lltoft@c:	
   586                           ; 4 bytes @ 0x8
   587                           
   588                           
   589                           ; 4 bytes @ 0x8
   590  0078                     	ds	1
   591  0079                     ?___bmul:	
   592  0079                     ___bmul@multiplicand:	
   593                           ; 1 bytes @ 0x9
   594                           
   595                           
   596                           ; 1 bytes @ 0x9
   597  0079                     	ds	1
   598  007A                     ??___bmul:	
   599  007A                     ??___awdiv:	
   600                           ; 0 bytes @ 0xA
   601                           
   602  007A                     ___bmul@product:	
   603                           ; 0 bytes @ 0xA
   604                           
   605  007A                     ___awdiv@counter:	
   606                           ; 1 bytes @ 0xA
   607                           
   608                           
   609                           ; 1 bytes @ 0xA
   610  007A                     	ds	1
   611  007B                     ___bmul@multiplier:	
   612  007B                     ___awdiv@sign:	
   613                           ; 1 bytes @ 0xB
   614                           
   615                           
   616                           ; 1 bytes @ 0xB
   617  007B                     	ds	1
   618  007C                     ??___lltoft:	
   619  007C                     ___lldiv@counter:	
   620                           ; 0 bytes @ 0xC
   621                           
   622  007C                     ___lltoft@exp:	
   623                           ; 1 bytes @ 0xC
   624                           
   625  007C                     ___awdiv@quotient:	
   626                           ; 1 bytes @ 0xC
   627                           
   628                           
   629                           ; 2 bytes @ 0xC
   630  007C                     	ds	1
   631  007D                     ??___llmod:	
   632  007D                     ___llmod@counter:	
   633                           ; 0 bytes @ 0xD
   634                           
   635                           
   636                           ; 1 bytes @ 0xD
   637  007D                     	ds	1
   638  007E                     ??_printf:	
   639  007E                     ??_sprintf:	
   640                           ; 0 bytes @ 0xE
   641                           
   642  007E                     ??_putch:	
   643                           ; 0 bytes @ 0xE
   644                           
   645  007E                     ??_main:	
   646                           ; 0 bytes @ 0xE
   647                           
   648  007E                     ??_fround:	
   649                           ; 0 bytes @ 0xE
   650                           
   651  007E                     ??___ftsub:	
   652                           ; 0 bytes @ 0xE
   653                           
   654                           
   655                           	psect	cstackBANK0
   656  0020                     __pcstackBANK0:	
   657                           ; 0 bytes @ 0xE
   658                           
   659  0020                     ?___fttol:	
   660  0020                     ?___llmod:	
   661                           ; 4 bytes @ 0x0
   662                           
   663  0020                     ___fttol@f1:	
   664                           ; 4 bytes @ 0x0
   665                           
   666  0020                     ___llmod@divisor:	
   667                           ; 3 bytes @ 0x0
   668                           
   669  0020                     __tdiv_to_l_@quot:	
   670                           ; 4 bytes @ 0x0
   671                           
   672  0020                     __div_to_l_@quot:	
   673                           ; 4 bytes @ 0x0
   674                           
   675                           
   676                           ; 4 bytes @ 0x0
   677  0020                     	ds	4
   678  0024                     ??___fttol:	
   679  0024                     __tdiv_to_l_@cntr:	
   680                           ; 0 bytes @ 0x4
   681                           
   682  0024                     __div_to_l_@cntr:	
   683                           ; 1 bytes @ 0x4
   684                           
   685  0024                     ___llmod@dividend:	
   686                           ; 1 bytes @ 0x4
   687                           
   688                           
   689                           ; 4 bytes @ 0x4
   690  0024                     	ds	1
   691  0025                     __tdiv_to_l_@exp1:	
   692  0025                     __div_to_l_@exp1:	
   693                           ; 1 bytes @ 0x5
   694                           
   695                           
   696                           ; 1 bytes @ 0x5
   697  0025                     	ds	2
   698  0027                     ___fttol@sign1:	
   699                           
   700                           ; 1 bytes @ 0x7
   701  0027                     	ds	1
   702  0028                     ?_putch:	
   703  0028                     putch@byte:	
   704                           ; 0 bytes @ 0x8
   705                           
   706  0028                     ___fttol@lval:	
   707                           ; 1 bytes @ 0x8
   708                           
   709                           
   710                           ; 4 bytes @ 0x8
   711  0028                     	ds	4
   712  002C                     ___fttol@exp1:	
   713                           
   714                           ; 1 bytes @ 0xC
   715  002C                     	ds	1
   716  002D                     ?___ftmul:	
   717  002D                     ___ftmul@f1:	
   718                           ; 3 bytes @ 0xD
   719                           
   720                           
   721                           ; 3 bytes @ 0xD
   722  002D                     	ds	3
   723  0030                     ___ftmul@f2:	
   724                           
   725                           ; 3 bytes @ 0x10
   726  0030                     	ds	3
   727  0033                     ??___ftmul:	
   728                           
   729                           ; 0 bytes @ 0x13
   730  0033                     	ds	3
   731  0036                     ___ftmul@exp:	
   732                           
   733                           ; 1 bytes @ 0x16
   734  0036                     	ds	1
   735  0037                     ___ftmul@f3_as_product:	
   736                           
   737                           ; 3 bytes @ 0x17
   738  0037                     	ds	3
   739  003A                     ___ftmul@cntr:	
   740                           
   741                           ; 1 bytes @ 0x1A
   742  003A                     	ds	1
   743  003B                     ___ftmul@sign:	
   744                           
   745                           ; 1 bytes @ 0x1B
   746  003B                     	ds	1
   747  003C                     ?_scale:	
   748  003C                     ?___ftadd:	
   749                           ; 3 bytes @ 0x1C
   750                           
   751  003C                     ___ftadd@f1:	
   752                           ; 3 bytes @ 0x1C
   753                           
   754                           
   755                           ; 3 bytes @ 0x1C
   756  003C                     	ds	3
   757  003F                     ??_scale:	
   758  003F                     ___ftadd@f2:	
   759                           ; 0 bytes @ 0x1F
   760                           
   761                           
   762                           ; 3 bytes @ 0x1F
   763  003F                     	ds	3
   764  0042                     ??___ftadd:	
   765                           
   766                           ; 0 bytes @ 0x22
   767  0042                     	ds	1
   768  0043                     _scale$2904:	
   769                           
   770                           ; 3 bytes @ 0x23
   771  0043                     	ds	2
   772  0045                     ___ftadd@sign:	
   773                           
   774                           ; 1 bytes @ 0x25
   775  0045                     	ds	1
   776  0046                     scale@scl:	
   777  0046                     ___ftadd@exp2:	
   778                           ; 1 bytes @ 0x26
   779                           
   780                           
   781                           ; 1 bytes @ 0x26
   782  0046                     	ds	1
   783  0047                     ___ftadd@exp1:	
   784                           
   785                           ; 1 bytes @ 0x27
   786  0047                     	ds	1
   787  0048                     ?_fround:	
   788  0048                     ?___ftsub:	
   789                           ; 3 bytes @ 0x28
   790                           
   791  0048                     ___ftsub@f2:	
   792                           ; 3 bytes @ 0x28
   793                           
   794                           
   795                           ; 3 bytes @ 0x28
   796  0048                     	ds	3
   797  004B                     ___ftsub@f1:	
   798  004B                     _fround$2903:	
   799                           ; 3 bytes @ 0x2B
   800                           
   801                           
   802                           ; 3 bytes @ 0x2B
   803  004B                     	ds	3
   804  004E                     _fround$2902:	
   805                           
   806                           ; 3 bytes @ 0x2E
   807  004E                     	ds	3
   808  0051                     fround@prec:	
   809                           
   810                           ; 1 bytes @ 0x31
   811  0051                     	ds	1
   812  0052                     ?__doprnt:	
   813  0052                     __doprnt@f:	
   814                           ; 2 bytes @ 0x32
   815                           
   816                           
   817                           ; 1 bytes @ 0x32
   818  0052                     	ds	1
   819  0053                     __doprnt@ap:	
   820                           
   821                           ; 1 bytes @ 0x33
   822  0053                     	ds	1
   823  0054                     ??__doprnt:	
   824                           
   825                           ; 0 bytes @ 0x34
   826  0054                     	ds	5
   827  0059                     __doprnt$1919:	
   828                           
   829                           ; 4 bytes @ 0x39
   830  0059                     	ds	4
   831  005D                     __doprnt@flag:	
   832                           
   833                           ; 2 bytes @ 0x3D
   834  005D                     	ds	2
   835  005F                     __doprnt@prec:	
   836                           
   837                           ; 2 bytes @ 0x3F
   838  005F                     	ds	2
   839  0061                     __doprnt@integ:	
   840                           
   841                           ; 3 bytes @ 0x41
   842  0061                     	ds	3
   843  0064                     __doprnt@_val:	
   844                           
   845                           ; 4 bytes @ 0x44
   846  0064                     	ds	4
   847  0068                     __doprnt@exp:	
   848                           
   849                           ; 2 bytes @ 0x48
   850  0068                     	ds	2
   851  006A                     __doprnt@fval:	
   852                           
   853                           ; 3 bytes @ 0x4A
   854  006A                     	ds	3
   855  006D                     __doprnt@c:	
   856                           
   857                           ; 1 bytes @ 0x4D
   858  006D                     	ds	1
   859  006E                     __doprnt@pb:	
   860                           
   861                           ; 1 bytes @ 0x4E
   862  006E                     	ds	1
   863                           
   864                           	psect	maintext
   865  0565                     __pmaintext:	
   866 ;;Data sizes: Strings 65, constant 118, data 0, bss 1, persistent 0 stack 0
   867 ;;Auto spaces:   Size  Autos    Used
   868 ;; COMMON          14     14      14
   869 ;; BANK0           80     79      79
   870 ;; BANK1           80     14      15
   871 ;; BANK3           96      0       0
   872 ;; BANK2           96      0       0
   873 ;;
   874 ;; Pointer list with targets:
   875 ;; ?___ftpack	float  size(1) Largest target is 2
   876 ;;		 -> ?_sprintf(BANK1[2]), ?_printf(BANK1[2]), 
   877 ;;
   878 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   879 ;;
   880 ;; ?___llmod	unsigned long  size(1) Largest target is 2
   881 ;;		 -> ?_sprintf(BANK1[2]), ?_printf(BANK1[2]), 
   882 ;;
   883 ;; ?___ftsub	float  size(1) Largest target is 0
   884 ;;
   885 ;; ?___lltoft	float  size(1) Largest target is 0
   886 ;;
   887 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
   888 ;;
   889 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
   890 ;;
   891 ;; ?___fttol	long  size(1) Largest target is 2
   892 ;;		 -> ?_sprintf(BANK1[2]), ?_printf(BANK1[2]), 
   893 ;;
   894 ;; ?___ftneg	float  size(1) Largest target is 2
   895 ;;		 -> ?_sprintf(BANK1[2]), ?_printf(BANK1[2]), 
   896 ;;
   897 ;; ?___awmod	int  size(2) Largest target is 40
   898 ;;		 -> ?_sprintf(BANK1[2]), ?_printf(BANK1[2]), dpowers(CODE[40]), 
   899 ;;
   900 ;; ?___awdiv	int  size(1) Largest target is 0
   901 ;;
   902 ;; ?_scale	int  size(1) Largest target is 0
   903 ;;
   904 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   905 ;;
   906 ;; ?_fround	unsigned int  size(1) Largest target is 0
   907 ;;
   908 ;; ?___ftmul	float  size(1) Largest target is 0
   909 ;;
   910 ;; ?___ftadd	float  size(1) Largest target is 2
   911 ;;		 -> ?_sprintf(BANK1[2]), ?_printf(BANK1[2]), 
   912 ;;
   913 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 3
   914 ;;		 -> STR_14(CODE[3]), STR_12(CODE[3]), STR_10(CODE[3]), STR_6(CODE[3]), 
   915 ;;		 -> STR_4(CODE[3]), STR_2(CODE[3]), 
   916 ;;
   917 ;; ?_sprintf	int  size(1) Largest target is 1
   918 ;;		 -> NULL(NULL[0]), carac(BANK1[1]), 
   919 ;;
   920 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
   921 ;;		 -> ?_sprintf(BANK1[2]), ?_printf(BANK1[2]), 
   922 ;;
   923 ;; sprintf@wh	PTR unsigned char  size(1) Largest target is 1
   924 ;;		 -> carac(BANK1[1]), 
   925 ;;
   926 ;; pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
   927 ;;		 -> Absolute function(), putch(), 
   928 ;;
   929 ;; pb.ptr	PTR unsigned char  size(1) Largest target is 1
   930 ;;		 -> NULL(NULL[0]), carac(BANK1[1]), 
   931 ;;
   932 ;; printf@f	PTR const unsigned char  size(1) Largest target is 25
   933 ;;		 -> STR_13(CODE[19]), STR_11(CODE[19]), STR_9(CODE[19]), STR_7(CODE[25]), 
   934 ;;		 -> STR_5(CODE[2]), STR_3(CODE[2]), STR_1(CODE[2]), 
   935 ;;
   936 ;; ?_printf	int  size(1) Largest target is 0
   937 ;;
   938 ;; printf@ap	PTR void [1] size(1) Largest target is 2
   939 ;;		 -> ?_sprintf(BANK1[2]), ?_printf(BANK1[2]), 
   940 ;;
   941 ;; pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
   942 ;;		 -> Absolute function(), putch(), 
   943 ;;
   944 ;; pb.ptr	PTR unsigned char  size(1) Largest target is 1
   945 ;;		 -> NULL(NULL[0]), carac(BANK1[1]), 
   946 ;;
   947 ;; _doprnt@f	PTR const unsigned char  size(1) Largest target is 25
   948 ;;		 -> STR_14(CODE[3]), STR_13(CODE[19]), STR_12(CODE[3]), STR_11(CODE[19]), 
   949 ;;		 -> STR_10(CODE[3]), STR_9(CODE[19]), STR_7(CODE[25]), STR_6(CODE[3]), 
   950 ;;		 -> STR_5(CODE[2]), STR_4(CODE[3]), STR_3(CODE[2]), STR_2(CODE[3]), 
   951 ;;		 -> STR_1(CODE[2]), 
   952 ;;
   953 ;; _doprnt@ap	PTR PTR void  size(1) Largest target is 2
   954 ;;		 -> sprintf@ap(BANK1[1]), printf@ap(BANK1[1]), 
   955 ;;
   956 ;; S1860__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
   957 ;;		 -> Absolute function(), putch(), 
   958 ;;
   959 ;; _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
   960 ;;		 -> Absolute function(), putch(), 
   961 ;;
   962 ;; S1860__prbuf$ptr	PTR unsigned char  size(1) Largest target is 1
   963 ;;		 -> NULL(NULL[0]), carac(BANK1[1]), 
   964 ;;
   965 ;; _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 1
   966 ;;		 -> NULL(NULL[0]), carac(BANK1[1]), 
   967 ;;
   968 ;; _doprnt@pb	PTR struct __prbuf size(1) Largest target is 3
   969 ;;		 -> sprintf@pb(BANK1[2]), printf@pb(BANK1[2]), 
   970 ;;
   971 ;; S1901$_cp	PTR const unsigned char  size(1) Largest target is 0
   972 ;;
   973 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   974 ;;
   975 ;; lcd_puts@s	PTR const unsigned char  size(2) Largest target is 13
   976 ;;		 -> STR_8(CODE[13]), carac(BANK1[1]), 
   977 ;;
   978 ;;
   979 ;; Critical Paths under _main in COMMON
   980 ;;
   981 ;;   _lcd_init->_lcd_write
   982 ;;   __doprnt->___awdiv
   983 ;;   __doprnt->__div_to_l_
   984 ;;   __doprnt->___llmod
   985 ;;   _lcd_puts->_lcd_write
   986 ;;   _lcd_goto->_lcd_write
   987 ;;   _lcd_clear->_lcd_write
   988 ;;   _scale->___awdiv
   989 ;;   _lcd_write->_pause
   990 ;;   ___lltoft->___ftpack
   991 ;;   ___ftmul->___awdiv
   992 ;;   ___llmod->___lldiv
   993 ;;   ___awdiv->___awmod
   994 ;;   ___fttol->___awdiv
   995 ;;   ___lbdiv->___lbmod
   996 ;;   ___bmul->___lbdiv
   997 ;;   _putch->___llmod
   998 ;;
   999 ;; Critical Paths under _main in BANK0
  1000 ;;
  1001 ;;   _sprintf->__doprnt
  1002 ;;   _printf->__doprnt
  1003 ;;   __doprnt->_fround
  1004 ;;   ___ftsub->___ftadd
  1005 ;;   _scale->___ftmul
  1006 ;;   _fround->___ftadd
  1007 ;;   ___ftmul->___fttol
  1008 ;;   ___ftadd->___ftmul
  1009 ;;   _putch->___llmod
  1010 ;;
  1011 ;; Critical Paths under _main in BANK1
  1012 ;;
  1013 ;;   _main->_sprintf
  1014 ;;
  1015 ;; Critical Paths under _main in BANK3
  1016 ;;
  1017 ;;   None.
  1018 ;;
  1019 ;; Critical Paths under _main in BANK2
  1020 ;;
  1021 ;;   None.
  1022 ;;
  1023 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1024 ;;
  1025 ;;
  1026 ;;Call Graph Tables:
  1027 ;;
  1028 ;; ---------------------------------------------------------------------------------
  1029 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1030 ;; ---------------------------------------------------------------------------------
  1031 ;; (0) _main                                                 7     7      0   23044
  1032 ;;                                              7 BANK1      7     7      0
  1033 ;;                           _lcd_init
  1034 ;;                          _lcd_clear
  1035 ;;                         _init_comms
  1036 ;;                             ___ftge
  1037 ;;                              _putch
  1038 ;;                             _printf
  1039 ;;                           _lcd_goto
  1040 ;;                            _sprintf
  1041 ;;                           _lcd_puts
  1042 ;;                            ___ftadd
  1043 ;;                              _getch
  1044 ;; ---------------------------------------------------------------------------------
  1045 ;; (1) _sprintf                                              7     4      3   10237
  1046 ;;                                              0 BANK1      7     4      3
  1047 ;;                            __doprnt
  1048 ;; ---------------------------------------------------------------------------------
  1049 ;; (1) _printf                                               6     4      2   10181
  1050 ;;                                              0 BANK1      6     4      2
  1051 ;;                            __doprnt
  1052 ;; ---------------------------------------------------------------------------------
  1053 ;; (1) _lcd_init                                             1     1      0     295
  1054 ;;                                              5 COMMON     1     1      0
  1055 ;;                              _pause
  1056 ;;                          _lcd_write
  1057 ;;                          _lcd_clear
  1058 ;; ---------------------------------------------------------------------------------
  1059 ;; (2) __doprnt                                             35    33      2   10040
  1060 ;;                                             50 BANK0     29    27      2
  1061 ;;                   Absolute function
  1062 ;;                              _putch
  1063 ;;                             ___ftge
  1064 ;;                            ___ftneg
  1065 ;;                             ___wmul
  1066 ;;                            ___awdiv
  1067 ;;                              _scale
  1068 ;;                            ___ftmul
  1069 ;;                             _fround
  1070 ;;                            ___ftadd
  1071 ;;                            ___fttol
  1072 ;;                         __div_to_l_
  1073 ;;                        __tdiv_to_l_
  1074 ;;                           ___lltoft
  1075 ;;                            ___ftsub
  1076 ;;                            ___lldiv
  1077 ;;                            ___llmod
  1078 ;; ---------------------------------------------------------------------------------
  1079 ;; (1) _lcd_puts                                             2     0      2     135
  1080 ;;                                              5 COMMON     2     0      2
  1081 ;;                          _lcd_write
  1082 ;; ---------------------------------------------------------------------------------
  1083 ;; (1) _lcd_goto                                             1     1      0     112
  1084 ;;                                              5 COMMON     1     1      0
  1085 ;;                          _lcd_write
  1086 ;; ---------------------------------------------------------------------------------
  1087 ;; (1) _lcd_clear                                            0     0      0     136
  1088 ;;                          _lcd_write
  1089 ;;                              _pause
  1090 ;; ---------------------------------------------------------------------------------
  1091 ;; (3) ___ftsub                                              6     0      6    1094
  1092 ;;                                             40 BANK0      6     0      6
  1093 ;;                            ___ftadd
  1094 ;;                           ___lltoft (ARG)
  1095 ;; ---------------------------------------------------------------------------------
  1096 ;; (3) _scale                                               14    11      3    1688
  1097 ;;                                             28 BANK0     11     8      3
  1098 ;;                            ___awmod
  1099 ;;                            ___awdiv
  1100 ;;                            ___ftmul
  1101 ;;                             ___bmul
  1102 ;;                            ___fttol (ARG)
  1103 ;; ---------------------------------------------------------------------------------
  1104 ;; (3) _fround                                              13    10      3    1215
  1105 ;;                                             40 BANK0     10     7      3
  1106 ;;                            ___lbmod
  1107 ;;                             ___bmul
  1108 ;;                            ___lbdiv
  1109 ;;                            ___ftmul
  1110 ;;                            ___ftadd (ARG)
  1111 ;; ---------------------------------------------------------------------------------
  1112 ;; (2) _lcd_write                                            1     1      0      90
  1113 ;;                                              4 COMMON     1     1      0
  1114 ;;                              _pause
  1115 ;; ---------------------------------------------------------------------------------
  1116 ;; (3) ___lltoft                                             5     1      4     278
  1117 ;;                                              8 COMMON     5     1      4
  1118 ;;                           ___ftpack
  1119 ;; ---------------------------------------------------------------------------------
  1120 ;; (4) ___ftmul                                             15     9      6     535
  1121 ;;                                             13 BANK0     15     9      6
  1122 ;;                           ___ftpack
  1123 ;;                            ___fttol (ARG)
  1124 ;;                            ___awdiv (ARG)
  1125 ;;                            ___awmod (ARG)
  1126 ;;                             ___bmul (ARG)
  1127 ;;                            ___lbdiv (ARG)
  1128 ;;                            ___lbmod (ARG)
  1129 ;; ---------------------------------------------------------------------------------
  1130 ;; (1) ___ftadd                                             12     6      6    1049
  1131 ;;                                             28 BANK0     12     6      6
  1132 ;;                           ___ftpack
  1133 ;;                            ___lbmod (ARG)
  1134 ;;                             ___bmul (ARG)
  1135 ;;                            ___lbdiv (ARG)
  1136 ;;                            ___ftmul (ARG)
  1137 ;; ---------------------------------------------------------------------------------
  1138 ;; (3) _pause                                                4     2      2      46
  1139 ;;                                              0 COMMON     4     2      2
  1140 ;;                           _msecbase
  1141 ;; ---------------------------------------------------------------------------------
  1142 ;; (4) ___awmod                                              6     2      4     296
  1143 ;;                                              0 COMMON     6     2      4
  1144 ;; ---------------------------------------------------------------------------------
  1145 ;; (3) ___lldiv                                             13     5      8     162
  1146 ;;                                              0 COMMON    13     5      8
  1147 ;; ---------------------------------------------------------------------------------
  1148 ;; (3) ___ftge                                               6     0      6     136
  1149 ;;                                              0 COMMON     6     0      6
  1150 ;; ---------------------------------------------------------------------------------
  1151 ;; (3) ___ftneg                                              3     0      3      45
  1152 ;;                                              0 COMMON     3     0      3
  1153 ;; ---------------------------------------------------------------------------------
  1154 ;; (3) ___llmod                                              9     1      8     159
  1155 ;;                                             13 COMMON     1     1      0
  1156 ;;                                              0 BANK0      8     0      8
  1157 ;;                            ___lldiv (ARG)
  1158 ;; ---------------------------------------------------------------------------------
  1159 ;; (4) ___awdiv                                              8     4      4     300
  1160 ;;                                              6 COMMON     8     4      4
  1161 ;;                            ___awmod (ARG)
  1162 ;; ---------------------------------------------------------------------------------
  1163 ;; (3) ___fttol                                             13     9      4     252
  1164 ;;                                              0 BANK0     13     9      4
  1165 ;;                           ___ftpack (ARG)
  1166 ;;                            ___awmod (ARG)
  1167 ;;                            ___awdiv (ARG)
  1168 ;;                             ___bmul (ARG)
  1169 ;; ---------------------------------------------------------------------------------
  1170 ;; (2) ___ftpack                                             8     3      5     209
  1171 ;;                                              0 COMMON     8     3      5
  1172 ;; ---------------------------------------------------------------------------------
  1173 ;; (4) ___lbmod                                              5     4      1     159
  1174 ;;                                              0 COMMON     5     4      1
  1175 ;; ---------------------------------------------------------------------------------
  1176 ;; (4) ___lbdiv                                              4     3      1     162
  1177 ;;                                              5 COMMON     4     3      1
  1178 ;;                            ___lbmod (ARG)
  1179 ;; ---------------------------------------------------------------------------------
  1180 ;; (3) ___wmul                                               6     2      4      92
  1181 ;;                                              0 COMMON     6     2      4
  1182 ;; ---------------------------------------------------------------------------------
  1183 ;; (4) ___bmul                                               3     2      1      68
  1184 ;;                                              9 COMMON     3     2      1
  1185 ;;                            ___lbmod (ARG)
  1186 ;;                            ___lbdiv (ARG)
  1187 ;; ---------------------------------------------------------------------------------
  1188 ;; (3) __div_to_l_                                          20    14      6     446
  1189 ;;                                              0 COMMON    14     8      6
  1190 ;;                                              0 BANK0      6     6      0
  1191 ;; ---------------------------------------------------------------------------------
  1192 ;; (3) __tdiv_to_l_                                         15     9      6     303
  1193 ;;                                              0 COMMON     9     3      6
  1194 ;;                                              0 BANK0      6     6      0
  1195 ;; ---------------------------------------------------------------------------------
  1196 ;; (3) Absolute function(Fake)                               1     0      1       0
  1197 ;;                                              0 COMMON     1     0      1
  1198 ;; ---------------------------------------------------------------------------------
  1199 ;; (4) _msecbase                                             0     0      0       0
  1200 ;; ---------------------------------------------------------------------------------
  1201 ;; (1) _init_comms                                           0     0      0       0
  1202 ;; ---------------------------------------------------------------------------------
  1203 ;; (1) _getch                                                0     0      0       0
  1204 ;; ---------------------------------------------------------------------------------
  1205 ;; (3) _putch                                                1     0      1      22
  1206 ;;                                              8 BANK0      1     0      1
  1207 ;;                            ___llmod (ARG)
  1208 ;;                            ___lldiv (ARG)
  1209 ;; ---------------------------------------------------------------------------------
  1210 ;; Estimated maximum stack depth 4
  1211 ;; ---------------------------------------------------------------------------------
  1212 ;; Call Graph Graphs:
  1213 ;; _main (ROOT)
  1214 ;;   _lcd_init
  1215 ;;     _pause
  1216 ;;       _msecbase
  1217 ;;     _lcd_write
  1218 ;;       _pause
  1219 ;;         _msecbase
  1220 ;;     _lcd_clear
  1221 ;;       _lcd_write
  1222 ;;         _pause
  1223 ;;           _msecbase
  1224 ;;       _pause
  1225 ;;         _msecbase
  1226 ;;   _lcd_clear
  1227 ;;     _lcd_write
  1228 ;;       _pause
  1229 ;;         _msecbase
  1230 ;;     _pause
  1231 ;;       _msecbase
  1232 ;;   _init_comms
  1233 ;;   ___ftge
  1234 ;;   _putch
  1235 ;;     ___llmod (ARG)
  1236 ;;       ___lldiv (ARG)
  1237 ;;     ___lldiv (ARG)
  1238 ;;   _printf
  1239 ;;     __doprnt
  1240 ;;       Absolute function(Fake)
  1241 ;;       _putch
  1242 ;;         ___llmod (ARG)
  1243 ;;           ___lldiv (ARG)
  1244 ;;         ___lldiv (ARG)
  1245 ;;       ___ftge
  1246 ;;       ___ftneg
  1247 ;;       ___wmul
  1248 ;;       ___awdiv
  1249 ;;         ___awmod (ARG)
  1250 ;;       _scale
  1251 ;;         ___awmod
  1252 ;;         ___awdiv
  1253 ;;           ___awmod (ARG)
  1254 ;;         ___ftmul
  1255 ;;           ___ftpack
  1256 ;;           ___fttol (ARG)
  1257 ;;             ___ftpack (ARG)
  1258 ;;             ___awmod (ARG)
  1259 ;;             ___awdiv (ARG)
  1260 ;;               ___awmod (ARG)
  1261 ;;             ___bmul (ARG)
  1262 ;;               ___lbmod (ARG)
  1263 ;;               ___lbdiv (ARG)
  1264 ;;                 ___lbmod (ARG)
  1265 ;;           ___awdiv (ARG)
  1266 ;;             ___awmod (ARG)
  1267 ;;           ___awmod (ARG)
  1268 ;;           ___bmul (ARG)
  1269 ;;             ___lbmod (ARG)
  1270 ;;             ___lbdiv (ARG)
  1271 ;;               ___lbmod (ARG)
  1272 ;;           ___lbdiv (ARG)
  1273 ;;             ___lbmod (ARG)
  1274 ;;           ___lbmod (ARG)
  1275 ;;         ___bmul
  1276 ;;           ___lbmod (ARG)
  1277 ;;           ___lbdiv (ARG)
  1278 ;;             ___lbmod (ARG)
  1279 ;;         ___fttol (ARG)
  1280 ;;           ___ftpack (ARG)
  1281 ;;           ___awmod (ARG)
  1282 ;;           ___awdiv (ARG)
  1283 ;;             ___awmod (ARG)
  1284 ;;           ___bmul (ARG)
  1285 ;;             ___lbmod (ARG)
  1286 ;;             ___lbdiv (ARG)
  1287 ;;               ___lbmod (ARG)
  1288 ;;       ___ftmul
  1289 ;;         ___ftpack
  1290 ;;         ___fttol (ARG)
  1291 ;;           ___ftpack (ARG)
  1292 ;;           ___awmod (ARG)
  1293 ;;           ___awdiv (ARG)
  1294 ;;             ___awmod (ARG)
  1295 ;;           ___bmul (ARG)
  1296 ;;             ___lbmod (ARG)
  1297 ;;             ___lbdiv (ARG)
  1298 ;;               ___lbmod (ARG)
  1299 ;;         ___awdiv (ARG)
  1300 ;;           ___awmod (ARG)
  1301 ;;         ___awmod (ARG)
  1302 ;;         ___bmul (ARG)
  1303 ;;           ___lbmod (ARG)
  1304 ;;           ___lbdiv (ARG)
  1305 ;;             ___lbmod (ARG)
  1306 ;;         ___lbdiv (ARG)
  1307 ;;           ___lbmod (ARG)
  1308 ;;         ___lbmod (ARG)
  1309 ;;       _fround
  1310 ;;         ___lbmod
  1311 ;;         ___bmul
  1312 ;;           ___lbmod (ARG)
  1313 ;;           ___lbdiv (ARG)
  1314 ;;             ___lbmod (ARG)
  1315 ;;         ___lbdiv
  1316 ;;           ___lbmod (ARG)
  1317 ;;         ___ftmul
  1318 ;;           ___ftpack
  1319 ;;           ___fttol (ARG)
  1320 ;;             ___ftpack (ARG)
  1321 ;;             ___awmod (ARG)
  1322 ;;             ___awdiv (ARG)
  1323 ;;               ___awmod (ARG)
  1324 ;;             ___bmul (ARG)
  1325 ;;               ___lbmod (ARG)
  1326 ;;               ___lbdiv (ARG)
  1327 ;;                 ___lbmod (ARG)
  1328 ;;           ___awdiv (ARG)
  1329 ;;             ___awmod (ARG)
  1330 ;;           ___awmod (ARG)
  1331 ;;           ___bmul (ARG)
  1332 ;;             ___lbmod (ARG)
  1333 ;;             ___lbdiv (ARG)
  1334 ;;               ___lbmod (ARG)
  1335 ;;           ___lbdiv (ARG)
  1336 ;;             ___lbmod (ARG)
  1337 ;;           ___lbmod (ARG)
  1338 ;;         ___ftadd (ARG)
  1339 ;;           ___ftpack
  1340 ;;           ___lbmod (ARG)
  1341 ;;           ___bmul (ARG)
  1342 ;;             ___lbmod (ARG)
  1343 ;;             ___lbdiv (ARG)
  1344 ;;               ___lbmod (ARG)
  1345 ;;           ___lbdiv (ARG)
  1346 ;;             ___lbmod (ARG)
  1347 ;;           ___ftmul (ARG)
  1348 ;;             ___ftpack
  1349 ;;             ___fttol (ARG)
  1350 ;;               ___ftpack (ARG)
  1351 ;;               ___awmod (ARG)
  1352 ;;               ___awdiv (ARG)
  1353 ;;                 ___awmod (ARG)
  1354 ;;               ___bmul (ARG)
  1355 ;;                 ___lbmod (ARG)
  1356 ;;                 ___lbdiv (ARG)
  1357 ;;                   ___lbmod (ARG)
  1358 ;;             ___awdiv (ARG)
  1359 ;;               ___awmod (ARG)
  1360 ;;             ___awmod (ARG)
  1361 ;;             ___bmul (ARG)
  1362 ;;               ___lbmod (ARG)
  1363 ;;               ___lbdiv (ARG)
  1364 ;;                 ___lbmod (ARG)
  1365 ;;             ___lbdiv (ARG)
  1366 ;;               ___lbmod (ARG)
  1367 ;;             ___lbmod (ARG)
  1368 ;;       ___ftadd
  1369 ;;         ___ftpack
  1370 ;;         ___lbmod (ARG)
  1371 ;;         ___bmul (ARG)
  1372 ;;           ___lbmod (ARG)
  1373 ;;           ___lbdiv (ARG)
  1374 ;;             ___lbmod (ARG)
  1375 ;;         ___lbdiv (ARG)
  1376 ;;           ___lbmod (ARG)
  1377 ;;         ___ftmul (ARG)
  1378 ;;           ___ftpack
  1379 ;;           ___fttol (ARG)
  1380 ;;             ___ftpack (ARG)
  1381 ;;             ___awmod (ARG)
  1382 ;;             ___awdiv (ARG)
  1383 ;;               ___awmod (ARG)
  1384 ;;             ___bmul (ARG)
  1385 ;;               ___lbmod (ARG)
  1386 ;;               ___lbdiv (ARG)
  1387 ;;                 ___lbmod (ARG)
  1388 ;;           ___awdiv (ARG)
  1389 ;;             ___awmod (ARG)
  1390 ;;           ___awmod (ARG)
  1391 ;;           ___bmul (ARG)
  1392 ;;             ___lbmod (ARG)
  1393 ;;             ___lbdiv (ARG)
  1394 ;;               ___lbmod (ARG)
  1395 ;;           ___lbdiv (ARG)
  1396 ;;             ___lbmod (ARG)
  1397 ;;           ___lbmod (ARG)
  1398 ;;       ___fttol
  1399 ;;         ___ftpack (ARG)
  1400 ;;         ___awmod (ARG)
  1401 ;;         ___awdiv (ARG)
  1402 ;;           ___awmod (ARG)
  1403 ;;         ___bmul (ARG)
  1404 ;;           ___lbmod (ARG)
  1405 ;;           ___lbdiv (ARG)
  1406 ;;             ___lbmod (ARG)
  1407 ;;       __div_to_l_
  1408 ;;       __tdiv_to_l_
  1409 ;;       ___lltoft
  1410 ;;         ___ftpack
  1411 ;;       ___ftsub
  1412 ;;         ___ftadd
  1413 ;;           ___ftpack
  1414 ;;           ___lbmod (ARG)
  1415 ;;           ___bmul (ARG)
  1416 ;;             ___lbmod (ARG)
  1417 ;;             ___lbdiv (ARG)
  1418 ;;               ___lbmod (ARG)
  1419 ;;           ___lbdiv (ARG)
  1420 ;;             ___lbmod (ARG)
  1421 ;;           ___ftmul (ARG)
  1422 ;;             ___ftpack
  1423 ;;             ___fttol (ARG)
  1424 ;;               ___ftpack (ARG)
  1425 ;;               ___awmod (ARG)
  1426 ;;               ___awdiv (ARG)
  1427 ;;                 ___awmod (ARG)
  1428 ;;               ___bmul (ARG)
  1429 ;;                 ___lbmod (ARG)
  1430 ;;                 ___lbdiv (ARG)
  1431 ;;                   ___lbmod (ARG)
  1432 ;;             ___awdiv (ARG)
  1433 ;;               ___awmod (ARG)
  1434 ;;             ___awmod (ARG)
  1435 ;;             ___bmul (ARG)
  1436 ;;               ___lbmod (ARG)
  1437 ;;               ___lbdiv (ARG)
  1438 ;;                 ___lbmod (ARG)
  1439 ;;             ___lbdiv (ARG)
  1440 ;;               ___lbmod (ARG)
  1441 ;;             ___lbmod (ARG)
  1442 ;;         ___lltoft (ARG)
  1443 ;;           ___ftpack
  1444 ;;       ___lldiv
  1445 ;;       ___llmod
  1446 ;;         ___lldiv (ARG)
  1447 ;;   _lcd_goto
  1448 ;;     _lcd_write
  1449 ;;       _pause
  1450 ;;         _msecbase
  1451 ;;   _sprintf
  1452 ;;     __doprnt
  1453 ;;       Absolute function(Fake)
  1454 ;;       _putch
  1455 ;;         ___llmod (ARG)
  1456 ;;           ___lldiv (ARG)
  1457 ;;         ___lldiv (ARG)
  1458 ;;       ___ftge
  1459 ;;       ___ftneg
  1460 ;;       ___wmul
  1461 ;;       ___awdiv
  1462 ;;         ___awmod (ARG)
  1463 ;;       _scale
  1464 ;;         ___awmod
  1465 ;;         ___awdiv
  1466 ;;           ___awmod (ARG)
  1467 ;;         ___ftmul
  1468 ;;           ___ftpack
  1469 ;;           ___fttol (ARG)
  1470 ;;             ___ftpack (ARG)
  1471 ;;             ___awmod (ARG)
  1472 ;;             ___awdiv (ARG)
  1473 ;;               ___awmod (ARG)
  1474 ;;             ___bmul (ARG)
  1475 ;;               ___lbmod (ARG)
  1476 ;;               ___lbdiv (ARG)
  1477 ;;                 ___lbmod (ARG)
  1478 ;;           ___awdiv (ARG)
  1479 ;;             ___awmod (ARG)
  1480 ;;           ___awmod (ARG)
  1481 ;;           ___bmul (ARG)
  1482 ;;             ___lbmod (ARG)
  1483 ;;             ___lbdiv (ARG)
  1484 ;;               ___lbmod (ARG)
  1485 ;;           ___lbdiv (ARG)
  1486 ;;             ___lbmod (ARG)
  1487 ;;           ___lbmod (ARG)
  1488 ;;         ___bmul
  1489 ;;           ___lbmod (ARG)
  1490 ;;           ___lbdiv (ARG)
  1491 ;;             ___lbmod (ARG)
  1492 ;;         ___fttol (ARG)
  1493 ;;           ___ftpack (ARG)
  1494 ;;           ___awmod (ARG)
  1495 ;;           ___awdiv (ARG)
  1496 ;;             ___awmod (ARG)
  1497 ;;           ___bmul (ARG)
  1498 ;;             ___lbmod (ARG)
  1499 ;;             ___lbdiv (ARG)
  1500 ;;               ___lbmod (ARG)
  1501 ;;       ___ftmul
  1502 ;;         ___ftpack
  1503 ;;         ___fttol (ARG)
  1504 ;;           ___ftpack (ARG)
  1505 ;;           ___awmod (ARG)
  1506 ;;           ___awdiv (ARG)
  1507 ;;             ___awmod (ARG)
  1508 ;;           ___bmul (ARG)
  1509 ;;             ___lbmod (ARG)
  1510 ;;             ___lbdiv (ARG)
  1511 ;;               ___lbmod (ARG)
  1512 ;;         ___awdiv (ARG)
  1513 ;;           ___awmod (ARG)
  1514 ;;         ___awmod (ARG)
  1515 ;;         ___bmul (ARG)
  1516 ;;           ___lbmod (ARG)
  1517 ;;           ___lbdiv (ARG)
  1518 ;;             ___lbmod (ARG)
  1519 ;;         ___lbdiv (ARG)
  1520 ;;           ___lbmod (ARG)
  1521 ;;         ___lbmod (ARG)
  1522 ;;       _fround
  1523 ;;         ___lbmod
  1524 ;;         ___bmul
  1525 ;;           ___lbmod (ARG)
  1526 ;;           ___lbdiv (ARG)
  1527 ;;             ___lbmod (ARG)
  1528 ;;         ___lbdiv
  1529 ;;           ___lbmod (ARG)
  1530 ;;         ___ftmul
  1531 ;;           ___ftpack
  1532 ;;           ___fttol (ARG)
  1533 ;;             ___ftpack (ARG)
  1534 ;;             ___awmod (ARG)
  1535 ;;             ___awdiv (ARG)
  1536 ;;               ___awmod (ARG)
  1537 ;;             ___bmul (ARG)
  1538 ;;               ___lbmod (ARG)
  1539 ;;               ___lbdiv (ARG)
  1540 ;;                 ___lbmod (ARG)
  1541 ;;           ___awdiv (ARG)
  1542 ;;             ___awmod (ARG)
  1543 ;;           ___awmod (ARG)
  1544 ;;           ___bmul (ARG)
  1545 ;;             ___lbmod (ARG)
  1546 ;;             ___lbdiv (ARG)
  1547 ;;               ___lbmod (ARG)
  1548 ;;           ___lbdiv (ARG)
  1549 ;;             ___lbmod (ARG)
  1550 ;;           ___lbmod (ARG)
  1551 ;;         ___ftadd (ARG)
  1552 ;;           ___ftpack
  1553 ;;           ___lbmod (ARG)
  1554 ;;           ___bmul (ARG)
  1555 ;;             ___lbmod (ARG)
  1556 ;;             ___lbdiv (ARG)
  1557 ;;               ___lbmod (ARG)
  1558 ;;           ___lbdiv (ARG)
  1559 ;;             ___lbmod (ARG)
  1560 ;;           ___ftmul (ARG)
  1561 ;;             ___ftpack
  1562 ;;             ___fttol (ARG)
  1563 ;;               ___ftpack (ARG)
  1564 ;;               ___awmod (ARG)
  1565 ;;               ___awdiv (ARG)
  1566 ;;                 ___awmod (ARG)
  1567 ;;               ___bmul (ARG)
  1568 ;;                 ___lbmod (ARG)
  1569 ;;                 ___lbdiv (ARG)
  1570 ;;                   ___lbmod (ARG)
  1571 ;;             ___awdiv (ARG)
  1572 ;;               ___awmod (ARG)
  1573 ;;             ___awmod (ARG)
  1574 ;;             ___bmul (ARG)
  1575 ;;               ___lbmod (ARG)
  1576 ;;               ___lbdiv (ARG)
  1577 ;;                 ___lbmod (ARG)
  1578 ;;             ___lbdiv (ARG)
  1579 ;;               ___lbmod (ARG)
  1580 ;;             ___lbmod (ARG)
  1581 ;;       ___ftadd
  1582 ;;         ___ftpack
  1583 ;;         ___lbmod (ARG)
  1584 ;;         ___bmul (ARG)
  1585 ;;           ___lbmod (ARG)
  1586 ;;           ___lbdiv (ARG)
  1587 ;;             ___lbmod (ARG)
  1588 ;;         ___lbdiv (ARG)
  1589 ;;           ___lbmod (ARG)
  1590 ;;         ___ftmul (ARG)
  1591 ;;           ___ftpack
  1592 ;;           ___fttol (ARG)
  1593 ;;             ___ftpack (ARG)
  1594 ;;             ___awmod (ARG)
  1595 ;;             ___awdiv (ARG)
  1596 ;;               ___awmod (ARG)
  1597 ;;             ___bmul (ARG)
  1598 ;;               ___lbmod (ARG)
  1599 ;;               ___lbdiv (ARG)
  1600 ;;                 ___lbmod (ARG)
  1601 ;;           ___awdiv (ARG)
  1602 ;;             ___awmod (ARG)
  1603 ;;           ___awmod (ARG)
  1604 ;;           ___bmul (ARG)
  1605 ;;             ___lbmod (ARG)
  1606 ;;             ___lbdiv (ARG)
  1607 ;;               ___lbmod (ARG)
  1608 ;;           ___lbdiv (ARG)
  1609 ;;             ___lbmod (ARG)
  1610 ;;           ___lbmod (ARG)
  1611 ;;       ___fttol
  1612 ;;         ___ftpack (ARG)
  1613 ;;         ___awmod (ARG)
  1614 ;;         ___awdiv (ARG)
  1615 ;;           ___awmod (ARG)
  1616 ;;         ___bmul (ARG)
  1617 ;;           ___lbmod (ARG)
  1618 ;;           ___lbdiv (ARG)
  1619 ;;             ___lbmod (ARG)
  1620 ;;       __div_to_l_
  1621 ;;       __tdiv_to_l_
  1622 ;;       ___lltoft
  1623 ;;         ___ftpack
  1624 ;;       ___ftsub
  1625 ;;         ___ftadd
  1626 ;;           ___ftpack
  1627 ;;           ___lbmod (ARG)
  1628 ;;           ___bmul (ARG)
  1629 ;;             ___lbmod (ARG)
  1630 ;;             ___lbdiv (ARG)
  1631 ;;               ___lbmod (ARG)
  1632 ;;           ___lbdiv (ARG)
  1633 ;;             ___lbmod (ARG)
  1634 ;;           ___ftmul (ARG)
  1635 ;;             ___ftpack
  1636 ;;             ___fttol (ARG)
  1637 ;;               ___ftpack (ARG)
  1638 ;;               ___awmod (ARG)
  1639 ;;               ___awdiv (ARG)
  1640 ;;                 ___awmod (ARG)
  1641 ;;               ___bmul (ARG)
  1642 ;;                 ___lbmod (ARG)
  1643 ;;                 ___lbdiv (ARG)
  1644 ;;                   ___lbmod (ARG)
  1645 ;;             ___awdiv (ARG)
  1646 ;;               ___awmod (ARG)
  1647 ;;             ___awmod (ARG)
  1648 ;;             ___bmul (ARG)
  1649 ;;               ___lbmod (ARG)
  1650 ;;               ___lbdiv (ARG)
  1651 ;;                 ___lbmod (ARG)
  1652 ;;             ___lbdiv (ARG)
  1653 ;;               ___lbmod (ARG)
  1654 ;;             ___lbmod (ARG)
  1655 ;;         ___lltoft (ARG)
  1656 ;;           ___ftpack
  1657 ;;       ___lldiv
  1658 ;;       ___llmod
  1659 ;;         ___lldiv (ARG)
  1660 ;;   _lcd_puts
  1661 ;;     _lcd_write
  1662 ;;       _pause
  1663 ;;         _msecbase
  1664 ;;   ___ftadd
  1665 ;;     ___ftpack
  1666 ;;     ___lbmod (ARG)
  1667 ;;     ___bmul (ARG)
  1668 ;;       ___lbmod (ARG)
  1669 ;;       ___lbdiv (ARG)
  1670 ;;         ___lbmod (ARG)
  1671 ;;     ___lbdiv (ARG)
  1672 ;;       ___lbmod (ARG)
  1673 ;;     ___ftmul (ARG)
  1674 ;;       ___ftpack
  1675 ;;       ___fttol (ARG)
  1676 ;;         ___ftpack (ARG)
  1677 ;;         ___awmod (ARG)
  1678 ;;         ___awdiv (ARG)
  1679 ;;           ___awmod (ARG)
  1680 ;;         ___bmul (ARG)
  1681 ;;           ___lbmod (ARG)
  1682 ;;           ___lbdiv (ARG)
  1683 ;;             ___lbmod (ARG)
  1684 ;;       ___awdiv (ARG)
  1685 ;;         ___awmod (ARG)
  1686 ;;       ___awmod (ARG)
  1687 ;;       ___bmul (ARG)
  1688 ;;         ___lbmod (ARG)
  1689 ;;         ___lbdiv (ARG)
  1690 ;;           ___lbmod (ARG)
  1691 ;;       ___lbdiv (ARG)
  1692 ;;         ___lbmod (ARG)
  1693 ;;       ___lbmod (ARG)
  1694 ;;   _getch
  1695 ;;
  1696 ;; Address spaces:
  1697 ;;Name               Size   Autos  Total    Cost      Usage
  1698 ;;BITCOMMON            E      0       0       0        0.0%
  1699 ;;EEDATA             100      0       0       0        0.0%
  1700 ;;NULL                 0      0       0       0        0.0%
  1701 ;;CODE                 0      0       0       0        0.0%
  1702 ;;COMMON               E      E       E       1      100.0%
  1703 ;;BITSFR0              0      0       0       1        0.0%
  1704 ;;SFR0                 0      0       0       1        0.0%
  1705 ;;BITSFR1              0      0       0       2        0.0%
  1706 ;;SFR1                 0      0       0       2        0.0%
  1707 ;;STACK                0      0       5       2        0.0%
  1708 ;;ABS                  0      0      6C       3        0.0%
  1709 ;;BITBANK0            50      0       0       4        0.0%
  1710 ;;BITSFR3              0      0       0       4        0.0%
  1711 ;;SFR3                 0      0       0       4        0.0%
  1712 ;;BANK0               50     4F      4F       5       98.8%
  1713 ;;BITSFR2              0      0       0       5        0.0%
  1714 ;;SFR2                 0      0       0       5        0.0%
  1715 ;;BITBANK1            50      0       0       6        0.0%
  1716 ;;BANK1               50      E       F       7       18.8%
  1717 ;;BITBANK3            60      0       0       8        0.0%
  1718 ;;BANK3               60      0       0       9        0.0%
  1719 ;;BITBANK2            60      0       0      10        0.0%
  1720 ;;BANK2               60      0       0      11        0.0%
  1721 ;;DATA                 0      0      71      12        0.0%
  1722                           
  1723                           
  1724 ;; *************** function _main *****************
  1725 ;; Defined at:
  1726 ;;		line 73 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\USART1\USART1.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;		None
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;  count           1   11[BANK1 ] unsigned char 
  1731 ;;  count           1   10[BANK1 ] unsigned char 
  1732 ;;  count           1   13[BANK1 ] unsigned char 
  1733 ;;  num             3    7[BANK1 ] float 
  1734 ;;  input           1   12[BANK1 ] unsigned char 
  1735 ;; Return value:  Size  Location     Type
  1736 ;;		None               void
  1737 ;; Registers used:
  1738 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1739 ;; Tracked objects:
  1740 ;;		On entry : 17F/0
  1741 ;;		On exit  : 60/20
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1744 ;;      Params:         0       0       0       0       0
  1745 ;;      Locals:         0       0       7       0       0
  1746 ;;      Temps:          0       0       0       0       0
  1747 ;;      Totals:         0       0       7       0       0
  1748 ;;Total ram usage:        7 bytes
  1749 ;; Hardware stack levels required when called:    5
  1750 ;; This function calls:
  1751 ;;		_lcd_init
  1752 ;;		_lcd_clear
  1753 ;;		_init_comms
  1754 ;;		___ftge
  1755 ;;		_putch
  1756 ;;		_printf
  1757 ;;		_lcd_goto
  1758 ;;		_sprintf
  1759 ;;		_lcd_puts
  1760 ;;		___ftadd
  1761 ;;		_getch
  1762 ;; This function is called by:
  1763 ;;		Startup code after reset
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766  0565                     _main:	
  1767                           
  1768                           ;USART1.c: 75: ANSEL = 0x00;
  1769                           
  1770                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1771  0565  1683               	bsf	3,5	;RP0=1, select bank3
  1772  0566  1703               	bsf	3,6	;RP1=1, select bank3
  1773  0567  0188               	clrf	8	;volatile
  1774                           
  1775                           ;USART1.c: 76: ANSELH = 0x00;
  1776  0568  0189               	clrf	9	;volatile
  1777                           
  1778                           ;USART1.c: 78: TRISA = 0x00; TRISB = 0x00;
  1779  0569  1303               	bcf	3,6	;RP1=0, select bank1
  1780  056A  0185               	clrf	5	;volatile
  1781  056B  0186               	clrf	6	;volatile
  1782                           
  1783                           ;USART1.c: 79: TRISC = 0x00;
  1784  056C  0187               	clrf	7	;volatile
  1785                           
  1786                           ;USART1.c: 80: TRISD = 0x00;
  1787  056D  0188               	clrf	8	;volatile
  1788                           
  1789                           ;USART1.c: 81: TRISE = 0x07;
  1790  056E  3007               	movlw	7
  1791  056F  0089               	movwf	9	;volatile
  1792                           
  1793                           ;USART1.c: 82: ADCON1 = 0x80;
  1794  0570  3080               	movlw	128
  1795  0571  009F               	movwf	31	;volatile
  1796                           
  1797                           ;USART1.c: 84: lcd_init();
  1798  0572  120A  118A  22D8   	fcall	_lcd_init
      +       120A  118A         
  1799                           
  1800                           ;USART1.c: 85: lcd_clear();
  1801  0577  120A  118A  2341   	fcall	_lcd_clear
      +       120A  118A         
  1802                           
  1803                           ;USART1.c: 87: char input;
  1804                           ;USART1.c: 88: float num=0x30;
  1805  057C  1683               	bsf	3,5	;RP0=1, select bank1
  1806  057D  1303               	bcf	3,6	;RP1=0, select bank1
  1807  057E  3040               	movlw	64
  1808  057F  01A7               	clrf	main@num^(0+128)
  1809  0580  00A8               	movwf	(main@num+1)^(0+128)
  1810  0581  3042               	movlw	66
  1811  0582  00A9               	movwf	(main@num+2)^(0+128)
  1812                           
  1813                           ;USART1.c: 89: ANSEL = 0;
  1814  0583  1703               	bsf	3,6	;RP1=1, select bank3
  1815  0584  0188               	clrf	8	;volatile
  1816                           
  1817                           ;USART1.c: 90: ANSELH = 0;
  1818  0585  0189               	clrf	9	;volatile
  1819                           
  1820                           ;USART1.c: 93: init_comms();
  1821  0586  120A  118A  27F1   	fcall	_init_comms
      +       120A  118A         
  1822  058B                     l5879:	
  1823  058B  3078               	movlw	120
  1824  058C  01F0               	clrf	?___ftge
  1825  058D  00F1               	movwf	?___ftge+1
  1826  058E  3042               	movlw	66
  1827  058F  00F2               	movwf	?___ftge+2
  1828  0590  1303               	bcf	3,6	;RP1=0, select bank1
  1829  0591                     L1:	
  1830  0591  0827               	movf	main@num^(0+128),w
  1831  0592  00F3               	movwf	?___ftge+3
  1832  0593  0828               	movf	(main@num+1)^(0+128),w
  1833  0594  00F4               	movwf	?___ftge+4
  1834  0595  0829               	movf	(main@num+2)^(0+128),w
  1835  0596  00F5               	movwf	?___ftge+5
  1836  0597  120A  158A  27AE   	fcall	___ftge
      +       120A  118A         
  1837  059C  1C03               	btfss	3,0
  1838  059D  2E56               	goto	l5927
  1839                           
  1840                           ;USART1.c: 103: for (count = 0x30; count <= 0x39; count = count +1)
  1841  059E  3030               	movlw	48
  1842  059F  00AD               	movwf	main@count^(0+128)
  1843  05A0                     l5887:	
  1844                           
  1845                           ;USART1.c: 104: {
  1846                           ;USART1.c: 105: putch(count);
  1847  05A0  082D               	movf	main@count^(0+128),w
  1848  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  1849  05A2  00A8               	movwf	?_putch
  1850  05A3  120A  118A  2188   	fcall	_putch
      +       120A  118A         
  1851                           
  1852                           ;USART1.c: 106: printf(",");
  1853  05A8  30B6               	movlw	(STR_1-__stringbase)& (0+255)
  1854  05A9  120A  118A  27E1   	fcall	_printf
      +       120A  118A         
  1855                           
  1856                           ;USART1.c: 107: lcd_goto(0x00);
  1857  05AE  3000               	movlw	0
  1858  05AF  120A  118A  22B4   	fcall	_lcd_goto
      +       120A  118A         
  1859                           
  1860                           ;USART1.c: 108: sprintf(carac,"%f",input);
  1861  05B4  30B3               	movlw	(STR_2-__stringbase)& (0+255)
  1862  05B5  1683               	bsf	3,5	;RP0=1, select bank1
  1863  05B6  00A0               	movwf	?_sprintf^(0+128)
  1864  05B7  082C               	movf	main@input^(0+128),w
  1865  05B8  00A1               	movwf	(?_sprintf^(0+128)+1)
  1866  05B9  30AE               	movlw	_carac& (0+255)
  1867  05BA  01A2               	clrf	((?_sprintf+1)^(0+128)+1)
  1868  05BB  120A  158A  2003   	fcall	_sprintf
      +       120A  118A         
  1869                           
  1870                           ;USART1.c: 109: lcd_puts(carac);
  1871  05C0  30AE               	movlw	_carac& (0+255)
  1872  05C1  00F5               	movwf	?_lcd_puts
  1873  05C2  01F6               	clrf	?_lcd_puts+1
  1874  05C3  120A  118A  22BA   	fcall	_lcd_puts
      +       120A  118A         
  1875  05C8  1683               	bsf	3,5	;RP0=1, select bank1
  1876  05C9  303A               	movlw	58
  1877  05CA  0AAD               	incf	main@count^(0+128),f
  1878  05CB  022D               	subwf	main@count^(0+128),w
  1879  05CC  1C03               	skipc
  1880  05CD  2DA0               	goto	l5887
  1881                           
  1882                           ;USART1.c: 110: }
  1883                           ;USART1.c: 112: for (count = 0x41; count <= 0x5A; count = count +1)
  1884  05CE  3041               	movlw	65
  1885  05CF  00AD               	movwf	main@count^(0+128)
  1886  05D0                     l5901:	
  1887                           
  1888                           ;USART1.c: 113: {
  1889                           ;USART1.c: 114: putch(count);
  1890  05D0  082D               	movf	main@count^(0+128),w
  1891  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  1892  05D2  00A8               	movwf	?_putch
  1893  05D3  120A  118A  2188   	fcall	_putch
      +       120A  118A         
  1894                           
  1895                           ;USART1.c: 115: printf(",");
  1896  05D8  30B6               	movlw	(STR_1-__stringbase)& (0+255)
  1897  05D9  120A  118A  27E1   	fcall	_printf
      +       120A  118A         
  1898                           
  1899                           ;USART1.c: 116: lcd_goto(0x00);
  1900  05DE  3000               	movlw	0
  1901  05DF  120A  118A  22B4   	fcall	_lcd_goto
      +       120A  118A         
  1902                           
  1903                           ;USART1.c: 117: sprintf(carac,"%f",input);
  1904  05E4  30B3               	movlw	(STR_2-__stringbase)& (0+255)
  1905  05E5  1683               	bsf	3,5	;RP0=1, select bank1
  1906  05E6  00A0               	movwf	?_sprintf^(0+128)
  1907  05E7  082C               	movf	main@input^(0+128),w
  1908  05E8  00A1               	movwf	(?_sprintf^(0+128)+1)
  1909  05E9  30AE               	movlw	_carac& (0+255)
  1910  05EA  01A2               	clrf	((?_sprintf+1)^(0+128)+1)
  1911  05EB  120A  158A  2003   	fcall	_sprintf
      +       120A  118A         
  1912                           
  1913                           ;USART1.c: 118: lcd_puts(carac);
  1914  05F0  30AE               	movlw	_carac& (0+255)
  1915  05F1  00F5               	movwf	?_lcd_puts
  1916  05F2  01F6               	clrf	?_lcd_puts+1
  1917  05F3  120A  118A  22BA   	fcall	_lcd_puts
      +       120A  118A         
  1918  05F8  1683               	bsf	3,5	;RP0=1, select bank1
  1919  05F9  305B               	movlw	91
  1920  05FA  0AAD               	incf	main@count^(0+128),f
  1921  05FB  022D               	subwf	main@count^(0+128),w
  1922  05FC  1C03               	skipc
  1923  05FD  2DD0               	goto	l5901
  1924                           
  1925                           ;USART1.c: 119: }
  1926                           ;USART1.c: 121: for (count = 0x61; count <= 0x7A; count = count +1)
  1927  05FE  3061               	movlw	97
  1928  05FF  00AD               	movwf	main@count^(0+128)
  1929  0600                     l5915:	
  1930                           
  1931                           ;USART1.c: 122: {
  1932                           ;USART1.c: 123: putch(count);
  1933  0600  082D               	movf	main@count^(0+128),w
  1934  0601  1283               	bcf	3,5	;RP0=0, select bank0
  1935  0602  00A8               	movwf	?_putch
  1936  0603  120A  118A  2188   	fcall	_putch
      +       120A  118A         
  1937                           
  1938                           ;USART1.c: 124: printf(",");
  1939  0608  30B6               	movlw	(STR_1-__stringbase)& (0+255)
  1940  0609  120A  118A  27E1   	fcall	_printf
      +       120A  118A         
  1941                           
  1942                           ;USART1.c: 125: lcd_goto(0x00);
  1943  060E  3000               	movlw	0
  1944  060F  120A  118A  22B4   	fcall	_lcd_goto
      +       120A  118A         
  1945                           
  1946                           ;USART1.c: 126: sprintf(carac,"%f",input);
  1947  0614  30B3               	movlw	(STR_2-__stringbase)& (0+255)
  1948  0615  1683               	bsf	3,5	;RP0=1, select bank1
  1949  0616  00A0               	movwf	?_sprintf^(0+128)
  1950  0617  082C               	movf	main@input^(0+128),w
  1951  0618  00A1               	movwf	(?_sprintf^(0+128)+1)
  1952  0619  30AE               	movlw	_carac& (0+255)
  1953  061A  01A2               	clrf	((?_sprintf+1)^(0+128)+1)
  1954  061B  120A  158A  2003   	fcall	_sprintf
      +       120A  118A         
  1955                           
  1956                           ;USART1.c: 127: lcd_puts(carac);
  1957  0620  30AE               	movlw	_carac& (0+255)
  1958  0621  00F5               	movwf	?_lcd_puts
  1959  0622  01F6               	clrf	?_lcd_puts+1
  1960  0623  120A  118A  22BA   	fcall	_lcd_puts
      +       120A  118A         
  1961  0628  1683               	bsf	3,5	;RP0=1, select bank1
  1962  0629  307B               	movlw	123
  1963  062A  0AAD               	incf	main@count^(0+128),f
  1964  062B  022D               	subwf	main@count^(0+128),w
  1965  062C  1C03               	skipc
  1966  062D  2E00               	goto	l5915
  1967  062E  1283               	bcf	3,5	;RP0=0, select bank0
  1968  062F  3080               	movlw	128
  1969  0630  01BC               	clrf	?___ftadd
  1970  0631  00BD               	movwf	?___ftadd+1
  1971  0632  303F               	movlw	63
  1972  0633  00BE               	movwf	?___ftadd+2
  1973  0634  1683               	bsf	3,5	;RP0=1, select bank1
  1974  0635  0827               	movf	main@num^(0+128),w
  1975  0636  1283               	bcf	3,5	;RP0=0, select bank0
  1976  0637  00BF               	movwf	?___ftadd+3
  1977  0638  1683               	bsf	3,5	;RP0=1, select bank1
  1978  0639  0828               	movf	(main@num+1)^(0+128),w
  1979  063A  1283               	bcf	3,5	;RP0=0, select bank0
  1980  063B  00C0               	movwf	?___ftadd+4
  1981  063C  1683               	bsf	3,5	;RP0=1, select bank1
  1982  063D  0829               	movf	(main@num+2)^(0+128),w
  1983  063E  1283               	bcf	3,5	;RP0=0, select bank0
  1984  063F  00C1               	movwf	?___ftadd+5
  1985  0640  120A  118A  271F   	fcall	___ftadd
      +       120A  118A         
  1986  0645  083C               	movf	?___ftadd,w
  1987  0646  1683               	bsf	3,5	;RP0=1, select bank1
  1988  0647  00A7               	movwf	main@num^(0+128)
  1989  0648  1283               	bcf	3,5	;RP0=0, select bank0
  1990  0649  083D               	movf	?___ftadd+1,w
  1991  064A  1683               	bsf	3,5	;RP0=1, select bank1
  1992  064B  00A8               	movwf	(main@num+1)^(0+128)
  1993  064C  1283               	bcf	3,5	;RP0=0, select bank0
  1994  064D  083E               	movf	?___ftadd+2,w
  1995  064E  1683               	bsf	3,5	;RP0=1, select bank1
  1996  064F  00A9               	movwf	(main@num+2)^(0+128)
  1997  0650  3078               	movlw	120
  1998  0651  01F0               	clrf	?___ftge
  1999  0652  00F1               	movwf	?___ftge+1
  2000  0653  3042               	movlw	66
  2001  0654  00F2               	movwf	?___ftge+2
  2002  0655  2D91               	goto	L1
  2003  0656                     l5927:	
  2004                           
  2005                           ;USART1.c: 128: }
  2006                           ;USART1.c: 129: }
  2007                           ;USART1.c: 131: printf("\r\nDa clic a una tecla:\r\n");
  2008  0656  3077               	movlw	(STR_7-__stringbase)& (0+255)
  2009  0657  120A  118A  27E1   	fcall	_printf
      +       120A  118A         
  2010                           
  2011                           ;USART1.c: 132: lcd_goto(0x00);
  2012  065C  3000               	movlw	0
  2013  065D  120A  118A  22B4   	fcall	_lcd_goto
      +       120A  118A         
  2014                           
  2015                           ;USART1.c: 133: lcd_puts("La tecla es:");
  2016  0662  30A3               	movlw	low (STR_8-__stringbase)
  2017  0663  00F5               	movwf	?_lcd_puts
  2018  0664  3080               	movlw	128
  2019  0665  00F6               	movwf	?_lcd_puts+1
  2020  0666  120A  118A  22BA   	fcall	_lcd_puts
      +       120A  118A         
  2021                           
  2022                           ;USART1.c: 134: input = getch();
  2023  066B  120A  118A  2184   	fcall	_getch
      +       120A  118A         
  2024  0670  1683               	bsf	3,5	;RP0=1, select bank1
  2025  0671  00AC               	movwf	main@input^(0+128)
  2026                           
  2027                           ;USART1.c: 136: for (count = 0x30; count <= 0x39; count = count +1)
  2028  0672  3030               	movlw	48
  2029  0673  00AD               	movwf	main@count^(0+128)
  2030  0674                     l5941:	
  2031                           
  2032                           ;USART1.c: 137: {
  2033                           ;USART1.c: 138: if(input==count){
  2034  0674  082C               	movf	main@input^(0+128),w
  2035  0675  062D               	xorwf	main@count^(0+128),w
  2036  0676  1D03               	skipz
  2037  0677  2E9B               	goto	l5949
  2038                           
  2039                           ;USART1.c: 139: printf("La tecla es:[%c]\r\n",input);
  2040  0678  082C               	movf	main@input^(0+128),w
  2041  0679  00A0               	movwf	?_printf^(0+128)
  2042  067A  3090               	movlw	(STR_9-__stringbase)& (0+255)
  2043  067B  01A1               	clrf	(?_printf+1)^(0+128)
  2044  067C  120A  118A  27E1   	fcall	_printf
      +       120A  118A         
  2045                           
  2046                           ;USART1.c: 140: sprintf(carac,"%f",input);
  2047  0681  30B3               	movlw	(STR_2-__stringbase)& (0+255)
  2048  0682  1683               	bsf	3,5	;RP0=1, select bank1
  2049  0683  00A0               	movwf	?_sprintf^(0+128)
  2050  0684  082C               	movf	main@input^(0+128),w
  2051  0685  00A1               	movwf	(?_sprintf^(0+128)+1)
  2052  0686  30AE               	movlw	_carac& (0+255)
  2053  0687  01A2               	clrf	((?_sprintf+1)^(0+128)+1)
  2054  0688  120A  158A  2003   	fcall	_sprintf
      +       120A  118A         
  2055                           
  2056                           ;USART1.c: 141: lcd_goto(0x08);
  2057  068D  3008               	movlw	8
  2058  068E  120A  118A  22B4   	fcall	_lcd_goto
      +       120A  118A         
  2059                           
  2060                           ;USART1.c: 142: lcd_puts(carac);
  2061  0693  30AE               	movlw	_carac& (0+255)
  2062  0694  00F5               	movwf	?_lcd_puts
  2063  0695  01F6               	clrf	?_lcd_puts+1
  2064  0696  120A  118A  22BA   	fcall	_lcd_puts
      +       120A  118A         
  2065  069B                     l5949:	
  2066                           ;USART1.c: 143: }else;
  2067                           
  2068  069B  1683               	bsf	3,5	;RP0=1, select bank1
  2069  069C  303A               	movlw	58
  2070  069D  0AAD               	incf	main@count^(0+128),f
  2071  069E  022D               	subwf	main@count^(0+128),w
  2072  069F  1C03               	skipc
  2073  06A0  2E74               	goto	l5941
  2074                           
  2075                           ;USART1.c: 144: }
  2076                           ;USART1.c: 146: for (char count = 0x41; count <= 0x5A; count = count +1)
  2077  06A1  3041               	movlw	65
  2078  06A2  00AA               	movwf	main@count_1835^(0+128)
  2079  06A3                     l5957:	
  2080                           
  2081                           ;USART1.c: 147: {
  2082                           ;USART1.c: 148: if(input==count){
  2083  06A3  082C               	movf	main@input^(0+128),w
  2084  06A4  062A               	xorwf	main@count_1835^(0+128),w
  2085  06A5  1D03               	skipz
  2086  06A6  2ECA               	goto	l5965
  2087                           
  2088                           ;USART1.c: 149: printf("La tecla es:[%c]\r\n",input);
  2089  06A7  082C               	movf	main@input^(0+128),w
  2090  06A8  00A0               	movwf	?_printf^(0+128)
  2091  06A9  3090               	movlw	(STR_9-__stringbase)& (0+255)
  2092  06AA  01A1               	clrf	(?_printf+1)^(0+128)
  2093  06AB  120A  118A  27E1   	fcall	_printf
      +       120A  118A         
  2094                           
  2095                           ;USART1.c: 150: sprintf(carac,"%c",input);
  2096  06B0  30B0               	movlw	(STR_12-__stringbase)& (0+255)
  2097  06B1  1683               	bsf	3,5	;RP0=1, select bank1
  2098  06B2  00A0               	movwf	?_sprintf^(0+128)
  2099  06B3  082C               	movf	main@input^(0+128),w
  2100  06B4  00A1               	movwf	(?_sprintf^(0+128)+1)
  2101  06B5  30AE               	movlw	_carac& (0+255)
  2102  06B6  01A2               	clrf	((?_sprintf+1)^(0+128)+1)
  2103  06B7  120A  158A  2003   	fcall	_sprintf
      +       120A  118A         
  2104                           
  2105                           ;USART1.c: 151: lcd_goto(0x08);
  2106  06BC  3008               	movlw	8
  2107  06BD  120A  118A  22B4   	fcall	_lcd_goto
      +       120A  118A         
  2108                           
  2109                           ;USART1.c: 152: lcd_puts(carac);
  2110  06C2  30AE               	movlw	_carac& (0+255)
  2111  06C3  00F5               	movwf	?_lcd_puts
  2112  06C4  01F6               	clrf	?_lcd_puts+1
  2113  06C5  120A  118A  22BA   	fcall	_lcd_puts
      +       120A  118A         
  2114  06CA                     l5965:	
  2115                           ;USART1.c: 153: }else;
  2116                           
  2117  06CA  1683               	bsf	3,5	;RP0=1, select bank1
  2118  06CB  305B               	movlw	91
  2119  06CC  0AAA               	incf	main@count_1835^(0+128),f
  2120  06CD  022A               	subwf	main@count_1835^(0+128),w
  2121  06CE  1C03               	skipc
  2122  06CF  2EA3               	goto	l5957
  2123                           
  2124                           ;USART1.c: 154: }
  2125                           ;USART1.c: 156: for (char count = 0x61; count <= 0x7A; count = count +1)
  2126  06D0  3061               	movlw	97
  2127  06D1  00AB               	movwf	main@count_1838^(0+128)
  2128  06D2                     l5973:	
  2129                           
  2130                           ;USART1.c: 157: {
  2131                           ;USART1.c: 158: if(input==count){
  2132  06D2  082C               	movf	main@input^(0+128),w
  2133  06D3  062B               	xorwf	main@count_1838^(0+128),w
  2134  06D4  1D03               	skipz
  2135  06D5  2EF9               	goto	l5981
  2136                           
  2137                           ;USART1.c: 159: printf("La tecla es:[%c]\r\n",input);
  2138  06D6  082C               	movf	main@input^(0+128),w
  2139  06D7  00A0               	movwf	?_printf^(0+128)
  2140  06D8  3090               	movlw	(STR_9-__stringbase)& (0+255)
  2141  06D9  01A1               	clrf	(?_printf+1)^(0+128)
  2142  06DA  120A  118A  27E1   	fcall	_printf
      +       120A  118A         
  2143                           
  2144                           ;USART1.c: 160: sprintf(carac,"%c",input);
  2145  06DF  30B0               	movlw	(STR_12-__stringbase)& (0+255)
  2146  06E0  1683               	bsf	3,5	;RP0=1, select bank1
  2147  06E1  00A0               	movwf	?_sprintf^(0+128)
  2148  06E2  082C               	movf	main@input^(0+128),w
  2149  06E3  00A1               	movwf	(?_sprintf^(0+128)+1)
  2150  06E4  30AE               	movlw	_carac& (0+255)
  2151  06E5  01A2               	clrf	((?_sprintf+1)^(0+128)+1)
  2152  06E6  120A  158A  2003   	fcall	_sprintf
      +       120A  118A         
  2153                           
  2154                           ;USART1.c: 161: lcd_goto(0x08);
  2155  06EB  3008               	movlw	8
  2156  06EC  120A  118A  22B4   	fcall	_lcd_goto
      +       120A  118A         
  2157                           
  2158                           ;USART1.c: 162: lcd_puts(carac);
  2159  06F1  30AE               	movlw	_carac& (0+255)
  2160  06F2  00F5               	movwf	?_lcd_puts
  2161  06F3  01F6               	clrf	?_lcd_puts+1
  2162  06F4  120A  118A  22BA   	fcall	_lcd_puts
      +       120A  118A         
  2163  06F9                     l5981:	
  2164                           ;USART1.c: 163: }else;
  2165                           
  2166  06F9  1683               	bsf	3,5	;RP0=1, select bank1
  2167  06FA  307B               	movlw	123
  2168  06FB  0AAB               	incf	main@count_1838^(0+128),f
  2169  06FC  022B               	subwf	main@count_1838^(0+128),w
  2170  06FD  1803               	btfsc	3,0
  2171  06FE  2D8B               	goto	l5879
  2172  06FF  2ED2               	goto	l5973
  2173  0700                     __end_of_main:	
  2174                           
  2175                           	psect	text560
  2176  0803                     __ptext560:	
  2177 ;; =============== function _main ends ============
  2178                           
  2179                           
  2180 ;; *************** function _sprintf *****************
  2181 ;; Defined at:
  2182 ;;		line 14 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\sprintf.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;  wh              1    wreg     PTR unsigned char 
  2185 ;;		 -> carac(1), 
  2186 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  2187 ;;		 -> STR_14(3), STR_12(3), STR_10(3), STR_6(3), 
  2188 ;;		 -> STR_4(3), STR_2(3), 
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;  wh              1    3[BANK1 ] PTR unsigned char 
  2191 ;;		 -> carac(1), 
  2192 ;;  pb              2    5[BANK1 ] struct __prbuf
  2193 ;;  ap              1    4[BANK1 ] PTR void [1]
  2194 ;;		 -> ?_sprintf(2), ?_printf(2), 
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  2    0[BANK1 ] int 
  2197 ;; Registers used:
  2198 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2199 ;; Tracked objects:
  2200 ;;		On entry : 60/20
  2201 ;;		On exit  : 160/20
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2204 ;;      Params:         0       0       3       0       0
  2205 ;;      Locals:         0       0       4       0       0
  2206 ;;      Temps:          0       0       0       0       0
  2207 ;;      Totals:         0       0       7       0       0
  2208 ;;Total ram usage:        7 bytes
  2209 ;; Hardware stack levels used:    1
  2210 ;; Hardware stack levels required when called:    4
  2211 ;; This function calls:
  2212 ;;		__doprnt
  2213 ;; This function is called by:
  2214 ;;		_main
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217  0803                     _sprintf:	
  2218                           
  2219                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2220                           ;sprintf@wh stored from wreg
  2221  0803  00A3               	movwf	sprintf@wh^(0+128)
  2222  0804  00A5               	movwf	sprintf@pb^(0+128)
  2223  0805  30A1               	movlw	(?_sprintf+1)& (0+255)
  2224  0806  01A6               	clrf	(sprintf@pb+1)^(0+128)
  2225  0807  00A4               	movwf	sprintf@ap^(0+128)
  2226  0808  0820               	movf	sprintf@f^(0+128),w
  2227  0809  1283               	bcf	3,5	;RP0=0, select bank0
  2228  080A  00D2               	movwf	?__doprnt
  2229  080B  30A4               	movlw	sprintf@ap& (0+255)
  2230  080C  00D3               	movwf	?__doprnt+1
  2231  080D  30A5               	movlw	sprintf@pb& (0+255)
  2232  080E  2015               	fcall	__doprnt
  2233  080F  1683               	bsf	3,5	;RP0=1, select bank1
  2234  0810  0825               	movf	sprintf@pb^(0+128),w
  2235  0811  0084               	movwf	4
  2236  0812  1383               	bcf	3,7	;select IRP bank0
  2237  0813  0180               	clrf	0
  2238  0814  0008               	return
  2239  0815                     __end_of_sprintf:	
  2240  0815                     __ptext563:	
  2241 ;; =============== function _lcd_init ends ============
  2242                           
  2243                           
  2244 ;; *************** function __doprnt *****************
  2245 ;; Defined at:
  2246 ;;		line 455 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;  pb              1    wreg     PTR struct __prbuf
  2249 ;;		 -> sprintf@pb(2), printf@pb(2), 
  2250 ;;  f               1   50[BANK0 ] PTR const unsigned char 
  2251 ;;		 -> STR_14(3), STR_13(19), STR_12(3), STR_11(19), 
  2252 ;;		 -> STR_10(3), STR_9(19), STR_7(25), STR_6(3), 
  2253 ;;		 -> STR_5(2), STR_4(3), STR_3(2), STR_2(3), 
  2254 ;;		 -> STR_1(2), 
  2255 ;;  ap              1   51[BANK0 ] PTR PTR void 
  2256 ;;		 -> sprintf@ap(1), printf@ap(1), 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  pb              1   78[BANK0 ] PTR struct __prbuf
  2259 ;;		 -> sprintf@pb(2), printf@pb(2), 
  2260 ;;  _val            4   68[BANK0 ] struct .
  2261 ;;  fval            3   74[BANK0 ] struct .
  2262 ;;  integ           3   65[BANK0 ] struct .
  2263 ;;  ival            3    0        struct .
  2264 ;;  exp             2   72[BANK0 ] int 
  2265 ;;  prec            2   63[BANK0 ] int 
  2266 ;;  flag            2   61[BANK0 ] unsigned short 
  2267 ;;  width           2    0        int 
  2268 ;;  c               1   77[BANK0 ] char 
  2269 ;;  d               1    0        unsigned char 
  2270 ;; Return value:  Size  Location     Type
  2271 ;;                  2   50[BANK0 ] int 
  2272 ;; Registers used:
  2273 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2274 ;; Tracked objects:
  2275 ;;		On entry : 60/0
  2276 ;;		On exit  : 60/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2279 ;;      Params:         0       2       0       0       0
  2280 ;;      Locals:         0      22       0       0       0
  2281 ;;      Temps:          0       5       0       0       0
  2282 ;;      Totals:         0      29       0       0       0
  2283 ;;Total ram usage:       29 bytes
  2284 ;; Hardware stack levels used:    1
  2285 ;; Hardware stack levels required when called:    3
  2286 ;; This function calls:
  2287 ;;		Absolute function
  2288 ;;		_putch
  2289 ;;		___ftge
  2290 ;;		___ftneg
  2291 ;;		___wmul
  2292 ;;		___awdiv
  2293 ;;		_scale
  2294 ;;		___ftmul
  2295 ;;		_fround
  2296 ;;		___ftadd
  2297 ;;		___fttol
  2298 ;;		__div_to_l_
  2299 ;;		__tdiv_to_l_
  2300 ;;		___lltoft
  2301 ;;		___ftsub
  2302 ;;		___lldiv
  2303 ;;		___llmod
  2304 ;; This function is called by:
  2305 ;;		_printf
  2306 ;;		_sprintf
  2307 ;; This function uses a non-reentrant model
  2308 ;;
  2309  0815                     __doprnt:	
  2310                           
  2311                           ; Regs used in __doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2312                           ;__doprnt@pb stored from wreg
  2313  0815  00EE               	movwf	__doprnt@pb
  2314  0816                     l5793:	
  2315  0816  276D               	call	PL30	;select bank 0
  2316  0817  0852               	movf	__doprnt@f,w
  2317  0818  0AD2               	incf	__doprnt@f,f
  2318  0819  0084               	movwf	4
  2319  081A  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  2320  081F  00ED               	movwf	__doprnt@c
  2321  0820  08ED               	movf	__doprnt@c,f
  2322  0821  1903               	btfsc	3,2
  2323  0822  2BCE               	goto	l5795
  2324  0823  086D               	movf	__doprnt@c,w
  2325  0824  3A25               	xorlw	37
  2326  0825  1903               	skipnz
  2327  0826  283C               	goto	l5605
  2328  0827                     L8:	
  2329  0827  086E               	movf	__doprnt@pb,w
  2330  0828  3E01               	addlw	1
  2331  0829  0084               	movwf	4
  2332  082A  1383               	bcf	3,7	;select IRP bank0
  2333  082B  0880               	movf	0,f
  2334  082C  1903               	skipnz
  2335  082D  2836               	goto	l5601
  2336  082E  086D               	movf	__doprnt@c,w
  2337  082F  270D               	fcall	PL13	;call to abstracted procedure
  2338  0830  120A  118A  2700   	fcall	fptable
      +       120A  158A         
  2339  0835  2816               	goto	l5793
  2340  0836                     l5601:	
  2341  0836  086E               	movf	__doprnt@pb,w
  2342  0837  0084               	movwf	4
  2343  0838  0800               	movf	0,w
  2344  0839  0084               	movwf	4
  2345  083A  086D               	movf	__doprnt@c,w
  2346  083B  2BC9               	goto	L5
  2347  083C                     l5605:	
  2348  083C  01DD               	clrf	__doprnt@flag
  2349  083D  01DE               	clrf	__doprnt@flag+1
  2350  083E  284D               	goto	l5619
  2351  083F                     l1153:	
  2352  083F  155E               	bsf	__doprnt@flag+1,2
  2353  0840  2860               	goto	l5621
  2354  0841                     l5607:	
  2355  0841  0853               	movf	__doprnt@ap,w
  2356  0842  0084               	movwf	4
  2357  0843  1383               	bcf	3,7	;select IRP bank0
  2358  0844  0800               	movf	0,w
  2359  0845  00D4               	movwf	??__doprnt
  2360  0846  3002               	movlw	2
  2361  0847  0780               	addwf	0,f
  2362  0848  0854               	movf	??__doprnt,w
  2363  0849  0084               	movwf	4
  2364  084A  0800               	movf	0,w
  2365  084B  00ED               	movwf	__doprnt@c
  2366  084C                     l5609:	
  2367  084C  2827               	goto	L8
  2368  084D                     l5619:	
  2369  084D  0852               	movf	__doprnt@f,w
  2370  084E  0AD2               	incf	__doprnt@f,f
  2371  084F  0084               	movwf	4
  2372  0850  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  2373  0855  00ED               	movwf	__doprnt@c
  2374                           
  2375                           ; Switch size 1, requested type "space"
  2376                           ; Number of cases is 3, Range of values is 0 to 102
  2377                           ; switch strategies available:
  2378                           ; Name         Instructions Cycles
  2379                           ; simple_byte           10     6 (average)
  2380                           ; jumptable            260     6 (fixed)
  2381                           ; rangetable           107     6 (fixed)
  2382                           ; spacedrange          212     9 (fixed)
  2383                           ; locatedrange         103     3 (fixed)
  2384                           ;	Chosen strategy is simple_byte
  2385  0856  3A00               	xorlw	0	; case 0
  2386  0857  1903               	skipnz
  2387  0858  2BCE               	goto	l5795
  2388  0859  3A63               	xorlw	99	; case 99
  2389  085A  1903               	skipnz
  2390  085B  2841               	goto	l5607
  2391  085C  3A05               	xorlw	5	; case 102
  2392  085D  1903               	skipnz
  2393  085E  283F               	goto	l1153
  2394  085F  284C               	goto	l5609
  2395  0860                     l5621:	
  2396  0860  3007               	movlw	7
  2397  0861  01D4               	clrf	??__doprnt
  2398  0862  055E               	andwf	__doprnt@flag+1,w
  2399  0863  00D5               	movwf	??__doprnt+1
  2400  0864  0454               	iorwf	??__doprnt,w
  2401  0865  1903               	skipnz
  2402  0866  2BB3               	goto	l5783
  2403  0867  3006               	movlw	6
  2404  0868  00DF               	movwf	__doprnt@prec
  2405  0869  01E0               	clrf	__doprnt@prec+1
  2406  086A  0853               	movf	__doprnt@ap,w
  2407  086B  0084               	movwf	4
  2408  086C  1383               	bcf	3,7	;select IRP bank0
  2409  086D  0800               	movf	0,w
  2410  086E  00D4               	movwf	??__doprnt
  2411  086F  3003               	movlw	3
  2412  0870  0780               	addwf	0,f
  2413  0871  0854               	movf	??__doprnt,w
  2414  0872  0084               	movwf	4
  2415  0873  0800               	movf	0,w
  2416  0874  00EA               	movwf	__doprnt@fval
  2417  0875  0A84               	incf	4,f
  2418  0876  0800               	movf	0,w
  2419  0877  00EB               	movwf	__doprnt@fval+1
  2420  0878  0A84               	incf	4,f
  2421  0879  0800               	movf	0,w
  2422  087A  00EC               	movwf	__doprnt@fval+2
  2423  087B  086A               	movf	__doprnt@fval,w
  2424  087C  00F0               	movwf	?___ftge
  2425  087D  086B               	movf	__doprnt@fval+1,w
  2426  087E  00F1               	movwf	?___ftge+1
  2427  087F  086C               	movf	__doprnt@fval+2,w
  2428  0880  00F2               	movwf	?___ftge+2
  2429  0881  01F3               	clrf	?___ftge+3
  2430  0882  01F4               	clrf	?___ftge+4
  2431  0883  01F5               	clrf	?___ftge+5
  2432  0884  27AE  120A  158A   	fcall	___ftge
  2433  0887  1803               	btfsc	3,0
  2434  0888  289A               	goto	l5633
  2435  0889  086A               	movf	__doprnt@fval,w
  2436  088A  00F0               	movwf	?___ftneg
  2437  088B  086B               	movf	__doprnt@fval+1,w
  2438  088C  00F1               	movwf	?___ftneg+1
  2439  088D  086C               	movf	__doprnt@fval+2,w
  2440  088E  00F2               	movwf	?___ftneg+2
  2441  088F  27DA  120A  158A   	fcall	___ftneg
  2442  0892  0870               	movf	?___ftneg,w
  2443  0893  00EA               	movwf	__doprnt@fval
  2444  0894  0871               	movf	?___ftneg+1,w
  2445  0895  00EB               	movwf	__doprnt@fval+1
  2446  0896  0872               	movf	?___ftneg+2,w
  2447  0897  00EC               	movwf	__doprnt@fval+2
  2448  0898  3003               	movlw	3
  2449  0899  04DD               	iorwf	__doprnt@flag,f
  2450  089A                     l5633:	
  2451  089A  01E8               	clrf	__doprnt@exp
  2452  089B  01E9               	clrf	__doprnt@exp+1
  2453  089C  086C               	movf	__doprnt@fval+2,w
  2454  089D  046B               	iorwf	__doprnt@fval+1,w
  2455  089E  046A               	iorwf	__doprnt@fval,w
  2456  089F  1903               	skipnz
  2457  08A0  2924               	goto	l5667
  2458  08A1  306A               	movlw	low __doprnt@fval
  2459  08A2  0084               	movwf	4
  2460  08A3  0800               	movf	0,w
  2461  08A4  00D4               	movwf	??__doprnt
  2462  08A5  0A84               	incf	4,f
  2463  08A6  0800               	movf	0,w
  2464  08A7  00D5               	movwf	??__doprnt+1
  2465  08A8  0A84               	incf	4,f
  2466  08A9  0800               	movf	0,w
  2467  08AA  00D6               	movwf	??__doprnt+2
  2468  08AB  0A84               	incf	4,f
  2469  08AC  0800               	movf	0,w
  2470  08AD  00D7               	movwf	??__doprnt+3
  2471  08AE  300F               	movlw	15
  2472  08AF                     u2735:	
  2473  08AF  1003               	clrc
  2474  08B0  0CD7               	rrf	??__doprnt+3,f
  2475  08B1  0CD6               	rrf	??__doprnt+2,f
  2476  08B2  0CD5               	rrf	??__doprnt+1,f
  2477  08B3  0CD4               	rrf	??__doprnt,f
  2478  08B4  3EFF               	addlw	-1
  2479  08B5  1D03               	skipz
  2480  08B6  28AF               	goto	u2735
  2481  08B7  0855               	movf	??__doprnt+1,w
  2482  08B8  00E9               	movwf	__doprnt@exp+1
  2483  08B9  0854               	movf	??__doprnt,w
  2484  08BA  00E8               	movwf	__doprnt@exp
  2485  08BB  3082               	movlw	-126
  2486  08BC  01E9               	clrf	__doprnt@exp+1
  2487  08BD  07E8               	addwf	__doprnt@exp,f
  2488  08BE  1C03               	skipc
  2489  08BF  03E9               	decf	__doprnt@exp+1,f
  2490  08C0  30FF               	movlw	-1
  2491  08C1  07E8               	addwf	__doprnt@exp,f
  2492  08C2  1C03               	skipc
  2493  08C3  03E9               	decf	__doprnt@exp+1,f
  2494  08C4  3003               	movlw	3
  2495  08C5  00F0               	movwf	?___wmul
  2496  08C6  01F1               	clrf	?___wmul+1
  2497  08C7  0869               	movf	__doprnt@exp+1,w
  2498  08C8  00F3               	movwf	?___wmul+3
  2499  08C9  0868               	movf	__doprnt@exp,w
  2500  08CA  00F2               	movwf	?___wmul+2
  2501  08CB  269F  120A  158A   	fcall	___wmul
  2502  08CE  0871               	movf	?___wmul+1,w
  2503  08CF  00E9               	movwf	__doprnt@exp+1
  2504  08D0  0870               	movf	?___wmul,w
  2505  08D1  00E8               	movwf	__doprnt@exp
  2506  08D2  300A               	movlw	10
  2507  08D3  00F6               	movwf	?___awdiv
  2508  08D4  01F7               	clrf	?___awdiv+1
  2509  08D5  0869               	movf	__doprnt@exp+1,w
  2510  08D6  00F9               	movwf	?___awdiv+3
  2511  08D7  0868               	movf	__doprnt@exp,w
  2512  08D8  00F8               	movwf	?___awdiv+2
  2513  08D9  2562  120A  158A   	fcall	___awdiv
  2514  08DC  0877               	movf	?___awdiv+1,w
  2515  08DD  00E9               	movwf	__doprnt@exp+1
  2516  08DE  0876               	movf	?___awdiv,w
  2517  08DF  00E8               	movwf	__doprnt@exp
  2518  08E0  1FE9               	btfss	__doprnt@exp+1,7
  2519  08E1  28E6               	goto	l5653
  2520  08E2  30FF               	movlw	-1
  2521  08E3  07E8               	addwf	__doprnt@exp,f
  2522  08E4  1C03               	skipc
  2523  08E5  03E9               	decf	__doprnt@exp+1,f
  2524  08E6                     l5653:	
  2525  08E6  0368               	decf	__doprnt@exp,w
  2526  08E7  3AFF               	xorlw	255
  2527  08E8  23D1  120A  158A   	fcall	_scale
  2528  08EB  2753  120A  158A   	fcall	PL24	;call to abstracted procedure
  2529  08EE  00AD               	movwf	?___ftmul
  2530  08EF  086B               	movf	__doprnt@fval+1,w
  2531  08F0  00AE               	movwf	?___ftmul+1
  2532  08F1  086C               	movf	__doprnt@fval+2,w
  2533  08F2  00AF               	movwf	?___ftmul+2
  2534  08F3  0861               	movf	__doprnt@integ,w
  2535  08F4  00B0               	movwf	?___ftmul+3
  2536  08F5  0862               	movf	__doprnt@integ+1,w
  2537  08F6  00B1               	movwf	?___ftmul+4
  2538  08F7  0863               	movf	__doprnt@integ+2,w
  2539  08F8  00B2               	movwf	?___ftmul+5
  2540  08F9  25E4  120A  158A   	fcall	___ftmul
  2541  08FC  082D               	movf	?___ftmul,w
  2542  08FD  00E1               	movwf	__doprnt@integ
  2543  08FE  082E               	movf	?___ftmul+1,w
  2544  08FF  00E2               	movwf	__doprnt@integ+1
  2545  0900  082F               	movf	?___ftmul+2,w
  2546  0901  00E3               	movwf	__doprnt@integ+2
  2547  0902  271C  120A  158A   	fcall	PL15	;call to abstracted procedure
  2548  0905  3080               	movlw	128
  2549  0906  01F3               	clrf	?___ftge+3
  2550  0907  00F4               	movwf	?___ftge+4
  2551  0908  303F               	movlw	63
  2552  0909  00F5               	movwf	?___ftge+5
  2553  090A  27AE  120A  158A   	fcall	___ftge
  2554  090D  1803               	btfsc	3,0
  2555  090E  2914               	goto	l5661
  2556  090F  30FF               	movlw	-1
  2557  0910  07E8               	addwf	__doprnt@exp,f
  2558  0911  1C03               	skipc
  2559  0912  03E9               	decf	__doprnt@exp+1,f
  2560  0913  2924               	goto	l5667
  2561  0914                     l5661:	
  2562  0914  271C  120A  158A   	fcall	PL15	;call to abstracted procedure
  2563  0917  3020               	movlw	32
  2564  0918  01F3               	clrf	?___ftge+3
  2565  0919  00F4               	movwf	?___ftge+4
  2566  091A  3041               	movlw	65
  2567  091B  00F5               	movwf	?___ftge+5
  2568  091C  27AE  120A  158A   	fcall	___ftge
  2569  091F  1C03               	btfss	3,0
  2570  0920  2924               	goto	l5667
  2571  0921  0AE8               	incf	__doprnt@exp,f
  2572  0922  1903               	skipnz
  2573  0923  0AE9               	incf	__doprnt@exp+1,f
  2574  0924                     l5667:	
  2575  0924  3006               	movlw	6
  2576  0925  120A  118A  2414   	fcall	_fround
      +       120A  158A         
  2577  092A  0848               	movf	?_fround,w
  2578  092B  00BC               	movwf	?___ftadd
  2579  092C  0849               	movf	?_fround+1,w
  2580  092D  00BD               	movwf	?___ftadd+1
  2581  092E  084A               	movf	?_fround+2,w
  2582  092F  00BE               	movwf	?___ftadd+2
  2583  0930  086A               	movf	__doprnt@fval,w
  2584  0931  00BF               	movwf	?___ftadd+3
  2585  0932  086B               	movf	__doprnt@fval+1,w
  2586  0933  00C0               	movwf	?___ftadd+4
  2587  0934  086C               	movf	__doprnt@fval+2,w
  2588  0935  00C1               	movwf	?___ftadd+5
  2589  0936  120A  118A  271F   	fcall	___ftadd
      +       120A  158A         
  2590  093B  083C               	movf	?___ftadd,w
  2591  093C  00EA               	movwf	__doprnt@fval
  2592  093D  083D               	movf	?___ftadd+1,w
  2593  093E  00EB               	movwf	__doprnt@fval+1
  2594  093F  083E               	movf	?___ftadd+2,w
  2595  0940  00EC               	movwf	__doprnt@fval+2
  2596  0941  0869               	movf	__doprnt@exp+1,w
  2597  0942  3A80               	xorlw	128
  2598  0943  00FF               	movwf	127
  2599  0944  3080               	movlw	128
  2600  0945  027F               	subwf	127,w
  2601  0946  1D03               	skipz
  2602  0947  294A               	goto	u2775
  2603  0948  300A               	movlw	10
  2604  0949  0268               	subwf	__doprnt@exp,w
  2605  094A                     u2775:	
  2606  094A  1803               	skipnc
  2607  094B  296A               	goto	l5677
  2608  094C  276D               	call	PL30	;select bank 0
  2609  094D  086C               	movf	__doprnt@fval+2,w
  2610  094E  046B               	iorwf	__doprnt@fval+1,w
  2611  094F  046A               	iorwf	__doprnt@fval,w
  2612  0950  1903               	skipnz
  2613  0951  29A8               	goto	l5693
  2614  0952  086A               	movf	__doprnt@fval,w
  2615  0953  2762               	fcall	PL28	;call to abstracted procedure
  2616  0954  120A  118A  21DB   	fcall	___fttol
      +       120A  158A         
  2617  0959  0823               	movf	?___fttol+3,w
  2618  095A  0422               	iorwf	?___fttol+2,w
  2619  095B  0421               	iorwf	?___fttol+1,w
  2620  095C  0420               	iorwf	?___fttol,w
  2621  095D  1D03               	skipz
  2622  095E  29A8               	goto	l5693
  2623  095F  0869               	movf	__doprnt@exp+1,w
  2624  0960  3A80               	xorlw	128
  2625  0961  00FF               	movwf	127
  2626  0962  3080               	movlw	128
  2627  0963  027F               	subwf	127,w
  2628  0964  1D03               	skipz
  2629  0965  2968               	goto	u2805
  2630  0966  3002               	movlw	2
  2631  0967  0268               	subwf	__doprnt@exp,w
  2632  0968                     u2805:	
  2633  0968  1C03               	skipc
  2634  0969  29A8               	goto	l5693
  2635  096A                     l5677:	
  2636  096A  276D               	call	PL30	;select bank 0
  2637  096B  271C  120A  158A   	fcall	PL15	;call to abstracted procedure
  2638  096E  3070               	movlw	112
  2639  096F  00F3               	movwf	?___ftge+3
  2640  0970  3089               	movlw	137
  2641  0971  00F4               	movwf	?___ftge+4
  2642  0972  3040               	movlw	64
  2643  0973  00F5               	movwf	?___ftge+5
  2644  0974  27AE  120A  158A   	fcall	___ftge
  2645  0977  1803               	btfsc	3,0
  2646  0978  297B               	goto	l5681
  2647  0979  30F7               	movlw	-9
  2648  097A  297C               	goto	L2
  2649  097B                     l5681:	
  2650  097B  30F8               	movlw	-8
  2651  097C                     L2:	
  2652  097C  07E8               	addwf	__doprnt@exp,f
  2653  097D  1C03               	skipc
  2654  097E  03E9               	decf	__doprnt@exp+1,f
  2655  097F  0868               	movf	__doprnt@exp,w
  2656  0980  23D1  120A  158A   	fcall	_scale
  2657  0983  2753               	fcall	PL24	;call to abstracted procedure
  2658  0984  00F0               	movwf	?__tdiv_to_l_
  2659  0985  086B               	movf	__doprnt@fval+1,w
  2660  0986  00F1               	movwf	?__tdiv_to_l_+1
  2661  0987  086C               	movf	__doprnt@fval+2,w
  2662  0988  00F2               	movwf	?__tdiv_to_l_+2
  2663  0989  0861               	movf	__doprnt@integ,w
  2664  098A  00F3               	movwf	?__tdiv_to_l_+3
  2665  098B  0862               	movf	__doprnt@integ+1,w
  2666  098C  00F4               	movwf	?__tdiv_to_l_+4
  2667  098D  0863               	movf	__doprnt@integ+2,w
  2668  098E  00F5               	movwf	?__tdiv_to_l_+5
  2669  098F  120A  118A  223D   	fcall	__tdiv_to_l_
      +       120A  158A         
  2670  0994  0873               	movf	?__tdiv_to_l_+3,w
  2671  0995  00DC               	movwf	__doprnt$1919+3
  2672  0996  0872               	movf	?__tdiv_to_l_+2,w
  2673  0997  00DB               	movwf	__doprnt$1919+2
  2674  0998  0871               	movf	?__tdiv_to_l_+1,w
  2675  0999  00DA               	movwf	__doprnt$1919+1
  2676  099A  0870               	movf	?__tdiv_to_l_,w
  2677  099B  00D9               	movwf	__doprnt$1919
  2678  099C  085C               	movf	__doprnt$1919+3,w
  2679  099D  00E7               	movwf	__doprnt@_val+3
  2680  099E  085B               	movf	__doprnt$1919+2,w
  2681  099F  00E6               	movwf	__doprnt@_val+2
  2682  09A0  085A               	movf	__doprnt$1919+1,w
  2683  09A1  00E5               	movwf	__doprnt@_val+1
  2684  09A2  0859               	movf	__doprnt$1919,w
  2685  09A3  00E4               	movwf	__doprnt@_val
  2686  09A4  01EA               	clrf	__doprnt@fval
  2687  09A5  01EB               	clrf	__doprnt@fval+1
  2688  09A6  01EC               	clrf	__doprnt@fval+2
  2689  09A7  29D6               	goto	l5697
  2690  09A8                     l5693:	
  2691  09A8  276D               	call	PL30	;select bank 0
  2692  09A9  086A               	movf	__doprnt@fval,w
  2693  09AA  2762               	fcall	PL28	;call to abstracted procedure
  2694  09AB  120A  118A  21DB   	fcall	___fttol
      +       120A  158A         
  2695  09B0  2743  120A  158A   	fcall	PL22	;call to abstracted procedure
  2696  09B3  00E4               	movwf	__doprnt@_val
  2697  09B4  0867               	movf	__doprnt@_val+3,w
  2698  09B5  00FB               	movwf	?___lltoft+3
  2699  09B6  0866               	movf	__doprnt@_val+2,w
  2700  09B7  00FA               	movwf	?___lltoft+2
  2701  09B8  0865               	movf	__doprnt@_val+1,w
  2702  09B9  00F9               	movwf	?___lltoft+1
  2703  09BA  0864               	movf	__doprnt@_val,w
  2704  09BB  00F8               	movwf	?___lltoft
  2705  09BC  27E2               	fcall	___lltoft
  2706  09BD  0878               	movf	?___lltoft,w
  2707  09BE  00C8               	movwf	?___ftsub
  2708  09BF  0879               	movf	?___lltoft+1,w
  2709  09C0  00C9               	movwf	?___ftsub+1
  2710  09C1  087A               	movf	?___lltoft+2,w
  2711  09C2  00CA               	movwf	?___ftsub+2
  2712  09C3  086A               	movf	__doprnt@fval,w
  2713  09C4  00CB               	movwf	?___ftsub+3
  2714  09C5  086B               	movf	__doprnt@fval+1,w
  2715  09C6  00CC               	movwf	?___ftsub+4
  2716  09C7  086C               	movf	__doprnt@fval+2,w
  2717  09C8  00CD               	movwf	?___ftsub+5
  2718  09C9  120A  118A  2709   	fcall	___ftsub
      +       120A  158A         
  2719  09CE  0848               	movf	?___ftsub,w
  2720  09CF  00EA               	movwf	__doprnt@fval
  2721  09D0  0849               	movf	?___ftsub+1,w
  2722  09D1  00EB               	movwf	__doprnt@fval+1
  2723  09D2  084A               	movf	?___ftsub+2,w
  2724  09D3  00EC               	movwf	__doprnt@fval+2
  2725  09D4  01E8               	clrf	__doprnt@exp
  2726  09D5  01E9               	clrf	__doprnt@exp+1
  2727  09D6                     l5697:	
  2728  09D6  01ED               	clrf	__doprnt@c
  2729  09D7  0AED               	incf	__doprnt@c,f
  2730  09D8                     l5703:	
  2731  09D8  26B8               	fcall	PL3	;call to abstracted procedure
  2732  09D9  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  2733  09DE  00D5               	movwf	??__doprnt+1
  2734  09DF  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  2735  09E4  00D6               	movwf	??__doprnt+2
  2736  09E5  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  2737  09EA  00D7               	movwf	??__doprnt+3
  2738  09EB  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  2739  09F0  00D8               	movwf	??__doprnt+4
  2740  09F1  0267               	subwf	__doprnt@_val+3,w
  2741  09F2  1D03               	skipz
  2742  09F3  29FE               	goto	u2825
  2743  09F4  0857               	movf	??__doprnt+3,w
  2744  09F5  0266               	subwf	__doprnt@_val+2,w
  2745  09F6  1D03               	skipz
  2746  09F7  29FE               	goto	u2825
  2747  09F8  0856               	movf	??__doprnt+2,w
  2748  09F9  0265               	subwf	__doprnt@_val+1,w
  2749  09FA  1D03               	skipz
  2750  09FB  29FE               	goto	u2825
  2751  09FC  0855               	movf	??__doprnt+1,w
  2752  09FD  0264               	subwf	__doprnt@_val,w
  2753  09FE                     u2825:	
  2754  09FE  1C03               	btfss	3,0
  2755  09FF  2A05               	goto	l5711
  2756  0A00  0AED               	incf	__doprnt@c,f
  2757  0A01  086D               	movf	__doprnt@c,w
  2758  0A02  3A0A               	xorlw	10
  2759  0A03  1D03               	skipz
  2760  0A04  29D8               	goto	l5703
  2761  0A05                     l5711:	
  2762  0A05  085D               	movf	__doprnt@flag,w
  2763  0A06  3903               	andlw	3
  2764  0A07  1903               	btfsc	3,2
  2765  0A08  2A7F               	goto	l5729
  2766  0A09  086E               	movf	__doprnt@pb,w
  2767  0A0A  3E01               	addlw	1
  2768  0A0B  0084               	movwf	4
  2769  0A0C  1383               	bcf	3,7	;select IRP bank0
  2770  0A0D  0880               	movf	0,f
  2771  0A0E  1903               	skipnz
  2772  0A0F  2A18               	goto	l5717
  2773  0A10  302D               	movlw	45
  2774  0A11  270D               	fcall	PL13	;call to abstracted procedure
  2775  0A12  120A  118A  2700   	fcall	fptable
      +       120A  158A         
  2776  0A17  2A7F               	goto	l5729
  2777  0A18                     l5717:	
  2778  0A18  2768  120A  158A   	fcall	PL29	;call to abstracted procedure
  2779  0A1B  2A7B               	goto	L7
  2780  0A1C                     l5721:	
  2781  0A1C  273B  120A  158A   	fcall	PL21	;call to abstracted procedure
  2782  0A1F  1903               	skipnz
  2783  0A20  2A51               	goto	L9
  2784  0A21  01A1               	clrf	?___llmod+1
  2785  0A22  01A2               	clrf	?___llmod+2
  2786  0A23  01A3               	clrf	?___llmod+3
  2787  0A24  26B8               	fcall	PL3	;call to abstracted procedure
  2788  0A25  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  2789  0A2A  00F0               	movwf	?___lldiv
  2790  0A2B  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  2791  0A30  00F1               	movwf	?___lldiv+1
  2792  0A31  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  2793  0A36  00F2               	movwf	?___lldiv+2
  2794  0A37  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  2795  0A3C  26C1               	fcall	PL4	;call to abstracted procedure
  2796  0A3D  120A  118A  2193   	fcall	___lldiv
      +       120A  158A         
  2797  0A42  26CB  120A  158A   	fcall	PL5	;call to abstracted procedure
  2798  0A45  2770  120A  158A   	fcall	___llmod
  2799  0A48  0820               	movf	?___llmod,w
  2800  0A49  3E30               	addlw	48
  2801  0A4A  270D               	fcall	PL13	;call to abstracted procedure
  2802  0A4B  120A  118A  2700   	fcall	fptable
      +       120A  158A         
  2803  0A50  2A7F               	goto	l5729
  2804  0A51                     L9:	
  2805  0A51  01A1               	clrf	?___llmod+1
  2806  0A52  01A2               	clrf	?___llmod+2
  2807  0A53  01A3               	clrf	?___llmod+3
  2808  0A54  26B8               	fcall	PL3	;call to abstracted procedure
  2809  0A55  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  2810  0A5A  00F0               	movwf	?___lldiv
  2811  0A5B  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  2812  0A60  00F1               	movwf	?___lldiv+1
  2813  0A61  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  2814  0A66  00F2               	movwf	?___lldiv+2
  2815  0A67  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  2816  0A6C  26C1               	fcall	PL4	;call to abstracted procedure
  2817  0A6D  120A  118A  2193   	fcall	___lldiv
      +       120A  158A         
  2818  0A72  26CB  120A  158A   	fcall	PL5	;call to abstracted procedure
  2819  0A75  2770  120A  158A   	fcall	___llmod
  2820  0A78  2713  120A  158A   	fcall	PL14	;call to abstracted procedure
  2821  0A7B                     L7:	
  2822  0A7B  0080               	movwf	0
  2823  0A7C  086E               	movf	__doprnt@pb,w
  2824  0A7D  0084               	movwf	4
  2825  0A7E  0A80               	incf	0,f
  2826  0A7F                     l5729:	
  2827  0A7F  276D               	call	PL30	;select bank 0
  2828  0A80  03ED               	decf	__doprnt@c,f
  2829  0A81  0F6D               	incfsz	__doprnt@c,w
  2830  0A82  2A1C               	goto	l5721
  2831  0A83                     l5741:	
  2832  0A83  0869               	movf	__doprnt@exp+1,w
  2833  0A84  3A80               	xorlw	128
  2834  0A85  00FF               	movwf	127
  2835  0A86  3080               	movlw	128
  2836  0A87  027F               	subwf	127,w
  2837  0A88  1D03               	skipz
  2838  0A89  2A8C               	goto	u2895
  2839  0A8A  3001               	movlw	1
  2840  0A8B  0268               	subwf	__doprnt@exp,w
  2841  0A8C                     u2895:	
  2842  0A8C  1C03               	btfss	3,0
  2843  0A8D  2AAA               	goto	l5743
  2844  0A8E  276D               	call	PL30	;select bank 0
  2845  0A8F  086E               	movf	__doprnt@pb,w
  2846  0A90  3E01               	addlw	1
  2847  0A91  0084               	movwf	4
  2848  0A92  1383               	bcf	3,7	;select IRP bank0
  2849  0A93  0880               	movf	0,f
  2850  0A94  1903               	skipnz
  2851  0A95  2A9E               	goto	l5735
  2852  0A96  3030               	movlw	48
  2853  0A97  270D               	fcall	PL13	;call to abstracted procedure
  2854  0A98  120A  118A  2700   	fcall	fptable
      +       120A  158A         
  2855  0A9D  2AA4               	goto	l5739
  2856  0A9E                     l5735:	
  2857  0A9E  086E               	movf	__doprnt@pb,w
  2858  0A9F  0084               	movwf	4
  2859  0AA0  0800               	movf	0,w
  2860  0AA1  275B  120A  158A   	fcall	PL25	;call to abstracted procedure
  2861  0AA4                     l5739:	
  2862  0AA4  30FF               	movlw	-1
  2863  0AA5  276D               	call	PL30	;select bank 0
  2864  0AA6  07E8               	addwf	__doprnt@exp,f
  2865  0AA7  1C03               	skipc
  2866  0AA8  03E9               	decf	__doprnt@exp+1,f
  2867  0AA9  2A83               	goto	l5741
  2868  0AAA                     l5743:	
  2869  0AAA  276D               	call	PL30	;select bank 0
  2870  0AAB  0860               	movf	__doprnt@prec+1,w
  2871  0AAC  3A80               	xorlw	128
  2872  0AAD  00FF               	movwf	127
  2873  0AAE  3080               	movlw	128
  2874  0AAF  027F               	subwf	127,w
  2875  0AB0  1D03               	skipz
  2876  0AB1  2AB4               	goto	u2905
  2877  0AB2  3009               	movlw	9
  2878  0AB3  025F               	subwf	__doprnt@prec,w
  2879  0AB4                     u2905:	
  2880  0AB4  1C03               	skipc
  2881  0AB5  2AB9               	goto	l5747
  2882  0AB6  3008               	movlw	8
  2883  0AB7  276D               	call	PL30	;select bank 0
  2884  0AB8  2ABB               	goto	L3
  2885  0AB9                     l5747:	
  2886  0AB9  276D               	call	PL30	;select bank 0
  2887  0ABA  085F               	movf	__doprnt@prec,w
  2888  0ABB                     L3:	
  2889  0ABB  00ED               	movwf	__doprnt@c
  2890  0ABC  00D4               	movwf	??__doprnt
  2891  0ABD  01D5               	clrf	??__doprnt+1
  2892  0ABE  1BD4               	btfsc	??__doprnt,7
  2893  0ABF  03D5               	decf	??__doprnt+1,f
  2894  0AC0  02DF               	subwf	__doprnt@prec,f
  2895  0AC1  0855               	movf	??__doprnt+1,w
  2896  0AC2  1C03               	skipc
  2897  0AC3  03E0               	decf	__doprnt@prec+1,f
  2898  0AC4  02E0               	subwf	__doprnt@prec+1,f
  2899  0AC5  086D               	movf	__doprnt@c,w
  2900  0AC6  1903               	btfsc	3,2
  2901  0AC7  2AE0               	goto	l5757
  2902  0AC8  086E               	movf	__doprnt@pb,w
  2903  0AC9  3E01               	addlw	1
  2904  0ACA  0084               	movwf	4
  2905  0ACB  1383               	bcf	3,7	;select IRP bank0
  2906  0ACC  0880               	movf	0,f
  2907  0ACD  1903               	skipnz
  2908  0ACE  2AD7               	goto	l5753
  2909  0ACF  302E               	movlw	46
  2910  0AD0  270D               	fcall	PL13	;call to abstracted procedure
  2911  0AD1  120A  118A  2700   	fcall	fptable
      +       120A  158A         
  2912  0AD6  2AE0               	goto	l5757
  2913  0AD7                     l5753:	
  2914  0AD7  086E               	movf	__doprnt@pb,w
  2915  0AD8  0084               	movwf	4
  2916  0AD9  0800               	movf	0,w
  2917  0ADA  0084               	movwf	4
  2918  0ADB  302E               	movlw	46
  2919  0ADC  0080               	movwf	0
  2920  0ADD  086E               	movf	__doprnt@pb,w
  2921  0ADE  0084               	movwf	4
  2922  0ADF  0A80               	incf	0,f
  2923  0AE0                     l5757:	
  2924  0AE0  276D               	call	PL30	;select bank 0
  2925  0AE1  086D               	movf	__doprnt@c,w
  2926  0AE2  23D1  120A  158A   	fcall	_scale
  2927  0AE5  083C               	movf	?_scale,w
  2928  0AE6  00B0               	movwf	?___ftmul+3
  2929  0AE7  083D               	movf	?_scale+1,w
  2930  0AE8  00B1               	movwf	?___ftmul+4
  2931  0AE9  083E               	movf	?_scale+2,w
  2932  0AEA  00B2               	movwf	?___ftmul+5
  2933  0AEB  086A               	movf	__doprnt@fval,w
  2934  0AEC  00AD               	movwf	?___ftmul
  2935  0AED  086B               	movf	__doprnt@fval+1,w
  2936  0AEE  00AE               	movwf	?___ftmul+1
  2937  0AEF  086C               	movf	__doprnt@fval+2,w
  2938  0AF0  00AF               	movwf	?___ftmul+2
  2939  0AF1  25E4               	fcall	___ftmul
  2940  0AF2  082D               	movf	?___ftmul,w
  2941  0AF3  00A0               	movwf	?___fttol
  2942  0AF4  082E               	movf	?___ftmul+1,w
  2943  0AF5  00A1               	movwf	?___fttol+1
  2944  0AF6  082F               	movf	?___ftmul+2,w
  2945  0AF7  00A2               	movwf	?___fttol+2
  2946  0AF8  120A  118A  21DB   	fcall	___fttol
      +       120A  158A         
  2947  0AFD  2743  120A  158A   	fcall	PL22	;call to abstracted procedure
  2948  0B00  2B90               	goto	L4
  2949  0B01                     l5759:	
  2950  0B01  273B  120A  158A   	fcall	PL21	;call to abstracted procedure
  2951  0B04  1903               	skipnz
  2952  0B05  2B36               	goto	L10
  2953  0B06  01A1               	clrf	?___llmod+1
  2954  0B07  01A2               	clrf	?___llmod+2
  2955  0B08  01A3               	clrf	?___llmod+3
  2956  0B09  26B8               	fcall	PL3	;call to abstracted procedure
  2957  0B0A  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  2958  0B0F  00F0               	movwf	?___lldiv
  2959  0B10  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  2960  0B15  00F1               	movwf	?___lldiv+1
  2961  0B16  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  2962  0B1B  00F2               	movwf	?___lldiv+2
  2963  0B1C  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  2964  0B21  26C1               	fcall	PL4	;call to abstracted procedure
  2965  0B22  120A  118A  2193   	fcall	___lldiv
      +       120A  158A         
  2966  0B27  26CB  120A  158A   	fcall	PL5	;call to abstracted procedure
  2967  0B2A  2770  120A  158A   	fcall	___llmod
  2968  0B2D  0820               	movf	?___llmod,w
  2969  0B2E  3E30               	addlw	48
  2970  0B2F  270D               	fcall	PL13	;call to abstracted procedure
  2971  0B30  120A  118A  2700   	fcall	fptable
      +       120A  158A         
  2972  0B35  2B64               	goto	l5767
  2973  0B36                     L10:	
  2974  0B36  01A1               	clrf	?___llmod+1
  2975  0B37  01A2               	clrf	?___llmod+2
  2976  0B38  01A3               	clrf	?___llmod+3
  2977  0B39  26B8               	fcall	PL3	;call to abstracted procedure
  2978  0B3A  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  2979  0B3F  00F0               	movwf	?___lldiv
  2980  0B40  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  2981  0B45  00F1               	movwf	?___lldiv+1
  2982  0B46  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  2983  0B4B  00F2               	movwf	?___lldiv+2
  2984  0B4C  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  2985  0B51  26C1               	fcall	PL4	;call to abstracted procedure
  2986  0B52  120A  118A  2193   	fcall	___lldiv
      +       120A  158A         
  2987  0B57  26CB  120A  158A   	fcall	PL5	;call to abstracted procedure
  2988  0B5A  2770  120A  158A   	fcall	___llmod
  2989  0B5D  2713  120A  158A   	fcall	PL14	;call to abstracted procedure
  2990  0B60  0080               	movwf	0
  2991  0B61  086E               	movf	__doprnt@pb,w
  2992  0B62  0084               	movwf	4
  2993  0B63  0A80               	incf	0,f
  2994  0B64                     l5767:	
  2995  0B64  276D               	call	PL30	;select bank 0
  2996  0B65  26B8               	fcall	PL3	;call to abstracted procedure
  2997  0B66  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  2998  0B6B  00A0               	movwf	?___llmod
  2999  0B6C  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3000  0B71  00A1               	movwf	?___llmod+1
  3001  0B72  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3002  0B77  00A2               	movwf	?___llmod+2
  3003  0B78  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3004  0B7D  00A3               	movwf	?___llmod+3
  3005  0B7E  0867               	movf	__doprnt@_val+3,w
  3006  0B7F  00A7               	movwf	?___llmod+7
  3007  0B80  0866               	movf	__doprnt@_val+2,w
  3008  0B81  00A6               	movwf	?___llmod+6
  3009  0B82  0865               	movf	__doprnt@_val+1,w
  3010  0B83  00A5               	movwf	?___llmod+5
  3011  0B84  0864               	movf	__doprnt@_val,w
  3012  0B85  00A4               	movwf	?___llmod+4
  3013  0B86  2770  120A  158A   	fcall	___llmod
  3014  0B89  0823               	movf	?___llmod+3,w
  3015  0B8A  00E7               	movwf	__doprnt@_val+3
  3016  0B8B  0822               	movf	?___llmod+2,w
  3017  0B8C  00E6               	movwf	__doprnt@_val+2
  3018  0B8D  0821               	movf	?___llmod+1,w
  3019  0B8E  00E5               	movwf	__doprnt@_val+1
  3020  0B8F  0820               	movf	?___llmod,w
  3021  0B90                     L4:	
  3022  0B90  00E4               	movwf	__doprnt@_val
  3023  0B91  03ED               	decf	__doprnt@c,f
  3024  0B92  0F6D               	incfsz	__doprnt@c,w
  3025  0B93  2B01               	goto	l5759
  3026  0B94                     l5781:	
  3027  0B94  0860               	movf	__doprnt@prec+1,w
  3028  0B95  045F               	iorwf	__doprnt@prec,w
  3029  0B96  1903               	btfsc	3,2
  3030  0B97  2816               	goto	l5793
  3031  0B98  086E               	movf	__doprnt@pb,w
  3032  0B99  3E01               	addlw	1
  3033  0B9A  0084               	movwf	4
  3034  0B9B  1383               	bcf	3,7	;select IRP bank0
  3035  0B9C  0880               	movf	0,f
  3036  0B9D  1903               	skipnz
  3037  0B9E  2BA7               	goto	l5775
  3038  0B9F  3030               	movlw	48
  3039  0BA0  270D               	fcall	PL13	;call to abstracted procedure
  3040  0BA1  120A  118A  2700   	fcall	fptable
      +       120A  158A         
  3041  0BA6  2BAD               	goto	l5779
  3042  0BA7                     l5775:	
  3043  0BA7  086E               	movf	__doprnt@pb,w
  3044  0BA8  0084               	movwf	4
  3045  0BA9  0800               	movf	0,w
  3046  0BAA  275B  120A  158A   	fcall	PL25	;call to abstracted procedure
  3047  0BAD                     l5779:	
  3048  0BAD  30FF               	movlw	-1
  3049  0BAE  276D               	call	PL30	;select bank 0
  3050  0BAF  07DF               	addwf	__doprnt@prec,f
  3051  0BB0  1C03               	skipc
  3052  0BB1  03E0               	decf	__doprnt@prec+1,f
  3053  0BB2  2B94               	goto	l5781
  3054  0BB3                     l5783:	
  3055  0BB3  085D               	movf	__doprnt@flag,w
  3056  0BB4  3903               	andlw	3
  3057  0BB5  1903               	btfsc	3,2
  3058  0BB6  2816               	goto	l5793
  3059  0BB7  086E               	movf	__doprnt@pb,w
  3060  0BB8  3E01               	addlw	1
  3061  0BB9  0084               	movwf	4
  3062  0BBA  1383               	bcf	3,7	;select IRP bank0
  3063  0BBB  0880               	movf	0,f
  3064  0BBC  1903               	skipnz
  3065  0BBD  2BC6               	goto	l5789
  3066  0BBE  302D               	movlw	45
  3067  0BBF  270D               	fcall	PL13	;call to abstracted procedure
  3068  0BC0  120A  118A  2700   	fcall	fptable
      +       120A  158A         
  3069  0BC5  2816               	goto	l5793
  3070  0BC6                     l5789:	
  3071  0BC6  2768  120A  158A   	fcall	PL29	;call to abstracted procedure
  3072  0BC9                     L5:	
  3073  0BC9  0080               	movwf	0
  3074  0BCA  086E               	movf	__doprnt@pb,w
  3075  0BCB  0084               	movwf	4
  3076  0BCC  0A80               	incf	0,f
  3077  0BCD  2816               	goto	l5793
  3078  0BCE                     l5795:	
  3079  0BCE  01D2               	clrf	?__doprnt
  3080  0BCF  01D3               	clrf	?__doprnt+1
  3081  0BD0  0008               	return
  3082  0BD1                     __end_of__doprnt:	
  3083  0BD1                     __ptext568:	
  3084 ;; =============== function ___ftsub ends ============
  3085                           
  3086                           
  3087 ;; *************** function _scale *****************
  3088 ;; Defined at:
  3089 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;  scl             1    wreg     char 
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;  scl             1   38[BANK0 ] char 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  3   28[BANK0 ] char 
  3096 ;; Registers used:
  3097 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3098 ;; Tracked objects:
  3099 ;;		On entry : 60/0
  3100 ;;		On exit  : 60/0
  3101 ;;		Unchanged: FFF9F/0
  3102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3103 ;;      Params:         0       3       0       0       0
  3104 ;;      Locals:         0       4       0       0       0
  3105 ;;      Temps:          0       4       0       0       0
  3106 ;;      Totals:         0      11       0       0       0
  3107 ;;Total ram usage:       11 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; Hardware stack levels required when called:    2
  3110 ;; This function calls:
  3111 ;;		___awmod
  3112 ;;		___awdiv
  3113 ;;		___ftmul
  3114 ;;		___bmul
  3115 ;; This function is called by:
  3116 ;;		__doprnt
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119  0BD1                     _scale:	
  3120                           
  3121                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3122                           ;scale@scl stored from wreg
  3123  0BD1  00C6               	movwf	scale@scl
  3124  0BD2  1FC6               	btfss	scale@scl,7
  3125  0BD3  2C9C               	goto	l5553
  3126  0BD4  09C6               	comf	scale@scl,f
  3127  0BD5  0AC6               	incf	scale@scl,f
  3128  0BD6  0846               	movf	scale@scl,w
  3129  0BD7  3A80               	xorlw	128
  3130  0BD8  3E12               	addlw	-238
  3131  0BD9  1C03               	skipc
  3132  0BDA  2C40               	goto	l5543
  3133  0BDB  300A               	movlw	10
  3134  0BDC  26F8  120A  158A   	fcall	PL10	;call to abstracted procedure
  3135  0BDF  25A7  120A  158A   	fcall	___awmod
  3136  0BE2  0871               	movf	?___awmod+1,w
  3137  0BE3  00F9               	movwf	?___awdiv+3
  3138  0BE4  0870               	movf	?___awmod,w
  3139  0BE5  00F8               	movwf	?___awdiv+2
  3140  0BE6  2562  120A  158A   	fcall	___awdiv
  3141  0BE9  274B               	fcall	PL23	;call to abstracted procedure
  3142  0BEA  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  3143  0BEB  0084               	movwf	4
  3144  0BEC  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3145  0BF1  00AD               	movwf	?___ftmul
  3146  0BF2  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3147  0BF7  00AE               	movwf	?___ftmul+1
  3148  0BF8  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3149  0BFD  2723  120A  158A   	fcall	PL16	;call to abstracted procedure
  3150  0C00  1BF8               	btfsc	?___awdiv+2,7
  3151  0C01  03F9               	decf	?___awdiv+3,f
  3152  0C02  2562  120A  158A   	fcall	___awdiv
  3153  0C05  26F0               	fcall	PL9	;call to abstracted procedure
  3154  0C06  3E37               	addlw	low ((__npowers_-__stringbase+54))
  3155  0C07  0084               	movwf	4
  3156  0C08  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3157  0C0D  00B0               	movwf	?___ftmul+3
  3158  0C0E  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3159  0C13  00B1               	movwf	?___ftmul+4
  3160  0C14  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3161  0C19  00B2               	movwf	?___ftmul+5
  3162  0C1A  25E4  120A  158A   	fcall	___ftmul
  3163  0C1D  26DB  120A  158A   	fcall	PL7	;call to abstracted procedure
  3164  0C20  1BF2               	btfsc	?___awmod+2,7
  3165  0C21  03F3               	decf	?___awmod+3,f
  3166  0C22  25A7  120A  158A   	fcall	___awmod
  3167  0C25  26E8               	fcall	PL8	;call to abstracted procedure
  3168  0C26  3E01               	addlw	low (__npowers_-__stringbase)
  3169  0C27  0084               	movwf	4
  3170  0C28  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3171  0C2D  00AD               	movwf	?___ftmul
  3172  0C2E  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3173  0C33  00AE               	movwf	?___ftmul+1
  3174  0C34  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3175  0C39  272B  120A  158A   	fcall	PL18	;call to abstracted procedure
  3176  0C3C  25E4  120A  158A   	fcall	___ftmul
  3177  0C3F  2ED4               	ljmp	PL6	;call to abstracted procedure
  3178  0C40                     l5543:	
  3179  0C40  0846               	movf	scale@scl,w
  3180  0C41  3A80               	xorlw	128
  3181  0C42  3E75               	addlw	-139
  3182  0C43  1C03               	skipc
  3183  0C44  2C85               	goto	l5549
  3184  0C45  300A               	movlw	10
  3185  0C46  00F0               	movwf	?___awmod
  3186  0C47  01F1               	clrf	?___awmod+1
  3187  0C48  0846               	movf	scale@scl,w
  3188  0C49  00F2               	movwf	?___awmod+2
  3189  0C4A  01F3               	clrf	?___awmod+3
  3190  0C4B  1BF2               	btfsc	?___awmod+2,7
  3191  0C4C  03F3               	decf	?___awmod+3,f
  3192  0C4D  25A7  120A  158A   	fcall	___awmod
  3193  0C50  26E8               	fcall	PL8	;call to abstracted procedure
  3194  0C51  3E01               	addlw	low (__npowers_-__stringbase)
  3195  0C52  0084               	movwf	4
  3196  0C53  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3197  0C58  00AD               	movwf	?___ftmul
  3198  0C59  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3199  0C5E  00AE               	movwf	?___ftmul+1
  3200  0C5F  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3201  0C64  2733  120A  158A   	fcall	PL20	;call to abstracted procedure
  3202  0C67  1BF8               	btfsc	?___awdiv+2,7
  3203  0C68  03F9               	decf	?___awdiv+3,f
  3204  0C69  2562  120A  158A   	fcall	___awdiv
  3205  0C6C  26F0               	fcall	PL9	;call to abstracted procedure
  3206  0C6D  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  3207  0C6E  0084               	movwf	4
  3208  0C6F  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3209  0C74  00B0               	movwf	?___ftmul+3
  3210  0C75  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3211  0C7A  00B1               	movwf	?___ftmul+4
  3212  0C7B  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3213  0C80  00B2               	movwf	?___ftmul+5
  3214  0C81  25E4  120A  158A   	fcall	___ftmul
  3215  0C84  2ED4               	ljmp	PL6	;call to abstracted procedure
  3216  0C85                     l5549:	
  3217  0C85  3003               	movlw	3
  3218  0C86  00F9               	movwf	?___bmul
  3219  0C87  0846               	movf	scale@scl,w
  3220  0C88  2653               	fcall	___bmul
  3221  0C89  3E01               	addlw	low (__npowers_-__stringbase)
  3222  0C8A  0084               	movwf	4
  3223  0C8B  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3224  0C90  00BC               	movwf	?_scale
  3225  0C91  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3226  0C96  00BD               	movwf	?_scale+1
  3227  0C97  120A  118A  200D   	fcall	stringdir
  3228  0C9A  00BE               	movwf	?_scale+2
  3229  0C9B  0008               	return
  3230  0C9C                     l5553:	
  3231  0C9C  0846               	movf	scale@scl,w
  3232  0C9D  3A80               	xorlw	128
  3233  0C9E  3E12               	addlw	-238
  3234  0C9F  1C03               	skipc
  3235  0CA0  2D06               	goto	l5561
  3236  0CA1  300A               	movlw	10
  3237  0CA2  26F8  120A  158A   	fcall	PL10	;call to abstracted procedure
  3238  0CA5  25A7  120A  158A   	fcall	___awmod
  3239  0CA8  0871               	movf	?___awmod+1,w
  3240  0CA9  00F9               	movwf	?___awdiv+3
  3241  0CAA  0870               	movf	?___awmod,w
  3242  0CAB  00F8               	movwf	?___awdiv+2
  3243  0CAC  2562  120A  158A   	fcall	___awdiv
  3244  0CAF  274B               	fcall	PL23	;call to abstracted procedure
  3245  0CB0  3E43               	addlw	low ((__powers_-__stringbase+27))
  3246  0CB1  0084               	movwf	4
  3247  0CB2  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3248  0CB7  00AD               	movwf	?___ftmul
  3249  0CB8  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3250  0CBD  00AE               	movwf	?___ftmul+1
  3251  0CBE  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3252  0CC3  2723  120A  158A   	fcall	PL16	;call to abstracted procedure
  3253  0CC6  1BF8               	btfsc	?___awdiv+2,7
  3254  0CC7  03F9               	decf	?___awdiv+3,f
  3255  0CC8  2562  120A  158A   	fcall	___awdiv
  3256  0CCB  26F0               	fcall	PL9	;call to abstracted procedure
  3257  0CCC  3E5E               	addlw	low ((__powers_-__stringbase+54))
  3258  0CCD  0084               	movwf	4
  3259  0CCE  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3260  0CD3  00B0               	movwf	?___ftmul+3
  3261  0CD4  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3262  0CD9  00B1               	movwf	?___ftmul+4
  3263  0CDA  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3264  0CDF  00B2               	movwf	?___ftmul+5
  3265  0CE0  25E4  120A  158A   	fcall	___ftmul
  3266  0CE3  26DB  120A  158A   	fcall	PL7	;call to abstracted procedure
  3267  0CE6  1BF2               	btfsc	?___awmod+2,7
  3268  0CE7  03F3               	decf	?___awmod+3,f
  3269  0CE8  25A7  120A  158A   	fcall	___awmod
  3270  0CEB  26E8               	fcall	PL8	;call to abstracted procedure
  3271  0CEC  3E28               	addlw	low (__powers_-__stringbase)
  3272  0CED  0084               	movwf	4
  3273  0CEE  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3274  0CF3  00AD               	movwf	?___ftmul
  3275  0CF4  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3276  0CF9  00AE               	movwf	?___ftmul+1
  3277  0CFA  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3278  0CFF  272B  120A  158A   	fcall	PL18	;call to abstracted procedure
  3279  0D02  25E4  120A  158A   	fcall	___ftmul
  3280  0D05  2ED4               	ljmp	PL6	;call to abstracted procedure
  3281  0D06                     l5561:	
  3282  0D06  0846               	movf	scale@scl,w
  3283  0D07  3A80               	xorlw	128
  3284  0D08  3E75               	addlw	-139
  3285  0D09  1C03               	skipc
  3286  0D0A  2D4B               	goto	l5567
  3287  0D0B  300A               	movlw	10
  3288  0D0C  00F0               	movwf	?___awmod
  3289  0D0D  01F1               	clrf	?___awmod+1
  3290  0D0E  0846               	movf	scale@scl,w
  3291  0D0F  00F2               	movwf	?___awmod+2
  3292  0D10  01F3               	clrf	?___awmod+3
  3293  0D11  1BF2               	btfsc	?___awmod+2,7
  3294  0D12  03F3               	decf	?___awmod+3,f
  3295  0D13  25A7  120A  158A   	fcall	___awmod
  3296  0D16  26E8               	fcall	PL8	;call to abstracted procedure
  3297  0D17  3E28               	addlw	low (__powers_-__stringbase)
  3298  0D18  0084               	movwf	4
  3299  0D19  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3300  0D1E  00AD               	movwf	?___ftmul
  3301  0D1F  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3302  0D24  00AE               	movwf	?___ftmul+1
  3303  0D25  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3304  0D2A  2733  120A  158A   	fcall	PL20	;call to abstracted procedure
  3305  0D2D  1BF8               	btfsc	?___awdiv+2,7
  3306  0D2E  03F9               	decf	?___awdiv+3,f
  3307  0D2F  2562  120A  158A   	fcall	___awdiv
  3308  0D32  26F0               	fcall	PL9	;call to abstracted procedure
  3309  0D33  3E43               	addlw	low ((__powers_-__stringbase+27))
  3310  0D34  0084               	movwf	4
  3311  0D35  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3312  0D3A  00B0               	movwf	?___ftmul+3
  3313  0D3B  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3314  0D40  00B1               	movwf	?___ftmul+4
  3315  0D41  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3316  0D46  00B2               	movwf	?___ftmul+5
  3317  0D47  25E4  120A  158A   	fcall	___ftmul
  3318  0D4A  2ED4               	ljmp	PL6	;call to abstracted procedure
  3319  0D4B                     l5567:	
  3320  0D4B  3003               	movlw	3
  3321  0D4C  00F9               	movwf	?___bmul
  3322  0D4D  0846               	movf	scale@scl,w
  3323  0D4E  2653               	fcall	___bmul
  3324  0D4F  3E28               	addlw	low (__powers_-__stringbase)
  3325  0D50  0084               	movwf	4
  3326  0D51  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3327  0D56  00BC               	movwf	?_scale
  3328  0D57  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  3329  0D5C  00BD               	movwf	?_scale+1
  3330  0D5D  120A  118A  200D   	fcall	stringdir
  3331  0D60  00BE               	movwf	?_scale+2
  3332  0D61  0008               	return
  3333  0D62                     __end_of_scale:	
  3334  0D62                     __ptext580:	
  3335 ;; =============== function ___llmod ends ============
  3336                           
  3337                           
  3338 ;; *************** function ___awdiv *****************
  3339 ;; Defined at:
  3340 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awdiv.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  divisor         2    6[COMMON] int 
  3343 ;;  dividend        2    8[COMMON] int 
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;  quotient        2   12[COMMON] int 
  3346 ;;  sign            1   11[COMMON] unsigned char 
  3347 ;;  counter         1   10[COMMON] unsigned char 
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  2    6[COMMON] int 
  3350 ;; Registers used:
  3351 ;;		wreg, status,2, status,0
  3352 ;; Tracked objects:
  3353 ;;		On entry : 60/0
  3354 ;;		On exit  : 60/0
  3355 ;;		Unchanged: FFF9F/0
  3356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3357 ;;      Params:         4       0       0       0       0
  3358 ;;      Locals:         4       0       0       0       0
  3359 ;;      Temps:          0       0       0       0       0
  3360 ;;      Totals:         8       0       0       0       0
  3361 ;;Total ram usage:        8 bytes
  3362 ;; Hardware stack levels used:    1
  3363 ;; This function calls:
  3364 ;;		Nothing
  3365 ;; This function is called by:
  3366 ;;		_scale
  3367 ;;		__doprnt
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370  0D62                     ___awdiv:	
  3371                           
  3372                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3373  0D62  01FB               	clrf	___awdiv@sign
  3374  0D63  1FF7               	btfss	___awdiv@divisor+1,7
  3375  0D64  2D6C               	goto	l5197
  3376  0D65  09F6               	comf	___awdiv@divisor,f
  3377  0D66  09F7               	comf	___awdiv@divisor+1,f
  3378  0D67  0AF6               	incf	___awdiv@divisor,f
  3379  0D68  1903               	skipnz
  3380  0D69  0AF7               	incf	___awdiv@divisor+1,f
  3381  0D6A  01FB               	clrf	___awdiv@sign
  3382  0D6B  0AFB               	incf	___awdiv@sign,f
  3383  0D6C                     l5197:	
  3384  0D6C  1FF9               	btfss	___awdiv@dividend+1,7
  3385  0D6D  2D75               	goto	l5203
  3386  0D6E  09F8               	comf	___awdiv@dividend,f
  3387  0D6F  09F9               	comf	___awdiv@dividend+1,f
  3388  0D70  0AF8               	incf	___awdiv@dividend,f
  3389  0D71  1903               	skipnz
  3390  0D72  0AF9               	incf	___awdiv@dividend+1,f
  3391  0D73  3001               	movlw	1
  3392  0D74  06FB               	xorwf	___awdiv@sign,f
  3393  0D75                     l5203:	
  3394  0D75  01FC               	clrf	___awdiv@quotient
  3395  0D76  01FD               	clrf	___awdiv@quotient+1
  3396  0D77  0877               	movf	___awdiv@divisor+1,w
  3397  0D78  0476               	iorwf	___awdiv@divisor,w
  3398  0D79  1903               	skipnz
  3399  0D7A  2D9A               	goto	l5225
  3400  0D7B  01FA               	clrf	___awdiv@counter
  3401  0D7C                     L19:	
  3402  0D7C  0AFA               	incf	___awdiv@counter,f
  3403  0D7D  1BF7               	btfsc	___awdiv@divisor+1,7
  3404  0D7E  2D83               	goto	l5213
  3405  0D7F  1003               	clrc
  3406  0D80  0DF6               	rlf	___awdiv@divisor,f
  3407  0D81  0DF7               	rlf	___awdiv@divisor+1,f
  3408  0D82  2D7C               	goto	L19
  3409  0D83                     l5213:	
  3410  0D83  1003               	clrc
  3411  0D84  0DFC               	rlf	___awdiv@quotient,f
  3412  0D85  0DFD               	rlf	___awdiv@quotient+1,f
  3413  0D86  0877               	movf	___awdiv@divisor+1,w
  3414  0D87  0279               	subwf	___awdiv@dividend+1,w
  3415  0D88  1D03               	skipz
  3416  0D89  2D8C               	goto	u2075
  3417  0D8A  0876               	movf	___awdiv@divisor,w
  3418  0D8B  0278               	subwf	___awdiv@dividend,w
  3419  0D8C                     u2075:	
  3420  0D8C  1C03               	skipc
  3421  0D8D  2D96               	goto	L20
  3422  0D8E  0876               	movf	___awdiv@divisor,w
  3423  0D8F  02F8               	subwf	___awdiv@dividend,f
  3424  0D90  0877               	movf	___awdiv@divisor+1,w
  3425  0D91  1C03               	skipc
  3426  0D92  03F9               	decf	___awdiv@dividend+1,f
  3427  0D93  02F9               	subwf	___awdiv@dividend+1,f
  3428  0D94  147C               	bsf	___awdiv@quotient,0
  3429  0D95  1003               	clrc
  3430  0D96                     L20:	
  3431  0D96  0CF7               	rrf	___awdiv@divisor+1,f
  3432  0D97  0CF6               	rrf	___awdiv@divisor,f
  3433  0D98  0BFA               	decfsz	___awdiv@counter,f
  3434  0D99  2D83               	goto	l5213
  3435  0D9A                     l5225:	
  3436  0D9A  087B               	movf	___awdiv@sign,w
  3437  0D9B  1903               	btfsc	3,2
  3438  0D9C  2DA2               	goto	l5229
  3439  0D9D  09FC               	comf	___awdiv@quotient,f
  3440  0D9E  09FD               	comf	___awdiv@quotient+1,f
  3441  0D9F  0AFC               	incf	___awdiv@quotient,f
  3442  0DA0  1903               	skipnz
  3443  0DA1  0AFD               	incf	___awdiv@quotient+1,f
  3444  0DA2                     l5229:	
  3445  0DA2  087D               	movf	___awdiv@quotient+1,w
  3446  0DA3  00F7               	movwf	?___awdiv+1
  3447  0DA4  087C               	movf	___awdiv@quotient,w
  3448  0DA5  00F6               	movwf	?___awdiv
  3449  0DA6  0008               	return
  3450  0DA7                     __end_of___awdiv:	
  3451  0DA7                     __ptext575:	
  3452 ;; =============== function _pause ends ============
  3453                           
  3454                           
  3455 ;; *************** function ___awmod *****************
  3456 ;; Defined at:
  3457 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awmod.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;  divisor         2    0[COMMON] int 
  3460 ;;  dividend        2    2[COMMON] int 
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;  sign            1    5[COMMON] unsigned char 
  3463 ;;  counter         1    4[COMMON] unsigned char 
  3464 ;; Return value:  Size  Location     Type
  3465 ;;                  2    0[COMMON] int 
  3466 ;; Registers used:
  3467 ;;		wreg, status,2, status,0
  3468 ;; Tracked objects:
  3469 ;;		On entry : 60/0
  3470 ;;		On exit  : 60/0
  3471 ;;		Unchanged: FFF9F/0
  3472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3473 ;;      Params:         4       0       0       0       0
  3474 ;;      Locals:         2       0       0       0       0
  3475 ;;      Temps:          0       0       0       0       0
  3476 ;;      Totals:         6       0       0       0       0
  3477 ;;Total ram usage:        6 bytes
  3478 ;; Hardware stack levels used:    1
  3479 ;; This function calls:
  3480 ;;		Nothing
  3481 ;; This function is called by:
  3482 ;;		_scale
  3483 ;; This function uses a non-reentrant model
  3484 ;;
  3485  0DA7                     ___awmod:	
  3486                           
  3487                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3488  0DA7  01F5               	clrf	___awmod@sign
  3489  0DA8  1FF3               	btfss	___awmod@dividend+1,7
  3490  0DA9  2DB1               	goto	l5315
  3491  0DAA  09F2               	comf	___awmod@dividend,f
  3492  0DAB  09F3               	comf	___awmod@dividend+1,f
  3493  0DAC  0AF2               	incf	___awmod@dividend,f
  3494  0DAD  1903               	skipnz
  3495  0DAE  0AF3               	incf	___awmod@dividend+1,f
  3496  0DAF  01F5               	clrf	___awmod@sign
  3497  0DB0  0AF5               	incf	___awmod@sign,f
  3498  0DB1                     l5315:	
  3499  0DB1  1FF1               	btfss	___awmod@divisor+1,7
  3500  0DB2  2DB8               	goto	l5319
  3501  0DB3  09F0               	comf	___awmod@divisor,f
  3502  0DB4  09F1               	comf	___awmod@divisor+1,f
  3503  0DB5  0AF0               	incf	___awmod@divisor,f
  3504  0DB6  1903               	skipnz
  3505  0DB7  0AF1               	incf	___awmod@divisor+1,f
  3506  0DB8                     l5319:	
  3507  0DB8  0871               	movf	___awmod@divisor+1,w
  3508  0DB9  0470               	iorwf	___awmod@divisor,w
  3509  0DBA  1903               	skipnz
  3510  0DBB  2DD7               	goto	l5335
  3511  0DBC  01F4               	clrf	___awmod@counter
  3512  0DBD                     L12:	
  3513  0DBD  0AF4               	incf	___awmod@counter,f
  3514  0DBE  1BF1               	btfsc	___awmod@divisor+1,7
  3515  0DBF  2DC4               	goto	l5327
  3516  0DC0  1003               	clrc
  3517  0DC1  0DF0               	rlf	___awmod@divisor,f
  3518  0DC2  0DF1               	rlf	___awmod@divisor+1,f
  3519  0DC3  2DBD               	goto	L12
  3520  0DC4                     l5327:	
  3521  0DC4  0871               	movf	___awmod@divisor+1,w
  3522  0DC5  0273               	subwf	___awmod@dividend+1,w
  3523  0DC6  1D03               	skipz
  3524  0DC7  2DCA               	goto	u2265
  3525  0DC8  0870               	movf	___awmod@divisor,w
  3526  0DC9  0272               	subwf	___awmod@dividend,w
  3527  0DCA                     u2265:	
  3528  0DCA  1C03               	skipc
  3529  0DCB  2DD3               	goto	L13
  3530  0DCC  0870               	movf	___awmod@divisor,w
  3531  0DCD  02F2               	subwf	___awmod@dividend,f
  3532  0DCE  0871               	movf	___awmod@divisor+1,w
  3533  0DCF  1C03               	skipc
  3534  0DD0  03F3               	decf	___awmod@dividend+1,f
  3535  0DD1  02F3               	subwf	___awmod@dividend+1,f
  3536  0DD2  1003               	clrc
  3537  0DD3                     L13:	
  3538  0DD3  0CF1               	rrf	___awmod@divisor+1,f
  3539  0DD4  0CF0               	rrf	___awmod@divisor,f
  3540  0DD5  0BF4               	decfsz	___awmod@counter,f
  3541  0DD6  2DC4               	goto	l5327
  3542  0DD7                     l5335:	
  3543  0DD7  0875               	movf	___awmod@sign,w
  3544  0DD8  1903               	btfsc	3,2
  3545  0DD9  2DDF               	goto	l5339
  3546  0DDA  09F2               	comf	___awmod@dividend,f
  3547  0DDB  09F3               	comf	___awmod@dividend+1,f
  3548  0DDC  0AF2               	incf	___awmod@dividend,f
  3549  0DDD  1903               	skipnz
  3550  0DDE  0AF3               	incf	___awmod@dividend+1,f
  3551  0DDF                     l5339:	
  3552  0DDF  0873               	movf	___awmod@dividend+1,w
  3553  0DE0  00F1               	movwf	?___awmod+1
  3554  0DE1  0872               	movf	___awmod@dividend,w
  3555  0DE2  00F0               	movwf	?___awmod
  3556  0DE3  0008               	return
  3557  0DE4                     __end_of___awmod:	
  3558  0DE4                     __ptext572:	
  3559 ;; =============== function ___lltoft ends ============
  3560                           
  3561                           
  3562 ;; *************** function ___ftmul *****************
  3563 ;; Defined at:
  3564 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftmul.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;  f1              3   13[BANK0 ] float 
  3567 ;;  f2              3   16[BANK0 ] float 
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;  f3_as_produc    3   23[BANK0 ] unsigned um
  3570 ;;  sign            1   27[BANK0 ] unsigned char 
  3571 ;;  cntr            1   26[BANK0 ] unsigned char 
  3572 ;;  exp             1   22[BANK0 ] unsigned char 
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  3   13[BANK0 ] float 
  3575 ;; Registers used:
  3576 ;;		wreg, status,2, status,0, pclath, cstack
  3577 ;; Tracked objects:
  3578 ;;		On entry : 60/0
  3579 ;;		On exit  : 60/0
  3580 ;;		Unchanged: FFF9F/0
  3581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3582 ;;      Params:         0       6       0       0       0
  3583 ;;      Locals:         0       6       0       0       0
  3584 ;;      Temps:          0       3       0       0       0
  3585 ;;      Totals:         0      15       0       0       0
  3586 ;;Total ram usage:       15 bytes
  3587 ;; Hardware stack levels used:    1
  3588 ;; Hardware stack levels required when called:    1
  3589 ;; This function calls:
  3590 ;;		___ftpack
  3591 ;; This function is called by:
  3592 ;;		_fround
  3593 ;;		_scale
  3594 ;;		__doprnt
  3595 ;; This function uses a non-reentrant model
  3596 ;;
  3597  0DE4                     ___ftmul:	
  3598                           
  3599                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3600  0DE4  082D               	movf	___ftmul@f1,w
  3601  0DE5  00B3               	movwf	??___ftmul
  3602  0DE6  082E               	movf	___ftmul@f1+1,w
  3603  0DE7  00B4               	movwf	??___ftmul+1
  3604  0DE8  082F               	movf	___ftmul@f1+2,w
  3605  0DE9  00B5               	movwf	??___ftmul+2
  3606  0DEA  1003               	clrc
  3607  0DEB  0D34               	rlf	??___ftmul+1,w
  3608  0DEC  0D35               	rlf	??___ftmul+2,w
  3609  0DED  00B6               	movwf	___ftmul@exp
  3610  0DEE  08B6               	movf	___ftmul@exp,f
  3611  0DEF  1D03               	skipz
  3612  0DF0  2DF5               	goto	l5435
  3613  0DF1  01AD               	clrf	?___ftmul
  3614  0DF2  01AE               	clrf	?___ftmul+1
  3615  0DF3  01AF               	clrf	?___ftmul+2
  3616  0DF4  0008               	return
  3617  0DF5                     l5435:	
  3618  0DF5  0830               	movf	___ftmul@f2,w
  3619  0DF6  00B3               	movwf	??___ftmul
  3620  0DF7  0831               	movf	___ftmul@f2+1,w
  3621  0DF8  00B4               	movwf	??___ftmul+1
  3622  0DF9  0832               	movf	___ftmul@f2+2,w
  3623  0DFA  00B5               	movwf	??___ftmul+2
  3624  0DFB  1003               	clrc
  3625  0DFC  0D34               	rlf	??___ftmul+1,w
  3626  0DFD  0D35               	rlf	??___ftmul+2,w
  3627  0DFE  00BB               	movwf	___ftmul@sign
  3628  0DFF  08BB               	movf	___ftmul@sign,f
  3629  0E00  1D03               	skipz
  3630  0E01  2E06               	goto	l5441
  3631  0E02  01AD               	clrf	?___ftmul
  3632  0E03  01AE               	clrf	?___ftmul+1
  3633  0E04  01AF               	clrf	?___ftmul+2
  3634  0E05  0008               	return
  3635  0E06                     l5441:	
  3636  0E06  083B               	movf	___ftmul@sign,w
  3637  0E07  3E7B               	addlw	123
  3638  0E08  07B6               	addwf	___ftmul@exp,f
  3639  0E09  082F               	movf	___ftmul@f1+2,w
  3640  0E0A  00BB               	movwf	___ftmul@sign
  3641  0E0B  0832               	movf	___ftmul@f2+2,w
  3642  0E0C  06BB               	xorwf	___ftmul@sign,f
  3643  0E0D  3080               	movlw	128
  3644  0E0E  05BB               	andwf	___ftmul@sign,f
  3645  0E0F  3007               	movlw	7
  3646  0E10  17AE               	bsf	___ftmul@f1+1,7
  3647  0E11  17B1               	bsf	___ftmul@f2+1,7
  3648  0E12  01B2               	clrf	___ftmul@f2+2
  3649  0E13  01B7               	clrf	___ftmul@f3_as_product
  3650  0E14  01B8               	clrf	___ftmul@f3_as_product+1
  3651  0E15  01B9               	clrf	___ftmul@f3_as_product+2
  3652  0E16  00BA               	movwf	___ftmul@cntr
  3653  0E17                     l5459:	
  3654  0E17  1C2D               	btfss	___ftmul@f1,0
  3655  0E18  2E21               	goto	l5463
  3656  0E19  0830               	movf	___ftmul@f2,w
  3657  0E1A  2703  120A  158A   	fcall	PL12	;call to abstracted procedure
  3658  0E1D  1803               	skipnc
  3659  0E1E  0A32               	incf	___ftmul@f2+2,w
  3660  0E1F  1D03               	btfss	3,2
  3661  0E20  07B9               	addwf	___ftmul@f3_as_product+2,f
  3662  0E21                     l5463:	
  3663  0E21  1003               	clrc
  3664  0E22  0CAF               	rrf	___ftmul@f1+2,f
  3665  0E23  0CAE               	rrf	___ftmul@f1+1,f
  3666  0E24  0CAD               	rrf	___ftmul@f1,f
  3667  0E25  1003               	clrc
  3668  0E26  0DB0               	rlf	___ftmul@f2,f
  3669  0E27  0DB1               	rlf	___ftmul@f2+1,f
  3670  0E28  0DB2               	rlf	___ftmul@f2+2,f
  3671  0E29  0BBA               	decfsz	___ftmul@cntr,f
  3672  0E2A  2E17               	goto	l5459
  3673  0E2B  3009               	movlw	9
  3674  0E2C  00BA               	movwf	___ftmul@cntr
  3675  0E2D                     l5471:	
  3676  0E2D  1C2D               	btfss	___ftmul@f1,0
  3677  0E2E  2E37               	goto	l5475
  3678  0E2F  0830               	movf	___ftmul@f2,w
  3679  0E30  2703  120A  158A   	fcall	PL12	;call to abstracted procedure
  3680  0E33  1803               	skipnc
  3681  0E34  0A32               	incf	___ftmul@f2+2,w
  3682  0E35  1D03               	btfss	3,2
  3683  0E36  07B9               	addwf	___ftmul@f3_as_product+2,f
  3684  0E37                     l5475:	
  3685  0E37  1003               	clrc
  3686  0E38  0CAF               	rrf	___ftmul@f1+2,f
  3687  0E39  0CAE               	rrf	___ftmul@f1+1,f
  3688  0E3A  0CAD               	rrf	___ftmul@f1,f
  3689  0E3B  1003               	clrc
  3690  0E3C  0CB9               	rrf	___ftmul@f3_as_product+2,f
  3691  0E3D  0CB8               	rrf	___ftmul@f3_as_product+1,f
  3692  0E3E  0CB7               	rrf	___ftmul@f3_as_product,f
  3693  0E3F  0BBA               	decfsz	___ftmul@cntr,f
  3694  0E40  2E2D               	goto	l5471
  3695  0E41  0837               	movf	___ftmul@f3_as_product,w
  3696  0E42  00F0               	movwf	?___ftpack
  3697  0E43  0838               	movf	___ftmul@f3_as_product+1,w
  3698  0E44  00F1               	movwf	?___ftpack+1
  3699  0E45  0839               	movf	___ftmul@f3_as_product+2,w
  3700  0E46  00F2               	movwf	?___ftpack+2
  3701  0E47  0836               	movf	___ftmul@exp,w
  3702  0E48  00F3               	movwf	?___ftpack+3
  3703  0E49  083B               	movf	___ftmul@sign,w
  3704  0E4A  00F4               	movwf	?___ftpack+4
  3705  0E4B  2661               	fcall	___ftpack
  3706  0E4C  0870               	movf	?___ftpack,w
  3707  0E4D  00AD               	movwf	?___ftmul
  3708  0E4E  0871               	movf	?___ftpack+1,w
  3709  0E4F  00AE               	movwf	?___ftmul+1
  3710  0E50  0872               	movf	?___ftpack+2,w
  3711  0E51  00AF               	movwf	?___ftmul+2
  3712  0E52  0008               	return
  3713  0E53                     __end_of___ftmul:	
  3714  0E53                     __ptext586:	
  3715 ;; =============== function ___wmul ends ============
  3716                           
  3717                           
  3718 ;; *************** function ___bmul *****************
  3719 ;; Defined at:
  3720 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\bmul.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;  multiplier      1    wreg     unsigned char 
  3723 ;;  multiplicand    1    9[COMMON] unsigned char 
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;  multiplier      1   11[COMMON] unsigned char 
  3726 ;;  product         1   10[COMMON] unsigned char 
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  1    wreg      unsigned char 
  3729 ;; Registers used:
  3730 ;;		wreg, status,2, status,0
  3731 ;; Tracked objects:
  3732 ;;		On entry : 60/0
  3733 ;;		On exit  : 60/0
  3734 ;;		Unchanged: FFF9F/0
  3735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3736 ;;      Params:         1       0       0       0       0
  3737 ;;      Locals:         2       0       0       0       0
  3738 ;;      Temps:          0       0       0       0       0
  3739 ;;      Totals:         3       0       0       0       0
  3740 ;;Total ram usage:        3 bytes
  3741 ;; Hardware stack levels used:    1
  3742 ;; This function calls:
  3743 ;;		Nothing
  3744 ;; This function is called by:
  3745 ;;		_fround
  3746 ;;		_scale
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749  0E53                     ___bmul:	
  3750                           
  3751                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3752                           ;___bmul@multiplier stored from wreg
  3753  0E53  00FB               	movwf	___bmul@multiplier
  3754  0E54  01FA               	clrf	___bmul@product
  3755  0E55                     l5051:	
  3756  0E55  0879               	movf	___bmul@multiplicand,w
  3757  0E56  187B               	btfsc	___bmul@multiplier,0
  3758  0E57  07FA               	addwf	___bmul@product,f
  3759  0E58  1003               	clrc
  3760  0E59  0DF9               	rlf	___bmul@multiplicand,f
  3761  0E5A  1003               	clrc
  3762  0E5B  0CFB               	rrf	___bmul@multiplier,f
  3763  0E5C  08FB               	movf	___bmul@multiplier,f
  3764  0E5D  1D03               	skipz
  3765  0E5E  2E55               	goto	l5051
  3766  0E5F  087A               	movf	___bmul@product,w
  3767  0E60  0008               	return
  3768  0E61                     __end_of___bmul:	
  3769  0E61                     __ptext582:	
  3770 ;; =============== function ___fttol ends ============
  3771                           
  3772                           
  3773 ;; *************** function ___ftpack *****************
  3774 ;; Defined at:
  3775 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\float.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;  arg             3    0[COMMON] unsigned um
  3778 ;;  exp             1    3[COMMON] unsigned char 
  3779 ;;  sign            1    4[COMMON] unsigned char 
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;		None
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  3    0[COMMON] float 
  3784 ;; Registers used:
  3785 ;;		wreg, status,2, status,0
  3786 ;; Tracked objects:
  3787 ;;		On entry : 60/0
  3788 ;;		On exit  : 60/0
  3789 ;;		Unchanged: FFF9F/0
  3790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3791 ;;      Params:         5       0       0       0       0
  3792 ;;      Locals:         0       0       0       0       0
  3793 ;;      Temps:          3       0       0       0       0
  3794 ;;      Totals:         8       0       0       0       0
  3795 ;;Total ram usage:        8 bytes
  3796 ;; Hardware stack levels used:    1
  3797 ;; This function calls:
  3798 ;;		Nothing
  3799 ;; This function is called by:
  3800 ;;		___ftadd
  3801 ;;		___ftmul
  3802 ;;		___lltoft
  3803 ;; This function uses a non-reentrant model
  3804 ;;
  3805  0E61                     ___ftpack:	
  3806                           
  3807                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3808  0E61  0873               	movf	___ftpack@exp,w
  3809  0E62  1903               	btfsc	3,2
  3810  0E63  2E69               	goto	l5127
  3811  0E64  0872               	movf	___ftpack@arg+2,w
  3812  0E65  0471               	iorwf	___ftpack@arg+1,w
  3813  0E66  0470               	iorwf	___ftpack@arg,w
  3814  0E67  1D03               	skipz
  3815  0E68  2E72               	goto	l5133
  3816  0E69                     l5127:	
  3817  0E69  01F0               	clrf	?___ftpack
  3818  0E6A  01F1               	clrf	?___ftpack+1
  3819  0E6B  01F2               	clrf	?___ftpack+2
  3820  0E6C  0008               	return
  3821  0E6D                     l5131:	
  3822  0E6D  0AF3               	incf	___ftpack@exp,f
  3823  0E6E  1003               	clrc
  3824  0E6F  0CF2               	rrf	___ftpack@arg+2,f
  3825  0E70  0CF1               	rrf	___ftpack@arg+1,f
  3826  0E71  0CF0               	rrf	___ftpack@arg,f
  3827  0E72                     l5133:	
  3828  0E72  30FE               	movlw	254
  3829  0E73  0572               	andwf	___ftpack@arg+2,w
  3830  0E74  1903               	btfsc	3,2
  3831  0E75  2E81               	goto	l5137
  3832  0E76  2E6D               	goto	l5131
  3833  0E77                     l5135:	
  3834  0E77  0AF3               	incf	___ftpack@exp,f
  3835  0E78  0AF0               	incf	___ftpack@arg,f
  3836  0E79  1903               	skipnz
  3837  0E7A  0AF1               	incf	___ftpack@arg+1,f
  3838  0E7B  1903               	skipnz
  3839  0E7C  0AF2               	incf	___ftpack@arg+2,f
  3840  0E7D  1003               	clrc
  3841  0E7E  0CF2               	rrf	___ftpack@arg+2,f
  3842  0E7F  0CF1               	rrf	___ftpack@arg+1,f
  3843  0E80  0CF0               	rrf	___ftpack@arg,f
  3844  0E81                     l5137:	
  3845  0E81  30FF               	movlw	255
  3846  0E82  0572               	andwf	___ftpack@arg+2,w
  3847  0E83  1903               	btfsc	3,2
  3848  0E84  2E8B               	goto	l5141
  3849  0E85  2E77               	goto	l5135
  3850  0E86                     l5139:	
  3851  0E86  03F3               	decf	___ftpack@exp,f
  3852  0E87  1003               	clrc
  3853  0E88  0DF0               	rlf	___ftpack@arg,f
  3854  0E89  0DF1               	rlf	___ftpack@arg+1,f
  3855  0E8A  0DF2               	rlf	___ftpack@arg+2,f
  3856  0E8B                     l5141:	
  3857  0E8B  1FF1               	btfss	___ftpack@arg+1,7
  3858  0E8C  2E86               	goto	l5139
  3859  0E8D  1C73               	btfss	___ftpack@exp,0
  3860  0E8E  13F1               	bcf	___ftpack@arg+1,7
  3861  0E8F  1003               	clrc
  3862  0E90  0CF3               	rrf	___ftpack@exp,f
  3863  0E91  0873               	movf	___ftpack@exp,w
  3864  0E92  00F7               	movwf	??___ftpack+2
  3865  0E93  01F6               	clrf	??___ftpack+1
  3866  0E94  01F5               	clrf	??___ftpack
  3867  0E95  0875               	movf	??___ftpack,w
  3868  0E96  04F0               	iorwf	___ftpack@arg,f
  3869  0E97  0876               	movf	??___ftpack+1,w
  3870  0E98  04F1               	iorwf	___ftpack@arg+1,f
  3871  0E99  0877               	movf	??___ftpack+2,w
  3872  0E9A  04F2               	iorwf	___ftpack@arg+2,f
  3873  0E9B  0874               	movf	___ftpack@sign,w
  3874  0E9C  1D03               	skipz
  3875  0E9D  17F2               	bsf	___ftpack@arg+2,7
  3876  0E9E  0008               	return
  3877  0E9F                     __end_of___ftpack:	
  3878  0E9F                     __ptext585:	
  3879 ;; =============== function ___lbdiv ends ============
  3880                           
  3881                           
  3882 ;; *************** function ___wmul *****************
  3883 ;; Defined at:
  3884 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\wmul.c"
  3885 ;; Parameters:    Size  Location     Type
  3886 ;;  multiplier      2    0[COMMON] unsigned int 
  3887 ;;  multiplicand    2    2[COMMON] unsigned int 
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;  product         2    4[COMMON] unsigned int 
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  2    0[COMMON] unsigned int 
  3892 ;; Registers used:
  3893 ;;		wreg, status,2, status,0
  3894 ;; Tracked objects:
  3895 ;;		On entry : 160/0
  3896 ;;		On exit  : 160/0
  3897 ;;		Unchanged: FFE9F/0
  3898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3899 ;;      Params:         4       0       0       0       0
  3900 ;;      Locals:         2       0       0       0       0
  3901 ;;      Temps:          0       0       0       0       0
  3902 ;;      Totals:         6       0       0       0       0
  3903 ;;Total ram usage:        6 bytes
  3904 ;; Hardware stack levels used:    1
  3905 ;; This function calls:
  3906 ;;		Nothing
  3907 ;; This function is called by:
  3908 ;;		_fround
  3909 ;;		_scale
  3910 ;;		__doprnt
  3911 ;; This function uses a non-reentrant model
  3912 ;;
  3913  0E9F                     ___wmul:	
  3914                           
  3915                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3916  0E9F  01F4               	clrf	___wmul@product
  3917  0EA0  01F5               	clrf	___wmul@product+1
  3918  0EA1                     l5067:	
  3919  0EA1  1C70               	btfss	___wmul@multiplier,0
  3920  0EA2  2EA9               	goto	l5071
  3921  0EA3  0872               	movf	___wmul@multiplicand,w
  3922  0EA4  07F4               	addwf	___wmul@product,f
  3923  0EA5  1803               	skipnc
  3924  0EA6  0AF5               	incf	___wmul@product+1,f
  3925  0EA7  0873               	movf	___wmul@multiplicand+1,w
  3926  0EA8  07F5               	addwf	___wmul@product+1,f
  3927  0EA9                     l5071:	
  3928  0EA9  1003               	clrc
  3929  0EAA  0DF2               	rlf	___wmul@multiplicand,f
  3930  0EAB  0DF3               	rlf	___wmul@multiplicand+1,f
  3931  0EAC  1003               	clrc
  3932  0EAD  0CF1               	rrf	___wmul@multiplier+1,f
  3933  0EAE  0CF0               	rrf	___wmul@multiplier,f
  3934  0EAF  0871               	movf	___wmul@multiplier+1,w
  3935  0EB0  0470               	iorwf	___wmul@multiplier,w
  3936  0EB1  1D03               	skipz
  3937  0EB2  2EA1               	goto	l5067
  3938  0EB3  0875               	movf	___wmul@product+1,w
  3939  0EB4  00F1               	movwf	?___wmul+1
  3940  0EB5  0874               	movf	___wmul@product,w
  3941  0EB6  00F0               	movwf	?___wmul
  3942  0EB7  0008               	return
  3943  0EB8                     __end_of___wmul:	
  3944  0EB8                     PL3:	
  3945  0EB8  086D               	movf	__doprnt@c,w
  3946  0EB9  00D4               	movwf	??__doprnt
  3947  0EBA  1003               	clrc
  3948  0EBB  0DD4               	rlf	??__doprnt,f
  3949  0EBC  1003               	clrc
  3950  0EBD  0D54               	rlf	??__doprnt,w
  3951  0EBE  3E4F               	addlw	low (_dpowers-__stringbase)
  3952  0EBF  0084               	movwf	4
  3953  0EC0  0008               	return
  3954  0EC1                     PL4:	
  3955  0EC1  00F3               	movwf	?___lldiv+3
  3956  0EC2  0867               	movf	__doprnt@_val+3,w
  3957  0EC3  00F7               	movwf	?___lldiv+7
  3958  0EC4  0866               	movf	__doprnt@_val+2,w
  3959  0EC5  00F6               	movwf	?___lldiv+6
  3960  0EC6  0865               	movf	__doprnt@_val+1,w
  3961  0EC7  00F5               	movwf	?___lldiv+5
  3962  0EC8  0864               	movf	__doprnt@_val,w
  3963  0EC9  00F4               	movwf	?___lldiv+4
  3964  0ECA  0008               	return
  3965  0ECB                     PL5:	
  3966  0ECB  0873               	movf	?___lldiv+3,w
  3967  0ECC  00A7               	movwf	?___llmod+7
  3968  0ECD  0872               	movf	?___lldiv+2,w
  3969  0ECE  00A6               	movwf	?___llmod+6
  3970  0ECF  0871               	movf	?___lldiv+1,w
  3971  0ED0  00A5               	movwf	?___llmod+5
  3972  0ED1  0870               	movf	?___lldiv,w
  3973  0ED2  00A4               	movwf	?___llmod+4
  3974  0ED3  0008               	return
  3975  0ED4                     PL6:	
  3976  0ED4  082D               	movf	?___ftmul,w
  3977  0ED5  00BC               	movwf	?_scale
  3978  0ED6  082E               	movf	?___ftmul+1,w
  3979  0ED7  00BD               	movwf	?_scale+1
  3980  0ED8  082F               	movf	?___ftmul+2,w
  3981  0ED9  00BE               	movwf	?_scale+2
  3982  0EDA  0008               	return
  3983  0EDB                     PL7:	
  3984  0EDB  082D               	movf	?___ftmul,w
  3985  0EDC  00C3               	movwf	_scale$2904
  3986  0EDD  082E               	movf	?___ftmul+1,w
  3987  0EDE  00C4               	movwf	_scale$2904+1
  3988  0EDF  082F               	movf	?___ftmul+2,w
  3989  0EE0  00C5               	movwf	_scale$2904+2
  3990  0EE1  300A               	movlw	10
  3991  0EE2  00F0               	movwf	?___awmod
  3992  0EE3  01F1               	clrf	?___awmod+1
  3993  0EE4  0846               	movf	scale@scl,w
  3994  0EE5  00F2               	movwf	?___awmod+2
  3995  0EE6  01F3               	clrf	?___awmod+3
  3996  0EE7  0008               	return
  3997  0EE8                     PL8:	
  3998  0EE8  0870               	movf	?___awmod,w
  3999  0EE9  00BF               	movwf	??_scale
  4000  0EEA  0871               	movf	?___awmod+1,w
  4001  0EEB  00C0               	movwf	??_scale+1
  4002  0EEC  083F               	movf	??_scale,w
  4003  0EED  073F               	addwf	??_scale,w
  4004  0EEE  073F               	addwf	??_scale,w
  4005  0EEF  0008               	return
  4006  0EF0                     PL9:	
  4007  0EF0  0876               	movf	?___awdiv,w
  4008  0EF1  00C1               	movwf	??_scale+2
  4009  0EF2  0877               	movf	?___awdiv+1,w
  4010  0EF3  00C2               	movwf	??_scale+3
  4011  0EF4  0841               	movf	??_scale+2,w
  4012  0EF5  0741               	addwf	??_scale+2,w
  4013  0EF6  0741               	addwf	??_scale+2,w
  4014  0EF7  0008               	return
  4015  0EF8                     PL10:	
  4016  0EF8  00F6               	movwf	?___awdiv
  4017  0EF9  01F7               	clrf	?___awdiv+1
  4018  0EFA  0846               	movf	scale@scl,w
  4019  0EFB  00F2               	movwf	?___awmod+2
  4020  0EFC  01F3               	clrf	?___awmod+3
  4021  0EFD  1BF2               	btfsc	?___awmod+2,7
  4022  0EFE  03F3               	decf	?___awmod+3,f
  4023  0EFF  3064               	movlw	100
  4024  0F00  00F0               	movwf	?___awmod
  4025  0F01  01F1               	clrf	?___awmod+1
  4026  0F02  0008               	return
  4027  0F03                     PL12:	
  4028  0F03  07B7               	addwf	___ftmul@f3_as_product,f
  4029  0F04  0831               	movf	___ftmul@f2+1,w
  4030  0F05  1103               	clrz
  4031  0F06  1803               	skipnc
  4032  0F07  0A31               	incf	___ftmul@f2+1,w
  4033  0F08  1D03               	btfss	3,2
  4034  0F09  07B8               	addwf	___ftmul@f3_as_product+1,f
  4035  0F0A  0832               	movf	___ftmul@f2+2,w
  4036  0F0B  1103               	clrz
  4037  0F0C  0008               	return
  4038  0F0D                     PL13:	
  4039  0F0D  00A8               	movwf	?_putch
  4040  0F0E  086E               	movf	__doprnt@pb,w
  4041  0F0F  3E01               	addlw	1
  4042  0F10  0084               	movwf	4
  4043  0F11  0800               	movf	0,w
  4044  0F12  0008               	return
  4045  0F13                     PL14:	
  4046  0F13  0820               	movf	?___llmod,w
  4047  0F14  3E30               	addlw	48
  4048  0F15  00D5               	movwf	??__doprnt+1
  4049  0F16  086E               	movf	__doprnt@pb,w
  4050  0F17  0084               	movwf	4
  4051  0F18  0800               	movf	0,w
  4052  0F19  0084               	movwf	4
  4053  0F1A  0855               	movf	??__doprnt+1,w
  4054  0F1B  0008               	return
  4055  0F1C                     PL15:	
  4056  0F1C  0861               	movf	__doprnt@integ,w
  4057  0F1D  00F0               	movwf	?___ftge
  4058  0F1E  0862               	movf	__doprnt@integ+1,w
  4059  0F1F  00F1               	movwf	?___ftge+1
  4060  0F20  0863               	movf	__doprnt@integ+2,w
  4061  0F21  00F2               	movwf	?___ftge+2
  4062  0F22  0008               	return
  4063  0F23                     PL16:	
  4064  0F23  00AF               	movwf	?___ftmul+2
  4065  0F24  3064               	movlw	100
  4066  0F25  00F6               	movwf	?___awdiv
  4067  0F26  01F7               	clrf	?___awdiv+1
  4068  0F27  0846               	movf	scale@scl,w
  4069  0F28  00F8               	movwf	?___awdiv+2
  4070  0F29  01F9               	clrf	?___awdiv+3
  4071  0F2A  0008               	return
  4072  0F2B                     PL18:	
  4073  0F2B  00AF               	movwf	?___ftmul+2
  4074  0F2C  0843               	movf	_scale$2904,w
  4075  0F2D  00B0               	movwf	?___ftmul+3
  4076  0F2E  0844               	movf	_scale$2904+1,w
  4077  0F2F  00B1               	movwf	?___ftmul+4
  4078  0F30  0845               	movf	_scale$2904+2,w
  4079  0F31  00B2               	movwf	?___ftmul+5
  4080  0F32  0008               	return
  4081  0F33                     PL20:	
  4082  0F33  00AF               	movwf	?___ftmul+2
  4083  0F34  300A               	movlw	10
  4084  0F35  00F6               	movwf	?___awdiv
  4085  0F36  01F7               	clrf	?___awdiv+1
  4086  0F37  0846               	movf	scale@scl,w
  4087  0F38  00F8               	movwf	?___awdiv+2
  4088  0F39  01F9               	clrf	?___awdiv+3
  4089  0F3A  0008               	return
  4090  0F3B                     PL21:	
  4091  0F3B  086E               	movf	__doprnt@pb,w
  4092  0F3C  3E01               	addlw	1
  4093  0F3D  0084               	movwf	4
  4094  0F3E  300A               	movlw	10
  4095  0F3F  1383               	bcf	3,7	;select IRP bank0
  4096  0F40  0880               	movf	0,f
  4097  0F41  00A0               	movwf	?___llmod
  4098  0F42  0008               	return
  4099  0F43                     PL22:	
  4100  0F43  0823               	movf	?___fttol+3,w
  4101  0F44  00E7               	movwf	__doprnt@_val+3
  4102  0F45  0822               	movf	?___fttol+2,w
  4103  0F46  00E6               	movwf	__doprnt@_val+2
  4104  0F47  0821               	movf	?___fttol+1,w
  4105  0F48  00E5               	movwf	__doprnt@_val+1
  4106  0F49  0820               	movf	?___fttol,w
  4107  0F4A  0008               	return
  4108  0F4B                     PL23:	
  4109  0F4B  0876               	movf	?___awdiv,w
  4110  0F4C  00BF               	movwf	??_scale
  4111  0F4D  0877               	movf	?___awdiv+1,w
  4112  0F4E  00C0               	movwf	??_scale+1
  4113  0F4F  083F               	movf	??_scale,w
  4114  0F50  073F               	addwf	??_scale,w
  4115  0F51  073F               	addwf	??_scale,w
  4116  0F52  0008               	return
  4117  0F53                     PL24:	
  4118  0F53  083C               	movf	?_scale,w
  4119  0F54  00E1               	movwf	__doprnt@integ
  4120  0F55  083D               	movf	?_scale+1,w
  4121  0F56  00E2               	movwf	__doprnt@integ+1
  4122  0F57  083E               	movf	?_scale+2,w
  4123  0F58  00E3               	movwf	__doprnt@integ+2
  4124  0F59  086A               	movf	__doprnt@fval,w
  4125  0F5A  0008               	return
  4126  0F5B                     PL25:	
  4127  0F5B  0084               	movwf	4
  4128  0F5C  3030               	movlw	48
  4129  0F5D  0080               	movwf	0
  4130  0F5E  086E               	movf	__doprnt@pb,w
  4131  0F5F  0084               	movwf	4
  4132  0F60  0A80               	incf	0,f
  4133  0F61  0008               	return
  4134  0F62                     PL28:	
  4135  0F62  00A0               	movwf	?___fttol
  4136  0F63  086B               	movf	__doprnt@fval+1,w
  4137  0F64  00A1               	movwf	?___fttol+1
  4138  0F65  086C               	movf	__doprnt@fval+2,w
  4139  0F66  00A2               	movwf	?___fttol+2
  4140  0F67  0008               	return
  4141  0F68                     PL29:	
  4142  0F68  086E               	movf	__doprnt@pb,w
  4143  0F69  0084               	movwf	4
  4144  0F6A  0800               	movf	0,w
  4145  0F6B  0084               	movwf	4
  4146  0F6C  342D               	retlw	45
  4147  0F6D                     PL30:	
  4148  0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  4149  0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  4150  0F6F  0008               	return
  4151  0F70                     __ptext579:	
  4152 ;; =============== function ___ftneg ends ============
  4153                           
  4154                           
  4155 ;; *************** function ___llmod *****************
  4156 ;; Defined at:
  4157 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\llmod.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;  divisor         4    0[BANK0 ] unsigned long 
  4160 ;;  dividend        4    4[BANK0 ] unsigned long 
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;  counter         1   13[COMMON] unsigned char 
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  4    0[BANK0 ] unsigned long 
  4165 ;; Registers used:
  4166 ;;		wreg, status,2, status,0
  4167 ;; Tracked objects:
  4168 ;;		On entry : 60/0
  4169 ;;		On exit  : 60/0
  4170 ;;		Unchanged: FFF9F/0
  4171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4172 ;;      Params:         0       8       0       0       0
  4173 ;;      Locals:         1       0       0       0       0
  4174 ;;      Temps:          0       0       0       0       0
  4175 ;;      Totals:         1       8       0       0       0
  4176 ;;Total ram usage:        9 bytes
  4177 ;; Hardware stack levels used:    1
  4178 ;; This function calls:
  4179 ;;		Nothing
  4180 ;; This function is called by:
  4181 ;;		__doprnt
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184  0F70                     ___llmod:	
  4185                           
  4186                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  4187  0F70  0823               	movf	___llmod@divisor+3,w
  4188  0F71  0422               	iorwf	___llmod@divisor+2,w
  4189  0F72  0421               	iorwf	___llmod@divisor+1,w
  4190  0F73  0420               	iorwf	___llmod@divisor,w
  4191  0F74  1903               	skipnz
  4192  0F75  2FA5               	goto	l5249
  4193  0F76  01FD               	clrf	___llmod@counter
  4194  0F77                     L17:	
  4195  0F77  0AFD               	incf	___llmod@counter,f
  4196  0F78  1BA3               	btfsc	___llmod@divisor+3,7
  4197  0F79  2F80               	goto	l5241
  4198  0F7A  1003               	clrc
  4199  0F7B  0DA0               	rlf	___llmod@divisor,f
  4200  0F7C  0DA1               	rlf	___llmod@divisor+1,f
  4201  0F7D  0DA2               	rlf	___llmod@divisor+2,f
  4202  0F7E  0DA3               	rlf	___llmod@divisor+3,f
  4203  0F7F  2F77               	goto	L17
  4204  0F80                     l5241:	
  4205  0F80  0823               	movf	___llmod@divisor+3,w
  4206  0F81  0227               	subwf	___llmod@dividend+3,w
  4207  0F82  1D03               	skipz
  4208  0F83  2F8E               	goto	u2125
  4209  0F84  0822               	movf	___llmod@divisor+2,w
  4210  0F85  0226               	subwf	___llmod@dividend+2,w
  4211  0F86  1D03               	skipz
  4212  0F87  2F8E               	goto	u2125
  4213  0F88  0821               	movf	___llmod@divisor+1,w
  4214  0F89  0225               	subwf	___llmod@dividend+1,w
  4215  0F8A  1D03               	skipz
  4216  0F8B  2F8E               	goto	u2125
  4217  0F8C  0820               	movf	___llmod@divisor,w
  4218  0F8D  0224               	subwf	___llmod@dividend,w
  4219  0F8E                     u2125:	
  4220  0F8E  1C03               	skipc
  4221  0F8F  2F9F               	goto	L18
  4222  0F90  0820               	movf	___llmod@divisor,w
  4223  0F91  02A4               	subwf	___llmod@dividend,f
  4224  0F92  0821               	movf	___llmod@divisor+1,w
  4225  0F93  1C03               	skipc
  4226  0F94  0F21               	incfsz	___llmod@divisor+1,w
  4227  0F95  02A5               	subwf	___llmod@dividend+1,f
  4228  0F96  0822               	movf	___llmod@divisor+2,w
  4229  0F97  1C03               	skipc
  4230  0F98  0F22               	incfsz	___llmod@divisor+2,w
  4231  0F99  02A6               	subwf	___llmod@dividend+2,f
  4232  0F9A  0823               	movf	___llmod@divisor+3,w
  4233  0F9B  1C03               	skipc
  4234  0F9C  0F23               	incfsz	___llmod@divisor+3,w
  4235  0F9D  02A7               	subwf	___llmod@dividend+3,f
  4236  0F9E  1003               	clrc
  4237  0F9F                     L18:	
  4238  0F9F  0CA3               	rrf	___llmod@divisor+3,f
  4239  0FA0  0CA2               	rrf	___llmod@divisor+2,f
  4240  0FA1  0CA1               	rrf	___llmod@divisor+1,f
  4241  0FA2  0CA0               	rrf	___llmod@divisor,f
  4242  0FA3  0BFD               	decfsz	___llmod@counter,f
  4243  0FA4  2F80               	goto	l5241
  4244  0FA5                     l5249:	
  4245  0FA5  0827               	movf	___llmod@dividend+3,w
  4246  0FA6  00A3               	movwf	?___llmod+3
  4247  0FA7  0826               	movf	___llmod@dividend+2,w
  4248  0FA8  00A2               	movwf	?___llmod+2
  4249  0FA9  0825               	movf	___llmod@dividend+1,w
  4250  0FAA  00A1               	movwf	?___llmod+1
  4251  0FAB  0824               	movf	___llmod@dividend,w
  4252  0FAC  00A0               	movwf	?___llmod
  4253  0FAD  0008               	return
  4254  0FAE                     __end_of___llmod:	
  4255  0FAE                     __ptext577:	
  4256 ;; =============== function ___lldiv ends ============
  4257                           
  4258                           
  4259 ;; *************** function ___ftge *****************
  4260 ;; Defined at:
  4261 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftge.c"
  4262 ;; Parameters:    Size  Location     Type
  4263 ;;  ff1             3    0[COMMON] float 
  4264 ;;  ff2             3    3[COMMON] float 
  4265 ;; Auto vars:     Size  Location     Type
  4266 ;;		None
  4267 ;; Return value:  Size  Location     Type
  4268 ;;		None               void
  4269 ;; Registers used:
  4270 ;;		wreg, status,2, status,0
  4271 ;; Tracked objects:
  4272 ;;		On entry : 40/20
  4273 ;;		On exit  : 40/20
  4274 ;;		Unchanged: FFFBF/0
  4275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4276 ;;      Params:         6       0       0       0       0
  4277 ;;      Locals:         0       0       0       0       0
  4278 ;;      Temps:          0       0       0       0       0
  4279 ;;      Totals:         6       0       0       0       0
  4280 ;;Total ram usage:        6 bytes
  4281 ;; Hardware stack levels used:    1
  4282 ;; This function calls:
  4283 ;;		Nothing
  4284 ;; This function is called by:
  4285 ;;		_main
  4286 ;;		__doprnt
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289  0FAE                     ___ftge:	
  4290                           
  4291                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  4292  0FAE  1FF2               	btfss	___ftge@ff1+2,7
  4293  0FAF  2FBD               	goto	l5265
  4294  0FB0  0870               	movf	___ftge@ff1,w
  4295  0FB1  3C00               	sublw	0
  4296  0FB2  00F0               	movwf	___ftge@ff1
  4297  0FB3  0871               	movf	___ftge@ff1+1,w
  4298  0FB4  1C03               	skipc
  4299  0FB5  0F71               	incfsz	___ftge@ff1+1,w
  4300  0FB6  3C00               	sublw	0
  4301  0FB7  00F1               	movwf	___ftge@ff1+1
  4302  0FB8  0872               	movf	___ftge@ff1+2,w
  4303  0FB9  1C03               	skipc
  4304  0FBA  0F72               	incfsz	___ftge@ff1+2,w
  4305  0FBB  3C80               	sublw	128
  4306  0FBC  00F2               	movwf	___ftge@ff1+2
  4307  0FBD                     l5265:	
  4308  0FBD  1FF5               	btfss	___ftge@ff2+2,7
  4309  0FBE  2FCC               	goto	l5269
  4310  0FBF  0873               	movf	___ftge@ff2,w
  4311  0FC0  3C00               	sublw	0
  4312  0FC1  00F3               	movwf	___ftge@ff2
  4313  0FC2  0874               	movf	___ftge@ff2+1,w
  4314  0FC3  1C03               	skipc
  4315  0FC4  0F74               	incfsz	___ftge@ff2+1,w
  4316  0FC5  3C00               	sublw	0
  4317  0FC6  00F4               	movwf	___ftge@ff2+1
  4318  0FC7  0875               	movf	___ftge@ff2+2,w
  4319  0FC8  1C03               	skipc
  4320  0FC9  0F75               	incfsz	___ftge@ff2+2,w
  4321  0FCA  3C80               	sublw	128
  4322  0FCB  00F5               	movwf	___ftge@ff2+2
  4323  0FCC                     l5269:	
  4324  0FCC  3080               	movlw	128
  4325  0FCD  06F2               	xorwf	___ftge@ff1+2,f
  4326  0FCE  06F5               	xorwf	___ftge@ff2+2,f
  4327  0FCF  0875               	movf	___ftge@ff2+2,w
  4328  0FD0  0272               	subwf	___ftge@ff1+2,w
  4329  0FD1  1D03               	skipz
  4330  0FD2  0008               	return
  4331  0FD3  0874               	movf	___ftge@ff2+1,w
  4332  0FD4  0271               	subwf	___ftge@ff1+1,w
  4333  0FD5  1D03               	skipz
  4334  0FD6  0008               	return
  4335  0FD7  0873               	movf	___ftge@ff2,w
  4336  0FD8  0270               	subwf	___ftge@ff1,w
  4337  0FD9  0008               	return
  4338  0FDA                     __end_of___ftge:	
  4339  0FDA                     __ptext578:	
  4340 ;; =============== function ___ftge ends ============
  4341                           
  4342                           
  4343 ;; *************** function ___ftneg *****************
  4344 ;; Defined at:
  4345 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftneg.c"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;  f1              3    0[COMMON] float 
  4348 ;; Auto vars:     Size  Location     Type
  4349 ;;		None
  4350 ;; Return value:  Size  Location     Type
  4351 ;;                  3    0[COMMON] float 
  4352 ;; Registers used:
  4353 ;;		wreg
  4354 ;; Tracked objects:
  4355 ;;		On entry : 160/0
  4356 ;;		On exit  : 160/0
  4357 ;;		Unchanged: FFE9F/0
  4358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4359 ;;      Params:         3       0       0       0       0
  4360 ;;      Locals:         0       0       0       0       0
  4361 ;;      Temps:          0       0       0       0       0
  4362 ;;      Totals:         3       0       0       0       0
  4363 ;;Total ram usage:        3 bytes
  4364 ;; Hardware stack levels used:    1
  4365 ;; This function calls:
  4366 ;;		Nothing
  4367 ;; This function is called by:
  4368 ;;		__doprnt
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371  0FDA                     ___ftneg:	
  4372                           
  4373                           ; Regs used in ___ftneg: [wreg]
  4374  0FDA  0872               	movf	___ftneg@f1+2,w
  4375  0FDB  0471               	iorwf	___ftneg@f1+1,w
  4376  0FDC  0470               	iorwf	___ftneg@f1,w
  4377  0FDD  1903               	skipnz
  4378  0FDE  0008               	return
  4379  0FDF  3080               	movlw	128
  4380  0FE0  06F2               	xorwf	___ftneg@f1+2,f
  4381  0FE1  0008               	return
  4382  0FE2                     __end_of___ftneg:	
  4383  0FE2                     __ptext571:	
  4384 ;; =============== function _lcd_write ends ============
  4385                           
  4386                           
  4387 ;; *************** function ___lltoft *****************
  4388 ;; Defined at:
  4389 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lltoft.c"
  4390 ;; Parameters:    Size  Location     Type
  4391 ;;  c               4    8[COMMON] unsigned long 
  4392 ;; Auto vars:     Size  Location     Type
  4393 ;;  exp             1   12[COMMON] unsigned char 
  4394 ;; Return value:  Size  Location     Type
  4395 ;;                  3    8[COMMON] float 
  4396 ;; Registers used:
  4397 ;;		wreg, status,2, status,0, pclath, cstack
  4398 ;; Tracked objects:
  4399 ;;		On entry : 60/0
  4400 ;;		On exit  : 60/0
  4401 ;;		Unchanged: FFF9F/0
  4402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4403 ;;      Params:         4       0       0       0       0
  4404 ;;      Locals:         1       0       0       0       0
  4405 ;;      Temps:          0       0       0       0       0
  4406 ;;      Totals:         5       0       0       0       0
  4407 ;;Total ram usage:        5 bytes
  4408 ;; Hardware stack levels used:    1
  4409 ;; Hardware stack levels required when called:    1
  4410 ;; This function calls:
  4411 ;;		___ftpack
  4412 ;; This function is called by:
  4413 ;;		__doprnt
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416  0FE2                     ___lltoft:	
  4417                           
  4418                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  4419  0FE2  308E               	movlw	142
  4420  0FE3  00FC               	movwf	___lltoft@exp
  4421  0FE4                     l5489:	
  4422  0FE4  30FF               	movlw	255
  4423  0FE5  057B               	andwf	___lltoft@c+3,w
  4424  0FE6  1903               	btfsc	3,2
  4425  0FE7  2FEF               	goto	l5491
  4426  0FE8  1003               	clrc
  4427  0FE9  0CFB               	rrf	___lltoft@c+3,f
  4428  0FEA  0CFA               	rrf	___lltoft@c+2,f
  4429  0FEB  0CF9               	rrf	___lltoft@c+1,f
  4430  0FEC  0CF8               	rrf	___lltoft@c,f
  4431  0FED  0AFC               	incf	___lltoft@exp,f
  4432  0FEE  2FE4               	goto	l5489
  4433  0FEF                     l5491:	
  4434  0FEF  0878               	movf	___lltoft@c,w
  4435  0FF0  00F0               	movwf	?___ftpack
  4436  0FF1  0879               	movf	___lltoft@c+1,w
  4437  0FF2  00F1               	movwf	?___ftpack+1
  4438  0FF3  087A               	movf	___lltoft@c+2,w
  4439  0FF4  00F2               	movwf	?___ftpack+2
  4440  0FF5  087C               	movf	___lltoft@exp,w
  4441  0FF6  00F3               	movwf	?___ftpack+3
  4442  0FF7  01F4               	clrf	?___ftpack+4
  4443  0FF8  2661               	fcall	___ftpack
  4444  0FF9  0870               	movf	?___ftpack,w
  4445  0FFA  00F8               	movwf	?___lltoft
  4446  0FFB  0871               	movf	?___ftpack+1,w
  4447  0FFC  00F9               	movwf	?___lltoft+1
  4448  0FFD  0872               	movf	?___ftpack+2,w
  4449  0FFE  00FA               	movwf	?___lltoft+2
  4450  0FFF  0008               	return
  4451  1000                     __end_of___lltoft:	
  4452                           
  4453                           	psect	text561
  4454  07E1                     __ptext561:	
  4455 ;; =============== function _sprintf ends ============
  4456                           
  4457                           
  4458 ;; *************** function _printf *****************
  4459 ;; Defined at:
  4460 ;;		line 14 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\printf.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;  f               1    wreg     PTR const unsigned char 
  4463 ;;		 -> STR_13(19), STR_11(19), STR_9(19), STR_7(25), 
  4464 ;;		 -> STR_5(2), STR_3(2), STR_1(2), 
  4465 ;; Auto vars:     Size  Location     Type
  4466 ;;  f               1    2[BANK1 ] PTR const unsigned char 
  4467 ;;		 -> STR_13(19), STR_11(19), STR_9(19), STR_7(25), 
  4468 ;;		 -> STR_5(2), STR_3(2), STR_1(2), 
  4469 ;;  pb              2    4[BANK1 ] struct __prbuf
  4470 ;;  ap              1    3[BANK1 ] PTR void [1]
  4471 ;;		 -> ?_sprintf(2), ?_printf(2), 
  4472 ;; Return value:  Size  Location     Type
  4473 ;;                  2    0[BANK1 ] int 
  4474 ;; Registers used:
  4475 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4476 ;; Tracked objects:
  4477 ;;		On entry : 40/0
  4478 ;;		On exit  : 60/0
  4479 ;;		Unchanged: 0/0
  4480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4481 ;;      Params:         0       0       2       0       0
  4482 ;;      Locals:         0       0       4       0       0
  4483 ;;      Temps:          0       0       0       0       0
  4484 ;;      Totals:         0       0       6       0       0
  4485 ;;Total ram usage:        6 bytes
  4486 ;; Hardware stack levels used:    1
  4487 ;; Hardware stack levels required when called:    4
  4488 ;; This function calls:
  4489 ;;		__doprnt
  4490 ;; This function is called by:
  4491 ;;		_main
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494  07E1                     _printf:	
  4495                           
  4496                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4497                           ;printf@f stored from wreg
  4498  07E1  1683               	bsf	3,5	;RP0=1, select bank1
  4499  07E2  00A2               	movwf	printf@f^(0+128)
  4500  07E3  3001               	movlw	(fp__putch-fpbase)& (0+255)
  4501  07E4  01A4               	clrf	printf@pb^(0+128)
  4502  07E5  00A5               	movwf	(printf@pb+1)^(0+128)
  4503  07E6  30A0               	movlw	?_printf& (0+255)
  4504  07E7  00A3               	movwf	printf@ap^(0+128)
  4505                           
  4506                           ;	Return value of _printf is never used
  4507  07E8  0822               	movf	printf@f^(0+128),w
  4508  07E9  1283               	bcf	3,5	;RP0=0, select bank0
  4509  07EA  00D2               	movwf	?__doprnt
  4510  07EB  30A3               	movlw	printf@ap& (0+255)
  4511  07EC  00D3               	movwf	?__doprnt+1
  4512  07ED  30A4               	movlw	printf@pb& (0+255)
  4513  07EE  120A  158A  2815   	ljmp	__doprnt
  4514  07F1                     __end_of_printf:	
  4515                           
  4516                           	psect	text565
  4517  02B4                     __ptext565:	
  4518 ;; =============== function _lcd_puts ends ============
  4519                           
  4520                           
  4521 ;; *************** function _lcd_goto *****************
  4522 ;; Defined at:
  4523 ;;		line 209 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\USART1\USART1.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  pos             1    wreg     unsigned char 
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;  pos             1    5[COMMON] unsigned char 
  4528 ;; Return value:  Size  Location     Type
  4529 ;;		None               void
  4530 ;; Registers used:
  4531 ;;		wreg, status,2, status,0, pclath, cstack
  4532 ;; Tracked objects:
  4533 ;;		On entry : 40/0
  4534 ;;		On exit  : 60/0
  4535 ;;		Unchanged: FFF9F/0
  4536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4537 ;;      Params:         0       0       0       0       0
  4538 ;;      Locals:         1       0       0       0       0
  4539 ;;      Temps:          0       0       0       0       0
  4540 ;;      Totals:         1       0       0       0       0
  4541 ;;Total ram usage:        1 bytes
  4542 ;; Hardware stack levels used:    1
  4543 ;; Hardware stack levels required when called:    3
  4544 ;; This function calls:
  4545 ;;		_lcd_write
  4546 ;; This function is called by:
  4547 ;;		_main
  4548 ;; This function uses a non-reentrant model
  4549 ;;
  4550  02B4                     _lcd_goto:	
  4551                           
  4552                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  4553                           ;lcd_goto@pos stored from wreg
  4554  02B4  00F5               	movwf	lcd_goto@pos
  4555                           
  4556                           ;USART1.c: 210: RC4 = 0;
  4557  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  4558  02B6  1207               	bcf	7,4
  4559                           
  4560                           ;USART1.c: 211: lcd_write(0x80 + pos);
  4561  02B7  0875               	movf	lcd_goto@pos,w
  4562  02B8  3E80               	addlw	128
  4563  02B9  2B22               	ljmp	_lcd_write
  4564  02BA                     __end_of_lcd_goto:	
  4565  02BA                     __ptext564:	
  4566 ;; =============== function __doprnt ends ============
  4567                           
  4568                           
  4569 ;; *************** function _lcd_puts *****************
  4570 ;; Defined at:
  4571 ;;		line 196 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\USART1\USART1.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;  s               2    5[COMMON] PTR const unsigned char 
  4574 ;;		 -> STR_8(13), carac(1), 
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;		None
  4577 ;; Return value:  Size  Location     Type
  4578 ;;		None               void
  4579 ;; Registers used:
  4580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4581 ;; Tracked objects:
  4582 ;;		On entry : 40/20
  4583 ;;		On exit  : 60/0
  4584 ;;		Unchanged: FFE9F/0
  4585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4586 ;;      Params:         2       0       0       0       0
  4587 ;;      Locals:         0       0       0       0       0
  4588 ;;      Temps:          0       0       0       0       0
  4589 ;;      Totals:         2       0       0       0       0
  4590 ;;Total ram usage:        2 bytes
  4591 ;; Hardware stack levels used:    1
  4592 ;; Hardware stack levels required when called:    3
  4593 ;; This function calls:
  4594 ;;		_lcd_write
  4595 ;; This function is called by:
  4596 ;;		_main
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599  02BA                     _lcd_puts:	
  4600                           
  4601                           ;USART1.c: 197: RC4 = 1;
  4602                           
  4603                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4604  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  4605  02BB  1607               	bsf	7,4
  4606  02BC                     l5591:	
  4607                           ;USART1.c: 198: while(*s)
  4608                           
  4609  02BC  0876               	movf	lcd_puts@s+1,w
  4610  02BD  00FF               	movwf	127
  4611  02BE  0875               	movf	lcd_puts@s,w
  4612  02BF  0084               	movwf	4
  4613  02C0  120A  118A  2003   	fcall	stringtab
      +       120A  118A         
  4614  02C5  3800               	iorlw	0
  4615  02C6  1903               	btfsc	3,2
  4616  02C7  0008               	return
  4617                           
  4618                           ;USART1.c: 199: lcd_write(*s++);
  4619  02C8  0876               	movf	lcd_puts@s+1,w
  4620  02C9  00FF               	movwf	127
  4621  02CA  0875               	movf	lcd_puts@s,w
  4622  02CB  0084               	movwf	4
  4623  02CC  120A  118A  2003   	fcall	stringtab
      +       120A  118A         
  4624  02D1  2322  120A  118A   	fcall	_lcd_write
  4625  02D4  0AF5               	incf	lcd_puts@s,f
  4626  02D5  1903               	skipnz
  4627  02D6  0AF6               	incf	lcd_puts@s+1,f
  4628  02D7  2ABC               	goto	l5591
  4629  02D8                     __end_of_lcd_puts:	
  4630  02D8                     __ptext562:	
  4631 ;; =============== function _printf ends ============
  4632                           
  4633                           
  4634 ;; *************** function _lcd_init *****************
  4635 ;; Defined at:
  4636 ;;		line 215 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\USART1\USART1.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;		None
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;  init_value      1    0        unsigned char 
  4641 ;; Return value:  Size  Location     Type
  4642 ;;		None               void
  4643 ;; Registers used:
  4644 ;;		wreg, status,2, status,0, pclath, cstack
  4645 ;; Tracked objects:
  4646 ;;		On entry : 17F/20
  4647 ;;		On exit  : 17F/0
  4648 ;;		Unchanged: FFE80/0
  4649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4650 ;;      Params:         0       0       0       0       0
  4651 ;;      Locals:         1       0       0       0       0
  4652 ;;      Temps:          0       0       0       0       0
  4653 ;;      Totals:         1       0       0       0       0
  4654 ;;Total ram usage:        1 bytes
  4655 ;; Hardware stack levels used:    1
  4656 ;; Hardware stack levels required when called:    4
  4657 ;; This function calls:
  4658 ;;		_pause
  4659 ;;		_lcd_write
  4660 ;;		_lcd_clear
  4661 ;; This function is called by:
  4662 ;;		_main
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665  02D8                     _lcd_init:	
  4666                           
  4667                           ;USART1.c: 220: RC4 = 0;
  4668                           
  4669                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4670  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  4671  02D9  300F               	movlw	15
  4672  02DA  1207               	bcf	7,4
  4673                           
  4674                           ;USART1.c: 221: RC0 = 0;
  4675  02DB  1007               	bcf	7,0
  4676                           
  4677                           ;USART1.c: 222: RC3 = 0;
  4678  02DC  1187               	bcf	7,3
  4679                           
  4680                           ;USART1.c: 224: pause(15);
  4681  02DD  00F0               	movwf	?_pause
  4682  02DE  01F1               	clrf	?_pause+1
  4683  02DF  2311  120A  118A   	fcall	_pause
  4684                           
  4685                           ;USART1.c: 225: PORTD = init_value;
  4686  02E2  3003               	movlw	3
  4687  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  4688  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  4689  02E5  0088               	movwf	8	;volatile
  4690  02E6  300A               	movlw	10
  4691                           
  4692                           ;USART1.c: 226: ((RC0 = 1),(RC0=0));
  4693  02E7  1407               	bsf	7,0
  4694  02E8  1007               	bcf	7,0
  4695                           
  4696                           ;USART1.c: 227: pause(10);
  4697  02E9  00F0               	movwf	?_pause
  4698  02EA  01F1               	clrf	?_pause+1
  4699  02EB  2311  120A  118A   	fcall	_pause
  4700                           
  4701                           ;USART1.c: 228: ((RC0 = 1),(RC0=0));
  4702                           
  4703                           ;USART1.c: 229: pause(10);
  4704  02EE  234A  120A  118A   	fcall	PL19	;call to abstracted procedure
  4705  02F1  2311  120A  118A   	fcall	_pause
  4706                           
  4707                           ;USART1.c: 230: ((RC0 = 1),(RC0=0));
  4708                           
  4709                           ;USART1.c: 231: pause(10);
  4710  02F4  234A  120A  118A   	fcall	PL19	;call to abstracted procedure
  4711  02F7  2311  120A  118A   	fcall	_pause
  4712                           
  4713                           ;USART1.c: 232: PORTD= 2;
  4714  02FA  3002               	movlw	2
  4715  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  4716  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  4717  02FD  0088               	movwf	8	;volatile
  4718  02FE  3028               	movlw	40
  4719                           
  4720                           ;USART1.c: 233: ((RC0 = 1),(RC0=0));
  4721  02FF  1407               	bsf	7,0
  4722  0300  1007               	bcf	7,0
  4723                           
  4724                           ;USART1.c: 235: lcd_write(0x28);
  4725  0301  2322  120A  118A   	fcall	_lcd_write
  4726                           
  4727                           ;USART1.c: 236: lcd_write(0x0C);
  4728  0304  300C               	movlw	12
  4729  0305  2322  120A  118A   	fcall	_lcd_write
  4730                           
  4731                           ;USART1.c: 237: lcd_write(0x0F);
  4732  0308  300F               	movlw	15
  4733  0309  2322  120A  118A   	fcall	_lcd_write
  4734                           
  4735                           ;USART1.c: 238: lcd_clear();
  4736  030C  2341  120A  118A   	fcall	_lcd_clear
  4737                           
  4738                           ;USART1.c: 239: lcd_write(0x06);
  4739  030F  3006               	movlw	6
  4740  0310  2B22               	ljmp	_lcd_write
  4741  0311                     __end_of_lcd_init:	
  4742  0311                     __ptext574:	
  4743 ;; =============== function ___ftadd ends ============
  4744                           
  4745                           
  4746 ;; *************** function _pause *****************
  4747 ;; Defined at:
  4748 ;;		line 243 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\USART1\USART1.c"
  4749 ;; Parameters:    Size  Location     Type
  4750 ;;  usvalue         2    0[COMMON] unsigned short 
  4751 ;; Auto vars:     Size  Location     Type
  4752 ;;  x               2    2[COMMON] unsigned short 
  4753 ;; Return value:  Size  Location     Type
  4754 ;;		None               void
  4755 ;; Registers used:
  4756 ;;		wreg, status,2, status,0, pclath, cstack
  4757 ;; Tracked objects:
  4758 ;;		On entry : 0/0
  4759 ;;		On exit  : 0/0
  4760 ;;		Unchanged: FFF9F/0
  4761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4762 ;;      Params:         2       0       0       0       0
  4763 ;;      Locals:         2       0       0       0       0
  4764 ;;      Temps:          0       0       0       0       0
  4765 ;;      Totals:         4       0       0       0       0
  4766 ;;Total ram usage:        4 bytes
  4767 ;; Hardware stack levels used:    1
  4768 ;; Hardware stack levels required when called:    1
  4769 ;; This function calls:
  4770 ;;		_msecbase
  4771 ;; This function is called by:
  4772 ;;		_lcd_write
  4773 ;;		_lcd_clear
  4774 ;;		_lcd_init
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777  0311                     _pause:	
  4778  0311                     l5343:	
  4779                           ; Regs used in _pause: [wreg+status,2+status,0+pclath+cstack]
  4780                           
  4781                           
  4782                           ;USART1.c: 244: unsigned short x;
  4783                           ;USART1.c: 246: for (x=0; x<=usvalue; x++)
  4784  0311  01F2               	clrf	pause@x
  4785  0312  01F3               	clrf	pause@x+1
  4786  0313                     l5349:	
  4787  0313  0873               	movf	pause@x+1,w
  4788  0314  0271               	subwf	pause@usvalue+1,w
  4789  0315  1D03               	skipz
  4790  0316  2B19               	goto	u2295
  4791  0317  0872               	movf	pause@x,w
  4792  0318  0270               	subwf	pause@usvalue,w
  4793  0319                     u2295:	
  4794  0319  1C03               	btfss	3,0
  4795  031A  0008               	return
  4796                           
  4797                           ;USART1.c: 247: {
  4798                           ;USART1.c: 248: msecbase();
  4799  031B  2334  120A  118A   	fcall	_msecbase
  4800  031E  0AF2               	incf	pause@x,f
  4801  031F  1903               	skipnz
  4802  0320  0AF3               	incf	pause@x+1,f
  4803  0321  2B13               	goto	l5349
  4804  0322                     __end_of_pause:	
  4805  0322                     __ptext570:	
  4806 ;; =============== function _fround ends ============
  4807                           
  4808                           
  4809 ;; *************** function _lcd_write *****************
  4810 ;; Defined at:
  4811 ;;		line 180 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\USART1\USART1.c"
  4812 ;; Parameters:    Size  Location     Type
  4813 ;;  c               1    wreg     unsigned char 
  4814 ;; Auto vars:     Size  Location     Type
  4815 ;;  c               1    4[COMMON] unsigned char 
  4816 ;; Return value:  Size  Location     Type
  4817 ;;		None               void
  4818 ;; Registers used:
  4819 ;;		wreg, status,2, status,0, pclath, cstack
  4820 ;; Tracked objects:
  4821 ;;		On entry : 0/0
  4822 ;;		On exit  : 60/0
  4823 ;;		Unchanged: FFF9F/0
  4824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4825 ;;      Params:         0       0       0       0       0
  4826 ;;      Locals:         1       0       0       0       0
  4827 ;;      Temps:          0       0       0       0       0
  4828 ;;      Totals:         1       0       0       0       0
  4829 ;;Total ram usage:        1 bytes
  4830 ;; Hardware stack levels used:    1
  4831 ;; Hardware stack levels required when called:    2
  4832 ;; This function calls:
  4833 ;;		_pause
  4834 ;; This function is called by:
  4835 ;;		_lcd_clear
  4836 ;;		_lcd_puts
  4837 ;;		_lcd_goto
  4838 ;;		_lcd_init
  4839 ;; This function uses a non-reentrant model
  4840 ;;
  4841  0322                     _lcd_write:	
  4842                           
  4843                           ; Regs used in _lcd_write: [wreg+status,2+status,0+pclath+cstack]
  4844                           ;lcd_write@c stored from wreg
  4845  0322  00F4               	movwf	lcd_write@c
  4846                           
  4847                           ;USART1.c: 181: pause(1);
  4848  0323  01F0               	clrf	?_pause
  4849  0324  0AF0               	incf	?_pause,f
  4850  0325  01F1               	clrf	?_pause+1
  4851  0326  2311               	fcall	_pause
  4852                           
  4853                           ;USART1.c: 182: PORTD = ( ( c >> 4) & 0x0F);
  4854  0327  0E74               	swapf	lcd_write@c,w
  4855  0328  390F               	andlw	15
  4856  0329  1283               	bcf	3,5	;RP0=0, select bank0
  4857  032A  1303               	bcf	3,6	;RP1=0, select bank0
  4858  032B  0088               	movwf	8	;volatile
  4859                           
  4860                           ;USART1.c: 183: ((RC0 = 1),(RC0=0));
  4861  032C  1407               	bsf	7,0
  4862  032D  1007               	bcf	7,0
  4863                           
  4864                           ;USART1.c: 184: PORTD = (c & 0x0F);
  4865  032E  0874               	movf	lcd_write@c,w
  4866  032F  390F               	andlw	15
  4867  0330  0088               	movwf	8	;volatile
  4868                           
  4869                           ;USART1.c: 185: ((RC0 = 1),(RC0=0));
  4870  0331  1407               	bsf	7,0
  4871  0332  1007               	bcf	7,0
  4872  0333  0008               	return
  4873  0334                     __end_of_lcd_write:	
  4874  0334                     __ptext589:	
  4875 ;; =============== function __tdiv_to_l_ ends ============
  4876                           
  4877                           
  4878 ;; *************** function _msecbase *****************
  4879 ;; Defined at:
  4880 ;;		line 253 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\USART1\USART1.c"
  4881 ;; Parameters:    Size  Location     Type
  4882 ;;		None
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;		None
  4885 ;; Return value:  Size  Location     Type
  4886 ;;		None               void
  4887 ;; Registers used:
  4888 ;;		wreg
  4889 ;; Tracked objects:
  4890 ;;		On entry : 0/0
  4891 ;;		On exit  : 0/0
  4892 ;;		Unchanged: FFF9F/0
  4893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4894 ;;      Params:         0       0       0       0       0
  4895 ;;      Locals:         0       0       0       0       0
  4896 ;;      Temps:          0       0       0       0       0
  4897 ;;      Totals:         0       0       0       0       0
  4898 ;;Total ram usage:        0 bytes
  4899 ;; Hardware stack levels used:    1
  4900 ;; This function calls:
  4901 ;;		Nothing
  4902 ;; This function is called by:
  4903 ;;		_pause
  4904 ;; This function uses a non-reentrant model
  4905 ;;
  4906  0334                     _msecbase:	
  4907                           
  4908                           ;USART1.c: 254: OPTION_REG = 0b11010001;
  4909                           
  4910                           ; Regs used in _msecbase: [wreg]
  4911  0334  30D1               	movlw	209
  4912  0335  1683               	bsf	3,5	;RP0=1, select bank1
  4913  0336  1303               	bcf	3,6	;RP1=0, select bank1
  4914  0337  0081               	movwf	1	;volatile
  4915                           
  4916                           ;USART1.c: 255: TMR0 = 0x0E;
  4917  0338  300E               	movlw	14
  4918  0339  1283               	bcf	3,5	;RP0=0, select bank0
  4919  033A  0081               	movwf	1	;volatile
  4920                           
  4921                           ;USART1.c: 256: TMR0 = 0x8E;
  4922  033B  308E               	movlw	142
  4923  033C  0081               	movwf	1	;volatile
  4924  033D                     l1111:	
  4925                           ;USART1.c: 257: while(!T0IF);
  4926                           
  4927  033D  1D0B               	btfss	11,2
  4928  033E  2B3D               	goto	l1111
  4929                           
  4930                           ;USART1.c: 258: T0IF = 0;
  4931  033F  110B               	bcf	11,2
  4932  0340  0008               	return
  4933  0341                     __end_of_msecbase:	
  4934  0341                     __ptext566:	
  4935 ;; =============== function _lcd_goto ends ============
  4936                           
  4937                           
  4938 ;; *************** function _lcd_clear *****************
  4939 ;; Defined at:
  4940 ;;		line 189 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\USART1\USART1.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;		None
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;		None
  4945 ;; Return value:  Size  Location     Type
  4946 ;;		None               void
  4947 ;; Registers used:
  4948 ;;		wreg, status,2, status,0, pclath, cstack
  4949 ;; Tracked objects:
  4950 ;;		On entry : 17F/0
  4951 ;;		On exit  : 11F/0
  4952 ;;		Unchanged: FFE80/0
  4953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4954 ;;      Params:         0       0       0       0       0
  4955 ;;      Locals:         0       0       0       0       0
  4956 ;;      Temps:          0       0       0       0       0
  4957 ;;      Totals:         0       0       0       0       0
  4958 ;;Total ram usage:        0 bytes
  4959 ;; Hardware stack levels used:    1
  4960 ;; Hardware stack levels required when called:    3
  4961 ;; This function calls:
  4962 ;;		_lcd_write
  4963 ;;		_pause
  4964 ;; This function is called by:
  4965 ;;		_main
  4966 ;;		_lcd_init
  4967 ;; This function uses a non-reentrant model
  4968 ;;
  4969  0341                     _lcd_clear:	
  4970  0341  3001               	movlw	1
  4971                           
  4972                           ;USART1.c: 190: RC4 = 0;
  4973                           
  4974                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  4975  0342  1207               	bcf	7,4
  4976                           
  4977                           ;USART1.c: 191: lcd_write(0x01);
  4978  0343  2322  120A  118A   	fcall	_lcd_write
  4979                           
  4980                           ;USART1.c: 192: pause (2);
  4981  0346  3002               	movlw	2
  4982  0347  00F0               	movwf	?_pause
  4983  0348  01F1               	clrf	?_pause+1
  4984  0349  2B11               	ljmp	l5343
  4985  034A                     __end_of_lcd_clear:	
  4986  034A                     PL19:	
  4987  034A  1283               	bcf	3,5	;RP0=0, select bank0
  4988  034B  1303               	bcf	3,6	;RP1=0, select bank0
  4989  034C  300A               	movlw	10
  4990  034D  1407               	bsf	7,0
  4991  034E  1007               	bcf	7,0
  4992  034F  00F0               	movwf	?_pause
  4993  0350  01F1               	clrf	?_pause+1
  4994  0351  0008               	return
  4995                           
  4996                           	psect	text567
  4997  0709                     __ptext567:	
  4998 ;; =============== function _lcd_clear ends ============
  4999                           
  5000                           
  5001 ;; *************** function ___ftsub *****************
  5002 ;; Defined at:
  5003 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftsub.c"
  5004 ;; Parameters:    Size  Location     Type
  5005 ;;  f2              3   40[BANK0 ] float 
  5006 ;;  f1              3   43[BANK0 ] float 
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;		None
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  3   40[BANK0 ] float 
  5011 ;; Registers used:
  5012 ;;		wreg, status,2, status,0, pclath, cstack
  5013 ;; Tracked objects:
  5014 ;;		On entry : 60/0
  5015 ;;		On exit  : 60/0
  5016 ;;		Unchanged: FFF9F/0
  5017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5018 ;;      Params:         0       6       0       0       0
  5019 ;;      Locals:         0       0       0       0       0
  5020 ;;      Temps:          0       0       0       0       0
  5021 ;;      Totals:         0       6       0       0       0
  5022 ;;Total ram usage:        6 bytes
  5023 ;; Hardware stack levels used:    1
  5024 ;; Hardware stack levels required when called:    2
  5025 ;; This function calls:
  5026 ;;		___ftadd
  5027 ;; This function is called by:
  5028 ;;		__doprnt
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031  0709                     ___ftsub:	
  5032                           
  5033                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  5034  0709  3080               	movlw	128
  5035  070A  06CA               	xorwf	___ftsub@f2+2,f
  5036  070B  084B               	movf	___ftsub@f1,w
  5037  070C  00BC               	movwf	?___ftadd
  5038  070D  084C               	movf	___ftsub@f1+1,w
  5039  070E  00BD               	movwf	?___ftadd+1
  5040  070F  084D               	movf	___ftsub@f1+2,w
  5041  0710  00BE               	movwf	?___ftadd+2
  5042  0711  0848               	movf	___ftsub@f2,w
  5043  0712  00BF               	movwf	?___ftadd+3
  5044  0713  0849               	movf	___ftsub@f2+1,w
  5045  0714  00C0               	movwf	?___ftadd+4
  5046  0715  084A               	movf	___ftsub@f2+2,w
  5047  0716  00C1               	movwf	?___ftadd+5
  5048  0717  271F               	fcall	___ftadd
  5049  0718  083C               	movf	?___ftadd,w
  5050  0719  00C8               	movwf	?___ftsub
  5051  071A  083D               	movf	?___ftadd+1,w
  5052  071B  00C9               	movwf	?___ftsub+1
  5053  071C  083E               	movf	?___ftadd+2,w
  5054  071D  00CA               	movwf	?___ftsub+2
  5055  071E  0008               	return
  5056  071F                     __end_of___ftsub:	
  5057  071F                     __ptext573:	
  5058 ;; =============== function ___ftmul ends ============
  5059                           
  5060                           
  5061 ;; *************** function ___ftadd *****************
  5062 ;; Defined at:
  5063 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftadd.c"
  5064 ;; Parameters:    Size  Location     Type
  5065 ;;  f1              3   28[BANK0 ] float 
  5066 ;;  f2              3   31[BANK0 ] float 
  5067 ;; Auto vars:     Size  Location     Type
  5068 ;;  exp1            1   39[BANK0 ] unsigned char 
  5069 ;;  exp2            1   38[BANK0 ] unsigned char 
  5070 ;;  sign            1   37[BANK0 ] unsigned char 
  5071 ;; Return value:  Size  Location     Type
  5072 ;;                  3   28[BANK0 ] float 
  5073 ;; Registers used:
  5074 ;;		wreg, status,2, status,0, pclath, cstack
  5075 ;; Tracked objects:
  5076 ;;		On entry : 60/0
  5077 ;;		On exit  : 60/0
  5078 ;;		Unchanged: FFF9F/0
  5079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5080 ;;      Params:         0       6       0       0       0
  5081 ;;      Locals:         0       3       0       0       0
  5082 ;;      Temps:          0       3       0       0       0
  5083 ;;      Totals:         0      12       0       0       0
  5084 ;;Total ram usage:       12 bytes
  5085 ;; Hardware stack levels used:    1
  5086 ;; Hardware stack levels required when called:    1
  5087 ;; This function calls:
  5088 ;;		___ftpack
  5089 ;; This function is called by:
  5090 ;;		_main
  5091 ;;		__doprnt
  5092 ;;		___ftsub
  5093 ;; This function uses a non-reentrant model
  5094 ;;
  5095  071F                     ___ftadd:	
  5096                           
  5097                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5098  071F  083C               	movf	___ftadd@f1,w
  5099  0720  00C2               	movwf	??___ftadd
  5100  0721  083D               	movf	___ftadd@f1+1,w
  5101  0722  00C3               	movwf	??___ftadd+1
  5102  0723  083E               	movf	___ftadd@f1+2,w
  5103  0724  00C4               	movwf	??___ftadd+2
  5104  0725  1003               	clrc
  5105  0726  0D43               	rlf	??___ftadd+1,w
  5106  0727  0D44               	rlf	??___ftadd+2,w
  5107  0728  00C7               	movwf	___ftadd@exp1
  5108  0729  083F               	movf	___ftadd@f2,w
  5109  072A  00C2               	movwf	??___ftadd
  5110  072B  0840               	movf	___ftadd@f2+1,w
  5111  072C  00C3               	movwf	??___ftadd+1
  5112  072D  0841               	movf	___ftadd@f2+2,w
  5113  072E  00C4               	movwf	??___ftadd+2
  5114  072F  1003               	clrc
  5115  0730  0D43               	rlf	??___ftadd+1,w
  5116  0731  0D44               	rlf	??___ftadd+2,w
  5117  0732  00C6               	movwf	___ftadd@exp2
  5118  0733  0847               	movf	___ftadd@exp1,w
  5119  0734  1903               	btfsc	3,2
  5120  0735  2F42               	goto	l5359
  5121  0736  0846               	movf	___ftadd@exp2,w
  5122  0737  0247               	subwf	___ftadd@exp1,w
  5123  0738  0846               	movf	___ftadd@exp2,w
  5124  0739  1803               	skipnc
  5125  073A  2F4A               	goto	L11
  5126  073B  00C2               	movwf	??___ftadd
  5127  073C  0847               	movf	___ftadd@exp1,w
  5128  073D  02C2               	subwf	??___ftadd,f
  5129  073E  3019               	movlw	25
  5130  073F  0242               	subwf	??___ftadd,w
  5131  0740  1C03               	skipc
  5132  0741  2F49               	goto	l5363
  5133  0742                     l5359:	
  5134  0742  083F               	movf	___ftadd@f2,w
  5135  0743  00BC               	movwf	?___ftadd
  5136  0744  0840               	movf	___ftadd@f2+1,w
  5137  0745  00BD               	movwf	?___ftadd+1
  5138  0746  0841               	movf	___ftadd@f2+2,w
  5139  0747  00BE               	movwf	?___ftadd+2
  5140  0748  0008               	return
  5141  0749                     l5363:	
  5142  0749  0846               	movf	___ftadd@exp2,w
  5143  074A                     L11:	
  5144  074A  1903               	btfsc	3,2
  5145  074B  0008               	return
  5146  074C  0847               	movf	___ftadd@exp1,w
  5147  074D  0246               	subwf	___ftadd@exp2,w
  5148  074E  1803               	skipnc
  5149  074F  2F58               	goto	l5369
  5150  0750  0847               	movf	___ftadd@exp1,w
  5151  0751  00C2               	movwf	??___ftadd
  5152  0752  0846               	movf	___ftadd@exp2,w
  5153  0753  02C2               	subwf	??___ftadd,f
  5154  0754  3019               	movlw	25
  5155  0755  0242               	subwf	??___ftadd,w
  5156  0756  1803               	btfsc	3,0
  5157  0757  0008               	return
  5158  0758                     l5369:	
  5159  0758  3006               	movlw	6
  5160  0759  00C5               	movwf	___ftadd@sign
  5161  075A  1BBE               	btfsc	___ftadd@f1+2,7
  5162  075B  17C5               	bsf	___ftadd@sign,7
  5163  075C  1BC1               	btfsc	___ftadd@f2+2,7
  5164  075D  1745               	bsf	___ftadd@sign,6
  5165  075E  17BD               	bsf	___ftadd@f1+1,7
  5166  075F  01BE               	clrf	___ftadd@f1+2
  5167  0760  17C0               	bsf	___ftadd@f2+1,7
  5168  0761  01C1               	clrf	___ftadd@f2+2
  5169  0762  0846               	movf	___ftadd@exp2,w
  5170  0763  0247               	subwf	___ftadd@exp1,w
  5171  0764  1803               	skipnc
  5172  0765  2F7F               	goto	l5391
  5173  0766                     l5381:	
  5174  0766  1003               	clrc
  5175  0767  0DBF               	rlf	___ftadd@f2,f
  5176  0768  0DC0               	rlf	___ftadd@f2+1,f
  5177  0769  0DC1               	rlf	___ftadd@f2+2,f
  5178  076A  03C6               	decf	___ftadd@exp2,f
  5179  076B  0846               	movf	___ftadd@exp2,w
  5180  076C  0647               	xorwf	___ftadd@exp1,w
  5181  076D  1903               	skipnz
  5182  076E  2F7A               	goto	l5389
  5183  076F  03C5               	decf	___ftadd@sign,f
  5184  0770  0845               	movf	___ftadd@sign,w
  5185  0771  3907               	andlw	7
  5186  0772  1903               	btfsc	3,2
  5187  0773  2F7A               	goto	l5389
  5188  0774  2F66               	goto	l5381
  5189  0775                     l5387:	
  5190  0775  1003               	clrc
  5191  0776  0CBE               	rrf	___ftadd@f1+2,f
  5192  0777  0CBD               	rrf	___ftadd@f1+1,f
  5193  0778  0CBC               	rrf	___ftadd@f1,f
  5194  0779  0AC7               	incf	___ftadd@exp1,f
  5195  077A                     l5389:	
  5196  077A  0847               	movf	___ftadd@exp1,w
  5197  077B  0646               	xorwf	___ftadd@exp2,w
  5198  077C  1903               	btfsc	3,2
  5199  077D  2F9B               	goto	l2282
  5200  077E  2F75               	goto	l5387
  5201  077F                     l5391:	
  5202  077F  0847               	movf	___ftadd@exp1,w
  5203  0780  0246               	subwf	___ftadd@exp2,w
  5204  0781  1803               	skipnc
  5205  0782  2F9B               	goto	l2282
  5206  0783                     l5393:	
  5207  0783  1003               	clrc
  5208  0784  0DBC               	rlf	___ftadd@f1,f
  5209  0785  0DBD               	rlf	___ftadd@f1+1,f
  5210  0786  0DBE               	rlf	___ftadd@f1+2,f
  5211  0787  03C7               	decf	___ftadd@exp1,f
  5212  0788  0846               	movf	___ftadd@exp2,w
  5213  0789  0647               	xorwf	___ftadd@exp1,w
  5214  078A  1903               	skipnz
  5215  078B  2F97               	goto	l5401
  5216  078C  03C5               	decf	___ftadd@sign,f
  5217  078D  0845               	movf	___ftadd@sign,w
  5218  078E  3907               	andlw	7
  5219  078F  1903               	btfsc	3,2
  5220  0790  2F97               	goto	l5401
  5221  0791  2F83               	goto	l5393
  5222  0792                     l5399:	
  5223  0792  1003               	clrc
  5224  0793  0CC1               	rrf	___ftadd@f2+2,f
  5225  0794  0CC0               	rrf	___ftadd@f2+1,f
  5226  0795  0CBF               	rrf	___ftadd@f2,f
  5227  0796  0AC6               	incf	___ftadd@exp2,f
  5228  0797                     l5401:	
  5229  0797  0847               	movf	___ftadd@exp1,w
  5230  0798  0646               	xorwf	___ftadd@exp2,w
  5231  0799  1D03               	skipz
  5232  079A  2F92               	goto	l5399
  5233  079B                     l2282:	
  5234  079B  1FC5               	btfss	___ftadd@sign,7
  5235  079C  2FA6               	goto	l5407
  5236  079D  30FF               	movlw	255
  5237  079E  06BC               	xorwf	___ftadd@f1,f
  5238  079F  06BD               	xorwf	___ftadd@f1+1,f
  5239  07A0  06BE               	xorwf	___ftadd@f1+2,f
  5240  07A1  0ABC               	incf	___ftadd@f1,f
  5241  07A2  1903               	skipnz
  5242  07A3  0ABD               	incf	___ftadd@f1+1,f
  5243  07A4  1903               	skipnz
  5244  07A5  0ABE               	incf	___ftadd@f1+2,f
  5245  07A6                     l5407:	
  5246  07A6  1F45               	btfss	___ftadd@sign,6
  5247  07A7  2FB1               	goto	l5413
  5248  07A8  30FF               	movlw	255
  5249  07A9  06BF               	xorwf	___ftadd@f2,f
  5250  07AA  06C0               	xorwf	___ftadd@f2+1,f
  5251  07AB  06C1               	xorwf	___ftadd@f2+2,f
  5252  07AC  0ABF               	incf	___ftadd@f2,f
  5253  07AD  1903               	skipnz
  5254  07AE  0AC0               	incf	___ftadd@f2+1,f
  5255  07AF  1903               	skipnz
  5256  07B0  0AC1               	incf	___ftadd@f2+2,f
  5257  07B1                     l5413:	
  5258  07B1  01C5               	clrf	___ftadd@sign
  5259  07B2  083C               	movf	___ftadd@f1,w
  5260  07B3  07BF               	addwf	___ftadd@f2,f
  5261  07B4  083D               	movf	___ftadd@f1+1,w
  5262  07B5  1103               	clrz
  5263  07B6  1803               	skipnc
  5264  07B7  0A3D               	incf	___ftadd@f1+1,w
  5265  07B8  1D03               	btfss	3,2
  5266  07B9  07C0               	addwf	___ftadd@f2+1,f
  5267  07BA  083E               	movf	___ftadd@f1+2,w
  5268  07BB  1103               	clrz
  5269  07BC  1803               	skipnc
  5270  07BD  0A3E               	incf	___ftadd@f1+2,w
  5271  07BE  1D03               	btfss	3,2
  5272  07BF  07C1               	addwf	___ftadd@f2+2,f
  5273  07C0  1FC1               	btfss	___ftadd@f2+2,7
  5274  07C1  2FCD               	goto	l5425
  5275  07C2  30FF               	movlw	255
  5276  07C3  06BF               	xorwf	___ftadd@f2,f
  5277  07C4  06C0               	xorwf	___ftadd@f2+1,f
  5278  07C5  06C1               	xorwf	___ftadd@f2+2,f
  5279  07C6  0ABF               	incf	___ftadd@f2,f
  5280  07C7  1903               	skipnz
  5281  07C8  0AC0               	incf	___ftadd@f2+1,f
  5282  07C9  1903               	skipnz
  5283  07CA  0AC1               	incf	___ftadd@f2+2,f
  5284  07CB  01C5               	clrf	___ftadd@sign
  5285  07CC  0AC5               	incf	___ftadd@sign,f
  5286  07CD                     l5425:	
  5287  07CD  083F               	movf	___ftadd@f2,w
  5288  07CE  00F0               	movwf	?___ftpack
  5289  07CF  0840               	movf	___ftadd@f2+1,w
  5290  07D0  00F1               	movwf	?___ftpack+1
  5291  07D1  0841               	movf	___ftadd@f2+2,w
  5292  07D2  00F2               	movwf	?___ftpack+2
  5293  07D3  0847               	movf	___ftadd@exp1,w
  5294  07D4  00F3               	movwf	?___ftpack+3
  5295  07D5  0845               	movf	___ftadd@sign,w
  5296  07D6  00F4               	movwf	?___ftpack+4
  5297  07D7  120A  158A  2661   	fcall	___ftpack
  5298  07DA  0870               	movf	?___ftpack,w
  5299  07DB  00BC               	movwf	?___ftadd
  5300  07DC  0871               	movf	?___ftpack+1,w
  5301  07DD  00BD               	movwf	?___ftadd+1
  5302  07DE  0872               	movf	?___ftpack+2,w
  5303  07DF  00BE               	movwf	?___ftadd+2
  5304  07E0  0008               	return
  5305  07E1                     __end_of___ftadd:	
  5306                           
  5307                           	psect	text569
  5308  0414                     __ptext569:	
  5309 ;; =============== function _scale ends ============
  5310                           
  5311                           
  5312 ;; *************** function _fround *****************
  5313 ;; Defined at:
  5314 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;  prec            1    wreg     unsigned char 
  5317 ;; Auto vars:     Size  Location     Type
  5318 ;;  prec            1   49[BANK0 ] unsigned char 
  5319 ;; Return value:  Size  Location     Type
  5320 ;;                  3   40[BANK0 ] unsigned char 
  5321 ;; Registers used:
  5322 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5323 ;; Tracked objects:
  5324 ;;		On entry : 160/0
  5325 ;;		On exit  : 160/0
  5326 ;;		Unchanged: FFE9F/0
  5327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5328 ;;      Params:         0       3       0       0       0
  5329 ;;      Locals:         0       7       0       0       0
  5330 ;;      Temps:          0       0       0       0       0
  5331 ;;      Totals:         0      10       0       0       0
  5332 ;;Total ram usage:       10 bytes
  5333 ;; Hardware stack levels used:    1
  5334 ;; Hardware stack levels required when called:    2
  5335 ;; This function calls:
  5336 ;;		___lbmod
  5337 ;;		___bmul
  5338 ;;		___lbdiv
  5339 ;;		___ftmul
  5340 ;; This function is called by:
  5341 ;;		__doprnt
  5342 ;; This function uses a non-reentrant model
  5343 ;;
  5344  0414                     _fround:	
  5345                           
  5346                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5347                           ;fround@prec stored from wreg
  5348  0414  00D1               	movwf	fround@prec
  5349  0415  306E               	movlw	110
  5350  0416  0251               	subwf	fround@prec,w
  5351  0417  1C03               	skipc
  5352  0418  2C9E               	goto	l5519
  5353  0419  3003               	movlw	3
  5354  041A  00F9               	movwf	?___bmul
  5355  041B  300A               	movlw	10
  5356  041C  00F5               	movwf	?___lbdiv
  5357  041D  3064               	movlw	100
  5358  041E  00F0               	movwf	?___lbmod
  5359  041F  0851               	movf	fround@prec,w
  5360  0420  2533  120A  118A   	fcall	___lbmod
  5361  0423  2518               	fcall	___lbdiv
  5362  0424  120A  158A  2653   	fcall	___bmul
      +       120A  118A         
  5363  0429  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5364  042A  0084               	movwf	4
  5365  042B  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  5366  0430  00AD               	movwf	?___ftmul
  5367  0431  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  5368  0436  00AE               	movwf	?___ftmul+1
  5369  0437  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  5370  043C  00AF               	movwf	?___ftmul+2
  5371  043D  3003               	movlw	3
  5372  043E  00F9               	movwf	?___bmul
  5373  043F  3064               	movlw	100
  5374  0440  00F5               	movwf	?___lbdiv
  5375  0441  0851               	movf	fround@prec,w
  5376  0442  2518               	fcall	___lbdiv
  5377  0443  120A  158A  2653   	fcall	___bmul
      +       120A  118A         
  5378  0448  3E37               	addlw	low ((__npowers_-__stringbase+54))
  5379  0449  0084               	movwf	4
  5380  044A  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  5381  044F  00B0               	movwf	?___ftmul+3
  5382  0450  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  5383  0455  00B1               	movwf	?___ftmul+4
  5384  0456  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  5385  045B  00B2               	movwf	?___ftmul+5
  5386  045C  120A  158A  25E4   	fcall	___ftmul
      +       120A  118A         
  5387  0461  255E  120A  118A   	fcall	PL27	;call to abstracted procedure
  5388  0464  3003               	movlw	3
  5389  0465  00F9               	movwf	?___bmul
  5390  0466  300A               	movlw	10
  5391  0467  00F0               	movwf	?___lbmod
  5392  0468  0851               	movf	fround@prec,w
  5393  0469  2533               	fcall	___lbmod
  5394  046A  120A  158A  2653   	fcall	___bmul
      +       120A  118A         
  5395  046F  3E01               	addlw	low (__npowers_-__stringbase)
  5396  0470  0084               	movwf	4
  5397  0471  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  5398  0476  00AD               	movwf	?___ftmul
  5399  0477  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  5400  047C  00AE               	movwf	?___ftmul+1
  5401  047D  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  5402  0482  2556               	fcall	PL17	;call to abstracted procedure
  5403  0483  120A  158A  25E4   	fcall	___ftmul
      +       120A  118A         
  5404  0488  082D               	movf	?___ftmul,w
  5405  0489  00CB               	movwf	_fround$2903
  5406  048A  082E               	movf	?___ftmul+1,w
  5407  048B  00CC               	movwf	_fround$2903+1
  5408  048C  082F               	movf	?___ftmul+2,w
  5409  048D  00CD               	movwf	_fround$2903+2
  5410  048E  303F               	movlw	63
  5411  048F  01AD               	clrf	?___ftmul
  5412  0490  01AE               	clrf	?___ftmul+1
  5413  0491  00AF               	movwf	?___ftmul+2
  5414  0492  084B               	movf	_fround$2903,w
  5415  0493  00B0               	movwf	?___ftmul+3
  5416  0494  084C               	movf	_fround$2903+1,w
  5417  0495  00B1               	movwf	?___ftmul+4
  5418  0496  084D               	movf	_fround$2903+2,w
  5419  0497  00B2               	movwf	?___ftmul+5
  5420  0498  120A  158A  25E4   	fcall	___ftmul
      +       120A  118A         
  5421  049D  2D4F               	ljmp	PL11	;call to abstracted procedure
  5422  049E                     l5519:	
  5423  049E  300B               	movlw	11
  5424  049F  0251               	subwf	fround@prec,w
  5425  04A0  1C03               	skipc
  5426  04A1  2CF2               	goto	l5527
  5427  04A2  3003               	movlw	3
  5428  04A3  00F9               	movwf	?___bmul
  5429  04A4  300A               	movlw	10
  5430  04A5  00F0               	movwf	?___lbmod
  5431  04A6  0851               	movf	fround@prec,w
  5432  04A7  2533               	fcall	___lbmod
  5433  04A8  120A  158A  2653   	fcall	___bmul
      +       120A  118A         
  5434  04AD  3E01               	addlw	low (__npowers_-__stringbase)
  5435  04AE  0084               	movwf	4
  5436  04AF  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  5437  04B4  00AD               	movwf	?___ftmul
  5438  04B5  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  5439  04BA  00AE               	movwf	?___ftmul+1
  5440  04BB  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  5441  04C0  00AF               	movwf	?___ftmul+2
  5442  04C1  3003               	movlw	3
  5443  04C2  00F9               	movwf	?___bmul
  5444  04C3  300A               	movlw	10
  5445  04C4  00F5               	movwf	?___lbdiv
  5446  04C5  0851               	movf	fround@prec,w
  5447  04C6  2518               	fcall	___lbdiv
  5448  04C7  120A  158A  2653   	fcall	___bmul
      +       120A  118A         
  5449  04CC  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5450  04CD  0084               	movwf	4
  5451  04CE  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  5452  04D3  00B0               	movwf	?___ftmul+3
  5453  04D4  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  5454  04D9  00B1               	movwf	?___ftmul+4
  5455  04DA  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  5456  04DF  00B2               	movwf	?___ftmul+5
  5457  04E0  120A  158A  25E4   	fcall	___ftmul
      +       120A  118A         
  5458  04E5  255E  120A  118A   	fcall	PL27	;call to abstracted procedure
  5459  04E8  303F               	movlw	63
  5460  04E9  01AD               	clrf	?___ftmul
  5461  04EA  01AE               	clrf	?___ftmul+1
  5462  04EB  2556               	fcall	PL17	;call to abstracted procedure
  5463  04EC  120A  158A  25E4   	fcall	___ftmul
      +       120A  118A         
  5464  04F1  2D4F               	ljmp	PL11	;call to abstracted procedure
  5465  04F2                     l5527:	
  5466  04F2  303F               	movlw	63
  5467  04F3  01AD               	clrf	?___ftmul
  5468  04F4  01AE               	clrf	?___ftmul+1
  5469  04F5  00AF               	movwf	?___ftmul+2
  5470  04F6  3003               	movlw	3
  5471  04F7  00F9               	movwf	?___bmul
  5472  04F8  0851               	movf	fround@prec,w
  5473  04F9  120A  158A  2653   	fcall	___bmul
      +       120A  118A         
  5474  04FE  3E01               	addlw	low (__npowers_-__stringbase)
  5475  04FF  0084               	movwf	4
  5476  0500  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  5477  0505  00B0               	movwf	?___ftmul+3
  5478  0506  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  5479  050B  00B1               	movwf	?___ftmul+4
  5480  050C  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  5481  0511  00B2               	movwf	?___ftmul+5
  5482  0512  120A  158A  25E4   	fcall	___ftmul
      +       120A  118A         
  5483  0517  2D4F               	ljmp	PL11	;call to abstracted procedure
  5484  0518                     __end_of_fround:	
  5485  0518                     __ptext584:	
  5486 ;; =============== function ___lbmod ends ============
  5487                           
  5488                           
  5489 ;; *************** function ___lbdiv *****************
  5490 ;; Defined at:
  5491 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lbdiv.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;  dividend        1    wreg     unsigned char 
  5494 ;;  divisor         1    5[COMMON] unsigned char 
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;  dividend        1    6[COMMON] unsigned char 
  5497 ;;  quotient        1    8[COMMON] unsigned char 
  5498 ;;  counter         1    7[COMMON] unsigned char 
  5499 ;; Return value:  Size  Location     Type
  5500 ;;                  1    wreg      unsigned char 
  5501 ;; Registers used:
  5502 ;;		wreg, status,2, status,0
  5503 ;; Tracked objects:
  5504 ;;		On entry : 160/0
  5505 ;;		On exit  : 160/0
  5506 ;;		Unchanged: FFE9F/0
  5507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5508 ;;      Params:         1       0       0       0       0
  5509 ;;      Locals:         3       0       0       0       0
  5510 ;;      Temps:          0       0       0       0       0
  5511 ;;      Totals:         4       0       0       0       0
  5512 ;;Total ram usage:        4 bytes
  5513 ;; Hardware stack levels used:    1
  5514 ;; This function calls:
  5515 ;;		Nothing
  5516 ;; This function is called by:
  5517 ;;		_fround
  5518 ;; This function uses a non-reentrant model
  5519 ;;
  5520  0518                     ___lbdiv:	
  5521                           
  5522                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  5523                           ;___lbdiv@dividend stored from wreg
  5524  0518  00F6               	movwf	___lbdiv@dividend
  5525  0519  01F8               	clrf	___lbdiv@quotient
  5526  051A  0875               	movf	___lbdiv@divisor,w
  5527  051B  1903               	btfsc	3,2
  5528  051C  2D31               	goto	l5101
  5529  051D  01F7               	clrf	___lbdiv@counter
  5530  051E                     l5087:	
  5531  051E  0AF7               	incf	___lbdiv@counter,f
  5532  051F  1BF5               	btfsc	___lbdiv@divisor,7
  5533  0520  2D24               	goto	l2251
  5534  0521  1003               	clrc
  5535  0522  0DF5               	rlf	___lbdiv@divisor,f
  5536  0523  2D1E               	goto	l5087
  5537  0524                     l2251:	
  5538  0524  1003               	clrc
  5539  0525  0DF8               	rlf	___lbdiv@quotient,f
  5540  0526  0875               	movf	___lbdiv@divisor,w
  5541  0527  0276               	subwf	___lbdiv@dividend,w
  5542  0528  1C03               	skipc
  5543  0529  2D2E               	goto	L22
  5544  052A  0875               	movf	___lbdiv@divisor,w
  5545  052B  02F6               	subwf	___lbdiv@dividend,f
  5546  052C  1478               	bsf	___lbdiv@quotient,0
  5547  052D  1003               	clrc
  5548  052E                     L22:	
  5549  052E  0CF5               	rrf	___lbdiv@divisor,f
  5550  052F  0BF7               	decfsz	___lbdiv@counter,f
  5551  0530  2D24               	goto	l2251
  5552  0531                     l5101:	
  5553  0531  0878               	movf	___lbdiv@quotient,w
  5554  0532  0008               	return
  5555  0533                     __end_of___lbdiv:	
  5556  0533                     __ptext583:	
  5557 ;; =============== function ___ftpack ends ============
  5558                           
  5559                           
  5560 ;; *************** function ___lbmod *****************
  5561 ;; Defined at:
  5562 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lbmod.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;  dividend        1    wreg     unsigned char 
  5565 ;;  divisor         1    0[COMMON] unsigned char 
  5566 ;; Auto vars:     Size  Location     Type
  5567 ;;  dividend        1    2[COMMON] unsigned char 
  5568 ;;  rem             1    4[COMMON] unsigned char 
  5569 ;;  counter         1    3[COMMON] unsigned char 
  5570 ;; Return value:  Size  Location     Type
  5571 ;;                  1    wreg      unsigned char 
  5572 ;; Registers used:
  5573 ;;		wreg, status,2, status,0
  5574 ;; Tracked objects:
  5575 ;;		On entry : 160/0
  5576 ;;		On exit  : 160/0
  5577 ;;		Unchanged: FFE9F/0
  5578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5579 ;;      Params:         1       0       0       0       0
  5580 ;;      Locals:         3       0       0       0       0
  5581 ;;      Temps:          1       0       0       0       0
  5582 ;;      Totals:         5       0       0       0       0
  5583 ;;Total ram usage:        5 bytes
  5584 ;; Hardware stack levels used:    1
  5585 ;; This function calls:
  5586 ;;		Nothing
  5587 ;; This function is called by:
  5588 ;;		_fround
  5589 ;; This function uses a non-reentrant model
  5590 ;;
  5591  0533                     ___lbmod:	
  5592                           
  5593                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  5594                           ;___lbmod@dividend stored from wreg
  5595  0533  00F2               	movwf	___lbmod@dividend
  5596  0534  3008               	movlw	8
  5597  0535  00F3               	movwf	___lbmod@counter
  5598  0536  01F4               	clrf	___lbmod@rem
  5599  0537                     l5109:	
  5600  0537  0872               	movf	___lbmod@dividend,w
  5601  0538  00F1               	movwf	??___lbmod
  5602  0539  3007               	movlw	7
  5603  053A  1003               	clrc
  5604  053B                     L21:	
  5605  053B  0CF1               	rrf	??___lbmod,f
  5606  053C  3EFF               	addlw	-1
  5607  053D  1003               	clrc
  5608  053E  1D03               	skipz
  5609  053F  2D3B               	goto	L21
  5610  0540  0D74               	rlf	___lbmod@rem,w
  5611  0541  0471               	iorwf	??___lbmod,w
  5612  0542  00F4               	movwf	___lbmod@rem
  5613  0543  1003               	clrc
  5614  0544  0DF2               	rlf	___lbmod@dividend,f
  5615  0545  0870               	movf	___lbmod@divisor,w
  5616  0546  0274               	subwf	___lbmod@rem,w
  5617  0547  1C03               	skipc
  5618  0548  2D4B               	goto	l5117
  5619  0549  0870               	movf	___lbmod@divisor,w
  5620  054A  02F4               	subwf	___lbmod@rem,f
  5621  054B                     l5117:	
  5622  054B  0BF3               	decfsz	___lbmod@counter,f
  5623  054C  2D37               	goto	l5109
  5624  054D  0874               	movf	___lbmod@rem,w
  5625  054E  0008               	return
  5626  054F                     __end_of___lbmod:	
  5627  054F                     PL11:	
  5628  054F  082D               	movf	?___ftmul,w
  5629  0550  00C8               	movwf	?_fround
  5630  0551  082E               	movf	?___ftmul+1,w
  5631  0552  00C9               	movwf	?_fround+1
  5632  0553  082F               	movf	?___ftmul+2,w
  5633  0554  00CA               	movwf	?_fround+2
  5634  0555  0008               	return
  5635  0556                     PL17:	
  5636  0556  00AF               	movwf	?___ftmul+2
  5637  0557  084E               	movf	_fround$2902,w
  5638  0558  00B0               	movwf	?___ftmul+3
  5639  0559  084F               	movf	_fround$2902+1,w
  5640  055A  00B1               	movwf	?___ftmul+4
  5641  055B  0850               	movf	_fround$2902+2,w
  5642  055C  00B2               	movwf	?___ftmul+5
  5643  055D  0008               	return
  5644  055E                     PL27:	
  5645  055E  082D               	movf	?___ftmul,w
  5646  055F  00CE               	movwf	_fround$2902
  5647  0560  082E               	movf	?___ftmul+1,w
  5648  0561  00CF               	movwf	_fround$2902+1
  5649  0562  082F               	movf	?___ftmul+2,w
  5650  0563  00D0               	movwf	_fround$2902+2
  5651  0564  0008               	return
  5652                           
  5653                           	psect	text576
  5654  0193                     __ptext576:	
  5655 ;; =============== function ___awmod ends ============
  5656                           
  5657                           
  5658 ;; *************** function ___lldiv *****************
  5659 ;; Defined at:
  5660 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lldiv.c"
  5661 ;; Parameters:    Size  Location     Type
  5662 ;;  divisor         4    0[COMMON] unsigned long 
  5663 ;;  dividend        4    4[COMMON] unsigned long 
  5664 ;; Auto vars:     Size  Location     Type
  5665 ;;  quotient        4    8[COMMON] unsigned long 
  5666 ;;  counter         1   12[COMMON] unsigned char 
  5667 ;; Return value:  Size  Location     Type
  5668 ;;                  4    0[COMMON] unsigned long 
  5669 ;; Registers used:
  5670 ;;		wreg, status,2, status,0
  5671 ;; Tracked objects:
  5672 ;;		On entry : 160/0
  5673 ;;		On exit  : 160/0
  5674 ;;		Unchanged: FFE9F/0
  5675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5676 ;;      Params:         8       0       0       0       0
  5677 ;;      Locals:         5       0       0       0       0
  5678 ;;      Temps:          0       0       0       0       0
  5679 ;;      Totals:        13       0       0       0       0
  5680 ;;Total ram usage:       13 bytes
  5681 ;; Hardware stack levels used:    1
  5682 ;; This function calls:
  5683 ;;		Nothing
  5684 ;; This function is called by:
  5685 ;;		__doprnt
  5686 ;; This function uses a non-reentrant model
  5687 ;;
  5688  0193                     ___lldiv:	
  5689                           
  5690                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5691  0193  01F8               	clrf	___lldiv@quotient
  5692  0194  01F9               	clrf	___lldiv@quotient+1
  5693  0195  01FA               	clrf	___lldiv@quotient+2
  5694  0196  01FB               	clrf	___lldiv@quotient+3
  5695  0197  0873               	movf	___lldiv@divisor+3,w
  5696  0198  0472               	iorwf	___lldiv@divisor+2,w
  5697  0199  0471               	iorwf	___lldiv@divisor+1,w
  5698  019A  0470               	iorwf	___lldiv@divisor,w
  5699  019B  1903               	skipnz
  5700  019C  29D2               	goto	l5303
  5701  019D  01FC               	clrf	___lldiv@counter
  5702  019E                     L14:	
  5703  019E  0AFC               	incf	___lldiv@counter,f
  5704  019F  1BF3               	btfsc	___lldiv@divisor+3,7
  5705  01A0  29A7               	goto	l5291
  5706  01A1  1003               	clrc
  5707  01A2  0DF0               	rlf	___lldiv@divisor,f
  5708  01A3  0DF1               	rlf	___lldiv@divisor+1,f
  5709  01A4  0DF2               	rlf	___lldiv@divisor+2,f
  5710  01A5  0DF3               	rlf	___lldiv@divisor+3,f
  5711  01A6  299E               	goto	L14
  5712  01A7                     l5291:	
  5713  01A7  1003               	clrc
  5714  01A8  0DF8               	rlf	___lldiv@quotient,f
  5715  01A9  0DF9               	rlf	___lldiv@quotient+1,f
  5716  01AA  0DFA               	rlf	___lldiv@quotient+2,f
  5717  01AB  0DFB               	rlf	___lldiv@quotient+3,f
  5718  01AC  0873               	movf	___lldiv@divisor+3,w
  5719  01AD  0277               	subwf	___lldiv@dividend+3,w
  5720  01AE  1D03               	skipz
  5721  01AF  29BA               	goto	u2205
  5722  01B0  0872               	movf	___lldiv@divisor+2,w
  5723  01B1  0276               	subwf	___lldiv@dividend+2,w
  5724  01B2  1D03               	skipz
  5725  01B3  29BA               	goto	u2205
  5726  01B4  0871               	movf	___lldiv@divisor+1,w
  5727  01B5  0275               	subwf	___lldiv@dividend+1,w
  5728  01B6  1D03               	skipz
  5729  01B7  29BA               	goto	u2205
  5730  01B8  0870               	movf	___lldiv@divisor,w
  5731  01B9  0274               	subwf	___lldiv@dividend,w
  5732  01BA                     u2205:	
  5733  01BA  1C03               	skipc
  5734  01BB  29CC               	goto	L15
  5735  01BC  0870               	movf	___lldiv@divisor,w
  5736  01BD  02F4               	subwf	___lldiv@dividend,f
  5737  01BE  0871               	movf	___lldiv@divisor+1,w
  5738  01BF  1C03               	skipc
  5739  01C0  0F71               	incfsz	___lldiv@divisor+1,w
  5740  01C1  02F5               	subwf	___lldiv@dividend+1,f
  5741  01C2  0872               	movf	___lldiv@divisor+2,w
  5742  01C3  1C03               	skipc
  5743  01C4  0F72               	incfsz	___lldiv@divisor+2,w
  5744  01C5  02F6               	subwf	___lldiv@dividend+2,f
  5745  01C6  0873               	movf	___lldiv@divisor+3,w
  5746  01C7  1C03               	skipc
  5747  01C8  0F73               	incfsz	___lldiv@divisor+3,w
  5748  01C9  02F7               	subwf	___lldiv@dividend+3,f
  5749  01CA  1478               	bsf	___lldiv@quotient,0
  5750  01CB  1003               	clrc
  5751  01CC                     L15:	
  5752  01CC  0CF3               	rrf	___lldiv@divisor+3,f
  5753  01CD  0CF2               	rrf	___lldiv@divisor+2,f
  5754  01CE  0CF1               	rrf	___lldiv@divisor+1,f
  5755  01CF  0CF0               	rrf	___lldiv@divisor,f
  5756  01D0  0BFC               	decfsz	___lldiv@counter,f
  5757  01D1  29A7               	goto	l5291
  5758  01D2                     l5303:	
  5759  01D2  087B               	movf	___lldiv@quotient+3,w
  5760  01D3  00F3               	movwf	?___lldiv+3
  5761  01D4  087A               	movf	___lldiv@quotient+2,w
  5762  01D5  00F2               	movwf	?___lldiv+2
  5763  01D6  0879               	movf	___lldiv@quotient+1,w
  5764  01D7  00F1               	movwf	?___lldiv+1
  5765  01D8  0878               	movf	___lldiv@quotient,w
  5766  01D9  00F0               	movwf	?___lldiv
  5767  01DA  0008               	return
  5768  01DB                     __end_of___lldiv:	
  5769                           
  5770                           	psect	text581
  5771  01DB                     __ptext581:	
  5772 ;; =============== function ___awdiv ends ============
  5773                           
  5774                           
  5775 ;; *************** function ___fttol *****************
  5776 ;; Defined at:
  5777 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\fttol.c"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;  f1              3    0[BANK0 ] float 
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;  lval            4    8[BANK0 ] unsigned long 
  5782 ;;  exp1            1   12[BANK0 ] unsigned char 
  5783 ;;  sign1           1    7[BANK0 ] unsigned char 
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  4    0[BANK0 ] long 
  5786 ;; Registers used:
  5787 ;;		wreg, status,2, status,0
  5788 ;; Tracked objects:
  5789 ;;		On entry : 60/0
  5790 ;;		On exit  : 60/0
  5791 ;;		Unchanged: FFF9F/0
  5792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5793 ;;      Params:         0       4       0       0       0
  5794 ;;      Locals:         0       6       0       0       0
  5795 ;;      Temps:          0       3       0       0       0
  5796 ;;      Totals:         0      13       0       0       0
  5797 ;;Total ram usage:       13 bytes
  5798 ;; Hardware stack levels used:    1
  5799 ;; This function calls:
  5800 ;;		Nothing
  5801 ;; This function is called by:
  5802 ;;		__doprnt
  5803 ;; This function uses a non-reentrant model
  5804 ;;
  5805  01DB                     ___fttol:	
  5806                           
  5807                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5808  01DB  2236  120A  118A   	fcall	PL26	;call to abstracted procedure
  5809  01DE  1003               	clrc
  5810  01DF  0D25               	rlf	??___fttol+1,w
  5811  01E0  0D26               	rlf	??___fttol+2,w
  5812  01E1  00AC               	movwf	___fttol@exp1
  5813  01E2  08AC               	movf	___fttol@exp1,f
  5814  01E3  1D03               	skipz
  5815  01E4  29EA               	goto	l5155
  5816  01E5                     l5153:	
  5817  01E5  01A0               	clrf	?___fttol
  5818  01E6  01A1               	clrf	?___fttol+1
  5819  01E7  01A2               	clrf	?___fttol+2
  5820  01E8  01A3               	clrf	?___fttol+3
  5821  01E9  0008               	return
  5822  01EA                     l5155:	
  5823  01EA  2236  120A  118A   	fcall	PL26	;call to abstracted procedure
  5824  01ED  3017               	movlw	23
  5825  01EE                     u1965:	
  5826  01EE  1003               	clrc
  5827  01EF  0CA6               	rrf	??___fttol+2,f
  5828  01F0  0CA5               	rrf	??___fttol+1,f
  5829  01F1  0CA4               	rrf	??___fttol,f
  5830  01F2  3EFF               	addlw	-1
  5831  01F3  1D03               	skipz
  5832  01F4  29EE               	goto	u1965
  5833  01F5  0824               	movf	??___fttol,w
  5834  01F6  00A7               	movwf	___fttol@sign1
  5835  01F7  17A1               	bsf	___fttol@f1+1,7
  5836  01F8  01A2               	clrf	___fttol@f1+2
  5837  01F9  0820               	movf	___fttol@f1,w
  5838  01FA  00A8               	movwf	___fttol@lval
  5839  01FB  0821               	movf	___fttol@f1+1,w
  5840  01FC  00A9               	movwf	___fttol@lval+1
  5841  01FD  0822               	movf	___fttol@f1+2,w
  5842  01FE  00AA               	movwf	___fttol@lval+2
  5843  01FF  308E               	movlw	142
  5844  0200  01AB               	clrf	___fttol@lval+3
  5845  0201  02AC               	subwf	___fttol@exp1,f
  5846  0202  1FAC               	btfss	___fttol@exp1,7
  5847  0203  2A11               	goto	l5175
  5848  0204  082C               	movf	___fttol@exp1,w
  5849  0205  3A80               	xorlw	128
  5850  0206  3E8F               	addlw	143
  5851  0207  1C03               	btfss	3,0
  5852  0208  29E5               	goto	l5153
  5853  0209                     l5171:	
  5854  0209  1003               	clrc
  5855  020A  0CAB               	rrf	___fttol@lval+3,f
  5856  020B  0CAA               	rrf	___fttol@lval+2,f
  5857  020C  0CA9               	rrf	___fttol@lval+1,f
  5858  020D  0CA8               	rrf	___fttol@lval,f
  5859  020E  0FAC               	incfsz	___fttol@exp1,f
  5860  020F  2A09               	goto	l5171
  5861  0210  2A1F               	goto	l5181
  5862  0211                     l5175:	
  5863  0211  3018               	movlw	24
  5864  0212  022C               	subwf	___fttol@exp1,w
  5865  0213  1803               	btfsc	3,0
  5866  0214  29E5               	goto	l5153
  5867  0215                     l2338:	
  5868  0215  08AC               	movf	___fttol@exp1,f
  5869  0216  1903               	btfsc	3,2
  5870  0217  2A1F               	goto	l5181
  5871  0218  1003               	clrc
  5872  0219  0DA8               	rlf	___fttol@lval,f
  5873  021A  0DA9               	rlf	___fttol@lval+1,f
  5874  021B  0DAA               	rlf	___fttol@lval+2,f
  5875  021C  0DAB               	rlf	___fttol@lval+3,f
  5876  021D  03AC               	decf	___fttol@exp1,f
  5877  021E  2A15               	goto	l2338
  5878  021F                     l5181:	
  5879  021F  0827               	movf	___fttol@sign1,w
  5880  0220  1903               	btfsc	3,2
  5881  0221  2A2D               	goto	l5185
  5882  0222  09A8               	comf	___fttol@lval,f
  5883  0223  09A9               	comf	___fttol@lval+1,f
  5884  0224  09AA               	comf	___fttol@lval+2,f
  5885  0225  09AB               	comf	___fttol@lval+3,f
  5886  0226  0AA8               	incf	___fttol@lval,f
  5887  0227  1903               	skipnz
  5888  0228  0AA9               	incf	___fttol@lval+1,f
  5889  0229  1903               	skipnz
  5890  022A  0AAA               	incf	___fttol@lval+2,f
  5891  022B  1903               	skipnz
  5892  022C  0AAB               	incf	___fttol@lval+3,f
  5893  022D                     l5185:	
  5894  022D  082B               	movf	___fttol@lval+3,w
  5895  022E  00A3               	movwf	?___fttol+3
  5896  022F  082A               	movf	___fttol@lval+2,w
  5897  0230  00A2               	movwf	?___fttol+2
  5898  0231  0829               	movf	___fttol@lval+1,w
  5899  0232  00A1               	movwf	?___fttol+1
  5900  0233  0828               	movf	___fttol@lval,w
  5901  0234  00A0               	movwf	?___fttol
  5902  0235  0008               	return
  5903  0236                     __end_of___fttol:	
  5904  0236                     PL26:	
  5905  0236  0820               	movf	___fttol@f1,w
  5906  0237  00A4               	movwf	??___fttol
  5907  0238  0821               	movf	___fttol@f1+1,w
  5908  0239  00A5               	movwf	??___fttol+1
  5909  023A  0822               	movf	___fttol@f1+2,w
  5910  023B  00A6               	movwf	??___fttol+2
  5911  023C  0008               	return
  5912                           
  5913                           	psect	text587
  5914  0352                     __ptext587:	
  5915 ;; =============== function ___bmul ends ============
  5916                           
  5917                           
  5918 ;; *************** function __div_to_l_ *****************
  5919 ;; Defined at:
  5920 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\fldivl.c"
  5921 ;; Parameters:    Size  Location     Type
  5922 ;;  f1              3    0[COMMON] unsigned char 
  5923 ;;  f2              3    3[COMMON] unsigned char 
  5924 ;; Auto vars:     Size  Location     Type
  5925 ;;  quot            4    0[BANK0 ] unsigned long 
  5926 ;;  exp1            1    5[BANK0 ] unsigned char 
  5927 ;;  cntr            1    4[BANK0 ] unsigned char 
  5928 ;; Return value:  Size  Location     Type
  5929 ;;                  4    0[COMMON] unsigned long 
  5930 ;; Registers used:
  5931 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5932 ;; Tracked objects:
  5933 ;;		On entry : 0/0
  5934 ;;		On exit  : 60/0
  5935 ;;		Unchanged: FFF9F/0
  5936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5937 ;;      Params:         6       0       0       0       0
  5938 ;;      Locals:         0       6       0       0       0
  5939 ;;      Temps:          8       0       0       0       0
  5940 ;;      Totals:        14       6       0       0       0
  5941 ;;Total ram usage:       20 bytes
  5942 ;; Hardware stack levels used:    1
  5943 ;; This function calls:
  5944 ;;		Nothing
  5945 ;; This function is called by:
  5946 ;;		__doprnt
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949  0352                     __div_to_l_:	
  5950                           
  5951                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  5952  0352  3070               	movlw	low __div_to_l_@f1
  5953  0353  2407  120A  118A   	fcall	PL2	;call to abstracted procedure
  5954  0356  1003               	clrc
  5955  0357  0D78               	rlf	??__div_to_l_+2,w
  5956  0358  0D79               	rlf	??__div_to_l_+3,w
  5957  0359  1283               	bcf	3,5	;RP0=0, select bank0
  5958  035A  1303               	bcf	3,6	;RP1=0, select bank0
  5959  035B  00A5               	movwf	__div_to_l_@exp1
  5960  035C  08A5               	movf	__div_to_l_@exp1,f
  5961  035D  1D03               	skipz
  5962  035E  2B64               	goto	l5007
  5963  035F                     l5005:	
  5964  035F  01F0               	clrf	?__div_to_l_
  5965  0360  01F1               	clrf	?__div_to_l_+1
  5966  0361  01F2               	clrf	?__div_to_l_+2
  5967  0362  01F3               	clrf	?__div_to_l_+3
  5968  0363  0008               	return
  5969  0364                     l5007:	
  5970  0364  3073               	movlw	low __div_to_l_@f2
  5971  0365  2407  120A  118A   	fcall	PL2	;call to abstracted procedure
  5972  0368  1003               	clrc
  5973  0369  0D78               	rlf	??__div_to_l_+2,w
  5974  036A  0D79               	rlf	??__div_to_l_+3,w
  5975  036B  00A4               	movwf	__div_to_l_@cntr
  5976  036C  08A4               	movf	__div_to_l_@cntr,f
  5977  036D  1903               	btfsc	3,2
  5978  036E  2B5F               	goto	l5005
  5979  036F  3070               	movlw	low __div_to_l_@f1
  5980  0370  0084               	movwf	4
  5981  0371  3080               	movlw	128
  5982  0372  0A84               	incf	4,f
  5983  0373  0A84               	incf	4,f
  5984  0374  0480               	iorwf	0,f
  5985  0375  3070               	movlw	low __div_to_l_@f1
  5986  0376  0A84               	incf	4,f
  5987  0377  0084               	movwf	4
  5988  0378  3073               	movlw	low __div_to_l_@f2
  5989  0379  0A84               	incf	4,f
  5990  037A  0A84               	incf	4,f
  5991  037B  0A84               	incf	4,f
  5992  037C  0180               	clrf	0
  5993  037D  0084               	movwf	4
  5994  037E  3080               	movlw	128
  5995  037F  0A84               	incf	4,f
  5996  0380  0A84               	incf	4,f
  5997  0381  0480               	iorwf	0,f
  5998  0382  3073               	movlw	low __div_to_l_@f2
  5999  0383  0A84               	incf	4,f
  6000  0384  0084               	movwf	4
  6001  0385  307F               	movlw	127
  6002  0386  0A84               	incf	4,f
  6003  0387  0A84               	incf	4,f
  6004  0388  0A84               	incf	4,f
  6005  0389  0180               	clrf	0
  6006  038A  01A0               	clrf	__div_to_l_@quot
  6007  038B  01A1               	clrf	__div_to_l_@quot+1
  6008  038C  01A2               	clrf	__div_to_l_@quot+2
  6009  038D  01A3               	clrf	__div_to_l_@quot+3
  6010  038E  02A5               	subwf	__div_to_l_@exp1,f
  6011  038F  30A0               	movlw	160
  6012  0390  0724               	addwf	__div_to_l_@cntr,w
  6013  0391  00F6               	movwf	??__div_to_l_
  6014  0392  02A5               	subwf	__div_to_l_@exp1,f
  6015  0393  3020               	movlw	32
  6016  0394  00A4               	movwf	__div_to_l_@cntr
  6017  0395                     l5021:	
  6018  0395  3073               	movlw	low __div_to_l_@f2
  6019  0396  1003               	clrc
  6020  0397  0DA0               	rlf	__div_to_l_@quot,f
  6021  0398  0DA1               	rlf	__div_to_l_@quot+1,f
  6022  0399  0DA2               	rlf	__div_to_l_@quot+2,f
  6023  039A  0DA3               	rlf	__div_to_l_@quot+3,f
  6024  039B  2407  120A  118A   	fcall	PL2	;call to abstracted procedure
  6025  039E  3070               	movlw	low __div_to_l_@f1
  6026  039F  0084               	movwf	4
  6027  03A0  0800               	movf	0,w
  6028  03A1  00FA               	movwf	??__div_to_l_+4
  6029  03A2  0A84               	incf	4,f
  6030  03A3  0800               	movf	0,w
  6031  03A4  00FB               	movwf	??__div_to_l_+5
  6032  03A5  0A84               	incf	4,f
  6033  03A6  0800               	movf	0,w
  6034  03A7  00FC               	movwf	??__div_to_l_+6
  6035  03A8  0A84               	incf	4,f
  6036  03A9  0800               	movf	0,w
  6037  03AA  00FD               	movwf	??__div_to_l_+7
  6038  03AB  0879               	movf	??__div_to_l_+3,w
  6039  03AC  027D               	subwf	??__div_to_l_+7,w
  6040  03AD  1D03               	skipz
  6041  03AE  2BB9               	goto	u1705
  6042  03AF  0878               	movf	??__div_to_l_+2,w
  6043  03B0  027C               	subwf	??__div_to_l_+6,w
  6044  03B1  1D03               	skipz
  6045  03B2  2BB9               	goto	u1705
  6046  03B3  0877               	movf	??__div_to_l_+1,w
  6047  03B4  027B               	subwf	??__div_to_l_+5,w
  6048  03B5  1D03               	skipz
  6049  03B6  2BB9               	goto	u1705
  6050  03B7  0876               	movf	??__div_to_l_,w
  6051  03B8  027A               	subwf	??__div_to_l_+4,w
  6052  03B9                     u1705:	
  6053  03B9  1C03               	skipc
  6054  03BA  2BD5               	goto	l2511
  6055  03BB  3073               	movlw	low __div_to_l_@f2
  6056  03BC  2407  120A  118A   	fcall	PL2	;call to abstracted procedure
  6057  03BF  3070               	movlw	low __div_to_l_@f1
  6058  03C0  0084               	movwf	4
  6059  03C1  0876               	movf	??__div_to_l_,w
  6060  03C2  0280               	subwf	0,f
  6061  03C3  0A84               	incf	4,f
  6062  03C4  0877               	movf	??__div_to_l_+1,w
  6063  03C5  1C03               	skipc
  6064  03C6  0F77               	incfsz	??__div_to_l_+1,w
  6065  03C7  0280               	subwf	0,f
  6066  03C8  0A84               	incf	4,f
  6067  03C9  0878               	movf	??__div_to_l_+2,w
  6068  03CA  1C03               	skipc
  6069  03CB  0F78               	incfsz	??__div_to_l_+2,w
  6070  03CC  0280               	subwf	0,f
  6071  03CD  0A84               	incf	4,f
  6072  03CE  0879               	movf	??__div_to_l_+3,w
  6073  03CF  1C03               	skipc
  6074  03D0  0A79               	incf	??__div_to_l_+3,w
  6075  03D1  0280               	subwf	0,f
  6076  03D2  3003               	movlw	3
  6077  03D3  0284               	subwf	4,f
  6078  03D4  1420               	bsf	__div_to_l_@quot,0
  6079  03D5                     l2511:	
  6080  03D5  3070               	movlw	low __div_to_l_@f1
  6081  03D6  0084               	movwf	4
  6082  03D7  1003               	clrc
  6083  03D8  0D80               	rlf	0,f
  6084  03D9  0A84               	incf	4,f
  6085  03DA  0D80               	rlf	0,f
  6086  03DB  0A84               	incf	4,f
  6087  03DC  0D80               	rlf	0,f
  6088  03DD  0A84               	incf	4,f
  6089  03DE  0D80               	rlf	0,f
  6090  03DF  0BA4               	decfsz	__div_to_l_@cntr,f
  6091  03E0  2B95               	goto	l5021
  6092  03E1  1FA5               	btfss	__div_to_l_@exp1,7
  6093  03E2  2BF0               	goto	l5039
  6094  03E3  0825               	movf	__div_to_l_@exp1,w
  6095  03E4  3A80               	xorlw	128
  6096  03E5  3E9F               	addlw	159
  6097  03E6  1C03               	btfss	3,0
  6098  03E7  2B5F               	goto	l5005
  6099  03E8                     l5035:	
  6100  03E8  1003               	clrc
  6101  03E9  0CA3               	rrf	__div_to_l_@quot+3,f
  6102  03EA  0CA2               	rrf	__div_to_l_@quot+2,f
  6103  03EB  0CA1               	rrf	__div_to_l_@quot+1,f
  6104  03EC  0CA0               	rrf	__div_to_l_@quot,f
  6105  03ED  0FA5               	incfsz	__div_to_l_@exp1,f
  6106  03EE  2BE8               	goto	l5035
  6107  03EF  2BFE               	goto	l5045
  6108  03F0                     l5039:	
  6109  03F0  3020               	movlw	32
  6110  03F1  0225               	subwf	__div_to_l_@exp1,w
  6111  03F2  1803               	btfsc	3,0
  6112  03F3  2B5F               	goto	l5005
  6113  03F4                     l2519:	
  6114  03F4  08A5               	movf	__div_to_l_@exp1,f
  6115  03F5  1903               	btfsc	3,2
  6116  03F6  2BFE               	goto	l5045
  6117  03F7  1003               	clrc
  6118  03F8  0DA0               	rlf	__div_to_l_@quot,f
  6119  03F9  0DA1               	rlf	__div_to_l_@quot+1,f
  6120  03FA  0DA2               	rlf	__div_to_l_@quot+2,f
  6121  03FB  0DA3               	rlf	__div_to_l_@quot+3,f
  6122  03FC  03A5               	decf	__div_to_l_@exp1,f
  6123  03FD  2BF4               	goto	l2519
  6124  03FE                     l5045:	
  6125  03FE  0823               	movf	__div_to_l_@quot+3,w
  6126  03FF  00F3               	movwf	?__div_to_l_+3
  6127  0400  0822               	movf	__div_to_l_@quot+2,w
  6128  0401  00F2               	movwf	?__div_to_l_+2
  6129  0402  0821               	movf	__div_to_l_@quot+1,w
  6130  0403  00F1               	movwf	?__div_to_l_+1
  6131  0404  0820               	movf	__div_to_l_@quot,w
  6132  0405  00F0               	movwf	?__div_to_l_
  6133  0406  0008               	return
  6134  0407                     __end_of__div_to_l_:	
  6135  0407                     PL2:	
  6136  0407  0084               	movwf	4
  6137  0408  0800               	movf	0,w
  6138  0409  00F6               	movwf	??__div_to_l_
  6139  040A  0A84               	incf	4,f
  6140  040B  0800               	movf	0,w
  6141  040C  00F7               	movwf	??__div_to_l_+1
  6142  040D  0A84               	incf	4,f
  6143  040E  0800               	movf	0,w
  6144  040F  00F8               	movwf	??__div_to_l_+2
  6145  0410  0A84               	incf	4,f
  6146  0411  0800               	movf	0,w
  6147  0412  00F9               	movwf	??__div_to_l_+3
  6148  0413  0008               	return
  6149                           
  6150                           	psect	text588
  6151  023D                     __ptext588:	
  6152 ;; =============== function __div_to_l_ ends ============
  6153                           
  6154                           
  6155 ;; *************** function __tdiv_to_l_ *****************
  6156 ;; Defined at:
  6157 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftdivl.c"
  6158 ;; Parameters:    Size  Location     Type
  6159 ;;  f1              3    0[COMMON] float 
  6160 ;;  f2              3    3[COMMON] float 
  6161 ;; Auto vars:     Size  Location     Type
  6162 ;;  quot            4    0[BANK0 ] unsigned long 
  6163 ;;  exp1            1    5[BANK0 ] unsigned char 
  6164 ;;  cntr            1    4[BANK0 ] unsigned char 
  6165 ;; Return value:  Size  Location     Type
  6166 ;;                  4    0[COMMON] unsigned long 
  6167 ;; Registers used:
  6168 ;;		wreg, status,2, status,0
  6169 ;; Tracked objects:
  6170 ;;		On entry : 60/0
  6171 ;;		On exit  : 60/0
  6172 ;;		Unchanged: FFF9F/0
  6173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6174 ;;      Params:         6       0       0       0       0
  6175 ;;      Locals:         0       6       0       0       0
  6176 ;;      Temps:          3       0       0       0       0
  6177 ;;      Totals:         9       6       0       0       0
  6178 ;;Total ram usage:       15 bytes
  6179 ;; Hardware stack levels used:    1
  6180 ;; This function calls:
  6181 ;;		Nothing
  6182 ;; This function is called by:
  6183 ;;		__doprnt
  6184 ;; This function uses a non-reentrant model
  6185 ;;
  6186  023D                     __tdiv_to_l_:	
  6187                           
  6188                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6189  023D  0870               	movf	__tdiv_to_l_@f1,w
  6190  023E  00F6               	movwf	??__tdiv_to_l_
  6191  023F  0871               	movf	__tdiv_to_l_@f1+1,w
  6192  0240  00F7               	movwf	??__tdiv_to_l_+1
  6193  0241  0872               	movf	__tdiv_to_l_@f1+2,w
  6194  0242  00F8               	movwf	??__tdiv_to_l_+2
  6195  0243  1003               	clrc
  6196  0244  0D77               	rlf	??__tdiv_to_l_+1,w
  6197  0245  0D78               	rlf	??__tdiv_to_l_+2,w
  6198  0246  00A5               	movwf	__tdiv_to_l_@exp1
  6199  0247  08A5               	movf	__tdiv_to_l_@exp1,f
  6200  0248  1D03               	skipz
  6201  0249  2A4F               	goto	l4959
  6202  024A                     l4957:	
  6203  024A  01F0               	clrf	?__tdiv_to_l_
  6204  024B  01F1               	clrf	?__tdiv_to_l_+1
  6205  024C  01F2               	clrf	?__tdiv_to_l_+2
  6206  024D  01F3               	clrf	?__tdiv_to_l_+3
  6207  024E  0008               	return
  6208  024F                     l4959:	
  6209  024F  0873               	movf	__tdiv_to_l_@f2,w
  6210  0250  00F6               	movwf	??__tdiv_to_l_
  6211  0251  0874               	movf	__tdiv_to_l_@f2+1,w
  6212  0252  00F7               	movwf	??__tdiv_to_l_+1
  6213  0253  0875               	movf	__tdiv_to_l_@f2+2,w
  6214  0254  00F8               	movwf	??__tdiv_to_l_+2
  6215  0255  1003               	clrc
  6216  0256  0D77               	rlf	??__tdiv_to_l_+1,w
  6217  0257  0D78               	rlf	??__tdiv_to_l_+2,w
  6218  0258  00A4               	movwf	__tdiv_to_l_@cntr
  6219  0259  08A4               	movf	__tdiv_to_l_@cntr,f
  6220  025A  1903               	btfsc	3,2
  6221  025B  2A4A               	goto	l4957
  6222  025C  307F               	movlw	127
  6223  025D  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6224  025E  01F2               	clrf	__tdiv_to_l_@f1+2
  6225  025F  17F4               	bsf	__tdiv_to_l_@f2+1,7
  6226  0260  01F5               	clrf	__tdiv_to_l_@f2+2
  6227  0261  01A0               	clrf	__tdiv_to_l_@quot
  6228  0262  01A1               	clrf	__tdiv_to_l_@quot+1
  6229  0263  01A2               	clrf	__tdiv_to_l_@quot+2
  6230  0264  01A3               	clrf	__tdiv_to_l_@quot+3
  6231  0265  02A5               	subwf	__tdiv_to_l_@exp1,f
  6232  0266  3098               	movlw	152
  6233  0267  0724               	addwf	__tdiv_to_l_@cntr,w
  6234  0268  00F6               	movwf	??__tdiv_to_l_
  6235  0269  02A5               	subwf	__tdiv_to_l_@exp1,f
  6236  026A  3018               	movlw	24
  6237  026B  00A4               	movwf	__tdiv_to_l_@cntr
  6238  026C                     l4973:	
  6239  026C  1003               	clrc
  6240  026D  0DA0               	rlf	__tdiv_to_l_@quot,f
  6241  026E  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6242  026F  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6243  0270  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6244  0271  0875               	movf	__tdiv_to_l_@f2+2,w
  6245  0272  0272               	subwf	__tdiv_to_l_@f1+2,w
  6246  0273  1D03               	skipz
  6247  0274  2A7B               	goto	u1615
  6248  0275  0874               	movf	__tdiv_to_l_@f2+1,w
  6249  0276  0271               	subwf	__tdiv_to_l_@f1+1,w
  6250  0277  1D03               	skipz
  6251  0278  2A7B               	goto	u1615
  6252  0279  0873               	movf	__tdiv_to_l_@f2,w
  6253  027A  0270               	subwf	__tdiv_to_l_@f1,w
  6254  027B                     u1615:	
  6255  027B  1C03               	skipc
  6256  027C  2A89               	goto	L23
  6257  027D  0873               	movf	__tdiv_to_l_@f2,w
  6258  027E  02F0               	subwf	__tdiv_to_l_@f1,f
  6259  027F  0874               	movf	__tdiv_to_l_@f2+1,w
  6260  0280  1C03               	skipc
  6261  0281  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  6262  0282  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6263  0283  0875               	movf	__tdiv_to_l_@f2+2,w
  6264  0284  1C03               	skipc
  6265  0285  0A75               	incf	__tdiv_to_l_@f2+2,w
  6266  0286  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6267  0287  1420               	bsf	__tdiv_to_l_@quot,0
  6268  0288  1003               	clrc
  6269  0289                     L23:	
  6270  0289  0DF0               	rlf	__tdiv_to_l_@f1,f
  6271  028A  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6272  028B  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6273  028C  0BA4               	decfsz	__tdiv_to_l_@cntr,f
  6274  028D  2A6C               	goto	l4973
  6275  028E  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6276  028F  2A9D               	goto	l4993
  6277  0290  0825               	movf	__tdiv_to_l_@exp1,w
  6278  0291  3A80               	xorlw	128
  6279  0292  3E97               	addlw	151
  6280  0293  1C03               	btfss	3,0
  6281  0294  2A4A               	goto	l4957
  6282  0295                     l4989:	
  6283  0295  1003               	clrc
  6284  0296  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6285  0297  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6286  0298  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6287  0299  0CA0               	rrf	__tdiv_to_l_@quot,f
  6288  029A  0FA5               	incfsz	__tdiv_to_l_@exp1,f
  6289  029B  2A95               	goto	l4989
  6290  029C  2AAB               	goto	l4999
  6291  029D                     l4993:	
  6292  029D  3018               	movlw	24
  6293  029E  0225               	subwf	__tdiv_to_l_@exp1,w
  6294  029F  1803               	btfsc	3,0
  6295  02A0  2A4A               	goto	l4957
  6296  02A1                     l2476:	
  6297  02A1  08A5               	movf	__tdiv_to_l_@exp1,f
  6298  02A2  1903               	btfsc	3,2
  6299  02A3  2AAB               	goto	l4999
  6300  02A4  1003               	clrc
  6301  02A5  0DA0               	rlf	__tdiv_to_l_@quot,f
  6302  02A6  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6303  02A7  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6304  02A8  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6305  02A9  03A5               	decf	__tdiv_to_l_@exp1,f
  6306  02AA  2AA1               	goto	l2476
  6307  02AB                     l4999:	
  6308  02AB  0823               	movf	__tdiv_to_l_@quot+3,w
  6309  02AC  00F3               	movwf	?__tdiv_to_l_+3
  6310  02AD  0822               	movf	__tdiv_to_l_@quot+2,w
  6311  02AE  00F2               	movwf	?__tdiv_to_l_+2
  6312  02AF  0821               	movf	__tdiv_to_l_@quot+1,w
  6313  02B0  00F1               	movwf	?__tdiv_to_l_+1
  6314  02B1  0820               	movf	__tdiv_to_l_@quot,w
  6315  02B2  00F0               	movwf	?__tdiv_to_l_
  6316  02B3  0008               	return
  6317  02B4                     __end_of__tdiv_to_l_:	
  6318                           
  6319                           	psect	text590
  6320  07F1                     __ptext590:	
  6321 ;; =============== function _msecbase ends ============
  6322                           
  6323                           
  6324 ;; *************** function _init_comms *****************
  6325 ;; Defined at:
  6326 ;;		line 60 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\USART1\USART1.c"
  6327 ;; Parameters:    Size  Location     Type
  6328 ;;		None
  6329 ;; Auto vars:     Size  Location     Type
  6330 ;;		None
  6331 ;; Return value:  Size  Location     Type
  6332 ;;		None               void
  6333 ;; Registers used:
  6334 ;;		wreg, status,2
  6335 ;; Tracked objects:
  6336 ;;		On entry : 17F/60
  6337 ;;		On exit  : 17F/60
  6338 ;;		Unchanged: FFE80/0
  6339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6340 ;;      Params:         0       0       0       0       0
  6341 ;;      Locals:         0       0       0       0       0
  6342 ;;      Temps:          0       0       0       0       0
  6343 ;;      Totals:         0       0       0       0       0
  6344 ;;Total ram usage:        0 bytes
  6345 ;; Hardware stack levels used:    1
  6346 ;; This function calls:
  6347 ;;		Nothing
  6348 ;; This function is called by:
  6349 ;;		_main
  6350 ;; This function uses a non-reentrant model
  6351 ;;
  6352  07F1                     _init_comms:	
  6353                           
  6354                           ;USART1.c: 61: TRISC7 = 1;
  6355                           
  6356                           ; Regs used in _init_comms: [wreg+status,2]
  6357  07F1  1303               	bcf	3,6	;RP1=0, select bank1
  6358  07F2  3019               	movlw	25
  6359  07F3  1787               	bsf	7,7
  6360                           
  6361                           ;USART1.c: 62: TRISC6 = 0;
  6362  07F4  1307               	bcf	7,6
  6363                           
  6364                           ;USART1.c: 63: SPBRG = ((int)(4000000L/(64UL * 2400) -1));
  6365  07F5  0099               	movwf	25	;volatile
  6366                           
  6367                           ;USART1.c: 65: RCSTA = 0x90;
  6368  07F6  3090               	movlw	144
  6369  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  6370  07F8  0098               	movwf	24	;volatile
  6371                           
  6372                           ;USART1.c: 66: TXSTA = 0x20;
  6373  07F9  3020               	movlw	32
  6374  07FA  1683               	bsf	3,5	;RP0=1, select bank1
  6375  07FB  0098               	movwf	24	;volatile
  6376                           
  6377                           ;USART1.c: 67: BAUDCTL = 0;
  6378  07FC  1703               	bsf	3,6	;RP1=1, select bank3
  6379  07FD  0187               	clrf	7	;volatile
  6380  07FE  0008               	return
  6381  07FF                     __end_of_init_comms:	
  6382                           
  6383                           	psect	text591
  6384  0184                     __ptext591:	
  6385 ;; =============== function _init_comms ends ============
  6386                           
  6387                           
  6388 ;; *************** function _getch *****************
  6389 ;; Defined at:
  6390 ;;		line 52 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\USART1\USART1.c"
  6391 ;; Parameters:    Size  Location     Type
  6392 ;;		None
  6393 ;; Auto vars:     Size  Location     Type
  6394 ;;		None
  6395 ;; Return value:  Size  Location     Type
  6396 ;;                  1    wreg      unsigned char 
  6397 ;; Registers used:
  6398 ;;		wreg
  6399 ;; Tracked objects:
  6400 ;;		On entry : 60/0
  6401 ;;		On exit  : 60/0
  6402 ;;		Unchanged: FFF9F/0
  6403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6404 ;;      Params:         0       0       0       0       0
  6405 ;;      Locals:         0       0       0       0       0
  6406 ;;      Temps:          0       0       0       0       0
  6407 ;;      Totals:         0       0       0       0       0
  6408 ;;Total ram usage:        0 bytes
  6409 ;; Hardware stack levels used:    1
  6410 ;; This function calls:
  6411 ;;		Nothing
  6412 ;; This function is called by:
  6413 ;;		_main
  6414 ;; This function uses a non-reentrant model
  6415 ;;
  6416  0184                     _getch:	
  6417  0184                     l1049:	
  6418                           ;USART1.c: 54: while(!RCIF)
  6419                           
  6420                           ; Regs used in _getch: [wreg]
  6421                           
  6422  0184  1E8C               	btfss	12,5
  6423  0185  2984               	goto	l1049
  6424                           
  6425                           ;USART1.c: 56: return RCREG;
  6426  0186  081A               	movf	26,w	;volatile
  6427  0187  0008               	return
  6428  0188                     __end_of_getch:	
  6429                           
  6430                           	psect	text592
  6431  0188                     __ptext592:	
  6432 ;; =============== function _getch ends ============
  6433                           
  6434                           
  6435 ;; *************** function _putch *****************
  6436 ;; Defined at:
  6437 ;;		line 44 in file "C:\Users\Jorge\OneDrive\Escritorio\Microcontroladores\Proyectos\USART1\USART1.c"
  6438 ;; Parameters:    Size  Location     Type
  6439 ;;  byte            1    8[BANK0 ] unsigned char 
  6440 ;; Auto vars:     Size  Location     Type
  6441 ;;		None
  6442 ;; Return value:  Size  Location     Type
  6443 ;;		None               void
  6444 ;; Registers used:
  6445 ;;		wreg
  6446 ;; Tracked objects:
  6447 ;;		On entry : 60/0
  6448 ;;		On exit  : 60/0
  6449 ;;		Unchanged: FFF9F/0
  6450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6451 ;;      Params:         0       1       0       0       0
  6452 ;;      Locals:         0       0       0       0       0
  6453 ;;      Temps:          0       0       0       0       0
  6454 ;;      Totals:         0       1       0       0       0
  6455 ;;Total ram usage:        1 bytes
  6456 ;; Hardware stack levels used:    1
  6457 ;; This function calls:
  6458 ;;		Nothing
  6459 ;; This function is called by:
  6460 ;;		_main
  6461 ;;		_printf
  6462 ;;		__doprnt
  6463 ;; This function uses a non-reentrant model
  6464 ;;
  6465  0188                     _putch:	
  6466  0188                     l1043:	
  6467                           ;USART1.c: 46: while(!TXIF)
  6468                           
  6469                           ; Regs used in _putch: [wreg]
  6470                           
  6471  0188  1E0C               	btfss	12,4
  6472  0189  2988               	goto	l1043
  6473                           
  6474                           ;USART1.c: 48: TXREG = byte;
  6475  018A  0828               	movf	putch@byte,w
  6476  018B  0099               	movwf	25	;volatile
  6477  018C  0008               	return
  6478  018D                     __end_of_putch:	
  6479                           
  6480 ;; =============== function _putch ends ============
  6481  0002                     
  6482                           	psect	functab
  6483  0700                     __pfunctab:	
  6484  0700                     fptable:	
  6485  0700  00FF               	movwf	(btemp+1)& (0+127)
  6486  0701  3007               	movlw	high fptable
  6487  0702  008A               	movwf	10
  6488  0703  087F               	movf	(btemp+1)& (0+127),w
  6489  0704  0782               	addwf	2,f
  6490  0705                     fpbase:	
  6491  0705  2F05               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  6492  0706                     fp__putch:	
  6493  0706                     entry__putch:	
  6494  0706  120A  118A  2988   	ljmp	_putch
  6495  007E                     btemp	set	126	;btemp
  6496  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Thu Apr 28 13:30:43 2022

                    pc 0002         ___bmul@product 007A           ___awdiv@sign 007B                     fsr 0004  
  ___wmul@multiplicand 0072           ___ftadd@exp1 0047           ___ftadd@exp2 0046           ___ftadd@sign 0045  
                  _RC0 0038                    _RC3 003B                    _RC4 003C                    fsr0 0004  
                  indf 0000           ___awmod@sign 0075            lcd_goto@pos 0075                   l1102 0000  
                 l1111 033D                   l1114 0000                   l1043 0188                   l1052 0000  
                 l1108 0000                   l1212 0000                   l1046 0000                   l1055 0000  
                 l1049 0184                   l1153 083F                   l1084 0000                   l2212 0000  
                 l1093 0000                   l2205 0000                   l1087 0000                   l2224 0000  
                 l2400 0000                   l2304 0000                   l2218 0000                   l2251 0524  
                 l1099 0000                   l2260 0000                   l2254 0000                   l2511 03D5  
                 l2512 0000                   l2338 0215                   l2282 079B                   l5003 0000  
                 l2371 0000                   l5021 0395                   l5013 0000                   l5005 035F  
                 l5101 0531                   l2381 0000                   l2461 0000                   l2519 03F4  
                 l5023 0000                   l5015 0000                   l5007 0364                   l5111 0000  
                 l2439 0000                   l5017 0000                   l5113 0000                   l5105 0000  
                 l5201 0000                   l2385 0000                   l5035 03E8                   l5027 0000  
                 l5019 0000                   l5051 0E55                   l5107 0000                   l5131 0E6D  
                 l5123 0000                   l5203 0D75                   l2476 02A1                   l2469 0000  
                 l5045 03FE                   l5037 0000                   l5029 0000                   l5117 054B  
                 l5109 0537                   l5141 0E8B                   l5133 0E72                   l5125 0000  
                 l5213 0D83                   l5205 0000                   l5301 0000                   l5039 03F0  
                 l5071 0EA9                   l5119 0000                   l5135 0E77                   l5127 0E69  
                 l5151 0000                   l5223 0000                   l5215 0000                   l5303 01D2  
                 l5057 0000                   l5049 0000                   l5073 0000                   l5065 0000  
                 l5081 0000                   l5145 0000                   l5137 0E81                   l5161 0000  
                 l5153 01E5                   l5225 0D9A                   l5241 0F80                   l5233 0000  
                 l5313 0000                   l5401 0797                   l5059 0000                   l5075 0000  
                 l5067 0EA1                   l5091 0000                   l5083 0000                   l5147 0000  
                 l5139 0E86                   l5171 0209                   l5163 0000                   l5155 01EA  
                 l5227 0000                   l5219 0000                   l5315 0DB1                   l5307 0000  
                 l5411 0000                   l5085 0000                   l5149 0000                   l5181 021F  
                 l5173 0000                   l5165 0000                   l5157 0000                   l5229 0DA2  
                 l5253 0000                   l5261 0000                   l5333 0000                   l5309 0000  
                 l5421 0000                   l5413 07B1                   l5405 0000                   l5501 0000  
                 l5095 0000                   l5087 051E                   l5183 0000                   l5175 0211  
                 l5159 0000                   l5191 0000                   l5247 0000                   l5271 0000  
                 l5327 0DC4                   l5335 0DD7                   l5319 0DB8                   l5343 0311  
                 l5423 0000                   l5415 0000                   l5407 07A6                   l5351 0000  
                 l5503 0000                   l5185 022D                   l5249 0FA5                   l5273 0000  
                 l5265 0FBD                   l5281 0000                   l5337 0000                   l5425 07CD  
                 l5417 0000                   l5353 0000                   l5441 0E06                   l5505 0000  
                 l5513 0000                   l5601 0836                   l5099 0000                   l5195 0000  
                 l5291 01A7                   l5283 0000                   l5339 0DDF                   l5347 0000  
                 l5371 0000                   l5363 0749                   l5355 0000                   l5451 0000  
                 l5443 0000                   l5435 0DF5                   l5507 0000                   l5523 0000  
                 l5531 0000                   l5603 0000                   l5197 0D6C                   l5189 0000  
                 l5269 0FCC                   l5293 0000                   l5349 0313                   l5381 0766  
                 l5365 0000                   l5453 0000                   l5445 0000                   l5429 0000  
                 l5509 0000                   l5621 0860                   l5605 083C                   l5383 0000  
                 l5391 077F                   l5359 0742                   l5471 0E2D                   l5463 0E21  
                 l5455 0000                   l5447 0000                   l5527 04F2                   l5519 049E  
                 l5543 0C40                   l5535 0000                   l5711 0A05                   l5703 09D8  
                 l5631 0000                   l5607 0841                   l5297 0000                   l5393 0783  
                 l5377 0000                   l5369 0758                   l5481 0000                   l5465 0000  
                 l5457 0000                   l5449 0000                   l5561 0D06                   l5553 0C9C  
                 l5721 0A1C                   l5641 0000                   l5633 089A                   l5625 0000  
                 l5609 084C                   l5801 0000                   l5395 0000                   l5387 0775  
                 l5379 0000                   l5475 0E37                   l5467 0000                   l5459 0E17  
                 l5491 0FEF                   l5571 0000                   l5643 0000                   l5635 0000  
                 l5627 0000                   l5619 084D                   l5811 0000                   l5803 0000  
                 l4941 0000                   l5389 077A                   l5477 0000                   l5469 0000  
                 l5485 0000                   l5549 0C85                   l5573 0000                   l5581 0000  
                 l5741 0A83                   l5717 0A18                   l5709 0000                   l5661 0914  
                 l5653 08E6                   l5645 0000                   l5821 0000                   l5813 0000  
                 l5805 0000                   l5901 05D0                   l4951 0000                   l5399 0792  
                 l5479 0000                   l5495 0000                   l5567 0D4B                   l5583 0000  
                 l5591 02BC                   l5743 0AAA                   l5735 0A9E                   l5655 0000  
                 l5647 0000                   l5639 0000                   l5831 0000                   l5823 0000  
                 l5815 0000                   l5807 0000                   l5903 0000                   l4937 0000  
                 l4953 0000                   l5489 0FE4                   l5497 0000                   l5577 0000  
                 l5585 0000                   l5753 0AD7                   l5737 0000                   l5729 0A7F  
                 l5681 097B                   l5657 0000                   l5649 0000                   l5833 0000  
                 l5825 0000                   l5817 0000                   l5809 0000                   l5841 0000  
                 l5921 0000                   l5905 0000                   l4947 0000                   l4971 0000  
                 l4963 0000                   l4955 0000                   l5499 0000                   l5579 0000  
                 l5755 0000                   l5747 0AB9                   l5739 0AA4                   l5691 0000  
                 l5667 0924                   l5835 0000                   l5827 0000                   l5819 0000  
                 l5843 0000                   l5851 0000                   l5931 0000                   l5923 0000  
                 l5915 0600                   l5907 0000                   l4949 0000                   l4973 026C  
                 l4965 0000                   l4957 024A                   l5589 0000                   l5781 0B94  
                 l5765 0000                   l5749 0000                   l5757 0AE0                   l5693 09A8  
                 l5677 096A                   l5669 0000                   l5837 0000                   l5829 0000  
                 l5845 0000                   l5853 0000                   l5941 0674                   l5933 0000  
                 l5917 0000                   l5909 0000                   l5861 0000                   l4991 0000  
                 l4983 0000                   l4975 0000                   l4967 0000                   l4959 024F  
                 l5791 0000                   l5775 0BA7                   l5767 0B64                   l5759 0B01  
                 l5695 0000                   l5687 0000                   l5783 0BB3                   l5839 0000  
                 l5855 0000                   l5951 0000                   l5935 0000                   l5919 0000  
                 l5927 0656                   l5871 0000                   l5863 0000                   l4993 029D  
                 l4969 0000                   l5777 0000                   l5697 09D6                   l5689 0000  
                 l5793 0816                   l5857 0000                   l5849 0000                   l5961 0000  
                 l5945 0000                   l5929 0000                   l5873 0000                   l5865 0000  
                 l4979 0000                   l5779 0BAD                   l5795 0BCE                   l5963 0000  
                 l5947 0000                   l5891 0000                   l5875 0000                   l5867 0000  
                 l4989 0295                   l5789 0BC6                   l5981 06F9                   l5973 06D2  
                 l5965 06CA                   l5957 06A3                   l5949 069B                   l5893 0000  
                 l5877 0000                   l5869 0000                   l4999 02AB                   l5799 0000  
                 l5983 0000                   l5967 0000                   l5895 0000                   l5887 05A0  
                 l5879 058B                   l5977 0000                   l5889 0000                   l5979 0000  
                 STR_1 00C8                   STR_2 00C5                   STR_3 00C8                   STR_4 00C5  
                 STR_5 00C8                   STR_6 00C5                   STR_7 0089                   STR_8 00B5  
                 STR_9 00A2                   _T0IF 005A                   u2125 0F8E                   u2205 01BA  
                 u2075 0D8C                   u1615 027B                   u1705 03B9                   u2265 0DCA  
                 u2295 0319                   u2730 0000                   u2805 0968                   u2735 08AF  
                 u1960 0000                   u2905 0AB4                   u2825 09FE                   u1965 01EE  
                 u2775 094A                   _RCIF 0065                   u2895 0A8C                   _TMR0 0001  
                 _TXIF 0064                   _main 0565           ___ftpack@arg 0070           ___ftpack@exp 0073  
                 btemp 007E                   start 0000      ___bmul@multiplier 007B           ___ftmul@cntr 003A  
         ___ftmul@sign 003B           ___fttol@exp1 002C           ___fttol@lval 0028                  ?_main 0070  
      __end_of___awdiv 0DA7        __end_of___lbdiv 0533        __end_of___ftadd 07E1                  STR_10 00C5  
                STR_11 00A2                  STR_12 00C2                  STR_13 00A2                  STR_14 00C2  
      __end_of___awmod 0DE4        __end_of___lbmod 054F        __end_of___ftneg 0FE2                  _ANSEL 0188  
      __end_of___lldiv 01DB        __end_of___ftmul 0E53        ___awdiv@divisor 0076        __end_of___llmod 0FAE  
      __end_of___ftsub 071F        __end_of___fttol 0236        ___awdiv@counter 007A                  _RCREG 001A  
                _RCSTA 0018                  _SPBRG 0099                  _PORTD 0008        __end_of__doprnt 0BD1  
                _TRISA 0085                  _TRISB 0086                  _TRISC 0087                  _TRISD 0088  
                _TRISE 0089                  _TXREG 0019                  _TXSTA 0098           ___lltoft@exp 007C  
                _carac 00AE                  _getch 0184                  _scale 0BD1                  _pause 0311  
        ___ftpack@sign 0074                  _putch 0188                  fpbase 0705                  pclath 000A  
                status 0003                  wtemp0 007E        __end_of_sprintf 0815        ___lbdiv@divisor 0075  
      ___lbdiv@counter 0077           __end_of_main 0700                 ??_main 007E          ___fttol@sign1 0027  
 __size_of__tdiv_to_l_ 0077                 ?_getch 0070                 _ADCON1 009F       ___llmod@dividend 0024  
               ?_scale 003C                 ?_pause 0070       ___awdiv@dividend 0078                 ?_putch 0028  
     __end_of___ftpack 0E9F                 _ANSELH 0189       __end_of___lltoft 1000                 _TRISC6 043E  
               _TRISC7 043F           __doprnt$1919 0059       __end_of_lcd_init 0311       __end_of_lcd_goto 02BA  
               ___bmul 0E53       __end_of_lcd_puts 02D8                 ___ftge 0FAE                 ___wmul 0E9F  
            ??___awdiv 007A              ??___lbdiv 0076              ??___ftadd 0042              ??___awmod 0074  
            ??___lbmod 0071              ??___ftneg 0073              ??___lldiv 0078              ??___ftmul 0033  
            ??___llmod 007D              ??___ftsub 007E              ??___fttol 0024            entry__putch 0706  
            ??__doprnt 0054                 _fround 0414       ___awdiv@quotient 007C        ___awmod@divisor 0070  
         __doprnt@_val 0064           __doprnt@flag 005D        ___awmod@counter 0074                 _printf 07E1  
         __doprnt@fval 006A           __doprnt@prec 005F       __end_of_msecbase 0341  ___ftmul@f3_as_product 0037  
               fptable 0700                 fptotal 0002                 pause@x 0072              ??_sprintf 007E  
     ___lbdiv@dividend 0076        ___lbmod@divisor 0070        ___lbmod@counter 0073             ___ftadd@f1 003C  
           ___ftadd@f2 003F             ___ftge@ff1 0070             ___ftge@ff2 0073             ___ftneg@f1 0070  
  ___bmul@multiplicand 0079             ___ftmul@f1 002D             ___ftmul@f2 0030             ___ftsub@f1 004B  
           ___ftsub@f2 0048             ___fttol@f1 0020         __pcstackCOMMON 0070             ___lltoft@c 0078  
        __end_of_getch 0188          __end_of_scale 0D62          __end_of_pause 0322          __end_of_putch 018D  
     ___lbdiv@quotient 0078             __div_to_l_ 0352     __size_of_lcd_clear 0009             __doprnt@ap 0053  
           __doprnt@pb 006E                ??_getch 0070        __div_to_l_@exp1 0025     __size_of_lcd_write 0012  
      __div_to_l_@cntr 0024                ??_scale 003F                ??_pause 0072        __div_to_l_@quot 0020  
              ??_putch 007E             __pbssBANK1 00AE          __div_to_l_@f1 0070          __div_to_l_@f2 0073  
           __pmaintext 0565                ?___bmul 0079                ?___ftge 0070                ?___wmul 0070  
              _BAUDCTL 0187         main@count_1835 00AA         main@count_1838 00AB                ?_fround 0048  
            ?___ftpack 0070                ?_printf 00A0              ?___lltoft 0078              ?_lcd_init 0070  
            ?_lcd_goto 0070              ?_lcd_puts 0075              ?_msecbase 0070             _scale$2904 0043  
    __end_of_lcd_clear 034A        __size_of___bmul 000E        __size_of___ftge 002C                ___awdiv 0D62  
              ___lbdiv 0518                ___ftadd 071F                ___awmod 0DA7                ___lbmod 0533  
    __end_of_lcd_write 0334                ___ftneg 0FDA                ___lldiv 0193        __size_of___wmul 0019  
              ___ftmul 0DE4                ___llmod 0F70                ___ftsub 0709                ___fttol 01DB  
           _init_comms 07F1                __doprnt 0815             ??___ftpack 0075        __size_of_fround 0104  
           ??___lltoft 007C        __size_of_printf 0010            ?__div_to_l_ 0070                _dpowers 0061  
     ___awmod@dividend 0072          __doprnt@integ 0061                _sprintf 0803                main@num 00A7  
           ??_lcd_init 0075             ??_lcd_goto 0075             ??_lcd_puts 0077   end_of_initialization 018F  
           ??_msecbase 0070        ___lldiv@divisor 0070        ___lldiv@counter 007C                printf@f 00A2  
       __tdiv_to_l_@f1 0070         __tdiv_to_l_@f2 0073          ??__tdiv_to_l_ 0076       ___lbmod@dividend 0072  
          ___lbmod@rem 0074    __size_of__div_to_l_ 00B5             lcd_write@c 0074            ___ftmul@exp 0036  
       __end_of___bmul 0E61         __end_of___ftge 0FDA            ?_init_comms 0070         __end_of___wmul 0EB8  
       __end_of_fround 0518         __end_of_printf 07F1    start_initialization 018D    __end_of__tdiv_to_l_ 02B4  
      ___llmod@divisor 0020        ___llmod@counter 007D               ??___bmul 007A               ??___ftge 0076  
             ??___wmul 0074            __doprnt@exp 0068               ??_fround 007E               ??_printf 007E  
           fround@prec 0051      __size_of___ftpack 003E           pause@usvalue 0070      __size_of___lltoft 001E  
        __pcstackBANK0 0020          __pcstackBANK1 00A0    __size_of_init_comms 000E      __size_of_lcd_init 0039  
    __size_of_lcd_goto 0006              __doprnt@c 006D              __doprnt@f 0052      __size_of_lcd_puts 001E  
            __pfunctab 0700      __size_of_msecbase 000D               ?___awdiv 0076               ?___lbdiv 0075  
             ?___ftadd 003C               ?___awmod 0070              __ptext560 0803              __ptext561 07E1  
            __ptext570 0322              __ptext562 02D8              __ptext571 0FE2              __ptext563 0815  
             ?___lbmod 0070              __ptext580 0D62              __ptext572 0DE4              __ptext564 02BA  
            __ptext581 01DB              __ptext573 071F              __ptext565 02B4              __ptext590 07F1  
            __ptext582 0E61              __ptext574 0311              __ptext566 0341              __ptext591 0184  
            __ptext583 0533              __ptext575 0DA7              __ptext567 0709              __ptext592 0188  
            __ptext584 0518              __ptext576 0193              __ptext568 0BD1              __ptext585 0E9F  
            __ptext577 0FAE              __ptext569 0414              __ptext586 0E53              __ptext578 0FDA  
            __ptext587 0352              __ptext579 0F70              __ptext588 023D              __ptext589 0334  
             ?___ftneg 0070               ?___lldiv 0070               ?___ftmul 002D               ?___llmod 0020  
             ?___ftsub 0048              __npowers_ 0013               ?___fttol 0020               ?__doprnt 0052  
            _lcd_clear 0341              __pstrings 0003            __tdiv_to_l_ 023D              _lcd_write 0322  
         ??__div_to_l_ 0076         __size_of_getch 0004               ?_sprintf 00A0         __size_of_scale 0191  
       __size_of_pause 0011         __size_of_putch 0005         ___wmul@product 0074     __end_of__div_to_l_ 0407  
           ?_lcd_clear 0070            __stringbase 0012             ?_lcd_write 0070      ___wmul@multiplier 0070  
            main@count 00AD              main@input 00AC              lcd_puts@s 0075           ??_init_comms 0070  
     __size_of___awdiv 0045       __size_of___lbdiv 001B       __size_of___ftadd 00C2       __size_of___awmod 003D  
     __size_of___lbmod 001C       __size_of___ftneg 0008       __size_of___lldiv 0048       __size_of___ftmul 006F  
     __size_of___llmod 003E       __size_of___ftsub 0016       __size_of___fttol 005B               ___ftpack 0E61  
     __size_of__doprnt 03BC            _fround$2902 004E            _fround$2903 004B               ___lltoft 0FE2  
             __powers_ 003A               _lcd_init 02D8               _lcd_goto 02B4               _lcd_puts 02BA  
     __size_of_sprintf 0012          __size_of_main 019B     __end_of_init_comms 07FF               _msecbase 0334  
             fp__putch 0706            ??_lcd_clear 0075            ??_lcd_write 0074              putch@byte 0028  
             scale@scl 0046              sprintf@ap 00A4              sprintf@pb 00A5       __tdiv_to_l_@exp1 0025  
     __tdiv_to_l_@cntr 0024              sprintf@wh 00A3       __tdiv_to_l_@quot 0020       ___lldiv@dividend 0074  
            stringcode 000D               printf@ap 00A3               printf@pb 00A4           ?__tdiv_to_l_ 0070  
           _OPTION_REG 0081               sprintf@f 00A0       ___lldiv@quotient 0078               stringdir 000D  
             stringtab 0003  
