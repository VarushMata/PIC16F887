

HI-TECH Software PIC PRO Macro Assembler V9.82 build 9453 
                                                                                               Wed Nov 16 19:50:27 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 9453
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,delta=2
    12                           	psect	text501,local,class=CODE,delta=2
    13                           	psect	text503,local,class=CODE,delta=2
    14                           	psect	text504,local,class=CODE,delta=2
    15                           	psect	text506,local,class=CODE,delta=2
    16                           	psect	text508,local,class=CODE,delta=2
    17                           	psect	text509,local,class=CODE,delta=2
    18                           	psect	text514,local,class=CODE,delta=2
    19                           	psect	text517,local,class=CODE,delta=2
    20                           	psect	text523,local,class=CODE,delta=2
    21                           	psect	text525,local,class=CODE,delta=2
    22                           	psect	text526,local,class=CODE,delta=2
    23                           	psect	text529,local,class=CODE,delta=2
    24                           	psect	pa_nodes,global,class=CODE,delta=2
    25                           	dabs	1,0x7E,2
    26  000A                     	;#
    27                           
    28                           	psect	config
    29  2007  E0D4               	dw	57556	;#
    30  2008  FFFF               	dw	65535	;#
    31                           
    32                           	psect	strings
    33  0800                     __pstrings:	
    34  0800                     stringtab:	
    35                           ;	global	stringdir,stringtab,__stringbase
    36                           
    37                           
    38                           ;	String table - string pointers are 1 byte each
    39  0800  1BFF               	btfsc	btemp+1,7
    40  0801  280A               	ljmp	stringcode
    41  0802  1383               	bcf	3,7
    42  0803  187F               	btfsc	btemp+1,0
    43  0804  1783               	bsf	3,7
    44  0805  0800               	movf	0,w
    45  0806  0A84               	incf	4,f
    46  0807  1903               	skipnz
    47  0808  0AFF               	incf	btemp+1,f
    48  0809  0008               	return
    49  080A                     stringcode:	
    50  080A                     stringdir:	
    51  080A  3008               	movlw	high stringdir
    52  080B  008A               	movwf	10
    53  080C  0804               	movf	4,w
    54  080D  0A84               	incf	4,f
    55  080E  0782               	addwf	2,f
    56  080F                     __stringbase:	
    57  080F  3400               	retlw	0
    58  0810                     __npowers_:	
    59  0810  3400               	retlw	0
    60  0811  3480               	retlw	128
    61  0812  343F               	retlw	63
    62  0813  34CD               	retlw	205
    63  0814  34CC               	retlw	204
    64  0815  343D               	retlw	61
    65  0816  34D7               	retlw	215
    66  0817  3423               	retlw	35
    67  0818  343C               	retlw	60
    68  0819  3412               	retlw	18
    69  081A  3483               	retlw	131
    70  081B  343A               	retlw	58
    71  081C  34B7               	retlw	183
    72  081D  34D1               	retlw	209
    73  081E  3438               	retlw	56
    74  081F  34C6               	retlw	198
    75  0820  3427               	retlw	39
    76  0821  3437               	retlw	55
    77  0822  3438               	retlw	56
    78  0823  3486               	retlw	134
    79  0824  3435               	retlw	53
    80  0825  34C0               	retlw	192
    81  0826  34D6               	retlw	214
    82  0827  3433               	retlw	51
    83  0828  34CC               	retlw	204
    84  0829  342B               	retlw	43
    85  082A  3432               	retlw	50
    86  082B  3470               	retlw	112
    87  082C  3489               	retlw	137
    88  082D  3430               	retlw	48
    89  082E  34E7               	retlw	231
    90  082F  34DB               	retlw	219
    91  0830  342E               	retlw	46
    92  0831  34E5               	retlw	229
    93  0832  343C               	retlw	60
    94  0833  341E               	retlw	30
    95  0834  3442               	retlw	66
    96  0835  34A2               	retlw	162
    97  0836  340D               	retlw	13
    98  0837                     __powers_:	
    99  0837  3400               	retlw	0
   100  0838  3480               	retlw	128
   101  0839  343F               	retlw	63
   102  083A  3400               	retlw	0
   103  083B  3420               	retlw	32
   104  083C  3441               	retlw	65
   105  083D  3400               	retlw	0
   106  083E  34C8               	retlw	200
   107  083F  3442               	retlw	66
   108  0840  3400               	retlw	0
   109  0841  347A               	retlw	122
   110  0842  3444               	retlw	68
   111  0843  3440               	retlw	64
   112  0844  341C               	retlw	28
   113  0845  3446               	retlw	70
   114  0846  3450               	retlw	80
   115  0847  34C3               	retlw	195
   116  0848  3447               	retlw	71
   117  0849  3424               	retlw	36
   118  084A  3474               	retlw	116
   119  084B  3449               	retlw	73
   120  084C  3497               	retlw	151
   121  084D  3418               	retlw	24
   122  084E  344B               	retlw	75
   123  084F  34BC               	retlw	188
   124  0850  34BE               	retlw	190
   125  0851  344C               	retlw	76
   126  0852  346B               	retlw	107
   127  0853  346E               	retlw	110
   128  0854  344E               	retlw	78
   129  0855  3403               	retlw	3
   130  0856  3415               	retlw	21
   131  0857  3450               	retlw	80
   132  0858  3479               	retlw	121
   133  0859  34AD               	retlw	173
   134  085A  3460               	retlw	96
   135  085B  34F3               	retlw	243
   136  085C  3449               	retlw	73
   137  085D  3471               	retlw	113
   138  085E                     _dpowers:	
   139  085E  3401               	retlw	1
   140  085F  3400               	retlw	0
   141  0860  3400               	retlw	0
   142  0861  3400               	retlw	0
   143  0862  340A               	retlw	10
   144  0863  3400               	retlw	0
   145  0864  3400               	retlw	0
   146  0865  3400               	retlw	0
   147  0866  3464               	retlw	100
   148  0867  3400               	retlw	0
   149  0868  3400               	retlw	0
   150  0869  3400               	retlw	0
   151  086A  34E8               	retlw	232
   152  086B  3403               	retlw	3
   153  086C  3400               	retlw	0
   154  086D  3400               	retlw	0
   155  086E  3410               	retlw	16
   156  086F  3427               	retlw	39
   157  0870  3400               	retlw	0
   158  0871  3400               	retlw	0
   159  0872  34A0               	retlw	160
   160  0873  3486               	retlw	134
   161  0874  3401               	retlw	1
   162  0875  3400               	retlw	0
   163  0876  3440               	retlw	64
   164  0877  3442               	retlw	66
   165  0878  340F               	retlw	15
   166  0879  3400               	retlw	0
   167  087A  3480               	retlw	128
   168  087B  3496               	retlw	150
   169  087C  3498               	retlw	152
   170  087D  3400               	retlw	0
   171  087E  3400               	retlw	0
   172  087F  34E1               	retlw	225
   173  0880  34F5               	retlw	245
   174  0881  3405               	retlw	5
   175  0882  3400               	retlw	0
   176  0883  34CA               	retlw	202
   177  0884  349A               	retlw	154
   178  0885  343B               	retlw	59
   179  001F                     _ADCON0	set	31
   180  001E                     _ADRESH	set	30
   181  0007                     _PORTC	set	7
   182  0001                     _TMR0	set	1
   183  00F9                     _GO_DONE	set	249
   184  0041                     _RD1	set	65
   185  0042                     _RD2	set	66
   186  0044                     _RD4	set	68
   187  005A                     _T0IF	set	90
   188  009F                     _ADCON1	set	159
   189  009E                     _ADRESL	set	158
   190  0081                     _OPTION_REG	set	129
   191  0085                     _TRISA	set	133
   192  0086                     _TRISB	set	134
   193  0087                     _TRISC	set	135
   194  0088                     _TRISD	set	136
   195  0089                     _TRISE	set	137
   196  0188                     _ANSEL	set	392
   197  0189                     _ANSELH	set	393
   198  0886                     STR_4:	
   199  0886  3425               	retlw	37	;'%'
   200  0887  342E               	retlw	46	;'.'
   201  0888  3433               	retlw	51	;'3'
   202  0889  3466               	retlw	102	;'f'
   203  088A  3400               	retlw	0
   204  088B                     STR_1:	
   205  088B  3456               	retlw	86	;'V'
   206  088C  3431               	retlw	49	;'1'
   207  088D  343A               	retlw	58	;':'
   208  088E  3400               	retlw	0
   209  088F                     STR_2:	
   210  088F  3456               	retlw	86	;'V'
   211  0890  3432               	retlw	50	;'2'
   212  0891  343A               	retlw	58	;':'
   213  0892  3400               	retlw	0
   214  0893                     STR_3:	
   215  0893  3456               	retlw	86	;'V'
   216  0894  3433               	retlw	51	;'3'
   217  0895  343A               	retlw	58	;':'
   218  0896  3400               	retlw	0
   219  0886                     
   220                           	psect	cinit
   221  09F9                     start_initialization:	
   222                           
   223                           ; Clear objects allocated to BANK0
   224  09F9  01DB               	clrf	__pbssBANK0& (0+127)
   225  09FA  01DC               	clrf	(__pbssBANK0+1)& (0+127)
   226  09FB  01DD               	clrf	(__pbssBANK0+2)& (0+127)
   227  09FC  01DE               	clrf	(__pbssBANK0+3)& (0+127)
   228  09FD  01DF               	clrf	(__pbssBANK0+4)& (0+127)
   229  09FE  01E0               	clrf	(__pbssBANK0+5)& (0+127)
   230  09FF  01E1               	clrf	(__pbssBANK0+6)& (0+127)
   231  0A00  01E2               	clrf	(__pbssBANK0+7)& (0+127)
   232  0A01  01E3               	clrf	(__pbssBANK0+8)& (0+127)
   233  0A02  01E4               	clrf	(__pbssBANK0+9)& (0+127)
   234  0A03                     end_of_initialization:	
   235                           ;End of C runtime variable initialization code
   236                           
   237  0A03  0183               	clrf	3
   238  0A04  120A  158A  2D86   	ljmp	_main	;jump to C main() function
   239                           
   240                           	psect	bssBANK0
   241  005B                     __pbssBANK0:	
   242  005B                     _num:	
   243  005B                     	ds	3
   244  005E                     _VAD:	
   245  005E                     	ds	2
   246  0060                     _carac:	
   247  0060                     	ds	5
   248                           
   249                           	psect	cstackBANK1
   250  00A0                     __pcstackBANK1:	
   251  00A0                     _sprintf$2306:	
   252                           
   253                           ; 4 bytes @ 0x0
   254  00A0                     	ds	4
   255  00A4                     sprintf@ap:	
   256                           
   257                           ; 1 bytes @ 0x4
   258  00A4                     	ds	1
   259  00A5                     sprintf@flag:	
   260                           
   261                           ; 2 bytes @ 0x5
   262  00A5                     	ds	2
   263  00A7                     sprintf@integ:	
   264                           
   265                           ; 3 bytes @ 0x7
   266  00A7                     	ds	3
   267  00AA                     sprintf@_val:	
   268                           
   269                           ; 4 bytes @ 0xA
   270  00AA                     	ds	4
   271  00AE                     sprintf@sp:	
   272                           
   273                           ; 1 bytes @ 0xE
   274  00AE                     	ds	1
   275  00AF                     sprintf@exp:	
   276                           
   277                           ; 2 bytes @ 0xF
   278  00AF                     	ds	2
   279  00B1                     sprintf@prec:	
   280                           
   281                           ; 2 bytes @ 0x11
   282  00B1                     	ds	2
   283  00B3                     sprintf@fval:	
   284                           
   285                           ; 3 bytes @ 0x13
   286  00B3                     	ds	3
   287  00B6                     sprintf@c:	
   288                           
   289                           ; 1 bytes @ 0x16
   290  00B6                     	ds	1
   291                           
   292                           	psect	cstackCOMMON
   293  0070                     __pcstackCOMMON:	
   294  0070                     ?_lcd_init:	
   295  0070                     ?_lcd_goto:	
   296                           ; 0 bytes @ 0x0
   297                           
   298  0070                     ?_pause:	
   299                           ; 0 bytes @ 0x0
   300                           
   301  0070                     ?_msecbase:	
   302                           ; 0 bytes @ 0x0
   303                           
   304  0070                     ??_msecbase:	
   305                           ; 0 bytes @ 0x0
   306                           
   307  0070                     ?_isdigit:	
   308                           ; 0 bytes @ 0x0
   309                           
   310  0070                     ??_isdigit:	
   311                           ; 1 bit 
   312                           
   313  0070                     ?_main:	
   314                           ; 0 bytes @ 0x0
   315                           
   316  0070                     ?_lcd_write:	
   317                           ; 0 bytes @ 0x0
   318                           
   319  0070                     ?_lcd_clear:	
   320                           ; 0 bytes @ 0x0
   321                           
   322  0070                     ?___ftge:	
   323                           ; 0 bytes @ 0x0
   324                           
   325  0070                     ?___lbmod:	
   326                           ; 1 bit 
   327                           
   328  0070                     ?___wmul:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ?___awmod:	
   332                           ; 2 bytes @ 0x0
   333                           
   334  0070                     ?___ftpack:	
   335                           ; 2 bytes @ 0x0
   336                           
   337  0070                     ?___ftneg:	
   338                           ; 3 bytes @ 0x0
   339                           
   340  0070                     ?__tdiv_to_l_:	
   341                           ; 3 bytes @ 0x0
   342                           
   343  0070                     ?__div_to_l_:	
   344                           ; 4 bytes @ 0x0
   345                           
   346  0070                     ?___lldiv:	
   347                           ; 4 bytes @ 0x0
   348                           
   349  0070                     _isdigit$2814:	
   350                           ; 4 bytes @ 0x0
   351                           
   352  0070                     ___lbmod@divisor:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     pause@usvalue:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ___wmul@multiplier:	
   359                           ; 2 bytes @ 0x0
   360                           
   361  0070                     ___awmod@divisor:	
   362                           ; 2 bytes @ 0x0
   363                           
   364  0070                     ___ftneg@f1:	
   365                           ; 2 bytes @ 0x0
   366                           
   367  0070                     ___ftge@ff1:	
   368                           ; 3 bytes @ 0x0
   369                           
   370  0070                     __tdiv_to_l_@f1:	
   371                           ; 3 bytes @ 0x0
   372                           
   373  0070                     __div_to_l_@f1:	
   374                           ; 3 bytes @ 0x0
   375                           
   376  0070                     ___ftpack@arg:	
   377                           ; 3 bytes @ 0x0
   378                           
   379  0070                     ___lldiv@divisor:	
   380                           ; 3 bytes @ 0x0
   381                           
   382                           
   383                           ; 4 bytes @ 0x0
   384  0070                     	ds	1
   385  0071                     ??___lbmod:	
   386  0071                     isdigit@c:	
   387                           ; 0 bytes @ 0x1
   388                           
   389                           
   390                           ; 1 bytes @ 0x1
   391  0071                     	ds	1
   392  0072                     ??_pause:	
   393  0072                     ___lbmod@dividend:	
   394                           ; 0 bytes @ 0x2
   395                           
   396  0072                     pause@x:	
   397                           ; 1 bytes @ 0x2
   398                           
   399  0072                     ___wmul@multiplicand:	
   400                           ; 2 bytes @ 0x2
   401                           
   402  0072                     ___awmod@dividend:	
   403                           ; 2 bytes @ 0x2
   404                           
   405                           
   406                           ; 2 bytes @ 0x2
   407  0072                     	ds	1
   408  0073                     ??___ftneg:	
   409  0073                     ___lbmod@counter:	
   410                           ; 0 bytes @ 0x3
   411                           
   412  0073                     ___ftpack@exp:	
   413                           ; 1 bytes @ 0x3
   414                           
   415  0073                     ___ftge@ff2:	
   416                           ; 1 bytes @ 0x3
   417                           
   418  0073                     __tdiv_to_l_@f2:	
   419                           ; 3 bytes @ 0x3
   420                           
   421  0073                     __div_to_l_@f2:	
   422                           ; 3 bytes @ 0x3
   423                           
   424                           
   425                           ; 3 bytes @ 0x3
   426  0073                     	ds	1
   427  0074                     ??_lcd_write:	
   428  0074                     ??___wmul:	
   429                           ; 0 bytes @ 0x4
   430                           
   431  0074                     ??___awmod:	
   432                           ; 0 bytes @ 0x4
   433                           
   434  0074                     lcd_write@c:	
   435                           ; 0 bytes @ 0x4
   436                           
   437  0074                     ___lbmod@rem:	
   438                           ; 1 bytes @ 0x4
   439                           
   440  0074                     ___awmod@counter:	
   441                           ; 1 bytes @ 0x4
   442                           
   443  0074                     ___ftpack@sign:	
   444                           ; 1 bytes @ 0x4
   445                           
   446  0074                     ___wmul@product:	
   447                           ; 1 bytes @ 0x4
   448                           
   449  0074                     ___lldiv@dividend:	
   450                           ; 2 bytes @ 0x4
   451                           
   452                           
   453                           ; 4 bytes @ 0x4
   454  0074                     	ds	1
   455  0075                     ??_lcd_init:	
   456  0075                     ??_lcd_goto:	
   457                           ; 0 bytes @ 0x5
   458                           
   459  0075                     ?_lcd_puts:	
   460                           ; 0 bytes @ 0x5
   461                           
   462  0075                     ??___ftpack:	
   463                           ; 0 bytes @ 0x5
   464                           
   465  0075                     ??_lcd_clear:	
   466                           ; 0 bytes @ 0x5
   467                           
   468  0075                     ?___lbdiv:	
   469                           ; 0 bytes @ 0x5
   470                           
   471  0075                     lcd_goto@pos:	
   472                           ; 1 bytes @ 0x5
   473                           
   474  0075                     ___lbdiv@divisor:	
   475                           ; 1 bytes @ 0x5
   476                           
   477  0075                     ___awmod@sign:	
   478                           ; 1 bytes @ 0x5
   479                           
   480  0075                     lcd_puts@s:	
   481                           ; 1 bytes @ 0x5
   482                           
   483                           
   484                           ; 2 bytes @ 0x5
   485  0075                     	ds	1
   486  0076                     ??__tdiv_to_l_:	
   487  0076                     ??__div_to_l_:	
   488                           ; 0 bytes @ 0x6
   489                           
   490  0076                     ??___lbdiv:	
   491                           ; 0 bytes @ 0x6
   492                           
   493  0076                     ??___ftge:	
   494                           ; 0 bytes @ 0x6
   495                           
   496  0076                     ?___awdiv:	
   497                           ; 0 bytes @ 0x6
   498                           
   499  0076                     ___lbdiv@dividend:	
   500                           ; 2 bytes @ 0x6
   501                           
   502  0076                     ___awdiv@divisor:	
   503                           ; 1 bytes @ 0x6
   504                           
   505                           
   506                           ; 2 bytes @ 0x6
   507  0076                     	ds	1
   508  0077                     ??_lcd_puts:	
   509  0077                     ___lbdiv@counter:	
   510                           ; 0 bytes @ 0x7
   511                           
   512                           
   513                           ; 1 bytes @ 0x7
   514  0077                     	ds	1
   515  0078                     ??___lldiv:	
   516  0078                     ?___lwtoft:	
   517                           ; 0 bytes @ 0x8
   518                           
   519  0078                     ?___lltoft:	
   520                           ; 3 bytes @ 0x8
   521                           
   522  0078                     ___lbdiv@quotient:	
   523                           ; 3 bytes @ 0x8
   524                           
   525  0078                     ___awdiv@dividend:	
   526                           ; 1 bytes @ 0x8
   527                           
   528  0078                     ___lwtoft@c:	
   529                           ; 2 bytes @ 0x8
   530                           
   531  0078                     ___lldiv@quotient:	
   532                           ; 2 bytes @ 0x8
   533                           
   534  0078                     ___lltoft@c:	
   535                           ; 4 bytes @ 0x8
   536                           
   537                           
   538                           ; 4 bytes @ 0x8
   539  0078                     	ds	1
   540  0079                     ?___bmul:	
   541  0079                     ___bmul@multiplicand:	
   542                           ; 1 bytes @ 0x9
   543                           
   544                           
   545                           ; 1 bytes @ 0x9
   546  0079                     	ds	1
   547  007A                     ??___bmul:	
   548  007A                     ??___awdiv:	
   549                           ; 0 bytes @ 0xA
   550                           
   551  007A                     ___bmul@product:	
   552                           ; 0 bytes @ 0xA
   553                           
   554  007A                     ___awdiv@counter:	
   555                           ; 1 bytes @ 0xA
   556                           
   557                           
   558                           ; 1 bytes @ 0xA
   559  007A                     	ds	1
   560  007B                     ??___lwtoft:	
   561  007B                     ___bmul@multiplier:	
   562                           ; 0 bytes @ 0xB
   563                           
   564  007B                     ___awdiv@sign:	
   565                           ; 1 bytes @ 0xB
   566                           
   567                           
   568                           ; 1 bytes @ 0xB
   569  007B                     	ds	1
   570  007C                     ??___lltoft:	
   571  007C                     ___lldiv@counter:	
   572                           ; 0 bytes @ 0xC
   573                           
   574  007C                     ___lltoft@exp:	
   575                           ; 1 bytes @ 0xC
   576                           
   577  007C                     ___awdiv@quotient:	
   578                           ; 1 bytes @ 0xC
   579                           
   580                           
   581                           ; 2 bytes @ 0xC
   582  007C                     	ds	1
   583  007D                     ??___llmod:	
   584  007D                     ___llmod@counter:	
   585                           ; 0 bytes @ 0xD
   586                           
   587                           
   588                           ; 1 bytes @ 0xD
   589  007D                     	ds	1
   590  007E                     ??_main:	
   591  007E                     ??_fround:	
   592                           ; 0 bytes @ 0xE
   593                           
   594  007E                     ??___ftsub:	
   595                           ; 0 bytes @ 0xE
   596                           
   597                           
   598                           	psect	cstackBANK0
   599  0020                     __pcstackBANK0:	
   600                           ; 0 bytes @ 0xE
   601                           
   602  0020                     ?___fttol:	
   603  0020                     ?___llmod:	
   604                           ; 4 bytes @ 0x0
   605                           
   606  0020                     ___fttol@f1:	
   607                           ; 4 bytes @ 0x0
   608                           
   609  0020                     ___llmod@divisor:	
   610                           ; 3 bytes @ 0x0
   611                           
   612  0020                     __tdiv_to_l_@quot:	
   613                           ; 4 bytes @ 0x0
   614                           
   615  0020                     __div_to_l_@quot:	
   616                           ; 4 bytes @ 0x0
   617                           
   618                           
   619                           ; 4 bytes @ 0x0
   620  0020                     	ds	4
   621  0024                     ??___fttol:	
   622  0024                     __tdiv_to_l_@cntr:	
   623                           ; 0 bytes @ 0x4
   624                           
   625  0024                     __div_to_l_@cntr:	
   626                           ; 1 bytes @ 0x4
   627                           
   628  0024                     ___llmod@dividend:	
   629                           ; 1 bytes @ 0x4
   630                           
   631                           
   632                           ; 4 bytes @ 0x4
   633  0024                     	ds	1
   634  0025                     __tdiv_to_l_@exp1:	
   635  0025                     __div_to_l_@exp1:	
   636                           ; 1 bytes @ 0x5
   637                           
   638                           
   639                           ; 1 bytes @ 0x5
   640  0025                     	ds	2
   641  0027                     ___fttol@sign1:	
   642                           
   643                           ; 1 bytes @ 0x7
   644  0027                     	ds	1
   645  0028                     ___fttol@lval:	
   646                           
   647                           ; 4 bytes @ 0x8
   648  0028                     	ds	4
   649  002C                     ___fttol@exp1:	
   650                           
   651                           ; 1 bytes @ 0xC
   652  002C                     	ds	1
   653  002D                     ?___ftmul:	
   654  002D                     ___ftmul@f1:	
   655                           ; 3 bytes @ 0xD
   656                           
   657                           
   658                           ; 3 bytes @ 0xD
   659  002D                     	ds	3
   660  0030                     ___ftmul@f2:	
   661                           
   662                           ; 3 bytes @ 0x10
   663  0030                     	ds	3
   664  0033                     ??___ftmul:	
   665                           
   666                           ; 0 bytes @ 0x13
   667  0033                     	ds	3
   668  0036                     ___ftmul@exp:	
   669                           
   670                           ; 1 bytes @ 0x16
   671  0036                     	ds	1
   672  0037                     ___ftmul@f3_as_product:	
   673                           
   674                           ; 3 bytes @ 0x17
   675  0037                     	ds	3
   676  003A                     ___ftmul@cntr:	
   677                           
   678                           ; 1 bytes @ 0x1A
   679  003A                     	ds	1
   680  003B                     ___ftmul@sign:	
   681                           
   682                           ; 1 bytes @ 0x1B
   683  003B                     	ds	1
   684  003C                     ?_scale:	
   685  003C                     ?___ftadd:	
   686                           ; 3 bytes @ 0x1C
   687                           
   688  003C                     ___ftadd@f1:	
   689                           ; 3 bytes @ 0x1C
   690                           
   691                           
   692                           ; 3 bytes @ 0x1C
   693  003C                     	ds	3
   694  003F                     ??_scale:	
   695  003F                     ___ftadd@f2:	
   696                           ; 0 bytes @ 0x1F
   697                           
   698                           
   699                           ; 3 bytes @ 0x1F
   700  003F                     	ds	3
   701  0042                     ??___ftadd:	
   702                           
   703                           ; 0 bytes @ 0x22
   704  0042                     	ds	1
   705  0043                     _scale$3246:	
   706                           
   707                           ; 3 bytes @ 0x23
   708  0043                     	ds	2
   709  0045                     ___ftadd@sign:	
   710                           
   711                           ; 1 bytes @ 0x25
   712  0045                     	ds	1
   713  0046                     scale@scl:	
   714  0046                     ___ftadd@exp2:	
   715                           ; 1 bytes @ 0x26
   716                           
   717                           
   718                           ; 1 bytes @ 0x26
   719  0046                     	ds	1
   720  0047                     ___ftadd@exp1:	
   721                           
   722                           ; 1 bytes @ 0x27
   723  0047                     	ds	1
   724  0048                     ?_fround:	
   725  0048                     ?___ftsub:	
   726                           ; 3 bytes @ 0x28
   727                           
   728  0048                     ___ftsub@f2:	
   729                           ; 3 bytes @ 0x28
   730                           
   731                           
   732                           ; 3 bytes @ 0x28
   733  0048                     	ds	3
   734  004B                     ___ftsub@f1:	
   735  004B                     _fround$3245:	
   736                           ; 3 bytes @ 0x2B
   737                           
   738                           
   739                           ; 3 bytes @ 0x2B
   740  004B                     	ds	3
   741  004E                     _fround$3244:	
   742                           
   743                           ; 3 bytes @ 0x2E
   744  004E                     	ds	3
   745  0051                     fround@prec:	
   746                           
   747                           ; 1 bytes @ 0x31
   748  0051                     	ds	1
   749  0052                     ?_sprintf:	
   750  0052                     sprintf@f:	
   751                           ; 2 bytes @ 0x32
   752                           
   753                           
   754                           ; 1 bytes @ 0x32
   755  0052                     	ds	4
   756  0056                     ??_sprintf:	
   757                           
   758                           ; 0 bytes @ 0x36
   759  0056                     	ds	5
   760                           
   761                           	psect	maintext
   762  0D86                     __pmaintext:	
   763 ;;Data sizes: Strings 17, constant 118, data 0, bss 10, persistent 0 stack 0
   764 ;;Auto spaces:   Size  Autos    Used
   765 ;; COMMON          14     14      14
   766 ;; BANK0           80     59      69
   767 ;; BANK1           80     23      23
   768 ;; BANK3           96      0       0
   769 ;; BANK2           96      0       0
   770 ;;
   771 ;; Pointer list with targets:
   772 ;; ?___ftpack	float  size(1) Largest target is 0
   773 ;;
   774 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   775 ;;
   776 ;; ?___llmod	unsigned long  size(1) Largest target is 0
   777 ;;
   778 ;; ?___ftsub	float  size(1) Largest target is 0
   779 ;;
   780 ;; ?___lltoft	float  size(1) Largest target is 0
   781 ;;
   782 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
   783 ;;
   784 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
   785 ;;
   786 ;; ?___fttol	long  size(1) Largest target is 0
   787 ;;
   788 ;; ?___ftadd	float  size(1) Largest target is 0
   789 ;;
   790 ;; ?___ftneg	float  size(1) Largest target is 0
   791 ;;
   792 ;; ?___awmod	int  size(1) Largest target is 40
   793 ;;		 -> dpowers(CODE[40]), 
   794 ;;
   795 ;; ?___awdiv	int  size(1) Largest target is 0
   796 ;;
   797 ;; ?_scale	int  size(1) Largest target is 0
   798 ;;
   799 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   800 ;;
   801 ;; ?_fround	unsigned int  size(1) Largest target is 0
   802 ;;
   803 ;; ?___ftmul	float  size(1) Largest target is 0
   804 ;;
   805 ;; ?___lwtoft	float  size(1) Largest target is 0
   806 ;;
   807 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 5
   808 ;;		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), 
   809 ;;
   810 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 5
   811 ;;		 -> carac(BANK0[5]), 
   812 ;;
   813 ;; ?_sprintf	int  size(1) Largest target is 0
   814 ;;
   815 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
   816 ;;		 -> ?_sprintf(BANK0[2]), 
   817 ;;
   818 ;; S2295$_cp	PTR const unsigned char  size(1) Largest target is 0
   819 ;;
   820 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   821 ;;
   822 ;; lcd_puts@s	PTR const unsigned char  size(2) Largest target is 5
   823 ;;		 -> carac(BANK0[5]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 
   824 ;;
   825 ;;
   826 ;; Critical Paths under _main in COMMON
   827 ;;
   828 ;;   _lcd_init->_lcd_write
   829 ;;   _lcd_clear->_lcd_write
   830 ;;   _sprintf->___awdiv
   831 ;;   _sprintf->__div_to_l_
   832 ;;   _sprintf->___llmod
   833 ;;   _lcd_puts->_lcd_write
   834 ;;   _lcd_goto->_lcd_write
   835 ;;   _scale->___awdiv
   836 ;;   _lcd_write->_pause
   837 ;;   ___lltoft->___ftpack
   838 ;;   ___lwtoft->___ftpack
   839 ;;   ___ftmul->___awdiv
   840 ;;   ___llmod->___lldiv
   841 ;;   ___awdiv->___awmod
   842 ;;   ___fttol->___awdiv
   843 ;;   ___lbdiv->___lbmod
   844 ;;   ___bmul->___lbdiv
   845 ;;
   846 ;; Critical Paths under _main in BANK0
   847 ;;
   848 ;;   _main->_sprintf
   849 ;;   _sprintf->_fround
   850 ;;   ___ftsub->___ftadd
   851 ;;   _scale->___ftmul
   852 ;;   _fround->___ftadd
   853 ;;   ___ftmul->___fttol
   854 ;;   ___ftadd->___ftmul
   855 ;;
   856 ;; Critical Paths under _main in BANK1
   857 ;;
   858 ;;   _main->_sprintf
   859 ;;
   860 ;; Critical Paths under _main in BANK3
   861 ;;
   862 ;;   None.
   863 ;;
   864 ;; Critical Paths under _main in BANK2
   865 ;;
   866 ;;   None.
   867 ;;
   868 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   869 ;;
   870 ;;
   871 ;;Call Graph Tables:
   872 ;;
   873 ;; ---------------------------------------------------------------------------------
   874 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   875 ;; ---------------------------------------------------------------------------------
   876 ;; (0) _main                                                 0     0      0   10975
   877 ;;                           _lcd_init
   878 ;;                           _lcd_goto
   879 ;;                           _lcd_puts
   880 ;;                           ___lwtoft
   881 ;;                            ___ftmul
   882 ;;                            _sprintf
   883 ;;                              _pause
   884 ;; ---------------------------------------------------------------------------------
   885 ;; (1) _lcd_init                                             1     1      0     295
   886 ;;                                              5 COMMON     1     1      0
   887 ;;                              _pause
   888 ;;                          _lcd_write
   889 ;;                          _lcd_clear
   890 ;; ---------------------------------------------------------------------------------
   891 ;; (2) _lcd_clear                                            0     0      0     136
   892 ;;                          _lcd_write
   893 ;;                              _pause
   894 ;; ---------------------------------------------------------------------------------
   895 ;; (1) _sprintf                                             38    34      4    9621
   896 ;;                                             50 BANK0      9     5      4
   897 ;;                                              0 BANK1     23    23      0
   898 ;;                             ___wmul
   899 ;;                            _isdigit
   900 ;;                             ___ftge
   901 ;;                            ___ftneg
   902 ;;                            ___awdiv
   903 ;;                              _scale
   904 ;;                            ___ftmul
   905 ;;                             _fround
   906 ;;                            ___ftadd
   907 ;;                            ___fttol
   908 ;;                         __div_to_l_
   909 ;;                        __tdiv_to_l_
   910 ;;                           ___lltoft
   911 ;;                            ___ftsub
   912 ;;                            ___lldiv
   913 ;;                            ___llmod
   914 ;; ---------------------------------------------------------------------------------
   915 ;; (1) _lcd_puts                                             2     0      2     135
   916 ;;                                              5 COMMON     2     0      2
   917 ;;                          _lcd_write
   918 ;; ---------------------------------------------------------------------------------
   919 ;; (1) _lcd_goto                                             1     1      0     112
   920 ;;                                              5 COMMON     1     1      0
   921 ;;                          _lcd_write
   922 ;; ---------------------------------------------------------------------------------
   923 ;; (2) ___ftsub                                              6     0      6    1094
   924 ;;                                             40 BANK0      6     0      6
   925 ;;                            ___ftadd
   926 ;;                           ___lltoft (ARG)
   927 ;; ---------------------------------------------------------------------------------
   928 ;; (2) _scale                                               14    11      3    1688
   929 ;;                                             28 BANK0     11     8      3
   930 ;;                            ___awmod
   931 ;;                            ___awdiv
   932 ;;                            ___ftmul
   933 ;;                             ___bmul
   934 ;;                            ___fttol (ARG)
   935 ;; ---------------------------------------------------------------------------------
   936 ;; (2) _fround                                              13    10      3    1215
   937 ;;                                             40 BANK0     10     7      3
   938 ;;                            ___lbmod
   939 ;;                             ___bmul
   940 ;;                            ___lbdiv
   941 ;;                            ___ftmul
   942 ;;                            ___ftadd (ARG)
   943 ;; ---------------------------------------------------------------------------------
   944 ;; (2) _lcd_write                                            1     1      0      90
   945 ;;                                              4 COMMON     1     1      0
   946 ;;                              _pause
   947 ;; ---------------------------------------------------------------------------------
   948 ;; (2) ___lltoft                                             5     1      4     278
   949 ;;                                              8 COMMON     5     1      4
   950 ;;                           ___ftpack
   951 ;; ---------------------------------------------------------------------------------
   952 ;; (1) ___lwtoft                                             3     0      3     231
   953 ;;                                              8 COMMON     3     0      3
   954 ;;                           ___ftpack
   955 ;; ---------------------------------------------------------------------------------
   956 ;; (3) ___ftmul                                             15     9      6     535
   957 ;;                                             13 BANK0     15     9      6
   958 ;;                           ___ftpack
   959 ;;                           ___lwtoft (ARG)
   960 ;;                            ___fttol (ARG)
   961 ;;                            ___awdiv (ARG)
   962 ;;                            ___awmod (ARG)
   963 ;;                             ___bmul (ARG)
   964 ;;                            ___lbdiv (ARG)
   965 ;;                            ___lbmod (ARG)
   966 ;; ---------------------------------------------------------------------------------
   967 ;; (3) ___ftadd                                             12     6      6    1049
   968 ;;                                             28 BANK0     12     6      6
   969 ;;                           ___ftpack
   970 ;;                            ___lbmod (ARG)
   971 ;;                             ___bmul (ARG)
   972 ;;                            ___lbdiv (ARG)
   973 ;;                            ___ftmul (ARG)
   974 ;; ---------------------------------------------------------------------------------
   975 ;; (1) _pause                                                4     2      2      46
   976 ;;                                              0 COMMON     4     2      2
   977 ;;                           _msecbase
   978 ;; ---------------------------------------------------------------------------------
   979 ;; (3) ___awmod                                              6     2      4     296
   980 ;;                                              0 COMMON     6     2      4
   981 ;; ---------------------------------------------------------------------------------
   982 ;; (2) ___lldiv                                             13     5      8     162
   983 ;;                                              0 COMMON    13     5      8
   984 ;; ---------------------------------------------------------------------------------
   985 ;; (2) ___ftge                                               6     0      6     136
   986 ;;                                              0 COMMON     6     0      6
   987 ;; ---------------------------------------------------------------------------------
   988 ;; (2) ___ftneg                                              3     0      3      45
   989 ;;                                              0 COMMON     3     0      3
   990 ;; ---------------------------------------------------------------------------------
   991 ;; (2) ___llmod                                              9     1      8     159
   992 ;;                                             13 COMMON     1     1      0
   993 ;;                                              0 BANK0      8     0      8
   994 ;;                            ___lldiv (ARG)
   995 ;; ---------------------------------------------------------------------------------
   996 ;; (3) ___awdiv                                              8     4      4     300
   997 ;;                                              6 COMMON     8     4      4
   998 ;;                            ___awmod (ARG)
   999 ;; ---------------------------------------------------------------------------------
  1000 ;; (2) ___fttol                                             13     9      4     252
  1001 ;;                                              0 BANK0     13     9      4
  1002 ;;                           ___ftpack (ARG)
  1003 ;;                            ___awmod (ARG)
  1004 ;;                            ___awdiv (ARG)
  1005 ;;                             ___bmul (ARG)
  1006 ;; ---------------------------------------------------------------------------------
  1007 ;; (4) ___ftpack                                             8     3      5     209
  1008 ;;                                              0 COMMON     8     3      5
  1009 ;; ---------------------------------------------------------------------------------
  1010 ;; (3) ___lbmod                                              5     4      1     159
  1011 ;;                                              0 COMMON     5     4      1
  1012 ;; ---------------------------------------------------------------------------------
  1013 ;; (3) ___lbdiv                                              4     3      1     162
  1014 ;;                                              5 COMMON     4     3      1
  1015 ;;                            ___lbmod (ARG)
  1016 ;; ---------------------------------------------------------------------------------
  1017 ;; (2) ___wmul                                               6     2      4      92
  1018 ;;                                              0 COMMON     6     2      4
  1019 ;; ---------------------------------------------------------------------------------
  1020 ;; (3) ___bmul                                               3     2      1      68
  1021 ;;                                              9 COMMON     3     2      1
  1022 ;;                            ___lbmod (ARG)
  1023 ;;                            ___lbdiv (ARG)
  1024 ;; ---------------------------------------------------------------------------------
  1025 ;; (2) __div_to_l_                                          20    14      6     446
  1026 ;;                                              0 COMMON    14     8      6
  1027 ;;                                              0 BANK0      6     6      0
  1028 ;; ---------------------------------------------------------------------------------
  1029 ;; (2) __tdiv_to_l_                                         15     9      6     303
  1030 ;;                                              0 COMMON     9     3      6
  1031 ;;                                              0 BANK0      6     6      0
  1032 ;; ---------------------------------------------------------------------------------
  1033 ;; (2) _isdigit                                              2     2      0      68
  1034 ;;                                              0 COMMON     2     2      0
  1035 ;; ---------------------------------------------------------------------------------
  1036 ;; (2) _msecbase                                             0     0      0       0
  1037 ;; ---------------------------------------------------------------------------------
  1038 ;; Estimated maximum stack depth 4
  1039 ;; ---------------------------------------------------------------------------------
  1040 ;; Call Graph Graphs:
  1041 ;; _main (ROOT)
  1042 ;;   _lcd_init
  1043 ;;     _pause
  1044 ;;       _msecbase
  1045 ;;     _lcd_write
  1046 ;;       _pause
  1047 ;;         _msecbase
  1048 ;;     _lcd_clear
  1049 ;;       _lcd_write
  1050 ;;         _pause
  1051 ;;           _msecbase
  1052 ;;       _pause
  1053 ;;         _msecbase
  1054 ;;   _lcd_goto
  1055 ;;     _lcd_write
  1056 ;;       _pause
  1057 ;;         _msecbase
  1058 ;;   _lcd_puts
  1059 ;;     _lcd_write
  1060 ;;       _pause
  1061 ;;         _msecbase
  1062 ;;   ___lwtoft
  1063 ;;     ___ftpack
  1064 ;;   ___ftmul
  1065 ;;     ___ftpack
  1066 ;;     ___lwtoft (ARG)
  1067 ;;       ___ftpack
  1068 ;;     ___fttol (ARG)
  1069 ;;       ___ftpack (ARG)
  1070 ;;       ___awmod (ARG)
  1071 ;;       ___awdiv (ARG)
  1072 ;;         ___awmod (ARG)
  1073 ;;       ___bmul (ARG)
  1074 ;;         ___lbmod (ARG)
  1075 ;;         ___lbdiv (ARG)
  1076 ;;           ___lbmod (ARG)
  1077 ;;     ___awdiv (ARG)
  1078 ;;       ___awmod (ARG)
  1079 ;;     ___awmod (ARG)
  1080 ;;     ___bmul (ARG)
  1081 ;;       ___lbmod (ARG)
  1082 ;;       ___lbdiv (ARG)
  1083 ;;         ___lbmod (ARG)
  1084 ;;     ___lbdiv (ARG)
  1085 ;;       ___lbmod (ARG)
  1086 ;;     ___lbmod (ARG)
  1087 ;;   _sprintf
  1088 ;;     ___wmul
  1089 ;;     _isdigit
  1090 ;;     ___ftge
  1091 ;;     ___ftneg
  1092 ;;     ___awdiv
  1093 ;;       ___awmod (ARG)
  1094 ;;     _scale
  1095 ;;       ___awmod
  1096 ;;       ___awdiv
  1097 ;;         ___awmod (ARG)
  1098 ;;       ___ftmul
  1099 ;;         ___ftpack
  1100 ;;         ___lwtoft (ARG)
  1101 ;;           ___ftpack
  1102 ;;         ___fttol (ARG)
  1103 ;;           ___ftpack (ARG)
  1104 ;;           ___awmod (ARG)
  1105 ;;           ___awdiv (ARG)
  1106 ;;             ___awmod (ARG)
  1107 ;;           ___bmul (ARG)
  1108 ;;             ___lbmod (ARG)
  1109 ;;             ___lbdiv (ARG)
  1110 ;;               ___lbmod (ARG)
  1111 ;;         ___awdiv (ARG)
  1112 ;;           ___awmod (ARG)
  1113 ;;         ___awmod (ARG)
  1114 ;;         ___bmul (ARG)
  1115 ;;           ___lbmod (ARG)
  1116 ;;           ___lbdiv (ARG)
  1117 ;;             ___lbmod (ARG)
  1118 ;;         ___lbdiv (ARG)
  1119 ;;           ___lbmod (ARG)
  1120 ;;         ___lbmod (ARG)
  1121 ;;       ___bmul
  1122 ;;         ___lbmod (ARG)
  1123 ;;         ___lbdiv (ARG)
  1124 ;;           ___lbmod (ARG)
  1125 ;;       ___fttol (ARG)
  1126 ;;         ___ftpack (ARG)
  1127 ;;         ___awmod (ARG)
  1128 ;;         ___awdiv (ARG)
  1129 ;;           ___awmod (ARG)
  1130 ;;         ___bmul (ARG)
  1131 ;;           ___lbmod (ARG)
  1132 ;;           ___lbdiv (ARG)
  1133 ;;             ___lbmod (ARG)
  1134 ;;     ___ftmul
  1135 ;;       ___ftpack
  1136 ;;       ___lwtoft (ARG)
  1137 ;;         ___ftpack
  1138 ;;       ___fttol (ARG)
  1139 ;;         ___ftpack (ARG)
  1140 ;;         ___awmod (ARG)
  1141 ;;         ___awdiv (ARG)
  1142 ;;           ___awmod (ARG)
  1143 ;;         ___bmul (ARG)
  1144 ;;           ___lbmod (ARG)
  1145 ;;           ___lbdiv (ARG)
  1146 ;;             ___lbmod (ARG)
  1147 ;;       ___awdiv (ARG)
  1148 ;;         ___awmod (ARG)
  1149 ;;       ___awmod (ARG)
  1150 ;;       ___bmul (ARG)
  1151 ;;         ___lbmod (ARG)
  1152 ;;         ___lbdiv (ARG)
  1153 ;;           ___lbmod (ARG)
  1154 ;;       ___lbdiv (ARG)
  1155 ;;         ___lbmod (ARG)
  1156 ;;       ___lbmod (ARG)
  1157 ;;     _fround
  1158 ;;       ___lbmod
  1159 ;;       ___bmul
  1160 ;;         ___lbmod (ARG)
  1161 ;;         ___lbdiv (ARG)
  1162 ;;           ___lbmod (ARG)
  1163 ;;       ___lbdiv
  1164 ;;         ___lbmod (ARG)
  1165 ;;       ___ftmul
  1166 ;;         ___ftpack
  1167 ;;         ___lwtoft (ARG)
  1168 ;;           ___ftpack
  1169 ;;         ___fttol (ARG)
  1170 ;;           ___ftpack (ARG)
  1171 ;;           ___awmod (ARG)
  1172 ;;           ___awdiv (ARG)
  1173 ;;             ___awmod (ARG)
  1174 ;;           ___bmul (ARG)
  1175 ;;             ___lbmod (ARG)
  1176 ;;             ___lbdiv (ARG)
  1177 ;;               ___lbmod (ARG)
  1178 ;;         ___awdiv (ARG)
  1179 ;;           ___awmod (ARG)
  1180 ;;         ___awmod (ARG)
  1181 ;;         ___bmul (ARG)
  1182 ;;           ___lbmod (ARG)
  1183 ;;           ___lbdiv (ARG)
  1184 ;;             ___lbmod (ARG)
  1185 ;;         ___lbdiv (ARG)
  1186 ;;           ___lbmod (ARG)
  1187 ;;         ___lbmod (ARG)
  1188 ;;       ___ftadd (ARG)
  1189 ;;         ___ftpack
  1190 ;;         ___lbmod (ARG)
  1191 ;;         ___bmul (ARG)
  1192 ;;           ___lbmod (ARG)
  1193 ;;           ___lbdiv (ARG)
  1194 ;;             ___lbmod (ARG)
  1195 ;;         ___lbdiv (ARG)
  1196 ;;           ___lbmod (ARG)
  1197 ;;         ___ftmul (ARG)
  1198 ;;           ___ftpack
  1199 ;;           ___lwtoft (ARG)
  1200 ;;             ___ftpack
  1201 ;;           ___fttol (ARG)
  1202 ;;             ___ftpack (ARG)
  1203 ;;             ___awmod (ARG)
  1204 ;;             ___awdiv (ARG)
  1205 ;;               ___awmod (ARG)
  1206 ;;             ___bmul (ARG)
  1207 ;;               ___lbmod (ARG)
  1208 ;;               ___lbdiv (ARG)
  1209 ;;                 ___lbmod (ARG)
  1210 ;;           ___awdiv (ARG)
  1211 ;;             ___awmod (ARG)
  1212 ;;           ___awmod (ARG)
  1213 ;;           ___bmul (ARG)
  1214 ;;             ___lbmod (ARG)
  1215 ;;             ___lbdiv (ARG)
  1216 ;;               ___lbmod (ARG)
  1217 ;;           ___lbdiv (ARG)
  1218 ;;             ___lbmod (ARG)
  1219 ;;           ___lbmod (ARG)
  1220 ;;     ___ftadd
  1221 ;;       ___ftpack
  1222 ;;       ___lbmod (ARG)
  1223 ;;       ___bmul (ARG)
  1224 ;;         ___lbmod (ARG)
  1225 ;;         ___lbdiv (ARG)
  1226 ;;           ___lbmod (ARG)
  1227 ;;       ___lbdiv (ARG)
  1228 ;;         ___lbmod (ARG)
  1229 ;;       ___ftmul (ARG)
  1230 ;;         ___ftpack
  1231 ;;         ___lwtoft (ARG)
  1232 ;;           ___ftpack
  1233 ;;         ___fttol (ARG)
  1234 ;;           ___ftpack (ARG)
  1235 ;;           ___awmod (ARG)
  1236 ;;           ___awdiv (ARG)
  1237 ;;             ___awmod (ARG)
  1238 ;;           ___bmul (ARG)
  1239 ;;             ___lbmod (ARG)
  1240 ;;             ___lbdiv (ARG)
  1241 ;;               ___lbmod (ARG)
  1242 ;;         ___awdiv (ARG)
  1243 ;;           ___awmod (ARG)
  1244 ;;         ___awmod (ARG)
  1245 ;;         ___bmul (ARG)
  1246 ;;           ___lbmod (ARG)
  1247 ;;           ___lbdiv (ARG)
  1248 ;;             ___lbmod (ARG)
  1249 ;;         ___lbdiv (ARG)
  1250 ;;           ___lbmod (ARG)
  1251 ;;         ___lbmod (ARG)
  1252 ;;     ___fttol
  1253 ;;       ___ftpack (ARG)
  1254 ;;       ___awmod (ARG)
  1255 ;;       ___awdiv (ARG)
  1256 ;;         ___awmod (ARG)
  1257 ;;       ___bmul (ARG)
  1258 ;;         ___lbmod (ARG)
  1259 ;;         ___lbdiv (ARG)
  1260 ;;           ___lbmod (ARG)
  1261 ;;     __div_to_l_
  1262 ;;     __tdiv_to_l_
  1263 ;;     ___lltoft
  1264 ;;       ___ftpack
  1265 ;;     ___ftsub
  1266 ;;       ___ftadd
  1267 ;;         ___ftpack
  1268 ;;         ___lbmod (ARG)
  1269 ;;         ___bmul (ARG)
  1270 ;;           ___lbmod (ARG)
  1271 ;;           ___lbdiv (ARG)
  1272 ;;             ___lbmod (ARG)
  1273 ;;         ___lbdiv (ARG)
  1274 ;;           ___lbmod (ARG)
  1275 ;;         ___ftmul (ARG)
  1276 ;;           ___ftpack
  1277 ;;           ___lwtoft (ARG)
  1278 ;;             ___ftpack
  1279 ;;           ___fttol (ARG)
  1280 ;;             ___ftpack (ARG)
  1281 ;;             ___awmod (ARG)
  1282 ;;             ___awdiv (ARG)
  1283 ;;               ___awmod (ARG)
  1284 ;;             ___bmul (ARG)
  1285 ;;               ___lbmod (ARG)
  1286 ;;               ___lbdiv (ARG)
  1287 ;;                 ___lbmod (ARG)
  1288 ;;           ___awdiv (ARG)
  1289 ;;             ___awmod (ARG)
  1290 ;;           ___awmod (ARG)
  1291 ;;           ___bmul (ARG)
  1292 ;;             ___lbmod (ARG)
  1293 ;;             ___lbdiv (ARG)
  1294 ;;               ___lbmod (ARG)
  1295 ;;           ___lbdiv (ARG)
  1296 ;;             ___lbmod (ARG)
  1297 ;;           ___lbmod (ARG)
  1298 ;;       ___lltoft (ARG)
  1299 ;;         ___ftpack
  1300 ;;     ___lldiv
  1301 ;;     ___llmod
  1302 ;;       ___lldiv (ARG)
  1303 ;;   _pause
  1304 ;;     _msecbase
  1305 ;;
  1306 ;; Address spaces:
  1307 ;;Name               Size   Autos  Total    Cost      Usage
  1308 ;;BITCOMMON            E      0       0       0        0.0%
  1309 ;;EEDATA             100      0       0       0        0.0%
  1310 ;;NULL                 0      0       0       0        0.0%
  1311 ;;CODE                 0      0       0       0        0.0%
  1312 ;;COMMON               E      E       E       1      100.0%
  1313 ;;BITSFR0              0      0       0       1        0.0%
  1314 ;;SFR0                 0      0       0       1        0.0%
  1315 ;;BITSFR1              0      0       0       2        0.0%
  1316 ;;SFR1                 0      0       0       2        0.0%
  1317 ;;STACK                0      0       5       2        0.0%
  1318 ;;ABS                  0      0      6A       3        0.0%
  1319 ;;BITBANK0            50      0       0       4        0.0%
  1320 ;;BITSFR3              0      0       0       4        0.0%
  1321 ;;SFR3                 0      0       0       4        0.0%
  1322 ;;BANK0               50     3B      45       5       86.3%
  1323 ;;BITSFR2              0      0       0       5        0.0%
  1324 ;;SFR2                 0      0       0       5        0.0%
  1325 ;;BITBANK1            50      0       0       6        0.0%
  1326 ;;BANK1               50     17      17       7       28.8%
  1327 ;;BITBANK3            60      0       0       8        0.0%
  1328 ;;BANK3               60      0       0       9        0.0%
  1329 ;;BITBANK2            60      0       0      10        0.0%
  1330 ;;BANK2               60      0       0      11        0.0%
  1331 ;;DATA                 0      0      6F      12        0.0%
  1332                           
  1333                           
  1334 ;; *************** function _main *****************
  1335 ;; Defined at:
  1336 ;;		line 16 in file "C:\Users\Varush\Documents\Microcontroladores\Lenguaje C\ADC_en_LCD.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;		None
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;		None
  1341 ;; Return value:  Size  Location     Type
  1342 ;;		None               void
  1343 ;; Registers used:
  1344 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1345 ;; Tracked objects:
  1346 ;;		On entry : 17F/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: FFE00/0
  1349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1350 ;;      Params:         0       0       0       0       0
  1351 ;;      Locals:         0       0       0       0       0
  1352 ;;      Temps:          0       0       0       0       0
  1353 ;;      Totals:         0       0       0       0       0
  1354 ;;Total ram usage:        0 bytes
  1355 ;; Hardware stack levels required when called:    5
  1356 ;; This function calls:
  1357 ;;		_lcd_init
  1358 ;;		_lcd_goto
  1359 ;;		_lcd_puts
  1360 ;;		___lwtoft
  1361 ;;		___ftmul
  1362 ;;		_sprintf
  1363 ;;		_pause
  1364 ;; This function is called by:
  1365 ;;		Startup code after reset
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368  0D86                     _main:	
  1369                           
  1370                           ;ADC_en_LCD.c: 17: ANSEL = 0xE0;
  1371                           
  1372                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1373  0D86  30E0               	movlw	224
  1374  0D87  1683               	bsf	3,5	;RP0=1, select bank3
  1375  0D88  1703               	bsf	3,6	;RP1=1, select bank3
  1376  0D89  0088               	movwf	8	;volatile
  1377                           
  1378                           ;ADC_en_LCD.c: 18: ANSELH = 0x00;
  1379  0D8A  0189               	clrf	9	;volatile
  1380                           
  1381                           ;ADC_en_LCD.c: 20: ADCON1 = 0x80;
  1382  0D8B  3080               	movlw	128
  1383  0D8C  1303               	bcf	3,6	;RP1=0, select bank1
  1384  0D8D  009F               	movwf	31	;volatile
  1385                           
  1386                           ;ADC_en_LCD.c: 22: TRISA = 0x00;
  1387  0D8E  0185               	clrf	5	;volatile
  1388                           
  1389                           ;ADC_en_LCD.c: 23: TRISB = 0xFF;
  1390  0D8F  30FF               	movlw	255
  1391  0D90  0086               	movwf	6	;volatile
  1392                           
  1393                           ;ADC_en_LCD.c: 24: TRISC = 0x00;
  1394  0D91  0187               	clrf	7	;volatile
  1395                           
  1396                           ;ADC_en_LCD.c: 25: TRISD = 0x00;
  1397  0D92  0188               	clrf	8	;volatile
  1398                           
  1399                           ;ADC_en_LCD.c: 26: TRISE = 0x07;
  1400  0D93  3007               	movlw	7
  1401  0D94  0089               	movwf	9	;volatile
  1402                           
  1403                           ;ADC_en_LCD.c: 28: lcd_init();
  1404  0D95  120A  158A  2373   	fcall	_lcd_init
      +       120A  158A         
  1405                           
  1406                           ;ADC_en_LCD.c: 29: lcd_goto(0x00);
  1407  0D9A  3000               	movlw	0
  1408  0D9B  120A  158A  2350   	fcall	_lcd_goto
      +       120A  158A         
  1409                           
  1410                           ;ADC_en_LCD.c: 30: lcd_puts("V1:");
  1411  0DA0  307C               	movlw	low (STR_1-__stringbase)
  1412  0DA1  00F5               	movwf	?_lcd_puts
  1413  0DA2  3080               	movlw	128
  1414  0DA3  00F6               	movwf	?_lcd_puts+1
  1415  0DA4  120A  158A  2356   	fcall	_lcd_puts
      +       120A  158A         
  1416                           
  1417                           ;ADC_en_LCD.c: 31: lcd_goto(0x08);
  1418  0DA9  3008               	movlw	8
  1419  0DAA  120A  158A  2350   	fcall	_lcd_goto
      +       120A  158A         
  1420                           
  1421                           ;ADC_en_LCD.c: 32: lcd_puts("V2:");
  1422  0DAF  3080               	movlw	low (STR_2-__stringbase)
  1423  0DB0  00F5               	movwf	?_lcd_puts
  1424  0DB1  3080               	movlw	128
  1425  0DB2  00F6               	movwf	?_lcd_puts+1
  1426  0DB3  120A  158A  2356   	fcall	_lcd_puts
      +       120A  158A         
  1427                           
  1428                           ;ADC_en_LCD.c: 33: lcd_goto(0x44);
  1429  0DB8  3044               	movlw	68
  1430  0DB9  120A  158A  2350   	fcall	_lcd_goto
      +       120A  158A         
  1431                           
  1432                           ;ADC_en_LCD.c: 34: lcd_puts("V3:");
  1433  0DBE  3084               	movlw	low (STR_3-__stringbase)
  1434  0DBF  00F5               	movwf	?_lcd_puts
  1435  0DC0  3080               	movlw	128
  1436  0DC1  00F6               	movwf	?_lcd_puts+1
  1437  0DC2  120A  158A  2356   	fcall	_lcd_puts
      +       120A  158A         
  1438  0DC7                     l6435:	
  1439                           
  1440                           ;ADC_en_LCD.c: 37: {
  1441                           ;ADC_en_LCD.c: 38: ADCON0 = 0xD5;
  1442  0DC7  30D5               	movlw	213
  1443  0DC8  1283               	bcf	3,5	;RP0=0, select bank0
  1444  0DC9  1303               	bcf	3,6	;RP1=0, select bank0
  1445  0DCA  009F               	movwf	31	;volatile
  1446                           
  1447                           ;ADC_en_LCD.c: 39: GO_DONE = 1;
  1448  0DCB  149F               	bsf	31,1
  1449  0DCC                     l1044:	
  1450                           ;ADC_en_LCD.c: 40: while(GO_DONE);
  1451                           
  1452  0DCC  189F               	btfsc	31,1
  1453  0DCD  2DCC               	goto	l1044
  1454                           
  1455                           ;ADC_en_LCD.c: 41: VAD = (ADRESH<<8)|ADRESL;
  1456  0DCE  081E               	movf	30,w	;volatile
  1457  0DCF  00DF               	movwf	_VAD+1
  1458  0DD0  01DE               	clrf	_VAD
  1459  0DD1  1683               	bsf	3,5	;RP0=1, select bank1
  1460  0DD2  081E               	movf	30,w	;volatile
  1461  0DD3  1283               	bcf	3,5	;RP0=0, select bank0
  1462  0DD4  04DE               	iorwf	_VAD,f
  1463                           
  1464                           ;ADC_en_LCD.c: 42: num = VAD * 0.0048875855327468;
  1465  0DD5  3028               	movlw	40
  1466  0DD6  00AD               	movwf	?___ftmul
  1467  0DD7  30A0               	movlw	160
  1468  0DD8  00AE               	movwf	?___ftmul+1
  1469  0DD9  303B               	movlw	59
  1470  0DDA  00AF               	movwf	?___ftmul+2
  1471  0DDB  085F               	movf	_VAD+1,w
  1472  0DDC  00F9               	movwf	?___lwtoft+1
  1473  0DDD  085E               	movf	_VAD,w
  1474  0DDE  00F8               	movwf	?___lwtoft
  1475  0DDF  120A  158A  2207   	fcall	___lwtoft
      +       120A  158A         
  1476  0DE4  0878               	movf	?___lwtoft,w
  1477  0DE5  00B0               	movwf	?___ftmul+3
  1478  0DE6  0879               	movf	?___lwtoft+1,w
  1479  0DE7  00B1               	movwf	?___ftmul+4
  1480  0DE8  087A               	movf	?___lwtoft+2,w
  1481  0DE9  00B2               	movwf	?___ftmul+5
  1482  0DEA  120A  118A  25CF   	fcall	___ftmul
      +       120A  158A         
  1483  0DEF  082D               	movf	?___ftmul,w
  1484  0DF0  00DB               	movwf	_num
  1485  0DF1  082E               	movf	?___ftmul+1,w
  1486  0DF2  00DC               	movwf	_num+1
  1487  0DF3  082F               	movf	?___ftmul+2,w
  1488  0DF4  00DD               	movwf	_num+2
  1489                           
  1490                           ;ADC_en_LCD.c: 43: sprintf(carac,"%.3f",num);
  1491  0DF5  3077               	movlw	(STR_4-__stringbase)& (0+255)
  1492  0DF6  00D2               	movwf	?_sprintf
  1493  0DF7  085B               	movf	_num,w
  1494  0DF8  00D3               	movwf	?_sprintf+1
  1495  0DF9  085C               	movf	_num+1,w
  1496  0DFA  00D4               	movwf	?_sprintf+2
  1497  0DFB  085D               	movf	_num+2,w
  1498  0DFC  00D5               	movwf	?_sprintf+3
  1499  0DFD  3060               	movlw	_carac& (0+255)
  1500  0DFE  120A  118A  2007   	fcall	_sprintf
      +       120A  158A         
  1501                           
  1502                           ;ADC_en_LCD.c: 44: lcd_goto(0x03);
  1503  0E03  3003               	movlw	3
  1504  0E04  120A  158A  2350   	fcall	_lcd_goto
      +       120A  158A         
  1505                           
  1506                           ;ADC_en_LCD.c: 45: lcd_puts(carac);
  1507  0E09  3060               	movlw	_carac& (0+255)
  1508  0E0A  00F5               	movwf	?_lcd_puts
  1509  0E0B  3000               	movlw	0
  1510  0E0C  00F6               	movwf	?_lcd_puts+1
  1511  0E0D  120A  158A  2356   	fcall	_lcd_puts
      +       120A  158A         
  1512                           
  1513                           ;ADC_en_LCD.c: 48: ADCON0 = 0xD9;
  1514  0E12  30D9               	movlw	217
  1515  0E13  009F               	movwf	31	;volatile
  1516                           
  1517                           ;ADC_en_LCD.c: 49: GO_DONE = 1;
  1518  0E14  149F               	bsf	31,1
  1519  0E15                     l1047:	
  1520                           ;ADC_en_LCD.c: 50: while(GO_DONE);
  1521                           
  1522  0E15  189F               	btfsc	31,1
  1523  0E16  2E15               	goto	l1047
  1524                           
  1525                           ;ADC_en_LCD.c: 51: VAD = (ADRESH<<8)|ADRESL;
  1526  0E17  081E               	movf	30,w	;volatile
  1527  0E18  00DF               	movwf	_VAD+1
  1528  0E19  01DE               	clrf	_VAD
  1529  0E1A  1683               	bsf	3,5	;RP0=1, select bank1
  1530  0E1B  081E               	movf	30,w	;volatile
  1531  0E1C  1283               	bcf	3,5	;RP0=0, select bank0
  1532  0E1D  04DE               	iorwf	_VAD,f
  1533                           
  1534                           ;ADC_en_LCD.c: 52: num = VAD * 0.0048875855327468;
  1535  0E1E  3028               	movlw	40
  1536  0E1F  00AD               	movwf	?___ftmul
  1537  0E20  30A0               	movlw	160
  1538  0E21  00AE               	movwf	?___ftmul+1
  1539  0E22  303B               	movlw	59
  1540  0E23  00AF               	movwf	?___ftmul+2
  1541  0E24  085F               	movf	_VAD+1,w
  1542  0E25  00F9               	movwf	?___lwtoft+1
  1543  0E26  085E               	movf	_VAD,w
  1544  0E27  00F8               	movwf	?___lwtoft
  1545  0E28  120A  158A  2207   	fcall	___lwtoft
      +       120A  158A         
  1546  0E2D  0878               	movf	?___lwtoft,w
  1547  0E2E  00B0               	movwf	?___ftmul+3
  1548  0E2F  0879               	movf	?___lwtoft+1,w
  1549  0E30  00B1               	movwf	?___ftmul+4
  1550  0E31  087A               	movf	?___lwtoft+2,w
  1551  0E32  00B2               	movwf	?___ftmul+5
  1552  0E33  120A  118A  25CF   	fcall	___ftmul
      +       120A  158A         
  1553  0E38  082D               	movf	?___ftmul,w
  1554  0E39  00DB               	movwf	_num
  1555  0E3A  082E               	movf	?___ftmul+1,w
  1556  0E3B  00DC               	movwf	_num+1
  1557  0E3C  082F               	movf	?___ftmul+2,w
  1558  0E3D  00DD               	movwf	_num+2
  1559                           
  1560                           ;ADC_en_LCD.c: 53: sprintf(carac,"%.3f",num);
  1561  0E3E  3077               	movlw	(STR_4-__stringbase)& (0+255)
  1562  0E3F  00D2               	movwf	?_sprintf
  1563  0E40  085B               	movf	_num,w
  1564  0E41  00D3               	movwf	?_sprintf+1
  1565  0E42  085C               	movf	_num+1,w
  1566  0E43  00D4               	movwf	?_sprintf+2
  1567  0E44  085D               	movf	_num+2,w
  1568  0E45  00D5               	movwf	?_sprintf+3
  1569  0E46  3060               	movlw	_carac& (0+255)
  1570  0E47  120A  118A  2007   	fcall	_sprintf
      +       120A  158A         
  1571                           
  1572                           ;ADC_en_LCD.c: 54: lcd_goto(0x0B);
  1573  0E4C  300B               	movlw	11
  1574  0E4D  120A  158A  2350   	fcall	_lcd_goto
      +       120A  158A         
  1575                           
  1576                           ;ADC_en_LCD.c: 55: lcd_puts(carac);
  1577  0E52  3060               	movlw	_carac& (0+255)
  1578  0E53  00F5               	movwf	?_lcd_puts
  1579  0E54  3000               	movlw	0
  1580  0E55  00F6               	movwf	?_lcd_puts+1
  1581  0E56  120A  158A  2356   	fcall	_lcd_puts
      +       120A  158A         
  1582                           
  1583                           ;ADC_en_LCD.c: 58: ADCON0 = 0xDD;
  1584  0E5B  30DD               	movlw	221
  1585  0E5C  009F               	movwf	31	;volatile
  1586                           
  1587                           ;ADC_en_LCD.c: 59: GO_DONE = 1;
  1588  0E5D  149F               	bsf	31,1
  1589  0E5E                     l1050:	
  1590                           ;ADC_en_LCD.c: 60: while(GO_DONE);
  1591                           
  1592  0E5E  189F               	btfsc	31,1
  1593  0E5F  2E5E               	goto	l1050
  1594                           
  1595                           ;ADC_en_LCD.c: 61: VAD = (ADRESH<<8)|ADRESL;
  1596  0E60  081E               	movf	30,w	;volatile
  1597  0E61  00DF               	movwf	_VAD+1
  1598  0E62  01DE               	clrf	_VAD
  1599  0E63  1683               	bsf	3,5	;RP0=1, select bank1
  1600  0E64  081E               	movf	30,w	;volatile
  1601  0E65  1283               	bcf	3,5	;RP0=0, select bank0
  1602  0E66  04DE               	iorwf	_VAD,f
  1603                           
  1604                           ;ADC_en_LCD.c: 62: num = VAD * 0.0048875855327468;
  1605  0E67  3028               	movlw	40
  1606  0E68  00AD               	movwf	?___ftmul
  1607  0E69  30A0               	movlw	160
  1608  0E6A  00AE               	movwf	?___ftmul+1
  1609  0E6B  303B               	movlw	59
  1610  0E6C  00AF               	movwf	?___ftmul+2
  1611  0E6D  085F               	movf	_VAD+1,w
  1612  0E6E  00F9               	movwf	?___lwtoft+1
  1613  0E6F  085E               	movf	_VAD,w
  1614  0E70  00F8               	movwf	?___lwtoft
  1615  0E71  120A  158A  2207   	fcall	___lwtoft
      +       120A  158A         
  1616  0E76  0878               	movf	?___lwtoft,w
  1617  0E77  00B0               	movwf	?___ftmul+3
  1618  0E78  0879               	movf	?___lwtoft+1,w
  1619  0E79  00B1               	movwf	?___ftmul+4
  1620  0E7A  087A               	movf	?___lwtoft+2,w
  1621  0E7B  00B2               	movwf	?___ftmul+5
  1622  0E7C  120A  118A  25CF   	fcall	___ftmul
      +       120A  158A         
  1623  0E81  082D               	movf	?___ftmul,w
  1624  0E82  00DB               	movwf	_num
  1625  0E83  082E               	movf	?___ftmul+1,w
  1626  0E84  00DC               	movwf	_num+1
  1627  0E85  082F               	movf	?___ftmul+2,w
  1628  0E86  00DD               	movwf	_num+2
  1629                           
  1630                           ;ADC_en_LCD.c: 63: sprintf(carac,"%.3f",num);
  1631  0E87  3077               	movlw	(STR_4-__stringbase)& (0+255)
  1632  0E88  00D2               	movwf	?_sprintf
  1633  0E89  085B               	movf	_num,w
  1634  0E8A  00D3               	movwf	?_sprintf+1
  1635  0E8B  085C               	movf	_num+1,w
  1636  0E8C  00D4               	movwf	?_sprintf+2
  1637  0E8D  085D               	movf	_num+2,w
  1638  0E8E  00D5               	movwf	?_sprintf+3
  1639  0E8F  3060               	movlw	_carac& (0+255)
  1640  0E90  120A  118A  2007   	fcall	_sprintf
      +       120A  158A         
  1641                           
  1642                           ;ADC_en_LCD.c: 64: lcd_goto(0x47);
  1643  0E95  3047               	movlw	71
  1644  0E96  120A  158A  2350   	fcall	_lcd_goto
      +       120A  158A         
  1645                           
  1646                           ;ADC_en_LCD.c: 65: lcd_puts(carac);
  1647  0E9B  3060               	movlw	_carac& (0+255)
  1648  0E9C  00F5               	movwf	?_lcd_puts
  1649  0E9D  3000               	movlw	0
  1650  0E9E  00F6               	movwf	?_lcd_puts+1
  1651  0E9F  120A  158A  2356   	fcall	_lcd_puts
      +       120A  158A         
  1652                           
  1653                           ;ADC_en_LCD.c: 67: pause(500);
  1654  0EA4  30F4               	movlw	244
  1655  0EA5  00F0               	movwf	?_pause
  1656  0EA6  3001               	movlw	1
  1657  0EA7  00F1               	movwf	?_pause+1
  1658  0EA8  120A  158A  23AD   	fcall	_pause
      +       120A  158A         
  1659  0EAD  2DC7               	goto	l6435
  1660  0EAE                     __end_of_main:	
  1661                           
  1662                           	psect	text501
  1663  0007                     __ptext501:	
  1664 ;; =============== function _lcd_clear ends ============
  1665                           
  1666                           
  1667 ;; *************** function _sprintf *****************
  1668 ;; Defined at:
  1669 ;;		line 488 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;  sp              1    wreg     PTR unsigned char 
  1672 ;;		 -> carac(5), 
  1673 ;;  f               1   50[BANK0 ] PTR const unsigned char 
  1674 ;;		 -> STR_6(5), STR_5(5), STR_4(5), 
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;  sp              1   14[BANK1 ] PTR unsigned char 
  1677 ;;		 -> carac(5), 
  1678 ;;  _val            4   10[BANK1 ] struct .
  1679 ;;  fval            3   19[BANK1 ] struct .
  1680 ;;  integ           3    7[BANK1 ] struct .
  1681 ;;  ival            3    0        struct .
  1682 ;;  prec            2   17[BANK1 ] int 
  1683 ;;  exp             2   15[BANK1 ] int 
  1684 ;;  flag            2    5[BANK1 ] unsigned short 
  1685 ;;  width           2    0        int 
  1686 ;;  c               1   22[BANK1 ] char 
  1687 ;;  ap              1    4[BANK1 ] PTR void [1]
  1688 ;;		 -> ?_sprintf(2), 
  1689 ;;  d               1    0        unsigned char 
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  2   50[BANK0 ] int 
  1692 ;; Registers used:
  1693 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1694 ;; Tracked objects:
  1695 ;;		On entry : 60/0
  1696 ;;		On exit  : 160/20
  1697 ;;		Unchanged: FFE00/0
  1698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1699 ;;      Params:         0       4       0       0       0
  1700 ;;      Locals:         0       0      23       0       0
  1701 ;;      Temps:          0       5       0       0       0
  1702 ;;      Totals:         0       9      23       0       0
  1703 ;;Total ram usage:       32 bytes
  1704 ;; Hardware stack levels used:    1
  1705 ;; Hardware stack levels required when called:    3
  1706 ;; This function calls:
  1707 ;;		___wmul
  1708 ;;		_isdigit
  1709 ;;		___ftge
  1710 ;;		___ftneg
  1711 ;;		___awdiv
  1712 ;;		_scale
  1713 ;;		___ftmul
  1714 ;;		_fround
  1715 ;;		___ftadd
  1716 ;;		___fttol
  1717 ;;		__div_to_l_
  1718 ;;		__tdiv_to_l_
  1719 ;;		___lltoft
  1720 ;;		___ftsub
  1721 ;;		___lldiv
  1722 ;;		___llmod
  1723 ;; This function is called by:
  1724 ;;		_main
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727  0007                     _sprintf:	
  1728                           
  1729                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1730                           ;sprintf@sp stored from wreg
  1731  0007  1683               	bsf	3,5	;RP0=1, select bank1
  1732  0008  00AE               	movwf	sprintf@sp^(0+128)
  1733  0009  3053               	movlw	(?_sprintf+1)& (0+255)
  1734  000A  00A4               	movwf	sprintf@ap^(0+128)
  1735  000B                     l6347:	
  1736  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1737  000C  0852               	movf	sprintf@f,w
  1738  000D  0AD2               	incf	sprintf@f,f
  1739  000E  0084               	movwf	4
  1740  000F  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  1741  0014  1683               	bsf	3,5	;RP0=1, select bank1
  1742  0015  00B6               	movwf	sprintf@c^(0+128)
  1743  0016  08B6               	movf	sprintf@c^(0+128),f
  1744  0017  1903               	btfsc	3,2
  1745  0018  2BB6               	goto	l6349
  1746  0019  0836               	movf	sprintf@c^(0+128),w
  1747  001A  3A25               	xorlw	37
  1748  001B  1903               	skipnz
  1749  001C  2821               	goto	l6161
  1750  001D  082E               	movf	sprintf@sp^(0+128),w
  1751  001E  0084               	movwf	4
  1752  001F  0836               	movf	sprintf@c^(0+128),w
  1753  0020  2BB2               	goto	L4
  1754  0021                     l6161:	
  1755  0021  01A5               	clrf	sprintf@flag^(0+128)
  1756  0022  01A6               	clrf	(sprintf@flag+1)^(0+128)
  1757  0023  1283               	bcf	3,5	;RP0=0, select bank0
  1758  0024  0852               	movf	sprintf@f,w
  1759  0025  0084               	movwf	4
  1760  0026  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  1761  002B  3A2E               	xorlw	46
  1762  002C  1D03               	skipz
  1763  002D  286C               	goto	l6177
  1764  002E  1683               	bsf	3,5	;RP0=1, select bank1
  1765  002F  1726               	bsf	(sprintf@flag^(0+128)+1),6
  1766  0030  1283               	bcf	3,5	;RP0=0, select bank0
  1767  0031  0AD2               	incf	sprintf@f,f
  1768  0032  1683               	bsf	3,5	;RP0=1, select bank1
  1769  0033  01B1               	clrf	sprintf@prec^(0+128)
  1770  0034  01B2               	clrf	(sprintf@prec+1)^(0+128)
  1771  0035                     l6175:	
  1772  0035  1283               	bcf	3,5	;RP0=0, select bank0
  1773  0036  0852               	movf	sprintf@f,w
  1774  0037  0084               	movwf	4
  1775  0038  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  1776  003D  26B6  120A  118A   	fcall	_isdigit
  1777  0040  1C03               	btfss	3,0
  1778  0041  2873               	goto	l6183
  1779  0042  1683               	bsf	3,5	;RP0=1, select bank1
  1780  0043  0832               	movf	(sprintf@prec+1)^(0+128),w
  1781  0044  00F1               	movwf	?___wmul+1
  1782  0045  0831               	movf	sprintf@prec^(0+128),w
  1783  0046  00F0               	movwf	?___wmul
  1784  0047  300A               	movlw	10
  1785  0048  00F2               	movwf	?___wmul+2
  1786  0049  01F3               	clrf	?___wmul+3
  1787  004A  120A  158A  2219   	fcall	___wmul
      +       120A  118A         
  1788  004F  1283               	bcf	3,5	;RP0=0, select bank0
  1789  0050  0852               	movf	sprintf@f,w
  1790  0051  0084               	movwf	4
  1791  0052  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  1792  0057  0770               	addwf	?___wmul,w
  1793  0058  00D6               	movwf	??_sprintf
  1794  0059  3000               	movlw	0
  1795  005A  1803               	skipnc
  1796  005B  3001               	movlw	1
  1797  005C  0771               	addwf	?___wmul+1,w
  1798  005D  00D7               	movwf	??_sprintf+1
  1799  005E  0856               	movf	??_sprintf,w
  1800  005F  3ED0               	addlw	208
  1801  0060  1683               	bsf	3,5	;RP0=1, select bank1
  1802  0061  00B1               	movwf	sprintf@prec^(0+128)
  1803  0062  1283               	bcf	3,5	;RP0=0, select bank0
  1804  0063  0857               	movf	??_sprintf+1,w
  1805  0064  1803               	skipnc
  1806  0065  3E01               	addlw	1
  1807  0066  3EFF               	addlw	255
  1808  0067  1683               	bsf	3,5	;RP0=1, select bank1
  1809  0068  00B2               	movwf	(sprintf@prec+1)^(0+128)
  1810  0069  1283               	bcf	3,5	;RP0=0, select bank0
  1811  006A  0AD2               	incf	sprintf@f,f
  1812  006B  2835               	goto	l6175
  1813  006C                     l6177:	
  1814  006C  1683               	bsf	3,5	;RP0=1, select bank1
  1815  006D  01B1               	clrf	sprintf@prec^(0+128)
  1816  006E  01B2               	clrf	(sprintf@prec+1)^(0+128)
  1817  006F  1626               	bsf	(sprintf@flag^(0+128)+1),4
  1818  0070  2873               	goto	l6183
  1819  0071                     l1968:	
  1820  0071  1526               	bsf	(sprintf@flag^(0+128)+1),2
  1821  0072  2885               	goto	l6185
  1822  0073                     l6183:	
  1823  0073  1283               	bcf	3,5	;RP0=0, select bank0
  1824  0074  0852               	movf	sprintf@f,w
  1825  0075  0AD2               	incf	sprintf@f,f
  1826  0076  0084               	movwf	4
  1827  0077  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  1828  007C  1683               	bsf	3,5	;RP0=1, select bank1
  1829  007D  00B6               	movwf	sprintf@c^(0+128)
  1830                           
  1831                           ; Switch size 1, requested type "space"
  1832                           ; Number of cases is 2, Range of values is 0 to 102
  1833                           ; switch strategies available:
  1834                           ; Name         Instructions Cycles
  1835                           ; simple_byte            7     4 (average)
  1836                           ; jumptable            260     6 (fixed)
  1837                           ; rangetable           107     6 (fixed)
  1838                           ; spacedrange          212     9 (fixed)
  1839                           ; locatedrange         103     3 (fixed)
  1840                           ;	Chosen strategy is simple_byte
  1841  007E  3A00               	xorlw	0	; case 0
  1842  007F  1903               	skipnz
  1843  0080  2BB6               	goto	l6349
  1844  0081  3A66               	xorlw	102	; case 102
  1845  0082  1903               	skipnz
  1846  0083  2871               	goto	l1968
  1847  0084  280B               	goto	l6347
  1848  0085                     l6185:	
  1849  0085  1283               	bcf	3,5	;RP0=0, select bank0
  1850  0086  3007               	movlw	7
  1851  0087  01D6               	clrf	??_sprintf
  1852  0088  1683               	bsf	3,5	;RP0=1, select bank1
  1853  0089  0526               	andwf	(sprintf@flag+1)^(0+128),w
  1854  008A  1283               	bcf	3,5	;RP0=0, select bank0
  1855  008B  00D7               	movwf	??_sprintf+1
  1856  008C  0456               	iorwf	??_sprintf,w
  1857  008D  1903               	skipnz
  1858  008E  2B76               	goto	l6327
  1859  008F  1683               	bsf	3,5	;RP0=1, select bank1
  1860  0090  1E26               	btfss	(sprintf@flag+1)^(0+128),4
  1861  0091  2895               	goto	l6191
  1862  0092  3006               	movlw	6
  1863  0093  00B1               	movwf	sprintf@prec^(0+128)
  1864  0094  01B2               	clrf	(sprintf@prec+1)^(0+128)
  1865  0095                     l6191:	
  1866  0095  0824               	movf	sprintf@ap^(0+128),w
  1867  0096  0084               	movwf	4
  1868  0097  1383               	bcf	3,7	;select IRP bank0
  1869  0098  0800               	movf	0,w
  1870  0099  00B3               	movwf	sprintf@fval^(0+128)
  1871  009A  0A84               	incf	4,f
  1872  009B  0800               	movf	0,w
  1873  009C  00B4               	movwf	(sprintf@fval+1)^(0+128)
  1874  009D  0A84               	incf	4,f
  1875  009E  0800               	movf	0,w
  1876  009F  00B5               	movwf	(sprintf@fval+2)^(0+128)
  1877  00A0  3003               	movlw	3
  1878  00A1  07A4               	addwf	sprintf@ap^(0+128),f
  1879  00A2  0833               	movf	sprintf@fval^(0+128),w
  1880  00A3  00F0               	movwf	?___ftge
  1881  00A4  0834               	movf	(sprintf@fval+1)^(0+128),w
  1882  00A5  00F1               	movwf	?___ftge+1
  1883  00A6  0835               	movf	(sprintf@fval+2)^(0+128),w
  1884  00A7  00F2               	movwf	?___ftge+2
  1885  00A8  01F3               	clrf	?___ftge+3
  1886  00A9  01F4               	clrf	?___ftge+4
  1887  00AA  01F5               	clrf	?___ftge+5
  1888  00AB  268A  120A  118A   	fcall	___ftge
  1889  00AE  1803               	btfsc	3,0
  1890  00AF  28C1               	goto	l6201
  1891  00B0  0833               	movf	sprintf@fval^(0+128),w
  1892  00B1  00F0               	movwf	?___ftneg
  1893  00B2  0834               	movf	(sprintf@fval+1)^(0+128),w
  1894  00B3  00F1               	movwf	?___ftneg+1
  1895  00B4  0835               	movf	(sprintf@fval+2)^(0+128),w
  1896  00B5  00F2               	movwf	?___ftneg+2
  1897  00B6  26C4  120A  118A   	fcall	___ftneg
  1898  00B9  0870               	movf	?___ftneg,w
  1899  00BA  00B3               	movwf	sprintf@fval^(0+128)
  1900  00BB  0871               	movf	?___ftneg+1,w
  1901  00BC  00B4               	movwf	(sprintf@fval+1)^(0+128)
  1902  00BD  0872               	movf	?___ftneg+2,w
  1903  00BE  00B5               	movwf	(sprintf@fval+2)^(0+128)
  1904  00BF  3003               	movlw	3
  1905  00C0  04A5               	iorwf	sprintf@flag^(0+128),f
  1906  00C1                     l6201:	
  1907  00C1  01AF               	clrf	sprintf@exp^(0+128)
  1908  00C2  01B0               	clrf	(sprintf@exp+1)^(0+128)
  1909  00C3  0835               	movf	(sprintf@fval+2)^(0+128),w
  1910  00C4  0434               	iorwf	(sprintf@fval+1)^(0+128),w
  1911  00C5  0433               	iorwf	sprintf@fval^(0+128),w
  1912  00C6  1903               	skipnz
  1913  00C7  295A               	goto	l6233
  1914  00C8  30B3               	movlw	low sprintf@fval
  1915  00C9  0084               	movwf	4
  1916  00CA  0800               	movf	0,w
  1917  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1918  00CC  00D6               	movwf	??_sprintf
  1919  00CD  0A84               	incf	4,f
  1920  00CE  0800               	movf	0,w
  1921  00CF  00D7               	movwf	??_sprintf+1
  1922  00D0  0A84               	incf	4,f
  1923  00D1  0800               	movf	0,w
  1924  00D2  00D8               	movwf	??_sprintf+2
  1925  00D3  0A84               	incf	4,f
  1926  00D4  0800               	movf	0,w
  1927  00D5  00D9               	movwf	??_sprintf+3
  1928  00D6  300F               	movlw	15
  1929  00D7                     u2655:	
  1930  00D7  1003               	clrc
  1931  00D8  0CD9               	rrf	??_sprintf+3,f
  1932  00D9  0CD8               	rrf	??_sprintf+2,f
  1933  00DA  0CD7               	rrf	??_sprintf+1,f
  1934  00DB  0CD6               	rrf	??_sprintf,f
  1935  00DC  3EFF               	addlw	-1
  1936  00DD  1D03               	skipz
  1937  00DE  28D7               	goto	u2655
  1938  00DF  0857               	movf	??_sprintf+1,w
  1939  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  1940  00E1  00B0               	movwf	(sprintf@exp+1)^(0+128)
  1941  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1942  00E3  0856               	movf	??_sprintf,w
  1943  00E4  1683               	bsf	3,5	;RP0=1, select bank1
  1944  00E5  00AF               	movwf	sprintf@exp^(0+128)
  1945  00E6  3082               	movlw	-126
  1946  00E7  01B0               	clrf	(sprintf@exp+1)^(0+128)
  1947  00E8  07AF               	addwf	sprintf@exp^(0+128),f
  1948  00E9  1C03               	skipc
  1949  00EA  03B0               	decf	(sprintf@exp+1)^(0+128),f
  1950  00EB  30FF               	movlw	-1
  1951  00EC  07AF               	addwf	sprintf@exp^(0+128),f
  1952  00ED  1C03               	skipc
  1953  00EE  03B0               	decf	(sprintf@exp+1)^(0+128),f
  1954  00EF  3003               	movlw	3
  1955  00F0  00F0               	movwf	?___wmul
  1956  00F1  01F1               	clrf	?___wmul+1
  1957  00F2  0830               	movf	(sprintf@exp+1)^(0+128),w
  1958  00F3  00F3               	movwf	?___wmul+3
  1959  00F4  082F               	movf	sprintf@exp^(0+128),w
  1960  00F5  00F2               	movwf	?___wmul+2
  1961  00F6  120A  158A  2219   	fcall	___wmul
      +       120A  118A         
  1962  00FB  0871               	movf	?___wmul+1,w
  1963  00FC  00B0               	movwf	(sprintf@exp+1)^(0+128)
  1964  00FD  0870               	movf	?___wmul,w
  1965  00FE  00AF               	movwf	sprintf@exp^(0+128)
  1966  00FF  300A               	movlw	10
  1967  0100  00F6               	movwf	?___awdiv
  1968  0101  01F7               	clrf	?___awdiv+1
  1969  0102  0830               	movf	(sprintf@exp+1)^(0+128),w
  1970  0103  00F9               	movwf	?___awdiv+3
  1971  0104  082F               	movf	sprintf@exp^(0+128),w
  1972  0105  00F8               	movwf	?___awdiv+2
  1973  0106  254D  120A  118A   	fcall	___awdiv
  1974  0109  0877               	movf	?___awdiv+1,w
  1975  010A  00B0               	movwf	(sprintf@exp+1)^(0+128)
  1976  010B  0876               	movf	?___awdiv,w
  1977  010C  00AF               	movwf	sprintf@exp^(0+128)
  1978  010D  1FB0               	btfss	(sprintf@exp+1)^(0+128),7
  1979  010E  2913               	goto	l6221
  1980  010F  30FF               	movlw	-1
  1981  0110  07AF               	addwf	sprintf@exp^(0+128),f
  1982  0111  1C03               	skipc
  1983  0112  03B0               	decf	(sprintf@exp+1)^(0+128),f
  1984  0113                     l6221:	
  1985  0113  032F               	decf	sprintf@exp^(0+128),w
  1986  0114  3AFF               	xorlw	255
  1987  0115  23BB  120A  118A   	fcall	_scale
  1988  0118  2703  120A  118A   	fcall	PL9	;call to abstracted procedure
  1989  011B  2728  120A  118A   	fcall	PL12	;call to abstracted procedure
  1990  011E  1683               	bsf	3,5	;RP0=1, select bank1
  1991  011F  0827               	movf	sprintf@integ^(0+128),w
  1992  0120  1283               	bcf	3,5	;RP0=0, select bank0
  1993  0121  00B0               	movwf	?___ftmul+3
  1994  0122  1683               	bsf	3,5	;RP0=1, select bank1
  1995  0123  0828               	movf	(sprintf@integ+1)^(0+128),w
  1996  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1997  0125  00B1               	movwf	?___ftmul+4
  1998  0126  1683               	bsf	3,5	;RP0=1, select bank1
  1999  0127  0829               	movf	(sprintf@integ+2)^(0+128),w
  2000  0128  1283               	bcf	3,5	;RP0=0, select bank0
  2001  0129  00B2               	movwf	?___ftmul+5
  2002  012A  25CF  120A  118A   	fcall	___ftmul
  2003  012D  082D               	movf	?___ftmul,w
  2004  012E  1683               	bsf	3,5	;RP0=1, select bank1
  2005  012F  00A7               	movwf	sprintf@integ^(0+128)
  2006  0130  1283               	bcf	3,5	;RP0=0, select bank0
  2007  0131  082E               	movf	?___ftmul+1,w
  2008  0132  1683               	bsf	3,5	;RP0=1, select bank1
  2009  0133  00A8               	movwf	(sprintf@integ+1)^(0+128)
  2010  0134  1283               	bcf	3,5	;RP0=0, select bank0
  2011  0135  082F               	movf	?___ftmul+2,w
  2012  0136  1683               	bsf	3,5	;RP0=1, select bank1
  2013  0137  00A9               	movwf	(sprintf@integ+2)^(0+128)
  2014  0138  2766  120A  118A   	fcall	PL19	;call to abstracted procedure
  2015  013B  3080               	movlw	128
  2016  013C  01F3               	clrf	?___ftge+3
  2017  013D  00F4               	movwf	?___ftge+4
  2018  013E  303F               	movlw	63
  2019  013F  00F5               	movwf	?___ftge+5
  2020  0140  268A  120A  118A   	fcall	___ftge
  2021  0143  1803               	btfsc	3,0
  2022  0144  294A               	goto	l6229
  2023  0145  30FF               	movlw	-1
  2024  0146  07AF               	addwf	sprintf@exp^(0+128),f
  2025  0147  1C03               	skipc
  2026  0148  03B0               	decf	(sprintf@exp+1)^(0+128),f
  2027  0149  295A               	goto	l6233
  2028  014A                     l6229:	
  2029  014A  2766  120A  118A   	fcall	PL19	;call to abstracted procedure
  2030  014D  3020               	movlw	32
  2031  014E  01F3               	clrf	?___ftge+3
  2032  014F  00F4               	movwf	?___ftge+4
  2033  0150  3041               	movlw	65
  2034  0151  00F5               	movwf	?___ftge+5
  2035  0152  268A  120A  118A   	fcall	___ftge
  2036  0155  1C03               	btfss	3,0
  2037  0156  295A               	goto	l6233
  2038  0157  0AAF               	incf	sprintf@exp^(0+128),f
  2039  0158  1903               	skipnz
  2040  0159  0AB0               	incf	(sprintf@exp+1)^(0+128),f
  2041  015A                     l6233:	
  2042  015A  0832               	movf	(sprintf@prec+1)^(0+128),w
  2043  015B  3A80               	xorlw	128
  2044  015C  00FF               	movwf	127
  2045  015D  3080               	movlw	128
  2046  015E  027F               	subwf	127,w
  2047  015F  1D03               	skipz
  2048  0160  2963               	goto	u2695
  2049  0161  300D               	movlw	13
  2050  0162  0231               	subwf	sprintf@prec^(0+128),w
  2051  0163                     u2695:	
  2052  0163  1803               	skipnc
  2053  0164  298E               	goto	l6237
  2054  0165  279B               	call	PL30	;select bank 1
  2055  0166  0831               	movf	sprintf@prec^(0+128),w
  2056  0167  120A  158A  26AE   	fcall	_fround
      +       120A  118A         
  2057  016C  0848               	movf	?_fround,w
  2058  016D  00BC               	movwf	?___ftadd
  2059  016E  0849               	movf	?_fround+1,w
  2060  016F  00BD               	movwf	?___ftadd+1
  2061  0170  084A               	movf	?_fround+2,w
  2062  0171  00BE               	movwf	?___ftadd+2
  2063  0172  1683               	bsf	3,5	;RP0=1, select bank1
  2064  0173  0833               	movf	sprintf@fval^(0+128),w
  2065  0174  1283               	bcf	3,5	;RP0=0, select bank0
  2066  0175  00BF               	movwf	?___ftadd+3
  2067  0176  1683               	bsf	3,5	;RP0=1, select bank1
  2068  0177  0834               	movf	(sprintf@fval+1)^(0+128),w
  2069  0178  1283               	bcf	3,5	;RP0=0, select bank0
  2070  0179  00C0               	movwf	?___ftadd+4
  2071  017A  1683               	bsf	3,5	;RP0=1, select bank1
  2072  017B  0835               	movf	(sprintf@fval+2)^(0+128),w
  2073  017C  1283               	bcf	3,5	;RP0=0, select bank0
  2074  017D  00C1               	movwf	?___ftadd+5
  2075  017E  120A  158A  24C4   	fcall	___ftadd
      +       120A  118A         
  2076  0183  083C               	movf	?___ftadd,w
  2077  0184  1683               	bsf	3,5	;RP0=1, select bank1
  2078  0185  00B3               	movwf	sprintf@fval^(0+128)
  2079  0186  1283               	bcf	3,5	;RP0=0, select bank0
  2080  0187  083D               	movf	?___ftadd+1,w
  2081  0188  1683               	bsf	3,5	;RP0=1, select bank1
  2082  0189  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2083  018A  1283               	bcf	3,5	;RP0=0, select bank0
  2084  018B  083E               	movf	?___ftadd+2,w
  2085  018C  1683               	bsf	3,5	;RP0=1, select bank1
  2086  018D  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2087  018E                     l6237:	
  2088  018E  279B               	call	PL30	;select bank 1
  2089  018F  0830               	movf	(sprintf@exp+1)^(0+128),w
  2090  0190  3A80               	xorlw	128
  2091  0191  00FF               	movwf	127
  2092  0192  3080               	movlw	128
  2093  0193  027F               	subwf	127,w
  2094  0194  1D03               	skipz
  2095  0195  2998               	goto	u2705
  2096  0196  300A               	movlw	10
  2097  0197  022F               	subwf	sprintf@exp^(0+128),w
  2098  0198                     u2705:	
  2099  0198  1803               	skipnc
  2100  0199  29B9               	goto	l6245
  2101  019A  279B               	call	PL30	;select bank 1
  2102  019B  0835               	movf	(sprintf@fval+2)^(0+128),w
  2103  019C  0434               	iorwf	(sprintf@fval+1)^(0+128),w
  2104  019D  0433               	iorwf	sprintf@fval^(0+128),w
  2105  019E  1903               	skipnz
  2106  019F  29F8               	goto	l6261
  2107  01A0  0833               	movf	sprintf@fval^(0+128),w
  2108  01A1  271D  120A  118A   	fcall	PL11	;call to abstracted procedure
  2109  01A4  279E  120A  118A   	fcall	___fttol
  2110  01A7  0823               	movf	?___fttol+3,w
  2111  01A8  0422               	iorwf	?___fttol+2,w
  2112  01A9  0421               	iorwf	?___fttol+1,w
  2113  01AA  0420               	iorwf	?___fttol,w
  2114  01AB  1D03               	skipz
  2115  01AC  29F8               	goto	l6261
  2116  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  2117  01AE  0830               	movf	(sprintf@exp+1)^(0+128),w
  2118  01AF  3A80               	xorlw	128
  2119  01B0  00FF               	movwf	127
  2120  01B1  3080               	movlw	128
  2121  01B2  027F               	subwf	127,w
  2122  01B3  1D03               	skipz
  2123  01B4  29B7               	goto	u2735
  2124  01B5  3002               	movlw	2
  2125  01B6  022F               	subwf	sprintf@exp^(0+128),w
  2126  01B7                     u2735:	
  2127  01B7  1C03               	skipc
  2128  01B8  29F8               	goto	l6261
  2129  01B9                     l6245:	
  2130  01B9  279B               	call	PL30	;select bank 1
  2131  01BA  2766  120A  118A   	fcall	PL19	;call to abstracted procedure
  2132  01BD  3070               	movlw	112
  2133  01BE  00F3               	movwf	?___ftge+3
  2134  01BF  3089               	movlw	137
  2135  01C0  00F4               	movwf	?___ftge+4
  2136  01C1  3040               	movlw	64
  2137  01C2  00F5               	movwf	?___ftge+5
  2138  01C3  268A  120A  118A   	fcall	___ftge
  2139  01C6  1803               	btfsc	3,0
  2140  01C7  29CA               	goto	l6249
  2141  01C8  30F7               	movlw	-9
  2142  01C9  29CB               	goto	L1
  2143  01CA                     l6249:	
  2144  01CA  30F8               	movlw	-8
  2145  01CB                     L1:	
  2146  01CB  07AF               	addwf	sprintf@exp^(0+128),f
  2147  01CC  1C03               	skipc
  2148  01CD  03B0               	decf	(sprintf@exp+1)^(0+128),f
  2149  01CE  082F               	movf	sprintf@exp^(0+128),w
  2150  01CF  23BB  120A  118A   	fcall	_scale
  2151  01D2  2703               	fcall	PL9	;call to abstracted procedure
  2152  01D3  00F0               	movwf	?__tdiv_to_l_
  2153  01D4  0834               	movf	(sprintf@fval+1)^(0+128),w
  2154  01D5  00F1               	movwf	?__tdiv_to_l_+1
  2155  01D6  0835               	movf	(sprintf@fval+2)^(0+128),w
  2156  01D7  00F2               	movwf	?__tdiv_to_l_+2
  2157  01D8  0827               	movf	sprintf@integ^(0+128),w
  2158  01D9  00F3               	movwf	?__tdiv_to_l_+3
  2159  01DA  0828               	movf	(sprintf@integ+1)^(0+128),w
  2160  01DB  00F4               	movwf	?__tdiv_to_l_+4
  2161  01DC  0829               	movf	(sprintf@integ+2)^(0+128),w
  2162  01DD  00F5               	movwf	?__tdiv_to_l_+5
  2163  01DE  120A  158A  22D8   	fcall	__tdiv_to_l_
      +       120A  118A         
  2164  01E3  0873               	movf	?__tdiv_to_l_+3,w
  2165  01E4  1683               	bsf	3,5	;RP0=1, select bank1
  2166  01E5  00A3               	movwf	(_sprintf$2306+3)^(0+128)
  2167  01E6  0872               	movf	?__tdiv_to_l_+2,w
  2168  01E7  00A2               	movwf	(_sprintf$2306+2)^(0+128)
  2169  01E8  0871               	movf	?__tdiv_to_l_+1,w
  2170  01E9  00A1               	movwf	(_sprintf$2306+1)^(0+128)
  2171  01EA  0870               	movf	?__tdiv_to_l_,w
  2172  01EB  00A0               	movwf	_sprintf$2306^(0+128)
  2173  01EC  0823               	movf	(_sprintf$2306+3)^(0+128),w
  2174  01ED  00AD               	movwf	(sprintf@_val+3)^(0+128)
  2175  01EE  0822               	movf	(_sprintf$2306+2)^(0+128),w
  2176  01EF  00AC               	movwf	(sprintf@_val+2)^(0+128)
  2177  01F0  0821               	movf	(_sprintf$2306+1)^(0+128),w
  2178  01F1  00AB               	movwf	(sprintf@_val+1)^(0+128)
  2179  01F2  0820               	movf	_sprintf$2306^(0+128),w
  2180  01F3  00AA               	movwf	sprintf@_val^(0+128)
  2181  01F4  01B3               	clrf	sprintf@fval^(0+128)
  2182  01F5  01B4               	clrf	(sprintf@fval+1)^(0+128)
  2183  01F6  01B5               	clrf	(sprintf@fval+2)^(0+128)
  2184  01F7  2A35               	goto	l6265
  2185  01F8                     l6261:	
  2186  01F8  279B               	call	PL30	;select bank 1
  2187  01F9  0833               	movf	sprintf@fval^(0+128),w
  2188  01FA  271D  120A  118A   	fcall	PL11	;call to abstracted procedure
  2189  01FD  279E  120A  118A   	fcall	___fttol
  2190  0200  26DE               	fcall	PL5	;call to abstracted procedure
  2191  0201  1683               	bsf	3,5	;RP0=1, select bank1
  2192  0202  00AA               	movwf	sprintf@_val^(0+128)
  2193  0203  082D               	movf	(sprintf@_val+3)^(0+128),w
  2194  0204  00FB               	movwf	?___lltoft+3
  2195  0205  082C               	movf	(sprintf@_val+2)^(0+128),w
  2196  0206  00FA               	movwf	?___lltoft+2
  2197  0207  082B               	movf	(sprintf@_val+1)^(0+128),w
  2198  0208  00F9               	movwf	?___lltoft+1
  2199  0209  082A               	movf	sprintf@_val^(0+128),w
  2200  020A  00F8               	movwf	?___lltoft
  2201  020B  120A  158A  2232   	fcall	___lltoft
      +       120A  118A         
  2202  0210  0878               	movf	?___lltoft,w
  2203  0211  1283               	bcf	3,5	;RP0=0, select bank0
  2204  0212  00C8               	movwf	?___ftsub
  2205  0213  0879               	movf	?___lltoft+1,w
  2206  0214  00C9               	movwf	?___ftsub+1
  2207  0215  087A               	movf	?___lltoft+2,w
  2208  0216  00CA               	movwf	?___ftsub+2
  2209  0217  1683               	bsf	3,5	;RP0=1, select bank1
  2210  0218  0833               	movf	sprintf@fval^(0+128),w
  2211  0219  1283               	bcf	3,5	;RP0=0, select bank0
  2212  021A  00CB               	movwf	?___ftsub+3
  2213  021B  1683               	bsf	3,5	;RP0=1, select bank1
  2214  021C  0834               	movf	(sprintf@fval+1)^(0+128),w
  2215  021D  1283               	bcf	3,5	;RP0=0, select bank0
  2216  021E  00CC               	movwf	?___ftsub+4
  2217  021F  1683               	bsf	3,5	;RP0=1, select bank1
  2218  0220  0835               	movf	(sprintf@fval+2)^(0+128),w
  2219  0221  1283               	bcf	3,5	;RP0=0, select bank0
  2220  0222  00CD               	movwf	?___ftsub+5
  2221  0223  120A  158A  24AE   	fcall	___ftsub
      +       120A  118A         
  2222  0228  0848               	movf	?___ftsub,w
  2223  0229  1683               	bsf	3,5	;RP0=1, select bank1
  2224  022A  00B3               	movwf	sprintf@fval^(0+128)
  2225  022B  1283               	bcf	3,5	;RP0=0, select bank0
  2226  022C  0849               	movf	?___ftsub+1,w
  2227  022D  1683               	bsf	3,5	;RP0=1, select bank1
  2228  022E  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2229  022F  1283               	bcf	3,5	;RP0=0, select bank0
  2230  0230  084A               	movf	?___ftsub+2,w
  2231  0231  1683               	bsf	3,5	;RP0=1, select bank1
  2232  0232  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2233  0233  01AF               	clrf	sprintf@exp^(0+128)
  2234  0234  01B0               	clrf	(sprintf@exp+1)^(0+128)
  2235  0235                     l6265:	
  2236  0235  01B6               	clrf	sprintf@c^(0+128)
  2237  0236  0AB6               	incf	sprintf@c^(0+128),f
  2238  0237                     l6271:	
  2239  0237  26CC               	fcall	PL3	;call to abstracted procedure
  2240  0238  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2241  023D  00D7               	movwf	??_sprintf+1
  2242  023E  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2243  0243  00D8               	movwf	??_sprintf+2
  2244  0244  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2245  0249  00D9               	movwf	??_sprintf+3
  2246  024A  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2247  024F  00DA               	movwf	??_sprintf+4
  2248  0250  1683               	bsf	3,5	;RP0=1, select bank1
  2249  0251  022D               	subwf	(sprintf@_val+3)^(0+128),w
  2250  0252  1D03               	skipz
  2251  0253  2A64               	goto	u2755
  2252  0254  1283               	bcf	3,5	;RP0=0, select bank0
  2253  0255  0859               	movf	??_sprintf+3,w
  2254  0256  1683               	bsf	3,5	;RP0=1, select bank1
  2255  0257  022C               	subwf	(sprintf@_val+2)^(0+128),w
  2256  0258  1D03               	skipz
  2257  0259  2A64               	goto	u2755
  2258  025A  1283               	bcf	3,5	;RP0=0, select bank0
  2259  025B  0858               	movf	??_sprintf+2,w
  2260  025C  1683               	bsf	3,5	;RP0=1, select bank1
  2261  025D  022B               	subwf	(sprintf@_val+1)^(0+128),w
  2262  025E  1D03               	skipz
  2263  025F  2A64               	goto	u2755
  2264  0260  1283               	bcf	3,5	;RP0=0, select bank0
  2265  0261  0857               	movf	??_sprintf+1,w
  2266  0262  1683               	bsf	3,5	;RP0=1, select bank1
  2267  0263  022A               	subwf	sprintf@_val^(0+128),w
  2268  0264                     u2755:	
  2269  0264  1C03               	btfss	3,0
  2270  0265  2A6B               	goto	l6279
  2271  0266  0AB6               	incf	sprintf@c^(0+128),f
  2272  0267  0836               	movf	sprintf@c^(0+128),w
  2273  0268  3A0A               	xorlw	10
  2274  0269  1D03               	skipz
  2275  026A  2A37               	goto	l6271
  2276  026B                     l6279:	
  2277  026B  0825               	movf	sprintf@flag^(0+128),w
  2278  026C  3903               	andlw	3
  2279  026D  1903               	btfsc	3,2
  2280  026E  2AA1               	goto	l6289
  2281  026F  082E               	movf	sprintf@sp^(0+128),w
  2282  0270  0084               	movwf	4
  2283  0271  302D               	movlw	45
  2284  0272  2A9D               	goto	L5
  2285  0273                     l6285:	
  2286  0273  26D6  120A  118A   	fcall	PL4	;call to abstracted procedure
  2287  0276  26CC               	fcall	PL3	;call to abstracted procedure
  2288  0277  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2289  027C  00F0               	movwf	?___lldiv
  2290  027D  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2291  0282  00F1               	movwf	?___lldiv+1
  2292  0283  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2293  0288  00F2               	movwf	?___lldiv+2
  2294  0289  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2295  028E  2733               	fcall	PL13	;call to abstracted procedure
  2296  028F  120A  158A  2290   	fcall	___lldiv
      +       120A  118A         
  2297  0294  2749               	fcall	PL16	;call to abstracted procedure
  2298  0295  120A  158A  2252   	fcall	___llmod
      +       120A  118A         
  2299  029A  275D  120A  118A   	fcall	PL18	;call to abstracted procedure
  2300  029D                     L5:	
  2301  029D  1383               	bcf	3,7	;select IRP bank0
  2302  029E  0080               	movwf	0
  2303  029F  1683               	bsf	3,5	;RP0=1, select bank1
  2304  02A0  0AAE               	incf	sprintf@sp^(0+128),f
  2305  02A1                     l6289:	
  2306  02A1  03B6               	decf	sprintf@c^(0+128),f
  2307  02A2  0F36               	incfsz	sprintf@c^(0+128),w
  2308  02A3  2A73               	goto	l6285
  2309  02A4                     l6297:	
  2310  02A4  0830               	movf	(sprintf@exp+1)^(0+128),w
  2311  02A5  3A80               	xorlw	128
  2312  02A6  00FF               	movwf	127
  2313  02A7  3080               	movlw	128
  2314  02A8  027F               	subwf	127,w
  2315  02A9  1D03               	skipz
  2316  02AA  2AAD               	goto	u2795
  2317  02AB  3001               	movlw	1
  2318  02AC  022F               	subwf	sprintf@exp^(0+128),w
  2319  02AD                     u2795:	
  2320  02AD  1C03               	btfss	3,0
  2321  02AE  2AB8               	goto	l6299
  2322  02AF  279B               	call	PL30	;select bank 1
  2323  02B0  082E               	movf	sprintf@sp^(0+128),w
  2324  02B1  2794  120A  118A   	fcall	PL29	;call to abstracted procedure
  2325  02B4  07AF               	addwf	sprintf@exp^(0+128),f
  2326  02B5  1C03               	skipc
  2327  02B6  03B0               	decf	(sprintf@exp+1)^(0+128),f
  2328  02B7  2AA4               	goto	l6297
  2329  02B8                     l6299:	
  2330  02B8  279B               	call	PL30	;select bank 1
  2331  02B9  0832               	movf	(sprintf@prec+1)^(0+128),w
  2332  02BA  3A80               	xorlw	128
  2333  02BB  00FF               	movwf	127
  2334  02BC  3080               	movlw	128
  2335  02BD  027F               	subwf	127,w
  2336  02BE  1D03               	skipz
  2337  02BF  2AC2               	goto	u2805
  2338  02C0  3009               	movlw	9
  2339  02C1  0231               	subwf	sprintf@prec^(0+128),w
  2340  02C2                     u2805:	
  2341  02C2  1C03               	skipc
  2342  02C3  2AC7               	goto	l6303
  2343  02C4  3008               	movlw	8
  2344  02C5  279B               	call	PL30	;select bank 1
  2345  02C6  2AC9               	goto	L2
  2346  02C7                     l6303:	
  2347  02C7  279B               	call	PL30	;select bank 1
  2348  02C8  0831               	movf	sprintf@prec^(0+128),w
  2349  02C9                     L2:	
  2350  02C9  00B6               	movwf	sprintf@c^(0+128)
  2351  02CA  278D  120A  118A   	fcall	PL26	;call to abstracted procedure
  2352  02CD  02B1               	subwf	sprintf@prec^(0+128),f
  2353  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  2354  02CF  0857               	movf	??_sprintf+1,w
  2355  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  2356  02D1  1C03               	skipc
  2357  02D2  03B2               	decf	(sprintf@prec+1)^(0+128),f
  2358  02D3  02B2               	subwf	(sprintf@prec+1)^(0+128),f
  2359  02D4  0836               	movf	sprintf@c^(0+128),w
  2360  02D5  1903               	btfsc	3,2
  2361  02D6  2ADD               	goto	l6309
  2362  02D7  082E               	movf	sprintf@sp^(0+128),w
  2363  02D8  0084               	movwf	4
  2364  02D9  302E               	movlw	46
  2365  02DA  1383               	bcf	3,7	;select IRP bank0
  2366  02DB  0080               	movwf	0
  2367  02DC  0AAE               	incf	sprintf@sp^(0+128),f
  2368  02DD                     l6309:	
  2369  02DD  0836               	movf	sprintf@c^(0+128),w
  2370  02DE  23BB  120A  118A   	fcall	_scale
  2371  02E1  083C               	movf	?_scale,w
  2372  02E2  00B0               	movwf	?___ftmul+3
  2373  02E3  083D               	movf	?_scale+1,w
  2374  02E4  00B1               	movwf	?___ftmul+4
  2375  02E5  083E               	movf	?_scale+2,w
  2376  02E6  00B2               	movwf	?___ftmul+5
  2377  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  2378  02E8  0833               	movf	sprintf@fval^(0+128),w
  2379  02E9  2728  120A  118A   	fcall	PL12	;call to abstracted procedure
  2380  02EC  25CF  120A  118A   	fcall	___ftmul
  2381  02EF  082D               	movf	?___ftmul,w
  2382  02F0  00A0               	movwf	?___fttol
  2383  02F1  082E               	movf	?___ftmul+1,w
  2384  02F2  00A1               	movwf	?___fttol+1
  2385  02F3  082F               	movf	?___ftmul+2,w
  2386  02F4  00A2               	movwf	?___fttol+2
  2387  02F5  279E  120A  118A   	fcall	___fttol
  2388  02F8  26DE  120A  118A   	fcall	PL5	;call to abstracted procedure
  2389  02FB  2B65               	goto	L3
  2390  02FC                     l6311:	
  2391  02FC  26D6  120A  118A   	fcall	PL4	;call to abstracted procedure
  2392  02FF  26CC               	fcall	PL3	;call to abstracted procedure
  2393  0300  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2394  0305  00F0               	movwf	?___lldiv
  2395  0306  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2396  030B  00F1               	movwf	?___lldiv+1
  2397  030C  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2398  0311  00F2               	movwf	?___lldiv+2
  2399  0312  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2400  0317  2733               	fcall	PL13	;call to abstracted procedure
  2401  0318  120A  158A  2290   	fcall	___lldiv
      +       120A  118A         
  2402  031D  2749               	fcall	PL16	;call to abstracted procedure
  2403  031E  120A  158A  2252   	fcall	___llmod
      +       120A  118A         
  2404  0323  275D  120A  118A   	fcall	PL18	;call to abstracted procedure
  2405  0326  1383               	bcf	3,7	;select IRP bank0
  2406  0327  0080               	movwf	0
  2407  0328  1683               	bsf	3,5	;RP0=1, select bank1
  2408  0329  0AAE               	incf	sprintf@sp^(0+128),f
  2409  032A  26CC               	fcall	PL3	;call to abstracted procedure
  2410  032B  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2411  0330  00A0               	movwf	?___llmod
  2412  0331  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2413  0336  00A1               	movwf	?___llmod+1
  2414  0337  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2415  033C  00A2               	movwf	?___llmod+2
  2416  033D  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2417  0342  00A3               	movwf	?___llmod+3
  2418  0343  1683               	bsf	3,5	;RP0=1, select bank1
  2419  0344  082D               	movf	(sprintf@_val+3)^(0+128),w
  2420  0345  1283               	bcf	3,5	;RP0=0, select bank0
  2421  0346  00A7               	movwf	?___llmod+7
  2422  0347  1683               	bsf	3,5	;RP0=1, select bank1
  2423  0348  082C               	movf	(sprintf@_val+2)^(0+128),w
  2424  0349  1283               	bcf	3,5	;RP0=0, select bank0
  2425  034A  00A6               	movwf	?___llmod+6
  2426  034B  1683               	bsf	3,5	;RP0=1, select bank1
  2427  034C  082B               	movf	(sprintf@_val+1)^(0+128),w
  2428  034D  1283               	bcf	3,5	;RP0=0, select bank0
  2429  034E  00A5               	movwf	?___llmod+5
  2430  034F  1683               	bsf	3,5	;RP0=1, select bank1
  2431  0350  082A               	movf	sprintf@_val^(0+128),w
  2432  0351  1283               	bcf	3,5	;RP0=0, select bank0
  2433  0352  00A4               	movwf	?___llmod+4
  2434  0353  120A  158A  2252   	fcall	___llmod
      +       120A  118A         
  2435  0358  0823               	movf	?___llmod+3,w
  2436  0359  1683               	bsf	3,5	;RP0=1, select bank1
  2437  035A  00AD               	movwf	(sprintf@_val+3)^(0+128)
  2438  035B  1283               	bcf	3,5	;RP0=0, select bank0
  2439  035C  0822               	movf	?___llmod+2,w
  2440  035D  1683               	bsf	3,5	;RP0=1, select bank1
  2441  035E  00AC               	movwf	(sprintf@_val+2)^(0+128)
  2442  035F  1283               	bcf	3,5	;RP0=0, select bank0
  2443  0360  0821               	movf	?___llmod+1,w
  2444  0361  1683               	bsf	3,5	;RP0=1, select bank1
  2445  0362  00AB               	movwf	(sprintf@_val+1)^(0+128)
  2446  0363  1283               	bcf	3,5	;RP0=0, select bank0
  2447  0364  0820               	movf	?___llmod,w
  2448  0365                     L3:	
  2449  0365  1683               	bsf	3,5	;RP0=1, select bank1
  2450  0366  00AA               	movwf	sprintf@_val^(0+128)
  2451  0367  03B6               	decf	sprintf@c^(0+128),f
  2452  0368  0F36               	incfsz	sprintf@c^(0+128),w
  2453  0369  2AFC               	goto	l6311
  2454  036A                     l6325:	
  2455  036A  0832               	movf	(sprintf@prec+1)^(0+128),w
  2456  036B  0431               	iorwf	sprintf@prec^(0+128),w
  2457  036C  1903               	btfsc	3,2
  2458  036D  280B               	goto	l6347
  2459  036E  082E               	movf	sprintf@sp^(0+128),w
  2460  036F  2794  120A  118A   	fcall	PL29	;call to abstracted procedure
  2461  0372  07B1               	addwf	sprintf@prec^(0+128),f
  2462  0373  1C03               	skipc
  2463  0374  03B2               	decf	(sprintf@prec+1)^(0+128),f
  2464  0375  2B6A               	goto	l6325
  2465  0376                     l6327:	
  2466  0376  1683               	bsf	3,5	;RP0=1, select bank1
  2467  0377  0832               	movf	(sprintf@prec+1)^(0+128),w
  2468  0378  0431               	iorwf	sprintf@prec^(0+128),w
  2469  0379  1D03               	skipz
  2470  037A  2B83               	goto	l6333
  2471  037B  082D               	movf	(sprintf@_val+3)^(0+128),w
  2472  037C  042C               	iorwf	(sprintf@_val+2)^(0+128),w
  2473  037D  042B               	iorwf	(sprintf@_val+1)^(0+128),w
  2474  037E  042A               	iorwf	sprintf@_val^(0+128),w
  2475  037F  1903               	btfsc	3,2
  2476  0380  0AB1               	incf	sprintf@prec^(0+128),f
  2477  0381  1903               	skipnz
  2478  0382  0AB2               	incf	(sprintf@prec+1)^(0+128),f
  2479  0383                     l6333:	
  2480  0383  0836               	movf	sprintf@c^(0+128),w
  2481  0384  1283               	bcf	3,5	;RP0=0, select bank0
  2482  0385  00D6               	movwf	??_sprintf
  2483  0386  01D7               	clrf	??_sprintf+1
  2484  0387  1BD6               	btfsc	??_sprintf,7
  2485  0388  03D7               	decf	??_sprintf+1,f
  2486  0389  0857               	movf	??_sprintf+1,w
  2487  038A  3A80               	xorlw	128
  2488  038B  00D8               	movwf	??_sprintf+2
  2489  038C  1683               	bsf	3,5	;RP0=1, select bank1
  2490  038D  0832               	movf	(sprintf@prec+1)^(0+128),w
  2491  038E  3A80               	xorlw	128
  2492  038F  1283               	bcf	3,5	;RP0=0, select bank0
  2493  0390  0258               	subwf	??_sprintf+2,w
  2494  0391  1D03               	skipz
  2495  0392  2B97               	goto	u2865
  2496  0393  1683               	bsf	3,5	;RP0=1, select bank1
  2497  0394  0831               	movf	sprintf@prec^(0+128),w
  2498  0395  1283               	bcf	3,5	;RP0=0, select bank0
  2499  0396  0256               	subwf	??_sprintf,w
  2500  0397                     u2865:	
  2501  0397  1C03               	btfss	3,0
  2502  0398  2BAA               	goto	l6341
  2503  0399  279B               	call	PL30	;select bank 1
  2504  039A  0836               	movf	sprintf@c^(0+128),w
  2505  039B  278D  120A  118A   	fcall	PL26	;call to abstracted procedure
  2506  039E  0832               	movf	(sprintf@prec+1)^(0+128),w
  2507  039F  3A80               	xorlw	128
  2508  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  2509  03A1  00D8               	movwf	??_sprintf+2
  2510  03A2  0857               	movf	??_sprintf+1,w
  2511  03A3  3A80               	xorlw	128
  2512  03A4  0258               	subwf	??_sprintf+2,w
  2513  03A5  1D03               	skipz
  2514  03A6  2BAA               	goto	l6341
  2515  03A7  0856               	movf	??_sprintf,w
  2516  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  2517  03A9  0231               	subwf	sprintf@prec^(0+128),w
  2518  03AA                     l6341:	
  2519  03AA  279B               	call	PL30	;select bank 1
  2520  03AB  0825               	movf	sprintf@flag^(0+128),w
  2521  03AC  3903               	andlw	3
  2522  03AD  1903               	btfsc	3,2
  2523  03AE  280B               	goto	l6347
  2524  03AF  082E               	movf	sprintf@sp^(0+128),w
  2525  03B0  0084               	movwf	4
  2526  03B1  302D               	movlw	45
  2527  03B2                     L4:	
  2528  03B2  1383               	bcf	3,7	;select IRP bank0
  2529  03B3  0080               	movwf	0
  2530  03B4  0AAE               	incf	sprintf@sp^(0+128),f
  2531  03B5  280B               	goto	l6347
  2532  03B6                     l6349:	
  2533  03B6  082E               	movf	sprintf@sp^(0+128),w
  2534  03B7  0084               	movwf	4
  2535  03B8  1383               	bcf	3,7	;select IRP bank0
  2536  03B9  0180               	clrf	0
  2537  03BA  0008               	return
  2538  03BB                     __end_of_sprintf:	
  2539  03BB                     __ptext505:	
  2540 ;; =============== function ___ftsub ends ============
  2541                           
  2542                           
  2543 ;; *************** function _scale *****************
  2544 ;; Defined at:
  2545 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;  scl             1    wreg     char 
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;  scl             1   38[BANK0 ] char 
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  3   28[BANK0 ] char 
  2552 ;; Registers used:
  2553 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2554 ;; Tracked objects:
  2555 ;;		On entry : 60/20
  2556 ;;		On exit  : 60/0
  2557 ;;		Unchanged: FFF9F/0
  2558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2559 ;;      Params:         0       3       0       0       0
  2560 ;;      Locals:         0       4       0       0       0
  2561 ;;      Temps:          0       4       0       0       0
  2562 ;;      Totals:         0      11       0       0       0
  2563 ;;Total ram usage:       11 bytes
  2564 ;; Hardware stack levels used:    1
  2565 ;; Hardware stack levels required when called:    2
  2566 ;; This function calls:
  2567 ;;		___awmod
  2568 ;;		___awdiv
  2569 ;;		___ftmul
  2570 ;;		___bmul
  2571 ;; This function is called by:
  2572 ;;		_sprintf
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575  03BB                     _scale:	
  2576                           
  2577                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2578                           ;scale@scl stored from wreg
  2579  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  2580  03BC  00C6               	movwf	scale@scl
  2581  03BD  1FC6               	btfss	scale@scl,7
  2582  03BE  2C87               	goto	l6117
  2583  03BF  09C6               	comf	scale@scl,f
  2584  03C0  0AC6               	incf	scale@scl,f
  2585  03C1  0846               	movf	scale@scl,w
  2586  03C2  3A80               	xorlw	128
  2587  03C3  3E12               	addlw	-238
  2588  03C4  1C03               	skipc
  2589  03C5  2C2B               	goto	l6107
  2590  03C6  300A               	movlw	10
  2591  03C7  273E  120A  118A   	fcall	PL14	;call to abstracted procedure
  2592  03CA  2592  120A  118A   	fcall	___awmod
  2593  03CD  0871               	movf	?___awmod+1,w
  2594  03CE  00F9               	movwf	?___awdiv+3
  2595  03CF  0870               	movf	?___awmod,w
  2596  03D0  00F8               	movwf	?___awdiv+2
  2597  03D1  254D  120A  118A   	fcall	___awdiv
  2598  03D4  276D               	fcall	PL20	;call to abstracted procedure
  2599  03D5  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  2600  03D6  0084               	movwf	4
  2601  03D7  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2602  03DC  00AD               	movwf	?___ftmul
  2603  03DD  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2604  03E2  00AE               	movwf	?___ftmul+1
  2605  03E3  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2606  03E8  277D  120A  118A   	fcall	PL22	;call to abstracted procedure
  2607  03EB  1BF8               	btfsc	?___awdiv+2,7
  2608  03EC  03F9               	decf	?___awdiv+3,f
  2609  03ED  254D  120A  118A   	fcall	___awdiv
  2610  03F0  26F4               	fcall	PL7	;call to abstracted procedure
  2611  03F1  3E37               	addlw	low ((__npowers_-__stringbase+54))
  2612  03F2  0084               	movwf	4
  2613  03F3  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2614  03F8  00B0               	movwf	?___ftmul+3
  2615  03F9  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2616  03FE  00B1               	movwf	?___ftmul+4
  2617  03FF  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2618  0404  00B2               	movwf	?___ftmul+5
  2619  0405  25CF  120A  118A   	fcall	___ftmul
  2620  0408  2710  120A  118A   	fcall	PL10	;call to abstracted procedure
  2621  040B  1BF2               	btfsc	?___awmod+2,7
  2622  040C  03F3               	decf	?___awmod+3,f
  2623  040D  2592  120A  118A   	fcall	___awmod
  2624  0410  26EC               	fcall	PL6	;call to abstracted procedure
  2625  0411  3E01               	addlw	low (__npowers_-__stringbase)
  2626  0412  0084               	movwf	4
  2627  0413  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2628  0418  00AD               	movwf	?___ftmul
  2629  0419  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2630  041E  00AE               	movwf	?___ftmul+1
  2631  041F  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2632  0424  2775  120A  118A   	fcall	PL21	;call to abstracted procedure
  2633  0427  25CF  120A  118A   	fcall	___ftmul
  2634  042A  2EFC               	ljmp	PL8	;call to abstracted procedure
  2635  042B                     l6107:	
  2636  042B  0846               	movf	scale@scl,w
  2637  042C  3A80               	xorlw	128
  2638  042D  3E75               	addlw	-139
  2639  042E  1C03               	skipc
  2640  042F  2C70               	goto	l6113
  2641  0430  300A               	movlw	10
  2642  0431  00F0               	movwf	?___awmod
  2643  0432  01F1               	clrf	?___awmod+1
  2644  0433  0846               	movf	scale@scl,w
  2645  0434  00F2               	movwf	?___awmod+2
  2646  0435  01F3               	clrf	?___awmod+3
  2647  0436  1BF2               	btfsc	?___awmod+2,7
  2648  0437  03F3               	decf	?___awmod+3,f
  2649  0438  2592  120A  118A   	fcall	___awmod
  2650  043B  26EC               	fcall	PL6	;call to abstracted procedure
  2651  043C  3E01               	addlw	low (__npowers_-__stringbase)
  2652  043D  0084               	movwf	4
  2653  043E  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2654  0443  00AD               	movwf	?___ftmul
  2655  0444  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2656  0449  00AE               	movwf	?___ftmul+1
  2657  044A  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2658  044F  2785  120A  118A   	fcall	PL25	;call to abstracted procedure
  2659  0452  1BF8               	btfsc	?___awdiv+2,7
  2660  0453  03F9               	decf	?___awdiv+3,f
  2661  0454  254D  120A  118A   	fcall	___awdiv
  2662  0457  26F4               	fcall	PL7	;call to abstracted procedure
  2663  0458  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  2664  0459  0084               	movwf	4
  2665  045A  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2666  045F  00B0               	movwf	?___ftmul+3
  2667  0460  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2668  0465  00B1               	movwf	?___ftmul+4
  2669  0466  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2670  046B  00B2               	movwf	?___ftmul+5
  2671  046C  25CF  120A  118A   	fcall	___ftmul
  2672  046F  2EFC               	ljmp	PL8	;call to abstracted procedure
  2673  0470                     l6113:	
  2674  0470  3003               	movlw	3
  2675  0471  00F9               	movwf	?___bmul
  2676  0472  0846               	movf	scale@scl,w
  2677  0473  263E               	fcall	___bmul
  2678  0474  3E01               	addlw	low (__npowers_-__stringbase)
  2679  0475  0084               	movwf	4
  2680  0476  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2681  047B  00BC               	movwf	?_scale
  2682  047C  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2683  0481  00BD               	movwf	?_scale+1
  2684  0482  120A  158A  200A   	fcall	stringdir
  2685  0485  00BE               	movwf	?_scale+2
  2686  0486  0008               	return
  2687  0487                     l6117:	
  2688  0487  0846               	movf	scale@scl,w
  2689  0488  3A80               	xorlw	128
  2690  0489  3E12               	addlw	-238
  2691  048A  1C03               	skipc
  2692  048B  2CF1               	goto	l6125
  2693  048C  300A               	movlw	10
  2694  048D  273E  120A  118A   	fcall	PL14	;call to abstracted procedure
  2695  0490  2592  120A  118A   	fcall	___awmod
  2696  0493  0871               	movf	?___awmod+1,w
  2697  0494  00F9               	movwf	?___awdiv+3
  2698  0495  0870               	movf	?___awmod,w
  2699  0496  00F8               	movwf	?___awdiv+2
  2700  0497  254D  120A  118A   	fcall	___awdiv
  2701  049A  276D               	fcall	PL20	;call to abstracted procedure
  2702  049B  3E43               	addlw	low ((__powers_-__stringbase+27))
  2703  049C  0084               	movwf	4
  2704  049D  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2705  04A2  00AD               	movwf	?___ftmul
  2706  04A3  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2707  04A8  00AE               	movwf	?___ftmul+1
  2708  04A9  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2709  04AE  277D  120A  118A   	fcall	PL22	;call to abstracted procedure
  2710  04B1  1BF8               	btfsc	?___awdiv+2,7
  2711  04B2  03F9               	decf	?___awdiv+3,f
  2712  04B3  254D  120A  118A   	fcall	___awdiv
  2713  04B6  26F4               	fcall	PL7	;call to abstracted procedure
  2714  04B7  3E5E               	addlw	low ((__powers_-__stringbase+54))
  2715  04B8  0084               	movwf	4
  2716  04B9  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2717  04BE  00B0               	movwf	?___ftmul+3
  2718  04BF  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2719  04C4  00B1               	movwf	?___ftmul+4
  2720  04C5  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2721  04CA  00B2               	movwf	?___ftmul+5
  2722  04CB  25CF  120A  118A   	fcall	___ftmul
  2723  04CE  2710  120A  118A   	fcall	PL10	;call to abstracted procedure
  2724  04D1  1BF2               	btfsc	?___awmod+2,7
  2725  04D2  03F3               	decf	?___awmod+3,f
  2726  04D3  2592  120A  118A   	fcall	___awmod
  2727  04D6  26EC               	fcall	PL6	;call to abstracted procedure
  2728  04D7  3E28               	addlw	low (__powers_-__stringbase)
  2729  04D8  0084               	movwf	4
  2730  04D9  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2731  04DE  00AD               	movwf	?___ftmul
  2732  04DF  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2733  04E4  00AE               	movwf	?___ftmul+1
  2734  04E5  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2735  04EA  2775  120A  118A   	fcall	PL21	;call to abstracted procedure
  2736  04ED  25CF  120A  118A   	fcall	___ftmul
  2737  04F0  2EFC               	ljmp	PL8	;call to abstracted procedure
  2738  04F1                     l6125:	
  2739  04F1  0846               	movf	scale@scl,w
  2740  04F2  3A80               	xorlw	128
  2741  04F3  3E75               	addlw	-139
  2742  04F4  1C03               	skipc
  2743  04F5  2D36               	goto	l6131
  2744  04F6  300A               	movlw	10
  2745  04F7  00F0               	movwf	?___awmod
  2746  04F8  01F1               	clrf	?___awmod+1
  2747  04F9  0846               	movf	scale@scl,w
  2748  04FA  00F2               	movwf	?___awmod+2
  2749  04FB  01F3               	clrf	?___awmod+3
  2750  04FC  1BF2               	btfsc	?___awmod+2,7
  2751  04FD  03F3               	decf	?___awmod+3,f
  2752  04FE  2592  120A  118A   	fcall	___awmod
  2753  0501  26EC               	fcall	PL6	;call to abstracted procedure
  2754  0502  3E28               	addlw	low (__powers_-__stringbase)
  2755  0503  0084               	movwf	4
  2756  0504  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2757  0509  00AD               	movwf	?___ftmul
  2758  050A  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2759  050F  00AE               	movwf	?___ftmul+1
  2760  0510  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2761  0515  2785  120A  118A   	fcall	PL25	;call to abstracted procedure
  2762  0518  1BF8               	btfsc	?___awdiv+2,7
  2763  0519  03F9               	decf	?___awdiv+3,f
  2764  051A  254D  120A  118A   	fcall	___awdiv
  2765  051D  26F4               	fcall	PL7	;call to abstracted procedure
  2766  051E  3E43               	addlw	low ((__powers_-__stringbase+27))
  2767  051F  0084               	movwf	4
  2768  0520  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2769  0525  00B0               	movwf	?___ftmul+3
  2770  0526  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2771  052B  00B1               	movwf	?___ftmul+4
  2772  052C  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2773  0531  00B2               	movwf	?___ftmul+5
  2774  0532  25CF  120A  118A   	fcall	___ftmul
  2775  0535  2EFC               	ljmp	PL8	;call to abstracted procedure
  2776  0536                     l6131:	
  2777  0536  3003               	movlw	3
  2778  0537  00F9               	movwf	?___bmul
  2779  0538  0846               	movf	scale@scl,w
  2780  0539  263E               	fcall	___bmul
  2781  053A  3E28               	addlw	low (__powers_-__stringbase)
  2782  053B  0084               	movwf	4
  2783  053C  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2784  0541  00BC               	movwf	?_scale
  2785  0542  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2786  0547  00BD               	movwf	?_scale+1
  2787  0548  120A  158A  200A   	fcall	stringdir
  2788  054B  00BE               	movwf	?_scale+2
  2789  054C  0008               	return
  2790  054D                     __end_of_scale:	
  2791  054D                     __ptext518:	
  2792 ;; =============== function ___llmod ends ============
  2793                           
  2794                           
  2795 ;; *************** function ___awdiv *****************
  2796 ;; Defined at:
  2797 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awdiv.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;  divisor         2    6[COMMON] int 
  2800 ;;  dividend        2    8[COMMON] int 
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;  quotient        2   12[COMMON] int 
  2803 ;;  sign            1   11[COMMON] unsigned char 
  2804 ;;  counter         1   10[COMMON] unsigned char 
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  2    6[COMMON] int 
  2807 ;; Registers used:
  2808 ;;		wreg, status,2, status,0
  2809 ;; Tracked objects:
  2810 ;;		On entry : 40/20
  2811 ;;		On exit  : 40/20
  2812 ;;		Unchanged: FFFBF/0
  2813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2814 ;;      Params:         4       0       0       0       0
  2815 ;;      Locals:         4       0       0       0       0
  2816 ;;      Temps:          0       0       0       0       0
  2817 ;;      Totals:         8       0       0       0       0
  2818 ;;Total ram usage:        8 bytes
  2819 ;; Hardware stack levels used:    1
  2820 ;; This function calls:
  2821 ;;		Nothing
  2822 ;; This function is called by:
  2823 ;;		_scale
  2824 ;;		_sprintf
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827  054D                     ___awdiv:	
  2828                           
  2829                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2830  054D  01FB               	clrf	___awdiv@sign
  2831  054E  1FF7               	btfss	___awdiv@divisor+1,7
  2832  054F  2D57               	goto	l5757
  2833  0550  09F6               	comf	___awdiv@divisor,f
  2834  0551  09F7               	comf	___awdiv@divisor+1,f
  2835  0552  0AF6               	incf	___awdiv@divisor,f
  2836  0553  1903               	skipnz
  2837  0554  0AF7               	incf	___awdiv@divisor+1,f
  2838  0555  01FB               	clrf	___awdiv@sign
  2839  0556  0AFB               	incf	___awdiv@sign,f
  2840  0557                     l5757:	
  2841  0557  1FF9               	btfss	___awdiv@dividend+1,7
  2842  0558  2D60               	goto	l5763
  2843  0559  09F8               	comf	___awdiv@dividend,f
  2844  055A  09F9               	comf	___awdiv@dividend+1,f
  2845  055B  0AF8               	incf	___awdiv@dividend,f
  2846  055C  1903               	skipnz
  2847  055D  0AF9               	incf	___awdiv@dividend+1,f
  2848  055E  3001               	movlw	1
  2849  055F  06FB               	xorwf	___awdiv@sign,f
  2850  0560                     l5763:	
  2851  0560  01FC               	clrf	___awdiv@quotient
  2852  0561  01FD               	clrf	___awdiv@quotient+1
  2853  0562  0877               	movf	___awdiv@divisor+1,w
  2854  0563  0476               	iorwf	___awdiv@divisor,w
  2855  0564  1903               	skipnz
  2856  0565  2D85               	goto	l5785
  2857  0566  01FA               	clrf	___awdiv@counter
  2858  0567                     L14:	
  2859  0567  0AFA               	incf	___awdiv@counter,f
  2860  0568  1BF7               	btfsc	___awdiv@divisor+1,7
  2861  0569  2D6E               	goto	l5773
  2862  056A  1003               	clrc
  2863  056B  0DF6               	rlf	___awdiv@divisor,f
  2864  056C  0DF7               	rlf	___awdiv@divisor+1,f
  2865  056D  2D67               	goto	L14
  2866  056E                     l5773:	
  2867  056E  1003               	clrc
  2868  056F  0DFC               	rlf	___awdiv@quotient,f
  2869  0570  0DFD               	rlf	___awdiv@quotient+1,f
  2870  0571  0877               	movf	___awdiv@divisor+1,w
  2871  0572  0279               	subwf	___awdiv@dividend+1,w
  2872  0573  1D03               	skipz
  2873  0574  2D77               	goto	u1985
  2874  0575  0876               	movf	___awdiv@divisor,w
  2875  0576  0278               	subwf	___awdiv@dividend,w
  2876  0577                     u1985:	
  2877  0577  1C03               	skipc
  2878  0578  2D81               	goto	L15
  2879  0579  0876               	movf	___awdiv@divisor,w
  2880  057A  02F8               	subwf	___awdiv@dividend,f
  2881  057B  0877               	movf	___awdiv@divisor+1,w
  2882  057C  1C03               	skipc
  2883  057D  03F9               	decf	___awdiv@dividend+1,f
  2884  057E  02F9               	subwf	___awdiv@dividend+1,f
  2885  057F  147C               	bsf	___awdiv@quotient,0
  2886  0580  1003               	clrc
  2887  0581                     L15:	
  2888  0581  0CF7               	rrf	___awdiv@divisor+1,f
  2889  0582  0CF6               	rrf	___awdiv@divisor,f
  2890  0583  0BFA               	decfsz	___awdiv@counter,f
  2891  0584  2D6E               	goto	l5773
  2892  0585                     l5785:	
  2893  0585  087B               	movf	___awdiv@sign,w
  2894  0586  1903               	btfsc	3,2
  2895  0587  2D8D               	goto	l5789
  2896  0588  09FC               	comf	___awdiv@quotient,f
  2897  0589  09FD               	comf	___awdiv@quotient+1,f
  2898  058A  0AFC               	incf	___awdiv@quotient,f
  2899  058B  1903               	skipnz
  2900  058C  0AFD               	incf	___awdiv@quotient+1,f
  2901  058D                     l5789:	
  2902  058D  087D               	movf	___awdiv@quotient+1,w
  2903  058E  00F7               	movwf	?___awdiv+1
  2904  058F  087C               	movf	___awdiv@quotient,w
  2905  0590  00F6               	movwf	?___awdiv
  2906  0591  0008               	return
  2907  0592                     __end_of___awdiv:	
  2908  0592                     __ptext513:	
  2909 ;; =============== function _pause ends ============
  2910                           
  2911                           
  2912 ;; *************** function ___awmod *****************
  2913 ;; Defined at:
  2914 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awmod.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;  divisor         2    0[COMMON] int 
  2917 ;;  dividend        2    2[COMMON] int 
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;  sign            1    5[COMMON] unsigned char 
  2920 ;;  counter         1    4[COMMON] unsigned char 
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  2    0[COMMON] int 
  2923 ;; Registers used:
  2924 ;;		wreg, status,2, status,0
  2925 ;; Tracked objects:
  2926 ;;		On entry : 60/0
  2927 ;;		On exit  : 60/0
  2928 ;;		Unchanged: FFF9F/0
  2929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2930 ;;      Params:         4       0       0       0       0
  2931 ;;      Locals:         2       0       0       0       0
  2932 ;;      Temps:          0       0       0       0       0
  2933 ;;      Totals:         6       0       0       0       0
  2934 ;;Total ram usage:        6 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; This function calls:
  2937 ;;		Nothing
  2938 ;; This function is called by:
  2939 ;;		_scale
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942  0592                     ___awmod:	
  2943                           
  2944                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2945  0592  01F5               	clrf	___awmod@sign
  2946  0593  1FF3               	btfss	___awmod@dividend+1,7
  2947  0594  2D9C               	goto	l5875
  2948  0595  09F2               	comf	___awmod@dividend,f
  2949  0596  09F3               	comf	___awmod@dividend+1,f
  2950  0597  0AF2               	incf	___awmod@dividend,f
  2951  0598  1903               	skipnz
  2952  0599  0AF3               	incf	___awmod@dividend+1,f
  2953  059A  01F5               	clrf	___awmod@sign
  2954  059B  0AF5               	incf	___awmod@sign,f
  2955  059C                     l5875:	
  2956  059C  1FF1               	btfss	___awmod@divisor+1,7
  2957  059D  2DA3               	goto	l5879
  2958  059E  09F0               	comf	___awmod@divisor,f
  2959  059F  09F1               	comf	___awmod@divisor+1,f
  2960  05A0  0AF0               	incf	___awmod@divisor,f
  2961  05A1  1903               	skipnz
  2962  05A2  0AF1               	incf	___awmod@divisor+1,f
  2963  05A3                     l5879:	
  2964  05A3  0871               	movf	___awmod@divisor+1,w
  2965  05A4  0470               	iorwf	___awmod@divisor,w
  2966  05A5  1903               	skipnz
  2967  05A6  2DC2               	goto	l5895
  2968  05A7  01F4               	clrf	___awmod@counter
  2969  05A8                     L7:	
  2970  05A8  0AF4               	incf	___awmod@counter,f
  2971  05A9  1BF1               	btfsc	___awmod@divisor+1,7
  2972  05AA  2DAF               	goto	l5887
  2973  05AB  1003               	clrc
  2974  05AC  0DF0               	rlf	___awmod@divisor,f
  2975  05AD  0DF1               	rlf	___awmod@divisor+1,f
  2976  05AE  2DA8               	goto	L7
  2977  05AF                     l5887:	
  2978  05AF  0871               	movf	___awmod@divisor+1,w
  2979  05B0  0273               	subwf	___awmod@dividend+1,w
  2980  05B1  1D03               	skipz
  2981  05B2  2DB5               	goto	u2175
  2982  05B3  0870               	movf	___awmod@divisor,w
  2983  05B4  0272               	subwf	___awmod@dividend,w
  2984  05B5                     u2175:	
  2985  05B5  1C03               	skipc
  2986  05B6  2DBE               	goto	L8
  2987  05B7  0870               	movf	___awmod@divisor,w
  2988  05B8  02F2               	subwf	___awmod@dividend,f
  2989  05B9  0871               	movf	___awmod@divisor+1,w
  2990  05BA  1C03               	skipc
  2991  05BB  03F3               	decf	___awmod@dividend+1,f
  2992  05BC  02F3               	subwf	___awmod@dividend+1,f
  2993  05BD  1003               	clrc
  2994  05BE                     L8:	
  2995  05BE  0CF1               	rrf	___awmod@divisor+1,f
  2996  05BF  0CF0               	rrf	___awmod@divisor,f
  2997  05C0  0BF4               	decfsz	___awmod@counter,f
  2998  05C1  2DAF               	goto	l5887
  2999  05C2                     l5895:	
  3000  05C2  0875               	movf	___awmod@sign,w
  3001  05C3  1903               	btfsc	3,2
  3002  05C4  2DCA               	goto	l5899
  3003  05C5  09F2               	comf	___awmod@dividend,f
  3004  05C6  09F3               	comf	___awmod@dividend+1,f
  3005  05C7  0AF2               	incf	___awmod@dividend,f
  3006  05C8  1903               	skipnz
  3007  05C9  0AF3               	incf	___awmod@dividend+1,f
  3008  05CA                     l5899:	
  3009  05CA  0873               	movf	___awmod@dividend+1,w
  3010  05CB  00F1               	movwf	?___awmod+1
  3011  05CC  0872               	movf	___awmod@dividend,w
  3012  05CD  00F0               	movwf	?___awmod
  3013  05CE  0008               	return
  3014  05CF                     __end_of___awmod:	
  3015  05CF                     __ptext510:	
  3016 ;; =============== function ___lwtoft ends ============
  3017                           
  3018                           
  3019 ;; *************** function ___ftmul *****************
  3020 ;; Defined at:
  3021 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftmul.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;  f1              3   13[BANK0 ] float 
  3024 ;;  f2              3   16[BANK0 ] float 
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;  f3_as_produc    3   23[BANK0 ] unsigned um
  3027 ;;  sign            1   27[BANK0 ] unsigned char 
  3028 ;;  cntr            1   26[BANK0 ] unsigned char 
  3029 ;;  exp             1   22[BANK0 ] unsigned char 
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  3   13[BANK0 ] float 
  3032 ;; Registers used:
  3033 ;;		wreg, status,2, status,0, pclath, cstack
  3034 ;; Tracked objects:
  3035 ;;		On entry : 60/0
  3036 ;;		On exit  : 60/0
  3037 ;;		Unchanged: FFF9F/0
  3038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3039 ;;      Params:         0       6       0       0       0
  3040 ;;      Locals:         0       6       0       0       0
  3041 ;;      Temps:          0       3       0       0       0
  3042 ;;      Totals:         0      15       0       0       0
  3043 ;;Total ram usage:       15 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:    1
  3046 ;; This function calls:
  3047 ;;		___ftpack
  3048 ;; This function is called by:
  3049 ;;		_main
  3050 ;;		_fround
  3051 ;;		_scale
  3052 ;;		_sprintf
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055  05CF                     ___ftmul:	
  3056                           
  3057                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3058  05CF  082D               	movf	___ftmul@f1,w
  3059  05D0  00B3               	movwf	??___ftmul
  3060  05D1  082E               	movf	___ftmul@f1+1,w
  3061  05D2  00B4               	movwf	??___ftmul+1
  3062  05D3  082F               	movf	___ftmul@f1+2,w
  3063  05D4  00B5               	movwf	??___ftmul+2
  3064  05D5  1003               	clrc
  3065  05D6  0D34               	rlf	??___ftmul+1,w
  3066  05D7  0D35               	rlf	??___ftmul+2,w
  3067  05D8  00B6               	movwf	___ftmul@exp
  3068  05D9  08B6               	movf	___ftmul@exp,f
  3069  05DA  1D03               	skipz
  3070  05DB  2DE0               	goto	l5995
  3071  05DC  01AD               	clrf	?___ftmul
  3072  05DD  01AE               	clrf	?___ftmul+1
  3073  05DE  01AF               	clrf	?___ftmul+2
  3074  05DF  0008               	return
  3075  05E0                     l5995:	
  3076  05E0  0830               	movf	___ftmul@f2,w
  3077  05E1  00B3               	movwf	??___ftmul
  3078  05E2  0831               	movf	___ftmul@f2+1,w
  3079  05E3  00B4               	movwf	??___ftmul+1
  3080  05E4  0832               	movf	___ftmul@f2+2,w
  3081  05E5  00B5               	movwf	??___ftmul+2
  3082  05E6  1003               	clrc
  3083  05E7  0D34               	rlf	??___ftmul+1,w
  3084  05E8  0D35               	rlf	??___ftmul+2,w
  3085  05E9  00BB               	movwf	___ftmul@sign
  3086  05EA  08BB               	movf	___ftmul@sign,f
  3087  05EB  1D03               	skipz
  3088  05EC  2DF1               	goto	l6001
  3089  05ED  01AD               	clrf	?___ftmul
  3090  05EE  01AE               	clrf	?___ftmul+1
  3091  05EF  01AF               	clrf	?___ftmul+2
  3092  05F0  0008               	return
  3093  05F1                     l6001:	
  3094  05F1  083B               	movf	___ftmul@sign,w
  3095  05F2  3E7B               	addlw	123
  3096  05F3  07B6               	addwf	___ftmul@exp,f
  3097  05F4  082F               	movf	___ftmul@f1+2,w
  3098  05F5  00BB               	movwf	___ftmul@sign
  3099  05F6  0832               	movf	___ftmul@f2+2,w
  3100  05F7  06BB               	xorwf	___ftmul@sign,f
  3101  05F8  3080               	movlw	128
  3102  05F9  05BB               	andwf	___ftmul@sign,f
  3103  05FA  3007               	movlw	7
  3104  05FB  17AE               	bsf	___ftmul@f1+1,7
  3105  05FC  17B1               	bsf	___ftmul@f2+1,7
  3106  05FD  01B2               	clrf	___ftmul@f2+2
  3107  05FE  01B7               	clrf	___ftmul@f3_as_product
  3108  05FF  01B8               	clrf	___ftmul@f3_as_product+1
  3109  0600  01B9               	clrf	___ftmul@f3_as_product+2
  3110  0601  00BA               	movwf	___ftmul@cntr
  3111  0602                     l6019:	
  3112  0602  1C2D               	btfss	___ftmul@f1,0
  3113  0603  2E0C               	goto	l6023
  3114  0604  0830               	movf	___ftmul@f2,w
  3115  0605  2753  120A  118A   	fcall	PL17	;call to abstracted procedure
  3116  0608  1803               	skipnc
  3117  0609  0A32               	incf	___ftmul@f2+2,w
  3118  060A  1D03               	btfss	3,2
  3119  060B  07B9               	addwf	___ftmul@f3_as_product+2,f
  3120  060C                     l6023:	
  3121  060C  1003               	clrc
  3122  060D  0CAF               	rrf	___ftmul@f1+2,f
  3123  060E  0CAE               	rrf	___ftmul@f1+1,f
  3124  060F  0CAD               	rrf	___ftmul@f1,f
  3125  0610  1003               	clrc
  3126  0611  0DB0               	rlf	___ftmul@f2,f
  3127  0612  0DB1               	rlf	___ftmul@f2+1,f
  3128  0613  0DB2               	rlf	___ftmul@f2+2,f
  3129  0614  0BBA               	decfsz	___ftmul@cntr,f
  3130  0615  2E02               	goto	l6019
  3131  0616  3009               	movlw	9
  3132  0617  00BA               	movwf	___ftmul@cntr
  3133  0618                     l6031:	
  3134  0618  1C2D               	btfss	___ftmul@f1,0
  3135  0619  2E22               	goto	l6035
  3136  061A  0830               	movf	___ftmul@f2,w
  3137  061B  2753  120A  118A   	fcall	PL17	;call to abstracted procedure
  3138  061E  1803               	skipnc
  3139  061F  0A32               	incf	___ftmul@f2+2,w
  3140  0620  1D03               	btfss	3,2
  3141  0621  07B9               	addwf	___ftmul@f3_as_product+2,f
  3142  0622                     l6035:	
  3143  0622  1003               	clrc
  3144  0623  0CAF               	rrf	___ftmul@f1+2,f
  3145  0624  0CAE               	rrf	___ftmul@f1+1,f
  3146  0625  0CAD               	rrf	___ftmul@f1,f
  3147  0626  1003               	clrc
  3148  0627  0CB9               	rrf	___ftmul@f3_as_product+2,f
  3149  0628  0CB8               	rrf	___ftmul@f3_as_product+1,f
  3150  0629  0CB7               	rrf	___ftmul@f3_as_product,f
  3151  062A  0BBA               	decfsz	___ftmul@cntr,f
  3152  062B  2E18               	goto	l6031
  3153  062C  0837               	movf	___ftmul@f3_as_product,w
  3154  062D  00F0               	movwf	?___ftpack
  3155  062E  0838               	movf	___ftmul@f3_as_product+1,w
  3156  062F  00F1               	movwf	?___ftpack+1
  3157  0630  0839               	movf	___ftmul@f3_as_product+2,w
  3158  0631  00F2               	movwf	?___ftpack+2
  3159  0632  0836               	movf	___ftmul@exp,w
  3160  0633  00F3               	movwf	?___ftpack+3
  3161  0634  083B               	movf	___ftmul@sign,w
  3162  0635  00F4               	movwf	?___ftpack+4
  3163  0636  264C               	fcall	___ftpack
  3164  0637  0870               	movf	?___ftpack,w
  3165  0638  00AD               	movwf	?___ftmul
  3166  0639  0871               	movf	?___ftpack+1,w
  3167  063A  00AE               	movwf	?___ftmul+1
  3168  063B  0872               	movf	?___ftpack+2,w
  3169  063C  00AF               	movwf	?___ftmul+2
  3170  063D  0008               	return
  3171  063E                     __end_of___ftmul:	
  3172  063E                     __ptext524:	
  3173 ;; =============== function ___wmul ends ============
  3174                           
  3175                           
  3176 ;; *************** function ___bmul *****************
  3177 ;; Defined at:
  3178 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\bmul.c"
  3179 ;; Parameters:    Size  Location     Type
  3180 ;;  multiplier      1    wreg     unsigned char 
  3181 ;;  multiplicand    1    9[COMMON] unsigned char 
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;  multiplier      1   11[COMMON] unsigned char 
  3184 ;;  product         1   10[COMMON] unsigned char 
  3185 ;; Return value:  Size  Location     Type
  3186 ;;                  1    wreg      unsigned char 
  3187 ;; Registers used:
  3188 ;;		wreg, status,2, status,0
  3189 ;; Tracked objects:
  3190 ;;		On entry : 60/0
  3191 ;;		On exit  : 60/0
  3192 ;;		Unchanged: FFF9F/0
  3193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3194 ;;      Params:         1       0       0       0       0
  3195 ;;      Locals:         2       0       0       0       0
  3196 ;;      Temps:          0       0       0       0       0
  3197 ;;      Totals:         3       0       0       0       0
  3198 ;;Total ram usage:        3 bytes
  3199 ;; Hardware stack levels used:    1
  3200 ;; This function calls:
  3201 ;;		Nothing
  3202 ;; This function is called by:
  3203 ;;		_fround
  3204 ;;		_scale
  3205 ;; This function uses a non-reentrant model
  3206 ;;
  3207  063E                     ___bmul:	
  3208                           
  3209                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3210                           ;___bmul@multiplier stored from wreg
  3211  063E  00FB               	movwf	___bmul@multiplier
  3212  063F  01FA               	clrf	___bmul@product
  3213  0640                     l5611:	
  3214  0640  0879               	movf	___bmul@multiplicand,w
  3215  0641  187B               	btfsc	___bmul@multiplier,0
  3216  0642  07FA               	addwf	___bmul@product,f
  3217  0643  1003               	clrc
  3218  0644  0DF9               	rlf	___bmul@multiplicand,f
  3219  0645  1003               	clrc
  3220  0646  0CFB               	rrf	___bmul@multiplier,f
  3221  0647  08FB               	movf	___bmul@multiplier,f
  3222  0648  1D03               	skipz
  3223  0649  2E40               	goto	l5611
  3224  064A  087A               	movf	___bmul@product,w
  3225  064B  0008               	return
  3226  064C                     __end_of___bmul:	
  3227  064C                     __ptext520:	
  3228 ;; =============== function ___fttol ends ============
  3229                           
  3230                           
  3231 ;; *************** function ___ftpack *****************
  3232 ;; Defined at:
  3233 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\float.c"
  3234 ;; Parameters:    Size  Location     Type
  3235 ;;  arg             3    0[COMMON] unsigned um
  3236 ;;  exp             1    3[COMMON] unsigned char 
  3237 ;;  sign            1    4[COMMON] unsigned char 
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;		None
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  3    0[COMMON] float 
  3242 ;; Registers used:
  3243 ;;		wreg, status,2, status,0
  3244 ;; Tracked objects:
  3245 ;;		On entry : 40/20
  3246 ;;		On exit  : 40/20
  3247 ;;		Unchanged: FFFBF/0
  3248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3249 ;;      Params:         5       0       0       0       0
  3250 ;;      Locals:         0       0       0       0       0
  3251 ;;      Temps:          3       0       0       0       0
  3252 ;;      Totals:         8       0       0       0       0
  3253 ;;Total ram usage:        8 bytes
  3254 ;; Hardware stack levels used:    1
  3255 ;; This function calls:
  3256 ;;		Nothing
  3257 ;; This function is called by:
  3258 ;;		___ftadd
  3259 ;;		___ftmul
  3260 ;;		___lwtoft
  3261 ;;		___lltoft
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264  064C                     ___ftpack:	
  3265                           
  3266                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3267  064C  0873               	movf	___ftpack@exp,w
  3268  064D  1903               	btfsc	3,2
  3269  064E  2E54               	goto	l5687
  3270  064F  0872               	movf	___ftpack@arg+2,w
  3271  0650  0471               	iorwf	___ftpack@arg+1,w
  3272  0651  0470               	iorwf	___ftpack@arg,w
  3273  0652  1D03               	skipz
  3274  0653  2E5D               	goto	l5693
  3275  0654                     l5687:	
  3276  0654  01F0               	clrf	?___ftpack
  3277  0655  01F1               	clrf	?___ftpack+1
  3278  0656  01F2               	clrf	?___ftpack+2
  3279  0657  0008               	return
  3280  0658                     l5691:	
  3281  0658  0AF3               	incf	___ftpack@exp,f
  3282  0659  1003               	clrc
  3283  065A  0CF2               	rrf	___ftpack@arg+2,f
  3284  065B  0CF1               	rrf	___ftpack@arg+1,f
  3285  065C  0CF0               	rrf	___ftpack@arg,f
  3286  065D                     l5693:	
  3287  065D  30FE               	movlw	254
  3288  065E  0572               	andwf	___ftpack@arg+2,w
  3289  065F  1903               	btfsc	3,2
  3290  0660  2E6C               	goto	l5697
  3291  0661  2E58               	goto	l5691
  3292  0662                     l5695:	
  3293  0662  0AF3               	incf	___ftpack@exp,f
  3294  0663  0AF0               	incf	___ftpack@arg,f
  3295  0664  1903               	skipnz
  3296  0665  0AF1               	incf	___ftpack@arg+1,f
  3297  0666  1903               	skipnz
  3298  0667  0AF2               	incf	___ftpack@arg+2,f
  3299  0668  1003               	clrc
  3300  0669  0CF2               	rrf	___ftpack@arg+2,f
  3301  066A  0CF1               	rrf	___ftpack@arg+1,f
  3302  066B  0CF0               	rrf	___ftpack@arg,f
  3303  066C                     l5697:	
  3304  066C  30FF               	movlw	255
  3305  066D  0572               	andwf	___ftpack@arg+2,w
  3306  066E  1903               	btfsc	3,2
  3307  066F  2E76               	goto	l5701
  3308  0670  2E62               	goto	l5695
  3309  0671                     l5699:	
  3310  0671  03F3               	decf	___ftpack@exp,f
  3311  0672  1003               	clrc
  3312  0673  0DF0               	rlf	___ftpack@arg,f
  3313  0674  0DF1               	rlf	___ftpack@arg+1,f
  3314  0675  0DF2               	rlf	___ftpack@arg+2,f
  3315  0676                     l5701:	
  3316  0676  1FF1               	btfss	___ftpack@arg+1,7
  3317  0677  2E71               	goto	l5699
  3318  0678  1C73               	btfss	___ftpack@exp,0
  3319  0679  13F1               	bcf	___ftpack@arg+1,7
  3320  067A  1003               	clrc
  3321  067B  0CF3               	rrf	___ftpack@exp,f
  3322  067C  0873               	movf	___ftpack@exp,w
  3323  067D  00F7               	movwf	??___ftpack+2
  3324  067E  01F6               	clrf	??___ftpack+1
  3325  067F  01F5               	clrf	??___ftpack
  3326  0680  0875               	movf	??___ftpack,w
  3327  0681  04F0               	iorwf	___ftpack@arg,f
  3328  0682  0876               	movf	??___ftpack+1,w
  3329  0683  04F1               	iorwf	___ftpack@arg+1,f
  3330  0684  0877               	movf	??___ftpack+2,w
  3331  0685  04F2               	iorwf	___ftpack@arg+2,f
  3332  0686  0874               	movf	___ftpack@sign,w
  3333  0687  1D03               	skipz
  3334  0688  17F2               	bsf	___ftpack@arg+2,7
  3335  0689  0008               	return
  3336  068A                     __end_of___ftpack:	
  3337  068A                     __ptext515:	
  3338 ;; =============== function ___lldiv ends ============
  3339                           
  3340                           
  3341 ;; *************** function ___ftge *****************
  3342 ;; Defined at:
  3343 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftge.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;  ff1             3    0[COMMON] float 
  3346 ;;  ff2             3    3[COMMON] float 
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;		None
  3349 ;; Return value:  Size  Location     Type
  3350 ;;		None               void
  3351 ;; Registers used:
  3352 ;;		wreg, status,2, status,0
  3353 ;; Tracked objects:
  3354 ;;		On entry : 60/20
  3355 ;;		On exit  : 60/20
  3356 ;;		Unchanged: FFF9F/0
  3357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3358 ;;      Params:         6       0       0       0       0
  3359 ;;      Locals:         0       0       0       0       0
  3360 ;;      Temps:          0       0       0       0       0
  3361 ;;      Totals:         6       0       0       0       0
  3362 ;;Total ram usage:        6 bytes
  3363 ;; Hardware stack levels used:    1
  3364 ;; This function calls:
  3365 ;;		Nothing
  3366 ;; This function is called by:
  3367 ;;		_sprintf
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370  068A                     ___ftge:	
  3371                           
  3372                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3373  068A  1FF2               	btfss	___ftge@ff1+2,7
  3374  068B  2E99               	goto	l5825
  3375  068C  0870               	movf	___ftge@ff1,w
  3376  068D  3C00               	sublw	0
  3377  068E  00F0               	movwf	___ftge@ff1
  3378  068F  0871               	movf	___ftge@ff1+1,w
  3379  0690  1C03               	skipc
  3380  0691  0F71               	incfsz	___ftge@ff1+1,w
  3381  0692  3C00               	sublw	0
  3382  0693  00F1               	movwf	___ftge@ff1+1
  3383  0694  0872               	movf	___ftge@ff1+2,w
  3384  0695  1C03               	skipc
  3385  0696  0F72               	incfsz	___ftge@ff1+2,w
  3386  0697  3C80               	sublw	128
  3387  0698  00F2               	movwf	___ftge@ff1+2
  3388  0699                     l5825:	
  3389  0699  1FF5               	btfss	___ftge@ff2+2,7
  3390  069A  2EA8               	goto	l5829
  3391  069B  0873               	movf	___ftge@ff2,w
  3392  069C  3C00               	sublw	0
  3393  069D  00F3               	movwf	___ftge@ff2
  3394  069E  0874               	movf	___ftge@ff2+1,w
  3395  069F  1C03               	skipc
  3396  06A0  0F74               	incfsz	___ftge@ff2+1,w
  3397  06A1  3C00               	sublw	0
  3398  06A2  00F4               	movwf	___ftge@ff2+1
  3399  06A3  0875               	movf	___ftge@ff2+2,w
  3400  06A4  1C03               	skipc
  3401  06A5  0F75               	incfsz	___ftge@ff2+2,w
  3402  06A6  3C80               	sublw	128
  3403  06A7  00F5               	movwf	___ftge@ff2+2
  3404  06A8                     l5829:	
  3405  06A8  3080               	movlw	128
  3406  06A9  06F2               	xorwf	___ftge@ff1+2,f
  3407  06AA  06F5               	xorwf	___ftge@ff2+2,f
  3408  06AB  0875               	movf	___ftge@ff2+2,w
  3409  06AC  0272               	subwf	___ftge@ff1+2,w
  3410  06AD  1D03               	skipz
  3411  06AE  0008               	return
  3412  06AF  0874               	movf	___ftge@ff2+1,w
  3413  06B0  0271               	subwf	___ftge@ff1+1,w
  3414  06B1  1D03               	skipz
  3415  06B2  0008               	return
  3416  06B3  0873               	movf	___ftge@ff2,w
  3417  06B4  0270               	subwf	___ftge@ff1,w
  3418  06B5  0008               	return
  3419  06B6                     __end_of___ftge:	
  3420  06B6                     __ptext527:	
  3421 ;; =============== function __tdiv_to_l_ ends ============
  3422                           
  3423                           
  3424 ;; *************** function _isdigit *****************
  3425 ;; Defined at:
  3426 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\isdigit.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;  c               1    wreg     unsigned char 
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;  c               1    1[COMMON] unsigned char 
  3431 ;; Return value:  Size  Location     Type
  3432 ;;		None               void
  3433 ;; Registers used:
  3434 ;;		wreg, status,2, status,0
  3435 ;; Tracked objects:
  3436 ;;		On entry : 60/0
  3437 ;;		On exit  : 60/0
  3438 ;;		Unchanged: FFF9F/0
  3439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3440 ;;      Params:         0       0       0       0       0
  3441 ;;      Locals:         2       0       0       0       0
  3442 ;;      Temps:          0       0       0       0       0
  3443 ;;      Totals:         2       0       0       0       0
  3444 ;;Total ram usage:        2 bytes
  3445 ;; Hardware stack levels used:    1
  3446 ;; This function calls:
  3447 ;;		Nothing
  3448 ;; This function is called by:
  3449 ;;		_sprintf
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452  06B6                     _isdigit:	
  3453                           
  3454                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3455                           ;isdigit@c stored from wreg
  3456  06B6  00F1               	movwf	isdigit@c
  3457  06B7  303A               	movlw	58
  3458  06B8  01F0               	clrf	_isdigit$2814
  3459  06B9  0271               	subwf	isdigit@c,w
  3460  06BA  1803               	skipnc
  3461  06BB  2EC2               	goto	l5511
  3462  06BC  3030               	movlw	48
  3463  06BD  0271               	subwf	isdigit@c,w
  3464  06BE  1C03               	skipc
  3465  06BF  2EC2               	goto	l5511
  3466  06C0  01F0               	clrf	_isdigit$2814
  3467  06C1  0AF0               	incf	_isdigit$2814,f
  3468  06C2                     l5511:	
  3469  06C2  0C70               	rrf	_isdigit$2814,w
  3470  06C3  0008               	return
  3471  06C4                     __end_of_isdigit:	
  3472  06C4                     __ptext516:	
  3473 ;; =============== function ___ftge ends ============
  3474                           
  3475                           
  3476 ;; *************** function ___ftneg *****************
  3477 ;; Defined at:
  3478 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftneg.c"
  3479 ;; Parameters:    Size  Location     Type
  3480 ;;  f1              3    0[COMMON] float 
  3481 ;; Auto vars:     Size  Location     Type
  3482 ;;		None
  3483 ;; Return value:  Size  Location     Type
  3484 ;;                  3    0[COMMON] float 
  3485 ;; Registers used:
  3486 ;;		wreg
  3487 ;; Tracked objects:
  3488 ;;		On entry : 160/20
  3489 ;;		On exit  : 160/20
  3490 ;;		Unchanged: FFE9F/0
  3491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3492 ;;      Params:         3       0       0       0       0
  3493 ;;      Locals:         0       0       0       0       0
  3494 ;;      Temps:          0       0       0       0       0
  3495 ;;      Totals:         3       0       0       0       0
  3496 ;;Total ram usage:        3 bytes
  3497 ;; Hardware stack levels used:    1
  3498 ;; This function calls:
  3499 ;;		Nothing
  3500 ;; This function is called by:
  3501 ;;		_sprintf
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504  06C4                     ___ftneg:	
  3505                           
  3506                           ; Regs used in ___ftneg: [wreg]
  3507  06C4  0872               	movf	___ftneg@f1+2,w
  3508  06C5  0471               	iorwf	___ftneg@f1+1,w
  3509  06C6  0470               	iorwf	___ftneg@f1,w
  3510  06C7  1903               	skipnz
  3511  06C8  0008               	return
  3512  06C9  3080               	movlw	128
  3513  06CA  06F2               	xorwf	___ftneg@f1+2,f
  3514  06CB  0008               	return
  3515  06CC                     __end_of___ftneg:	
  3516  06CC                     PL3:	
  3517  06CC  0836               	movf	sprintf@c^(0+128),w
  3518  06CD  1283               	bcf	3,5	;RP0=0, select bank0
  3519  06CE  00D6               	movwf	??_sprintf
  3520  06CF  1003               	clrc
  3521  06D0  0DD6               	rlf	??_sprintf,f
  3522  06D1  1003               	clrc
  3523  06D2  0D56               	rlf	??_sprintf,w
  3524  06D3  3E4F               	addlw	low (_dpowers-__stringbase)
  3525  06D4  0084               	movwf	4
  3526  06D5  0008               	return
  3527  06D6                     PL4:	
  3528  06D6  300A               	movlw	10
  3529  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  3530  06D8  00A0               	movwf	?___llmod
  3531  06D9  01A1               	clrf	?___llmod+1
  3532  06DA  01A2               	clrf	?___llmod+2
  3533  06DB  01A3               	clrf	?___llmod+3
  3534  06DC  1683               	bsf	3,5	;RP0=1, select bank1
  3535  06DD  0008               	return
  3536  06DE                     PL5:	
  3537  06DE  0823               	movf	?___fttol+3,w
  3538  06DF  1683               	bsf	3,5	;RP0=1, select bank1
  3539  06E0  00AD               	movwf	(sprintf@_val+3)^(0+128)
  3540  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  3541  06E2  0822               	movf	?___fttol+2,w
  3542  06E3  1683               	bsf	3,5	;RP0=1, select bank1
  3543  06E4  00AC               	movwf	(sprintf@_val+2)^(0+128)
  3544  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  3545  06E6  0821               	movf	?___fttol+1,w
  3546  06E7  1683               	bsf	3,5	;RP0=1, select bank1
  3547  06E8  00AB               	movwf	(sprintf@_val+1)^(0+128)
  3548  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  3549  06EA  0820               	movf	?___fttol,w
  3550  06EB  0008               	return
  3551  06EC                     PL6:	
  3552  06EC  0870               	movf	?___awmod,w
  3553  06ED  00BF               	movwf	??_scale
  3554  06EE  0871               	movf	?___awmod+1,w
  3555  06EF  00C0               	movwf	??_scale+1
  3556  06F0  083F               	movf	??_scale,w
  3557  06F1  073F               	addwf	??_scale,w
  3558  06F2  073F               	addwf	??_scale,w
  3559  06F3  0008               	return
  3560  06F4                     PL7:	
  3561  06F4  0876               	movf	?___awdiv,w
  3562  06F5  00C1               	movwf	??_scale+2
  3563  06F6  0877               	movf	?___awdiv+1,w
  3564  06F7  00C2               	movwf	??_scale+3
  3565  06F8  0841               	movf	??_scale+2,w
  3566  06F9  0741               	addwf	??_scale+2,w
  3567  06FA  0741               	addwf	??_scale+2,w
  3568  06FB  0008               	return
  3569  06FC                     PL8:	
  3570  06FC  082D               	movf	?___ftmul,w
  3571  06FD  00BC               	movwf	?_scale
  3572  06FE  082E               	movf	?___ftmul+1,w
  3573  06FF  00BD               	movwf	?_scale+1
  3574  0700  082F               	movf	?___ftmul+2,w
  3575  0701  00BE               	movwf	?_scale+2
  3576  0702  0008               	return
  3577  0703                     PL9:	
  3578  0703  083C               	movf	?_scale,w
  3579  0704  1683               	bsf	3,5	;RP0=1, select bank1
  3580  0705  00A7               	movwf	sprintf@integ^(0+128)
  3581  0706  1283               	bcf	3,5	;RP0=0, select bank0
  3582  0707  083D               	movf	?_scale+1,w
  3583  0708  1683               	bsf	3,5	;RP0=1, select bank1
  3584  0709  00A8               	movwf	(sprintf@integ+1)^(0+128)
  3585  070A  1283               	bcf	3,5	;RP0=0, select bank0
  3586  070B  083E               	movf	?_scale+2,w
  3587  070C  1683               	bsf	3,5	;RP0=1, select bank1
  3588  070D  00A9               	movwf	(sprintf@integ+2)^(0+128)
  3589  070E  0833               	movf	sprintf@fval^(0+128),w
  3590  070F  0008               	return
  3591  0710                     PL10:	
  3592  0710  082D               	movf	?___ftmul,w
  3593  0711  00C3               	movwf	_scale$3246
  3594  0712  082E               	movf	?___ftmul+1,w
  3595  0713  00C4               	movwf	_scale$3246+1
  3596  0714  082F               	movf	?___ftmul+2,w
  3597  0715  00C5               	movwf	_scale$3246+2
  3598  0716  300A               	movlw	10
  3599  0717  00F0               	movwf	?___awmod
  3600  0718  01F1               	clrf	?___awmod+1
  3601  0719  0846               	movf	scale@scl,w
  3602  071A  00F2               	movwf	?___awmod+2
  3603  071B  01F3               	clrf	?___awmod+3
  3604  071C  0008               	return
  3605  071D                     PL11:	
  3606  071D  1283               	bcf	3,5	;RP0=0, select bank0
  3607  071E  00A0               	movwf	?___fttol
  3608  071F  1683               	bsf	3,5	;RP0=1, select bank1
  3609  0720  0834               	movf	(sprintf@fval+1)^(0+128),w
  3610  0721  1283               	bcf	3,5	;RP0=0, select bank0
  3611  0722  00A1               	movwf	?___fttol+1
  3612  0723  1683               	bsf	3,5	;RP0=1, select bank1
  3613  0724  0835               	movf	(sprintf@fval+2)^(0+128),w
  3614  0725  1283               	bcf	3,5	;RP0=0, select bank0
  3615  0726  00A2               	movwf	?___fttol+2
  3616  0727  0008               	return
  3617  0728                     PL12:	
  3618  0728  1283               	bcf	3,5	;RP0=0, select bank0
  3619  0729  00AD               	movwf	?___ftmul
  3620  072A  1683               	bsf	3,5	;RP0=1, select bank1
  3621  072B  0834               	movf	(sprintf@fval+1)^(0+128),w
  3622  072C  1283               	bcf	3,5	;RP0=0, select bank0
  3623  072D  00AE               	movwf	?___ftmul+1
  3624  072E  1683               	bsf	3,5	;RP0=1, select bank1
  3625  072F  0835               	movf	(sprintf@fval+2)^(0+128),w
  3626  0730  1283               	bcf	3,5	;RP0=0, select bank0
  3627  0731  00AF               	movwf	?___ftmul+2
  3628  0732  0008               	return
  3629  0733                     PL13:	
  3630  0733  00F3               	movwf	?___lldiv+3
  3631  0734  1683               	bsf	3,5	;RP0=1, select bank1
  3632  0735  082D               	movf	(sprintf@_val+3)^(0+128),w
  3633  0736  00F7               	movwf	?___lldiv+7
  3634  0737  082C               	movf	(sprintf@_val+2)^(0+128),w
  3635  0738  00F6               	movwf	?___lldiv+6
  3636  0739  082B               	movf	(sprintf@_val+1)^(0+128),w
  3637  073A  00F5               	movwf	?___lldiv+5
  3638  073B  082A               	movf	sprintf@_val^(0+128),w
  3639  073C  00F4               	movwf	?___lldiv+4
  3640  073D  0008               	return
  3641  073E                     PL14:	
  3642  073E  00F6               	movwf	?___awdiv
  3643  073F  01F7               	clrf	?___awdiv+1
  3644  0740  0846               	movf	scale@scl,w
  3645  0741  00F2               	movwf	?___awmod+2
  3646  0742  01F3               	clrf	?___awmod+3
  3647  0743  1BF2               	btfsc	?___awmod+2,7
  3648  0744  03F3               	decf	?___awmod+3,f
  3649  0745  3064               	movlw	100
  3650  0746  00F0               	movwf	?___awmod
  3651  0747  01F1               	clrf	?___awmod+1
  3652  0748  0008               	return
  3653  0749                     PL16:	
  3654  0749  0873               	movf	?___lldiv+3,w
  3655  074A  1283               	bcf	3,5	;RP0=0, select bank0
  3656  074B  00A7               	movwf	?___llmod+7
  3657  074C  0872               	movf	?___lldiv+2,w
  3658  074D  00A6               	movwf	?___llmod+6
  3659  074E  0871               	movf	?___lldiv+1,w
  3660  074F  00A5               	movwf	?___llmod+5
  3661  0750  0870               	movf	?___lldiv,w
  3662  0751  00A4               	movwf	?___llmod+4
  3663  0752  0008               	return
  3664  0753                     PL17:	
  3665  0753  07B7               	addwf	___ftmul@f3_as_product,f
  3666  0754  0831               	movf	___ftmul@f2+1,w
  3667  0755  1103               	clrz
  3668  0756  1803               	skipnc
  3669  0757  0A31               	incf	___ftmul@f2+1,w
  3670  0758  1D03               	btfss	3,2
  3671  0759  07B8               	addwf	___ftmul@f3_as_product+1,f
  3672  075A  0832               	movf	___ftmul@f2+2,w
  3673  075B  1103               	clrz
  3674  075C  0008               	return
  3675  075D                     PL18:	
  3676  075D  0820               	movf	?___llmod,w
  3677  075E  3E30               	addlw	48
  3678  075F  00D7               	movwf	??_sprintf+1
  3679  0760  1683               	bsf	3,5	;RP0=1, select bank1
  3680  0761  082E               	movf	sprintf@sp^(0+128),w
  3681  0762  0084               	movwf	4
  3682  0763  1283               	bcf	3,5	;RP0=0, select bank0
  3683  0764  0857               	movf	??_sprintf+1,w
  3684  0765  0008               	return
  3685  0766                     PL19:	
  3686  0766  0827               	movf	sprintf@integ^(0+128),w
  3687  0767  00F0               	movwf	?___ftge
  3688  0768  0828               	movf	(sprintf@integ+1)^(0+128),w
  3689  0769  00F1               	movwf	?___ftge+1
  3690  076A  0829               	movf	(sprintf@integ+2)^(0+128),w
  3691  076B  00F2               	movwf	?___ftge+2
  3692  076C  0008               	return
  3693  076D                     PL20:	
  3694  076D  0876               	movf	?___awdiv,w
  3695  076E  00BF               	movwf	??_scale
  3696  076F  0877               	movf	?___awdiv+1,w
  3697  0770  00C0               	movwf	??_scale+1
  3698  0771  083F               	movf	??_scale,w
  3699  0772  073F               	addwf	??_scale,w
  3700  0773  073F               	addwf	??_scale,w
  3701  0774  0008               	return
  3702  0775                     PL21:	
  3703  0775  00AF               	movwf	?___ftmul+2
  3704  0776  0843               	movf	_scale$3246,w
  3705  0777  00B0               	movwf	?___ftmul+3
  3706  0778  0844               	movf	_scale$3246+1,w
  3707  0779  00B1               	movwf	?___ftmul+4
  3708  077A  0845               	movf	_scale$3246+2,w
  3709  077B  00B2               	movwf	?___ftmul+5
  3710  077C  0008               	return
  3711  077D                     PL22:	
  3712  077D  00AF               	movwf	?___ftmul+2
  3713  077E  3064               	movlw	100
  3714  077F  00F6               	movwf	?___awdiv
  3715  0780  01F7               	clrf	?___awdiv+1
  3716  0781  0846               	movf	scale@scl,w
  3717  0782  00F8               	movwf	?___awdiv+2
  3718  0783  01F9               	clrf	?___awdiv+3
  3719  0784  0008               	return
  3720  0785                     PL25:	
  3721  0785  00AF               	movwf	?___ftmul+2
  3722  0786  300A               	movlw	10
  3723  0787  00F6               	movwf	?___awdiv
  3724  0788  01F7               	clrf	?___awdiv+1
  3725  0789  0846               	movf	scale@scl,w
  3726  078A  00F8               	movwf	?___awdiv+2
  3727  078B  01F9               	clrf	?___awdiv+3
  3728  078C  0008               	return
  3729  078D                     PL26:	
  3730  078D  1283               	bcf	3,5	;RP0=0, select bank0
  3731  078E  00D6               	movwf	??_sprintf
  3732  078F  01D7               	clrf	??_sprintf+1
  3733  0790  1BD6               	btfsc	??_sprintf,7
  3734  0791  03D7               	decf	??_sprintf+1,f
  3735  0792  1683               	bsf	3,5	;RP0=1, select bank1
  3736  0793  0008               	return
  3737  0794                     PL29:	
  3738  0794  0084               	movwf	4
  3739  0795  3030               	movlw	48
  3740  0796  1383               	bcf	3,7	;select IRP bank0
  3741  0797  0080               	movwf	0
  3742  0798  30FF               	movlw	-1
  3743  0799  0AAE               	incf	sprintf@sp^(0+128),f
  3744  079A  0008               	return
  3745  079B                     PL30:	
  3746  079B  1683               	bsf	3,5	;RP0=1, select bank1
  3747  079C  1303               	bcf	3,6	;RP1=0, select bank1
  3748  079D  0008               	return
  3749  079E                     __ptext519:	
  3750 ;; =============== function ___awdiv ends ============
  3751                           
  3752                           
  3753 ;; *************** function ___fttol *****************
  3754 ;; Defined at:
  3755 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\fttol.c"
  3756 ;; Parameters:    Size  Location     Type
  3757 ;;  f1              3    0[BANK0 ] float 
  3758 ;; Auto vars:     Size  Location     Type
  3759 ;;  lval            4    8[BANK0 ] unsigned long 
  3760 ;;  exp1            1   12[BANK0 ] unsigned char 
  3761 ;;  sign1           1    7[BANK0 ] unsigned char 
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  4    0[BANK0 ] long 
  3764 ;; Registers used:
  3765 ;;		wreg, status,2, status,0
  3766 ;; Tracked objects:
  3767 ;;		On entry : 60/0
  3768 ;;		On exit  : 60/0
  3769 ;;		Unchanged: FFF9F/0
  3770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3771 ;;      Params:         0       4       0       0       0
  3772 ;;      Locals:         0       6       0       0       0
  3773 ;;      Temps:          0       3       0       0       0
  3774 ;;      Totals:         0      13       0       0       0
  3775 ;;Total ram usage:       13 bytes
  3776 ;; Hardware stack levels used:    1
  3777 ;; This function calls:
  3778 ;;		Nothing
  3779 ;; This function is called by:
  3780 ;;		_sprintf
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783  079E                     ___fttol:	
  3784                           
  3785                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3786  079E  27F9  120A  118A   	fcall	PL28	;call to abstracted procedure
  3787  07A1  1003               	clrc
  3788  07A2  0D25               	rlf	??___fttol+1,w
  3789  07A3  0D26               	rlf	??___fttol+2,w
  3790  07A4  00AC               	movwf	___fttol@exp1
  3791  07A5  08AC               	movf	___fttol@exp1,f
  3792  07A6  1D03               	skipz
  3793  07A7  2FAD               	goto	l5715
  3794  07A8                     l5713:	
  3795  07A8  01A0               	clrf	?___fttol
  3796  07A9  01A1               	clrf	?___fttol+1
  3797  07AA  01A2               	clrf	?___fttol+2
  3798  07AB  01A3               	clrf	?___fttol+3
  3799  07AC  0008               	return
  3800  07AD                     l5715:	
  3801  07AD  27F9  120A  118A   	fcall	PL28	;call to abstracted procedure
  3802  07B0  3017               	movlw	23
  3803  07B1                     u1875:	
  3804  07B1  1003               	clrc
  3805  07B2  0CA6               	rrf	??___fttol+2,f
  3806  07B3  0CA5               	rrf	??___fttol+1,f
  3807  07B4  0CA4               	rrf	??___fttol,f
  3808  07B5  3EFF               	addlw	-1
  3809  07B6  1D03               	skipz
  3810  07B7  2FB1               	goto	u1875
  3811  07B8  0824               	movf	??___fttol,w
  3812  07B9  00A7               	movwf	___fttol@sign1
  3813  07BA  17A1               	bsf	___fttol@f1+1,7
  3814  07BB  01A2               	clrf	___fttol@f1+2
  3815  07BC  0820               	movf	___fttol@f1,w
  3816  07BD  00A8               	movwf	___fttol@lval
  3817  07BE  0821               	movf	___fttol@f1+1,w
  3818  07BF  00A9               	movwf	___fttol@lval+1
  3819  07C0  0822               	movf	___fttol@f1+2,w
  3820  07C1  00AA               	movwf	___fttol@lval+2
  3821  07C2  308E               	movlw	142
  3822  07C3  01AB               	clrf	___fttol@lval+3
  3823  07C4  02AC               	subwf	___fttol@exp1,f
  3824  07C5  1FAC               	btfss	___fttol@exp1,7
  3825  07C6  2FD4               	goto	l5735
  3826  07C7  082C               	movf	___fttol@exp1,w
  3827  07C8  3A80               	xorlw	128
  3828  07C9  3E8F               	addlw	143
  3829  07CA  1C03               	btfss	3,0
  3830  07CB  2FA8               	goto	l5713
  3831  07CC                     l5731:	
  3832  07CC  1003               	clrc
  3833  07CD  0CAB               	rrf	___fttol@lval+3,f
  3834  07CE  0CAA               	rrf	___fttol@lval+2,f
  3835  07CF  0CA9               	rrf	___fttol@lval+1,f
  3836  07D0  0CA8               	rrf	___fttol@lval,f
  3837  07D1  0FAC               	incfsz	___fttol@exp1,f
  3838  07D2  2FCC               	goto	l5731
  3839  07D3  2FE2               	goto	l5741
  3840  07D4                     l5735:	
  3841  07D4  3018               	movlw	24
  3842  07D5  022C               	subwf	___fttol@exp1,w
  3843  07D6  1803               	btfsc	3,0
  3844  07D7  2FA8               	goto	l5713
  3845  07D8                     l3130:	
  3846  07D8  08AC               	movf	___fttol@exp1,f
  3847  07D9  1903               	btfsc	3,2
  3848  07DA  2FE2               	goto	l5741
  3849  07DB  1003               	clrc
  3850  07DC  0DA8               	rlf	___fttol@lval,f
  3851  07DD  0DA9               	rlf	___fttol@lval+1,f
  3852  07DE  0DAA               	rlf	___fttol@lval+2,f
  3853  07DF  0DAB               	rlf	___fttol@lval+3,f
  3854  07E0  03AC               	decf	___fttol@exp1,f
  3855  07E1  2FD8               	goto	l3130
  3856  07E2                     l5741:	
  3857  07E2  0827               	movf	___fttol@sign1,w
  3858  07E3  1903               	btfsc	3,2
  3859  07E4  2FF0               	goto	l5745
  3860  07E5  09A8               	comf	___fttol@lval,f
  3861  07E6  09A9               	comf	___fttol@lval+1,f
  3862  07E7  09AA               	comf	___fttol@lval+2,f
  3863  07E8  09AB               	comf	___fttol@lval+3,f
  3864  07E9  0AA8               	incf	___fttol@lval,f
  3865  07EA  1903               	skipnz
  3866  07EB  0AA9               	incf	___fttol@lval+1,f
  3867  07EC  1903               	skipnz
  3868  07ED  0AAA               	incf	___fttol@lval+2,f
  3869  07EE  1903               	skipnz
  3870  07EF  0AAB               	incf	___fttol@lval+3,f
  3871  07F0                     l5745:	
  3872  07F0  082B               	movf	___fttol@lval+3,w
  3873  07F1  00A3               	movwf	?___fttol+3
  3874  07F2  082A               	movf	___fttol@lval+2,w
  3875  07F3  00A2               	movwf	?___fttol+2
  3876  07F4  0829               	movf	___fttol@lval+1,w
  3877  07F5  00A1               	movwf	?___fttol+1
  3878  07F6  0828               	movf	___fttol@lval,w
  3879  07F7  00A0               	movwf	?___fttol
  3880  07F8  0008               	return
  3881  07F9                     __end_of___fttol:	
  3882  07F9                     PL28:	
  3883  07F9  0820               	movf	___fttol@f1,w
  3884  07FA  00A4               	movwf	??___fttol
  3885  07FB  0821               	movf	___fttol@f1+1,w
  3886  07FC  00A5               	movwf	??___fttol+1
  3887  07FD  0822               	movf	___fttol@f1+2,w
  3888  07FE  00A6               	movwf	??___fttol+2
  3889  07FF  0008               	return
  3890                           
  3891                           	psect	text503
  3892  0B50                     __ptext503:	
  3893 ;; =============== function _lcd_puts ends ============
  3894                           
  3895                           
  3896 ;; *************** function _lcd_goto *****************
  3897 ;; Defined at:
  3898 ;;		line 66 in file "C:\Users\Varush\Documents\Microcontroladores\Lenguaje C\lcd.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;  pos             1    wreg     unsigned char 
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;  pos             1    5[COMMON] unsigned char 
  3903 ;; Return value:  Size  Location     Type
  3904 ;;		None               void
  3905 ;; Registers used:
  3906 ;;		wreg, status,2, status,0, pclath, cstack
  3907 ;; Tracked objects:
  3908 ;;		On entry : 40/0
  3909 ;;		On exit  : 60/0
  3910 ;;		Unchanged: FFF9F/0
  3911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3912 ;;      Params:         0       0       0       0       0
  3913 ;;      Locals:         1       0       0       0       0
  3914 ;;      Temps:          0       0       0       0       0
  3915 ;;      Totals:         1       0       0       0       0
  3916 ;;Total ram usage:        1 bytes
  3917 ;; Hardware stack levels used:    1
  3918 ;; Hardware stack levels required when called:    3
  3919 ;; This function calls:
  3920 ;;		_lcd_write
  3921 ;; This function is called by:
  3922 ;;		_main
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925  0B50                     _lcd_goto:	
  3926                           
  3927                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  3928                           ;lcd_goto@pos stored from wreg
  3929  0B50  00F5               	movwf	lcd_goto@pos
  3930                           
  3931                           ;lcd.c: 67: RD2 = 0;
  3932  0B51  1283               	bcf	3,5	;RP0=0, select bank0
  3933  0B52  1108               	bcf	8,2
  3934                           
  3935                           ;lcd.c: 68: lcd_write(0x80+pos);
  3936  0B53  0875               	movf	lcd_goto@pos,w
  3937  0B54  3E80               	addlw	128
  3938  0B55  2BBE               	ljmp	_lcd_write
  3939  0B56                     __end_of_lcd_goto:	
  3940  0B56                     __ptext502:	
  3941 ;; =============== function _sprintf ends ============
  3942                           
  3943                           
  3944 ;; *************** function _lcd_puts *****************
  3945 ;; Defined at:
  3946 ;;		line 44 in file "C:\Users\Varush\Documents\Microcontroladores\Lenguaje C\lcd.c"
  3947 ;; Parameters:    Size  Location     Type
  3948 ;;  s               2    5[COMMON] PTR const unsigned char 
  3949 ;;		 -> carac(5), STR_3(4), STR_2(4), STR_1(4), 
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;		None
  3952 ;; Return value:  Size  Location     Type
  3953 ;;		None               void
  3954 ;; Registers used:
  3955 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3956 ;; Tracked objects:
  3957 ;;		On entry : 60/0
  3958 ;;		On exit  : 60/0
  3959 ;;		Unchanged: FFE9F/0
  3960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3961 ;;      Params:         2       0       0       0       0
  3962 ;;      Locals:         0       0       0       0       0
  3963 ;;      Temps:          0       0       0       0       0
  3964 ;;      Totals:         2       0       0       0       0
  3965 ;;Total ram usage:        2 bytes
  3966 ;; Hardware stack levels used:    1
  3967 ;; Hardware stack levels required when called:    3
  3968 ;; This function calls:
  3969 ;;		_lcd_write
  3970 ;; This function is called by:
  3971 ;;		_main
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974  0B56                     _lcd_puts:	
  3975                           
  3976                           ;lcd.c: 45: RD2 = 1;
  3977                           
  3978                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3979  0B56  1508               	bsf	8,2
  3980  0B57                     l6151:	
  3981                           ;lcd.c: 46: while(*s)
  3982                           
  3983  0B57  0876               	movf	lcd_puts@s+1,w
  3984  0B58  00FF               	movwf	127
  3985  0B59  0875               	movf	lcd_puts@s,w
  3986  0B5A  0084               	movwf	4
  3987  0B5B  120A  158A  2000   	fcall	stringtab
      +       120A  158A         
  3988  0B60  3800               	iorlw	0
  3989  0B61  1903               	btfsc	3,2
  3990  0B62  0008               	return
  3991                           
  3992                           ;lcd.c: 47: lcd_write(*s++);
  3993  0B63  0876               	movf	lcd_puts@s+1,w
  3994  0B64  00FF               	movwf	127
  3995  0B65  0875               	movf	lcd_puts@s,w
  3996  0B66  0084               	movwf	4
  3997  0B67  120A  158A  2000   	fcall	stringtab
      +       120A  158A         
  3998  0B6C  23BE  120A  158A   	fcall	_lcd_write
  3999  0B6F  0AF5               	incf	lcd_puts@s,f
  4000  0B70  1903               	skipnz
  4001  0B71  0AF6               	incf	lcd_puts@s+1,f
  4002  0B72  2B57               	goto	l6151
  4003  0B73                     __end_of_lcd_puts:	
  4004  0B73                     __ptext499:	
  4005 ;; =============== function _main ends ============
  4006                           
  4007                           
  4008 ;; *************** function _lcd_init *****************
  4009 ;; Defined at:
  4010 ;;		line 74 in file "C:\Users\Varush\Documents\Microcontroladores\Lenguaje C\lcd.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;		None
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;  init_value      1    0        unsigned char 
  4015 ;; Return value:  Size  Location     Type
  4016 ;;		None               void
  4017 ;; Registers used:
  4018 ;;		wreg, status,2, status,0, pclath, cstack
  4019 ;; Tracked objects:
  4020 ;;		On entry : 17F/20
  4021 ;;		On exit  : 17F/0
  4022 ;;		Unchanged: FFE80/0
  4023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4024 ;;      Params:         0       0       0       0       0
  4025 ;;      Locals:         1       0       0       0       0
  4026 ;;      Temps:          0       0       0       0       0
  4027 ;;      Totals:         1       0       0       0       0
  4028 ;;Total ram usage:        1 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; Hardware stack levels required when called:    4
  4031 ;; This function calls:
  4032 ;;		_pause
  4033 ;;		_lcd_write
  4034 ;;		_lcd_clear
  4035 ;; This function is called by:
  4036 ;;		_main
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039  0B73                     _lcd_init:	
  4040                           
  4041                           ;lcd.c: 75: char init_value;
  4042                           ;lcd.c: 77: ANSEL = 0;
  4043                           
  4044                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4045  0B73  1703               	bsf	3,6	;RP1=1, select bank3
  4046  0B74  0188               	clrf	8	;volatile
  4047                           
  4048                           ;lcd.c: 80: TRISA=0;
  4049  0B75  1303               	bcf	3,6	;RP1=0, select bank1
  4050  0B76  0185               	clrf	5	;volatile
  4051                           
  4052                           ;lcd.c: 81: TRISC=0;
  4053  0B77  0187               	clrf	7	;volatile
  4054                           
  4055                           ;lcd.c: 82: RD2 = 0;
  4056  0B78  1283               	bcf	3,5	;RP0=0, select bank0
  4057  0B79  300F               	movlw	15
  4058  0B7A  1108               	bcf	8,2
  4059                           
  4060                           ;lcd.c: 83: RD1 = 0;
  4061  0B7B  1088               	bcf	8,1
  4062                           
  4063                           ;lcd.c: 84: RD4 = 0;
  4064  0B7C  1208               	bcf	8,4
  4065                           
  4066                           ;lcd.c: 86: pause (15);
  4067  0B7D  00F0               	movwf	?_pause
  4068  0B7E  01F1               	clrf	?_pause+1
  4069  0B7F  23AD  120A  158A   	fcall	_pause
  4070                           
  4071                           ;lcd.c: 87: PORTC = init_value;
  4072  0B82  3003               	movlw	3
  4073  0B83  1283               	bcf	3,5	;RP0=0, select bank0
  4074  0B84  1303               	bcf	3,6	;RP1=0, select bank0
  4075  0B85  0087               	movwf	7	;volatile
  4076  0B86  300A               	movlw	10
  4077                           
  4078                           ;lcd.c: 88: ((RD1 = 1),(RD1=0));
  4079  0B87  1488               	bsf	8,1
  4080  0B88  1088               	bcf	8,1
  4081                           
  4082                           ;lcd.c: 89: pause(10);
  4083  0B89  00F0               	movwf	?_pause
  4084  0B8A  01F1               	clrf	?_pause+1
  4085  0B8B  23AD  120A  158A   	fcall	_pause
  4086                           
  4087                           ;lcd.c: 90: ((RD1 = 1),(RD1=0));
  4088                           
  4089                           ;lcd.c: 91: pause(10);
  4090  0B8E  23E4  120A  158A   	fcall	PL24	;call to abstracted procedure
  4091  0B91  23AD  120A  158A   	fcall	_pause
  4092                           
  4093                           ;lcd.c: 92: ((RD1 = 1),(RD1=0));
  4094                           
  4095                           ;lcd.c: 93: pause(10);
  4096  0B94  23E4  120A  158A   	fcall	PL24	;call to abstracted procedure
  4097  0B97  23AD  120A  158A   	fcall	_pause
  4098                           
  4099                           ;lcd.c: 94: PORTC = 2;
  4100  0B9A  3002               	movlw	2
  4101  0B9B  1283               	bcf	3,5	;RP0=0, select bank0
  4102  0B9C  1303               	bcf	3,6	;RP1=0, select bank0
  4103  0B9D  0087               	movwf	7	;volatile
  4104  0B9E  3028               	movlw	40
  4105                           
  4106                           ;lcd.c: 95: ((RD1 = 1),(RD1=0));
  4107  0B9F  1488               	bsf	8,1
  4108  0BA0  1088               	bcf	8,1
  4109                           
  4110                           ;lcd.c: 97: lcd_write(0x28);
  4111  0BA1  23BE  120A  158A   	fcall	_lcd_write
  4112                           
  4113                           ;lcd.c: 99: lcd_write(0xF);
  4114  0BA4  300F               	movlw	15
  4115  0BA5  23BE  120A  158A   	fcall	_lcd_write
  4116                           
  4117                           ;lcd.c: 100: lcd_clear();
  4118  0BA8  23DB  120A  158A   	fcall	_lcd_clear
  4119                           
  4120                           ;lcd.c: 101: lcd_write(0x6);
  4121  0BAB  3006               	movlw	6
  4122  0BAC  2BBE               	ljmp	_lcd_write
  4123  0BAD                     __end_of_lcd_init:	
  4124  0BAD                     __ptext512:	
  4125 ;; =============== function ___ftadd ends ============
  4126                           
  4127                           
  4128 ;; *************** function _pause *****************
  4129 ;; Defined at:
  4130 ;;		line 75 in file "C:\Users\Varush\Documents\Microcontroladores\Lenguaje C\ADC_en_LCD.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;  usvalue         2    0[COMMON] unsigned short 
  4133 ;; Auto vars:     Size  Location     Type
  4134 ;;  x               2    2[COMMON] unsigned short 
  4135 ;; Return value:  Size  Location     Type
  4136 ;;		None               void
  4137 ;; Registers used:
  4138 ;;		wreg, status,2, status,0, pclath, cstack
  4139 ;; Tracked objects:
  4140 ;;		On entry : 0/0
  4141 ;;		On exit  : 0/0
  4142 ;;		Unchanged: FFF9F/0
  4143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4144 ;;      Params:         2       0       0       0       0
  4145 ;;      Locals:         2       0       0       0       0
  4146 ;;      Temps:          0       0       0       0       0
  4147 ;;      Totals:         4       0       0       0       0
  4148 ;;Total ram usage:        4 bytes
  4149 ;; Hardware stack levels used:    1
  4150 ;; Hardware stack levels required when called:    1
  4151 ;; This function calls:
  4152 ;;		_msecbase
  4153 ;; This function is called by:
  4154 ;;		_main
  4155 ;;		_lcd_write
  4156 ;;		_lcd_clear
  4157 ;;		_lcd_init
  4158 ;; This function uses a non-reentrant model
  4159 ;;
  4160  0BAD                     _pause:	
  4161  0BAD                     l5903:	
  4162                           ; Regs used in _pause: [wreg+status,2+status,0+pclath+cstack]
  4163                           
  4164                           
  4165                           ;ADC_en_LCD.c: 76: unsigned short x;
  4166                           ;ADC_en_LCD.c: 77: for (x=0; x<usvalue; x++)
  4167  0BAD  01F2               	clrf	pause@x
  4168  0BAE  01F3               	clrf	pause@x+1
  4169  0BAF                     l5909:	
  4170  0BAF  0871               	movf	pause@usvalue+1,w
  4171  0BB0  0273               	subwf	pause@x+1,w
  4172  0BB1  1D03               	skipz
  4173  0BB2  2BB5               	goto	u2205
  4174  0BB3  0870               	movf	pause@usvalue,w
  4175  0BB4  0272               	subwf	pause@x,w
  4176  0BB5                     u2205:	
  4177  0BB5  1803               	btfsc	3,0
  4178  0BB6  0008               	return
  4179                           
  4180                           ;ADC_en_LCD.c: 78: {
  4181                           ;ADC_en_LCD.c: 79: msecbase();
  4182  0BB7  23D0  120A  158A   	fcall	_msecbase
  4183  0BBA  0AF2               	incf	pause@x,f
  4184  0BBB  1903               	skipnz
  4185  0BBC  0AF3               	incf	pause@x+1,f
  4186  0BBD  2BAF               	goto	l5909
  4187  0BBE                     __end_of_pause:	
  4188  0BBE                     __ptext507:	
  4189 ;; =============== function _fround ends ============
  4190                           
  4191                           
  4192 ;; *************** function _lcd_write *****************
  4193 ;; Defined at:
  4194 ;;		line 19 in file "C:\Users\Varush\Documents\Microcontroladores\Lenguaje C\lcd.c"
  4195 ;; Parameters:    Size  Location     Type
  4196 ;;  c               1    wreg     unsigned char 
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;  c               1    4[COMMON] unsigned char 
  4199 ;; Return value:  Size  Location     Type
  4200 ;;		None               void
  4201 ;; Registers used:
  4202 ;;		wreg, status,2, status,0, pclath, cstack
  4203 ;; Tracked objects:
  4204 ;;		On entry : 0/0
  4205 ;;		On exit  : 60/0
  4206 ;;		Unchanged: FFF9F/0
  4207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4208 ;;      Params:         0       0       0       0       0
  4209 ;;      Locals:         1       0       0       0       0
  4210 ;;      Temps:          0       0       0       0       0
  4211 ;;      Totals:         1       0       0       0       0
  4212 ;;Total ram usage:        1 bytes
  4213 ;; Hardware stack levels used:    1
  4214 ;; Hardware stack levels required when called:    2
  4215 ;; This function calls:
  4216 ;;		_pause
  4217 ;; This function is called by:
  4218 ;;		_lcd_clear
  4219 ;;		_lcd_puts
  4220 ;;		_lcd_goto
  4221 ;;		_lcd_init
  4222 ;; This function uses a non-reentrant model
  4223 ;;
  4224  0BBE                     _lcd_write:	
  4225                           
  4226                           ; Regs used in _lcd_write: [wreg+status,2+status,0+pclath+cstack]
  4227                           ;lcd_write@c stored from wreg
  4228  0BBE  00F4               	movwf	lcd_write@c
  4229                           
  4230                           ;lcd.c: 20: pause (1);
  4231  0BBF  01F0               	clrf	?_pause
  4232  0BC0  0AF0               	incf	?_pause,f
  4233  0BC1  01F1               	clrf	?_pause+1
  4234  0BC2  23AD               	fcall	_pause
  4235                           
  4236                           ;lcd.c: 21: PORTC = ( ( c >> 4 ) & 0x0F );
  4237  0BC3  0E74               	swapf	lcd_write@c,w
  4238  0BC4  390F               	andlw	15
  4239  0BC5  1283               	bcf	3,5	;RP0=0, select bank0
  4240  0BC6  1303               	bcf	3,6	;RP1=0, select bank0
  4241  0BC7  0087               	movwf	7	;volatile
  4242                           
  4243                           ;lcd.c: 22: ((RD1 = 1),(RD1=0));
  4244  0BC8  1488               	bsf	8,1
  4245  0BC9  1088               	bcf	8,1
  4246                           
  4247                           ;lcd.c: 23: PORTC = ( c & 0x0F );
  4248  0BCA  0874               	movf	lcd_write@c,w
  4249  0BCB  390F               	andlw	15
  4250  0BCC  0087               	movwf	7	;volatile
  4251                           
  4252                           ;lcd.c: 24: ((RD1 = 1),(RD1=0));
  4253  0BCD  1488               	bsf	8,1
  4254  0BCE  1088               	bcf	8,1
  4255  0BCF  0008               	return
  4256  0BD0                     __end_of_lcd_write:	
  4257  0BD0                     __ptext528:	
  4258 ;; =============== function _isdigit ends ============
  4259                           
  4260                           
  4261 ;; *************** function _msecbase *****************
  4262 ;; Defined at:
  4263 ;;		line 83 in file "C:\Users\Varush\Documents\Microcontroladores\Lenguaje C\ADC_en_LCD.c"
  4264 ;; Parameters:    Size  Location     Type
  4265 ;;		None
  4266 ;; Auto vars:     Size  Location     Type
  4267 ;;		None
  4268 ;; Return value:  Size  Location     Type
  4269 ;;		None               void
  4270 ;; Registers used:
  4271 ;;		wreg
  4272 ;; Tracked objects:
  4273 ;;		On entry : 0/0
  4274 ;;		On exit  : 0/0
  4275 ;;		Unchanged: FFF9F/0
  4276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4277 ;;      Params:         0       0       0       0       0
  4278 ;;      Locals:         0       0       0       0       0
  4279 ;;      Temps:          0       0       0       0       0
  4280 ;;      Totals:         0       0       0       0       0
  4281 ;;Total ram usage:        0 bytes
  4282 ;; Hardware stack levels used:    1
  4283 ;; This function calls:
  4284 ;;		Nothing
  4285 ;; This function is called by:
  4286 ;;		_pause
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289  0BD0                     _msecbase:	
  4290                           
  4291                           ;ADC_en_LCD.c: 84: OPTION_REG = 0b00000001;
  4292                           
  4293                           ; Regs used in _msecbase: [wreg]
  4294  0BD0  3001               	movlw	1
  4295  0BD1  1683               	bsf	3,5	;RP0=1, select bank1
  4296  0BD2  1303               	bcf	3,6	;RP1=0, select bank1
  4297  0BD3  0081               	movwf	1	;volatile
  4298                           
  4299                           ;ADC_en_LCD.c: 85: TMR0 = 0xD;
  4300  0BD4  300D               	movlw	13
  4301  0BD5  1283               	bcf	3,5	;RP0=0, select bank0
  4302  0BD6  0081               	movwf	1	;volatile
  4303  0BD7                     l1064:	
  4304                           ;ADC_en_LCD.c: 86: while(!T0IF);
  4305                           
  4306  0BD7  1D0B               	btfss	11,2
  4307  0BD8  2BD7               	goto	l1064
  4308                           
  4309                           ;ADC_en_LCD.c: 87: T0IF = 0;
  4310  0BD9  110B               	bcf	11,2
  4311  0BDA  0008               	return
  4312  0BDB                     __end_of_msecbase:	
  4313  0BDB                     __ptext500:	
  4314 ;; =============== function _lcd_init ends ============
  4315                           
  4316                           
  4317 ;; *************** function _lcd_clear *****************
  4318 ;; Defined at:
  4319 ;;		line 34 in file "C:\Users\Varush\Documents\Microcontroladores\Lenguaje C\lcd.c"
  4320 ;; Parameters:    Size  Location     Type
  4321 ;;		None
  4322 ;; Auto vars:     Size  Location     Type
  4323 ;;		None
  4324 ;; Return value:  Size  Location     Type
  4325 ;;		None               void
  4326 ;; Registers used:
  4327 ;;		wreg, status,2, status,0, pclath, cstack
  4328 ;; Tracked objects:
  4329 ;;		On entry : 17F/0
  4330 ;;		On exit  : 11F/0
  4331 ;;		Unchanged: FFE80/0
  4332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4333 ;;      Params:         0       0       0       0       0
  4334 ;;      Locals:         0       0       0       0       0
  4335 ;;      Temps:          0       0       0       0       0
  4336 ;;      Totals:         0       0       0       0       0
  4337 ;;Total ram usage:        0 bytes
  4338 ;; Hardware stack levels used:    1
  4339 ;; Hardware stack levels required when called:    3
  4340 ;; This function calls:
  4341 ;;		_lcd_write
  4342 ;;		_pause
  4343 ;; This function is called by:
  4344 ;;		_lcd_init
  4345 ;; This function uses a non-reentrant model
  4346 ;;
  4347  0BDB                     _lcd_clear:	
  4348  0BDB  3001               	movlw	1
  4349                           
  4350                           ;lcd.c: 35: RD2 = 0;
  4351                           
  4352                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  4353  0BDC  1108               	bcf	8,2
  4354                           
  4355                           ;lcd.c: 36: lcd_write(0x1);
  4356  0BDD  23BE  120A  158A   	fcall	_lcd_write
  4357                           
  4358                           ;lcd.c: 37: pause (2);
  4359  0BE0  3002               	movlw	2
  4360  0BE1  00F0               	movwf	?_pause
  4361  0BE2  01F1               	clrf	?_pause+1
  4362  0BE3  2BAD               	ljmp	l5903
  4363  0BE4                     __end_of_lcd_clear:	
  4364  0BE4                     PL24:	
  4365  0BE4  1283               	bcf	3,5	;RP0=0, select bank0
  4366  0BE5  1303               	bcf	3,6	;RP1=0, select bank0
  4367  0BE6  300A               	movlw	10
  4368  0BE7  1488               	bsf	8,1
  4369  0BE8  1088               	bcf	8,1
  4370  0BE9  00F0               	movwf	?_pause
  4371  0BEA  01F1               	clrf	?_pause+1
  4372  0BEB  0008               	return
  4373                           
  4374                           	psect	text504
  4375  0CAE                     __ptext504:	
  4376 ;; =============== function _lcd_goto ends ============
  4377                           
  4378                           
  4379 ;; *************** function ___ftsub *****************
  4380 ;; Defined at:
  4381 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftsub.c"
  4382 ;; Parameters:    Size  Location     Type
  4383 ;;  f2              3   40[BANK0 ] float 
  4384 ;;  f1              3   43[BANK0 ] float 
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;		None
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  3   40[BANK0 ] float 
  4389 ;; Registers used:
  4390 ;;		wreg, status,2, status,0, pclath, cstack
  4391 ;; Tracked objects:
  4392 ;;		On entry : 60/0
  4393 ;;		On exit  : 60/0
  4394 ;;		Unchanged: FFF9F/0
  4395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4396 ;;      Params:         0       6       0       0       0
  4397 ;;      Locals:         0       0       0       0       0
  4398 ;;      Temps:          0       0       0       0       0
  4399 ;;      Totals:         0       6       0       0       0
  4400 ;;Total ram usage:        6 bytes
  4401 ;; Hardware stack levels used:    1
  4402 ;; Hardware stack levels required when called:    2
  4403 ;; This function calls:
  4404 ;;		___ftadd
  4405 ;; This function is called by:
  4406 ;;		_sprintf
  4407 ;; This function uses a non-reentrant model
  4408 ;;
  4409  0CAE                     ___ftsub:	
  4410                           
  4411                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  4412  0CAE  3080               	movlw	128
  4413  0CAF  06CA               	xorwf	___ftsub@f2+2,f
  4414  0CB0  084B               	movf	___ftsub@f1,w
  4415  0CB1  00BC               	movwf	?___ftadd
  4416  0CB2  084C               	movf	___ftsub@f1+1,w
  4417  0CB3  00BD               	movwf	?___ftadd+1
  4418  0CB4  084D               	movf	___ftsub@f1+2,w
  4419  0CB5  00BE               	movwf	?___ftadd+2
  4420  0CB6  0848               	movf	___ftsub@f2,w
  4421  0CB7  00BF               	movwf	?___ftadd+3
  4422  0CB8  0849               	movf	___ftsub@f2+1,w
  4423  0CB9  00C0               	movwf	?___ftadd+4
  4424  0CBA  084A               	movf	___ftsub@f2+2,w
  4425  0CBB  00C1               	movwf	?___ftadd+5
  4426  0CBC  24C4               	fcall	___ftadd
  4427  0CBD  083C               	movf	?___ftadd,w
  4428  0CBE  00C8               	movwf	?___ftsub
  4429  0CBF  083D               	movf	?___ftadd+1,w
  4430  0CC0  00C9               	movwf	?___ftsub+1
  4431  0CC1  083E               	movf	?___ftadd+2,w
  4432  0CC2  00CA               	movwf	?___ftsub+2
  4433  0CC3  0008               	return
  4434  0CC4                     __end_of___ftsub:	
  4435  0CC4                     __ptext511:	
  4436 ;; =============== function ___ftmul ends ============
  4437                           
  4438                           
  4439 ;; *************** function ___ftadd *****************
  4440 ;; Defined at:
  4441 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftadd.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;  f1              3   28[BANK0 ] float 
  4444 ;;  f2              3   31[BANK0 ] float 
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;  exp1            1   39[BANK0 ] unsigned char 
  4447 ;;  exp2            1   38[BANK0 ] unsigned char 
  4448 ;;  sign            1   37[BANK0 ] unsigned char 
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  3   28[BANK0 ] float 
  4451 ;; Registers used:
  4452 ;;		wreg, status,2, status,0, pclath, cstack
  4453 ;; Tracked objects:
  4454 ;;		On entry : 60/0
  4455 ;;		On exit  : 60/0
  4456 ;;		Unchanged: FFF9F/0
  4457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4458 ;;      Params:         0       6       0       0       0
  4459 ;;      Locals:         0       3       0       0       0
  4460 ;;      Temps:          0       3       0       0       0
  4461 ;;      Totals:         0      12       0       0       0
  4462 ;;Total ram usage:       12 bytes
  4463 ;; Hardware stack levels used:    1
  4464 ;; Hardware stack levels required when called:    1
  4465 ;; This function calls:
  4466 ;;		___ftpack
  4467 ;; This function is called by:
  4468 ;;		_sprintf
  4469 ;;		___ftsub
  4470 ;; This function uses a non-reentrant model
  4471 ;;
  4472  0CC4                     ___ftadd:	
  4473                           
  4474                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4475  0CC4  083C               	movf	___ftadd@f1,w
  4476  0CC5  00C2               	movwf	??___ftadd
  4477  0CC6  083D               	movf	___ftadd@f1+1,w
  4478  0CC7  00C3               	movwf	??___ftadd+1
  4479  0CC8  083E               	movf	___ftadd@f1+2,w
  4480  0CC9  00C4               	movwf	??___ftadd+2
  4481  0CCA  1003               	clrc
  4482  0CCB  0D43               	rlf	??___ftadd+1,w
  4483  0CCC  0D44               	rlf	??___ftadd+2,w
  4484  0CCD  00C7               	movwf	___ftadd@exp1
  4485  0CCE  083F               	movf	___ftadd@f2,w
  4486  0CCF  00C2               	movwf	??___ftadd
  4487  0CD0  0840               	movf	___ftadd@f2+1,w
  4488  0CD1  00C3               	movwf	??___ftadd+1
  4489  0CD2  0841               	movf	___ftadd@f2+2,w
  4490  0CD3  00C4               	movwf	??___ftadd+2
  4491  0CD4  1003               	clrc
  4492  0CD5  0D43               	rlf	??___ftadd+1,w
  4493  0CD6  0D44               	rlf	??___ftadd+2,w
  4494  0CD7  00C6               	movwf	___ftadd@exp2
  4495  0CD8  0847               	movf	___ftadd@exp1,w
  4496  0CD9  1903               	btfsc	3,2
  4497  0CDA  2CE7               	goto	l5919
  4498  0CDB  0846               	movf	___ftadd@exp2,w
  4499  0CDC  0247               	subwf	___ftadd@exp1,w
  4500  0CDD  0846               	movf	___ftadd@exp2,w
  4501  0CDE  1803               	skipnc
  4502  0CDF  2CEF               	goto	L6
  4503  0CE0  00C2               	movwf	??___ftadd
  4504  0CE1  0847               	movf	___ftadd@exp1,w
  4505  0CE2  02C2               	subwf	??___ftadd,f
  4506  0CE3  3019               	movlw	25
  4507  0CE4  0242               	subwf	??___ftadd,w
  4508  0CE5  1C03               	skipc
  4509  0CE6  2CEE               	goto	l5923
  4510  0CE7                     l5919:	
  4511  0CE7  083F               	movf	___ftadd@f2,w
  4512  0CE8  00BC               	movwf	?___ftadd
  4513  0CE9  0840               	movf	___ftadd@f2+1,w
  4514  0CEA  00BD               	movwf	?___ftadd+1
  4515  0CEB  0841               	movf	___ftadd@f2+2,w
  4516  0CEC  00BE               	movwf	?___ftadd+2
  4517  0CED  0008               	return
  4518  0CEE                     l5923:	
  4519  0CEE  0846               	movf	___ftadd@exp2,w
  4520  0CEF                     L6:	
  4521  0CEF  1903               	btfsc	3,2
  4522  0CF0  0008               	return
  4523  0CF1  0847               	movf	___ftadd@exp1,w
  4524  0CF2  0246               	subwf	___ftadd@exp2,w
  4525  0CF3  1803               	skipnc
  4526  0CF4  2CFD               	goto	l5929
  4527  0CF5  0847               	movf	___ftadd@exp1,w
  4528  0CF6  00C2               	movwf	??___ftadd
  4529  0CF7  0846               	movf	___ftadd@exp2,w
  4530  0CF8  02C2               	subwf	??___ftadd,f
  4531  0CF9  3019               	movlw	25
  4532  0CFA  0242               	subwf	??___ftadd,w
  4533  0CFB  1803               	btfsc	3,0
  4534  0CFC  0008               	return
  4535  0CFD                     l5929:	
  4536  0CFD  3006               	movlw	6
  4537  0CFE  00C5               	movwf	___ftadd@sign
  4538  0CFF  1BBE               	btfsc	___ftadd@f1+2,7
  4539  0D00  17C5               	bsf	___ftadd@sign,7
  4540  0D01  1BC1               	btfsc	___ftadd@f2+2,7
  4541  0D02  1745               	bsf	___ftadd@sign,6
  4542  0D03  17BD               	bsf	___ftadd@f1+1,7
  4543  0D04  01BE               	clrf	___ftadd@f1+2
  4544  0D05  17C0               	bsf	___ftadd@f2+1,7
  4545  0D06  01C1               	clrf	___ftadd@f2+2
  4546  0D07  0846               	movf	___ftadd@exp2,w
  4547  0D08  0247               	subwf	___ftadd@exp1,w
  4548  0D09  1803               	skipnc
  4549  0D0A  2D24               	goto	l5951
  4550  0D0B                     l5941:	
  4551  0D0B  1003               	clrc
  4552  0D0C  0DBF               	rlf	___ftadd@f2,f
  4553  0D0D  0DC0               	rlf	___ftadd@f2+1,f
  4554  0D0E  0DC1               	rlf	___ftadd@f2+2,f
  4555  0D0F  03C6               	decf	___ftadd@exp2,f
  4556  0D10  0846               	movf	___ftadd@exp2,w
  4557  0D11  0647               	xorwf	___ftadd@exp1,w
  4558  0D12  1903               	skipnz
  4559  0D13  2D1F               	goto	l5949
  4560  0D14  03C5               	decf	___ftadd@sign,f
  4561  0D15  0845               	movf	___ftadd@sign,w
  4562  0D16  3907               	andlw	7
  4563  0D17  1903               	btfsc	3,2
  4564  0D18  2D1F               	goto	l5949
  4565  0D19  2D0B               	goto	l5941
  4566  0D1A                     l5947:	
  4567  0D1A  1003               	clrc
  4568  0D1B  0CBE               	rrf	___ftadd@f1+2,f
  4569  0D1C  0CBD               	rrf	___ftadd@f1+1,f
  4570  0D1D  0CBC               	rrf	___ftadd@f1,f
  4571  0D1E  0AC7               	incf	___ftadd@exp1,f
  4572  0D1F                     l5949:	
  4573  0D1F  0847               	movf	___ftadd@exp1,w
  4574  0D20  0646               	xorwf	___ftadd@exp2,w
  4575  0D21  1903               	btfsc	3,2
  4576  0D22  2D40               	goto	l3074
  4577  0D23  2D1A               	goto	l5947
  4578  0D24                     l5951:	
  4579  0D24  0847               	movf	___ftadd@exp1,w
  4580  0D25  0246               	subwf	___ftadd@exp2,w
  4581  0D26  1803               	skipnc
  4582  0D27  2D40               	goto	l3074
  4583  0D28                     l5953:	
  4584  0D28  1003               	clrc
  4585  0D29  0DBC               	rlf	___ftadd@f1,f
  4586  0D2A  0DBD               	rlf	___ftadd@f1+1,f
  4587  0D2B  0DBE               	rlf	___ftadd@f1+2,f
  4588  0D2C  03C7               	decf	___ftadd@exp1,f
  4589  0D2D  0846               	movf	___ftadd@exp2,w
  4590  0D2E  0647               	xorwf	___ftadd@exp1,w
  4591  0D2F  1903               	skipnz
  4592  0D30  2D3C               	goto	l5961
  4593  0D31  03C5               	decf	___ftadd@sign,f
  4594  0D32  0845               	movf	___ftadd@sign,w
  4595  0D33  3907               	andlw	7
  4596  0D34  1903               	btfsc	3,2
  4597  0D35  2D3C               	goto	l5961
  4598  0D36  2D28               	goto	l5953
  4599  0D37                     l5959:	
  4600  0D37  1003               	clrc
  4601  0D38  0CC1               	rrf	___ftadd@f2+2,f
  4602  0D39  0CC0               	rrf	___ftadd@f2+1,f
  4603  0D3A  0CBF               	rrf	___ftadd@f2,f
  4604  0D3B  0AC6               	incf	___ftadd@exp2,f
  4605  0D3C                     l5961:	
  4606  0D3C  0847               	movf	___ftadd@exp1,w
  4607  0D3D  0646               	xorwf	___ftadd@exp2,w
  4608  0D3E  1D03               	skipz
  4609  0D3F  2D37               	goto	l5959
  4610  0D40                     l3074:	
  4611  0D40  1FC5               	btfss	___ftadd@sign,7
  4612  0D41  2D4B               	goto	l5967
  4613  0D42  30FF               	movlw	255
  4614  0D43  06BC               	xorwf	___ftadd@f1,f
  4615  0D44  06BD               	xorwf	___ftadd@f1+1,f
  4616  0D45  06BE               	xorwf	___ftadd@f1+2,f
  4617  0D46  0ABC               	incf	___ftadd@f1,f
  4618  0D47  1903               	skipnz
  4619  0D48  0ABD               	incf	___ftadd@f1+1,f
  4620  0D49  1903               	skipnz
  4621  0D4A  0ABE               	incf	___ftadd@f1+2,f
  4622  0D4B                     l5967:	
  4623  0D4B  1F45               	btfss	___ftadd@sign,6
  4624  0D4C  2D56               	goto	l5973
  4625  0D4D  30FF               	movlw	255
  4626  0D4E  06BF               	xorwf	___ftadd@f2,f
  4627  0D4F  06C0               	xorwf	___ftadd@f2+1,f
  4628  0D50  06C1               	xorwf	___ftadd@f2+2,f
  4629  0D51  0ABF               	incf	___ftadd@f2,f
  4630  0D52  1903               	skipnz
  4631  0D53  0AC0               	incf	___ftadd@f2+1,f
  4632  0D54  1903               	skipnz
  4633  0D55  0AC1               	incf	___ftadd@f2+2,f
  4634  0D56                     l5973:	
  4635  0D56  01C5               	clrf	___ftadd@sign
  4636  0D57  083C               	movf	___ftadd@f1,w
  4637  0D58  07BF               	addwf	___ftadd@f2,f
  4638  0D59  083D               	movf	___ftadd@f1+1,w
  4639  0D5A  1103               	clrz
  4640  0D5B  1803               	skipnc
  4641  0D5C  0A3D               	incf	___ftadd@f1+1,w
  4642  0D5D  1D03               	btfss	3,2
  4643  0D5E  07C0               	addwf	___ftadd@f2+1,f
  4644  0D5F  083E               	movf	___ftadd@f1+2,w
  4645  0D60  1103               	clrz
  4646  0D61  1803               	skipnc
  4647  0D62  0A3E               	incf	___ftadd@f1+2,w
  4648  0D63  1D03               	btfss	3,2
  4649  0D64  07C1               	addwf	___ftadd@f2+2,f
  4650  0D65  1FC1               	btfss	___ftadd@f2+2,7
  4651  0D66  2D72               	goto	l5985
  4652  0D67  30FF               	movlw	255
  4653  0D68  06BF               	xorwf	___ftadd@f2,f
  4654  0D69  06C0               	xorwf	___ftadd@f2+1,f
  4655  0D6A  06C1               	xorwf	___ftadd@f2+2,f
  4656  0D6B  0ABF               	incf	___ftadd@f2,f
  4657  0D6C  1903               	skipnz
  4658  0D6D  0AC0               	incf	___ftadd@f2+1,f
  4659  0D6E  1903               	skipnz
  4660  0D6F  0AC1               	incf	___ftadd@f2+2,f
  4661  0D70  01C5               	clrf	___ftadd@sign
  4662  0D71  0AC5               	incf	___ftadd@sign,f
  4663  0D72                     l5985:	
  4664  0D72  083F               	movf	___ftadd@f2,w
  4665  0D73  00F0               	movwf	?___ftpack
  4666  0D74  0840               	movf	___ftadd@f2+1,w
  4667  0D75  00F1               	movwf	?___ftpack+1
  4668  0D76  0841               	movf	___ftadd@f2+2,w
  4669  0D77  00F2               	movwf	?___ftpack+2
  4670  0D78  0847               	movf	___ftadd@exp1,w
  4671  0D79  00F3               	movwf	?___ftpack+3
  4672  0D7A  0845               	movf	___ftadd@sign,w
  4673  0D7B  00F4               	movwf	?___ftpack+4
  4674  0D7C  120A  118A  264C   	fcall	___ftpack
  4675  0D7F  0870               	movf	?___ftpack,w
  4676  0D80  00BC               	movwf	?___ftadd
  4677  0D81  0871               	movf	?___ftpack+1,w
  4678  0D82  00BD               	movwf	?___ftadd+1
  4679  0D83  0872               	movf	?___ftpack+2,w
  4680  0D84  00BE               	movwf	?___ftadd+2
  4681  0D85  0008               	return
  4682  0D86                     __end_of___ftadd:	
  4683                           
  4684                           	psect	text506
  4685  0EAE                     __ptext506:	
  4686 ;; =============== function _scale ends ============
  4687                           
  4688                           
  4689 ;; *************** function _fround *****************
  4690 ;; Defined at:
  4691 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;  prec            1    wreg     unsigned char 
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;  prec            1   49[BANK0 ] unsigned char 
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  3   40[BANK0 ] unsigned char 
  4698 ;; Registers used:
  4699 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4700 ;; Tracked objects:
  4701 ;;		On entry : 60/20
  4702 ;;		On exit  : 60/0
  4703 ;;		Unchanged: FFF9F/0
  4704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4705 ;;      Params:         0       3       0       0       0
  4706 ;;      Locals:         0       7       0       0       0
  4707 ;;      Temps:          0       0       0       0       0
  4708 ;;      Totals:         0      10       0       0       0
  4709 ;;Total ram usage:       10 bytes
  4710 ;; Hardware stack levels used:    1
  4711 ;; Hardware stack levels required when called:    2
  4712 ;; This function calls:
  4713 ;;		___lbmod
  4714 ;;		___bmul
  4715 ;;		___lbdiv
  4716 ;;		___ftmul
  4717 ;; This function is called by:
  4718 ;;		_sprintf
  4719 ;; This function uses a non-reentrant model
  4720 ;;
  4721  0EAE                     _fround:	
  4722                           
  4723                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4724                           ;fround@prec stored from wreg
  4725  0EAE  1283               	bcf	3,5	;RP0=0, select bank0
  4726  0EAF  00D1               	movwf	fround@prec
  4727  0EB0  306E               	movlw	110
  4728  0EB1  0251               	subwf	fround@prec,w
  4729  0EB2  1C03               	skipc
  4730  0EB3  2F39               	goto	l6083
  4731  0EB4  3003               	movlw	3
  4732  0EB5  00F9               	movwf	?___bmul
  4733  0EB6  300A               	movlw	10
  4734  0EB7  00F5               	movwf	?___lbdiv
  4735  0EB8  3064               	movlw	100
  4736  0EB9  00F0               	movwf	?___lbmod
  4737  0EBA  0851               	movf	fround@prec,w
  4738  0EBB  27CE  120A  158A   	fcall	___lbmod
  4739  0EBE  27B3               	fcall	___lbdiv
  4740  0EBF  120A  118A  263E   	fcall	___bmul
      +       120A  158A         
  4741  0EC4  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4742  0EC5  0084               	movwf	4
  4743  0EC6  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4744  0ECB  00AD               	movwf	?___ftmul
  4745  0ECC  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4746  0ED1  00AE               	movwf	?___ftmul+1
  4747  0ED2  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4748  0ED7  00AF               	movwf	?___ftmul+2
  4749  0ED8  3003               	movlw	3
  4750  0ED9  00F9               	movwf	?___bmul
  4751  0EDA  3064               	movlw	100
  4752  0EDB  00F5               	movwf	?___lbdiv
  4753  0EDC  0851               	movf	fround@prec,w
  4754  0EDD  27B3               	fcall	___lbdiv
  4755  0EDE  120A  118A  263E   	fcall	___bmul
      +       120A  158A         
  4756  0EE3  3E37               	addlw	low ((__npowers_-__stringbase+54))
  4757  0EE4  0084               	movwf	4
  4758  0EE5  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4759  0EEA  00B0               	movwf	?___ftmul+3
  4760  0EEB  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4761  0EF0  00B1               	movwf	?___ftmul+4
  4762  0EF1  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4763  0EF6  00B2               	movwf	?___ftmul+5
  4764  0EF7  120A  118A  25CF   	fcall	___ftmul
      +       120A  158A         
  4765  0EFC  27F9  120A  158A   	fcall	PL27	;call to abstracted procedure
  4766  0EFF  3003               	movlw	3
  4767  0F00  00F9               	movwf	?___bmul
  4768  0F01  300A               	movlw	10
  4769  0F02  00F0               	movwf	?___lbmod
  4770  0F03  0851               	movf	fround@prec,w
  4771  0F04  27CE               	fcall	___lbmod
  4772  0F05  120A  118A  263E   	fcall	___bmul
      +       120A  158A         
  4773  0F0A  3E01               	addlw	low (__npowers_-__stringbase)
  4774  0F0B  0084               	movwf	4
  4775  0F0C  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4776  0F11  00AD               	movwf	?___ftmul
  4777  0F12  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4778  0F17  00AE               	movwf	?___ftmul+1
  4779  0F18  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4780  0F1D  27F1               	fcall	PL23	;call to abstracted procedure
  4781  0F1E  120A  118A  25CF   	fcall	___ftmul
      +       120A  158A         
  4782  0F23  082D               	movf	?___ftmul,w
  4783  0F24  00CB               	movwf	_fround$3245
  4784  0F25  082E               	movf	?___ftmul+1,w
  4785  0F26  00CC               	movwf	_fround$3245+1
  4786  0F27  082F               	movf	?___ftmul+2,w
  4787  0F28  00CD               	movwf	_fround$3245+2
  4788  0F29  303F               	movlw	63
  4789  0F2A  01AD               	clrf	?___ftmul
  4790  0F2B  01AE               	clrf	?___ftmul+1
  4791  0F2C  00AF               	movwf	?___ftmul+2
  4792  0F2D  084B               	movf	_fround$3245,w
  4793  0F2E  00B0               	movwf	?___ftmul+3
  4794  0F2F  084C               	movf	_fround$3245+1,w
  4795  0F30  00B1               	movwf	?___ftmul+4
  4796  0F31  084D               	movf	_fround$3245+2,w
  4797  0F32  00B2               	movwf	?___ftmul+5
  4798  0F33  120A  118A  25CF   	fcall	___ftmul
      +       120A  158A         
  4799  0F38  2FEA               	ljmp	PL15	;call to abstracted procedure
  4800  0F39                     l6083:	
  4801  0F39  300B               	movlw	11
  4802  0F3A  0251               	subwf	fround@prec,w
  4803  0F3B  1C03               	skipc
  4804  0F3C  2F8D               	goto	l6091
  4805  0F3D  3003               	movlw	3
  4806  0F3E  00F9               	movwf	?___bmul
  4807  0F3F  300A               	movlw	10
  4808  0F40  00F0               	movwf	?___lbmod
  4809  0F41  0851               	movf	fround@prec,w
  4810  0F42  27CE               	fcall	___lbmod
  4811  0F43  120A  118A  263E   	fcall	___bmul
      +       120A  158A         
  4812  0F48  3E01               	addlw	low (__npowers_-__stringbase)
  4813  0F49  0084               	movwf	4
  4814  0F4A  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4815  0F4F  00AD               	movwf	?___ftmul
  4816  0F50  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4817  0F55  00AE               	movwf	?___ftmul+1
  4818  0F56  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4819  0F5B  00AF               	movwf	?___ftmul+2
  4820  0F5C  3003               	movlw	3
  4821  0F5D  00F9               	movwf	?___bmul
  4822  0F5E  300A               	movlw	10
  4823  0F5F  00F5               	movwf	?___lbdiv
  4824  0F60  0851               	movf	fround@prec,w
  4825  0F61  27B3               	fcall	___lbdiv
  4826  0F62  120A  118A  263E   	fcall	___bmul
      +       120A  158A         
  4827  0F67  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4828  0F68  0084               	movwf	4
  4829  0F69  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4830  0F6E  00B0               	movwf	?___ftmul+3
  4831  0F6F  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4832  0F74  00B1               	movwf	?___ftmul+4
  4833  0F75  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4834  0F7A  00B2               	movwf	?___ftmul+5
  4835  0F7B  120A  118A  25CF   	fcall	___ftmul
      +       120A  158A         
  4836  0F80  27F9  120A  158A   	fcall	PL27	;call to abstracted procedure
  4837  0F83  303F               	movlw	63
  4838  0F84  01AD               	clrf	?___ftmul
  4839  0F85  01AE               	clrf	?___ftmul+1
  4840  0F86  27F1               	fcall	PL23	;call to abstracted procedure
  4841  0F87  120A  118A  25CF   	fcall	___ftmul
      +       120A  158A         
  4842  0F8C  2FEA               	ljmp	PL15	;call to abstracted procedure
  4843  0F8D                     l6091:	
  4844  0F8D  303F               	movlw	63
  4845  0F8E  01AD               	clrf	?___ftmul
  4846  0F8F  01AE               	clrf	?___ftmul+1
  4847  0F90  00AF               	movwf	?___ftmul+2
  4848  0F91  3003               	movlw	3
  4849  0F92  00F9               	movwf	?___bmul
  4850  0F93  0851               	movf	fround@prec,w
  4851  0F94  120A  118A  263E   	fcall	___bmul
      +       120A  158A         
  4852  0F99  3E01               	addlw	low (__npowers_-__stringbase)
  4853  0F9A  0084               	movwf	4
  4854  0F9B  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4855  0FA0  00B0               	movwf	?___ftmul+3
  4856  0FA1  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4857  0FA6  00B1               	movwf	?___ftmul+4
  4858  0FA7  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  4859  0FAC  00B2               	movwf	?___ftmul+5
  4860  0FAD  120A  118A  25CF   	fcall	___ftmul
      +       120A  158A         
  4861  0FB2  2FEA               	ljmp	PL15	;call to abstracted procedure
  4862  0FB3                     __end_of_fround:	
  4863  0FB3                     __ptext522:	
  4864 ;; =============== function ___lbmod ends ============
  4865                           
  4866                           
  4867 ;; *************** function ___lbdiv *****************
  4868 ;; Defined at:
  4869 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lbdiv.c"
  4870 ;; Parameters:    Size  Location     Type
  4871 ;;  dividend        1    wreg     unsigned char 
  4872 ;;  divisor         1    5[COMMON] unsigned char 
  4873 ;; Auto vars:     Size  Location     Type
  4874 ;;  dividend        1    6[COMMON] unsigned char 
  4875 ;;  quotient        1    8[COMMON] unsigned char 
  4876 ;;  counter         1    7[COMMON] unsigned char 
  4877 ;; Return value:  Size  Location     Type
  4878 ;;                  1    wreg      unsigned char 
  4879 ;; Registers used:
  4880 ;;		wreg, status,2, status,0
  4881 ;; Tracked objects:
  4882 ;;		On entry : 60/0
  4883 ;;		On exit  : 60/0
  4884 ;;		Unchanged: FFF9F/0
  4885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4886 ;;      Params:         1       0       0       0       0
  4887 ;;      Locals:         3       0       0       0       0
  4888 ;;      Temps:          0       0       0       0       0
  4889 ;;      Totals:         4       0       0       0       0
  4890 ;;Total ram usage:        4 bytes
  4891 ;; Hardware stack levels used:    1
  4892 ;; This function calls:
  4893 ;;		Nothing
  4894 ;; This function is called by:
  4895 ;;		_fround
  4896 ;; This function uses a non-reentrant model
  4897 ;;
  4898  0FB3                     ___lbdiv:	
  4899                           
  4900                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  4901                           ;___lbdiv@dividend stored from wreg
  4902  0FB3  00F6               	movwf	___lbdiv@dividend
  4903  0FB4  01F8               	clrf	___lbdiv@quotient
  4904  0FB5  0875               	movf	___lbdiv@divisor,w
  4905  0FB6  1903               	btfsc	3,2
  4906  0FB7  2FCC               	goto	l5661
  4907  0FB8  01F7               	clrf	___lbdiv@counter
  4908  0FB9                     l5647:	
  4909  0FB9  0AF7               	incf	___lbdiv@counter,f
  4910  0FBA  1BF5               	btfsc	___lbdiv@divisor,7
  4911  0FBB  2FBF               	goto	l3043
  4912  0FBC  1003               	clrc
  4913  0FBD  0DF5               	rlf	___lbdiv@divisor,f
  4914  0FBE  2FB9               	goto	l5647
  4915  0FBF                     l3043:	
  4916  0FBF  1003               	clrc
  4917  0FC0  0DF8               	rlf	___lbdiv@quotient,f
  4918  0FC1  0875               	movf	___lbdiv@divisor,w
  4919  0FC2  0276               	subwf	___lbdiv@dividend,w
  4920  0FC3  1C03               	skipc
  4921  0FC4  2FC9               	goto	L17
  4922  0FC5  0875               	movf	___lbdiv@divisor,w
  4923  0FC6  02F6               	subwf	___lbdiv@dividend,f
  4924  0FC7  1478               	bsf	___lbdiv@quotient,0
  4925  0FC8  1003               	clrc
  4926  0FC9                     L17:	
  4927  0FC9  0CF5               	rrf	___lbdiv@divisor,f
  4928  0FCA  0BF7               	decfsz	___lbdiv@counter,f
  4929  0FCB  2FBF               	goto	l3043
  4930  0FCC                     l5661:	
  4931  0FCC  0878               	movf	___lbdiv@quotient,w
  4932  0FCD  0008               	return
  4933  0FCE                     __end_of___lbdiv:	
  4934  0FCE                     __ptext521:	
  4935 ;; =============== function ___ftpack ends ============
  4936                           
  4937                           
  4938 ;; *************** function ___lbmod *****************
  4939 ;; Defined at:
  4940 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lbmod.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;  dividend        1    wreg     unsigned char 
  4943 ;;  divisor         1    0[COMMON] unsigned char 
  4944 ;; Auto vars:     Size  Location     Type
  4945 ;;  dividend        1    2[COMMON] unsigned char 
  4946 ;;  rem             1    4[COMMON] unsigned char 
  4947 ;;  counter         1    3[COMMON] unsigned char 
  4948 ;; Return value:  Size  Location     Type
  4949 ;;                  1    wreg      unsigned char 
  4950 ;; Registers used:
  4951 ;;		wreg, status,2, status,0
  4952 ;; Tracked objects:
  4953 ;;		On entry : 60/0
  4954 ;;		On exit  : 60/0
  4955 ;;		Unchanged: FFF9F/0
  4956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4957 ;;      Params:         1       0       0       0       0
  4958 ;;      Locals:         3       0       0       0       0
  4959 ;;      Temps:          1       0       0       0       0
  4960 ;;      Totals:         5       0       0       0       0
  4961 ;;Total ram usage:        5 bytes
  4962 ;; Hardware stack levels used:    1
  4963 ;; This function calls:
  4964 ;;		Nothing
  4965 ;; This function is called by:
  4966 ;;		_fround
  4967 ;; This function uses a non-reentrant model
  4968 ;;
  4969  0FCE                     ___lbmod:	
  4970                           
  4971                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  4972                           ;___lbmod@dividend stored from wreg
  4973  0FCE  00F2               	movwf	___lbmod@dividend
  4974  0FCF  3008               	movlw	8
  4975  0FD0  00F3               	movwf	___lbmod@counter
  4976  0FD1  01F4               	clrf	___lbmod@rem
  4977  0FD2                     l5669:	
  4978  0FD2  0872               	movf	___lbmod@dividend,w
  4979  0FD3  00F1               	movwf	??___lbmod
  4980  0FD4  3007               	movlw	7
  4981  0FD5  1003               	clrc
  4982  0FD6                     L16:	
  4983  0FD6  0CF1               	rrf	??___lbmod,f
  4984  0FD7  3EFF               	addlw	-1
  4985  0FD8  1003               	clrc
  4986  0FD9  1D03               	skipz
  4987  0FDA  2FD6               	goto	L16
  4988  0FDB  0D74               	rlf	___lbmod@rem,w
  4989  0FDC  0471               	iorwf	??___lbmod,w
  4990  0FDD  00F4               	movwf	___lbmod@rem
  4991  0FDE  1003               	clrc
  4992  0FDF  0DF2               	rlf	___lbmod@dividend,f
  4993  0FE0  0870               	movf	___lbmod@divisor,w
  4994  0FE1  0274               	subwf	___lbmod@rem,w
  4995  0FE2  1C03               	skipc
  4996  0FE3  2FE6               	goto	l5677
  4997  0FE4  0870               	movf	___lbmod@divisor,w
  4998  0FE5  02F4               	subwf	___lbmod@rem,f
  4999  0FE6                     l5677:	
  5000  0FE6  0BF3               	decfsz	___lbmod@counter,f
  5001  0FE7  2FD2               	goto	l5669
  5002  0FE8  0874               	movf	___lbmod@rem,w
  5003  0FE9  0008               	return
  5004  0FEA                     __end_of___lbmod:	
  5005  0FEA                     PL15:	
  5006  0FEA  082D               	movf	?___ftmul,w
  5007  0FEB  00C8               	movwf	?_fround
  5008  0FEC  082E               	movf	?___ftmul+1,w
  5009  0FED  00C9               	movwf	?_fround+1
  5010  0FEE  082F               	movf	?___ftmul+2,w
  5011  0FEF  00CA               	movwf	?_fround+2
  5012  0FF0  0008               	return
  5013  0FF1                     PL23:	
  5014  0FF1  00AF               	movwf	?___ftmul+2
  5015  0FF2  084E               	movf	_fround$3244,w
  5016  0FF3  00B0               	movwf	?___ftmul+3
  5017  0FF4  084F               	movf	_fround$3244+1,w
  5018  0FF5  00B1               	movwf	?___ftmul+4
  5019  0FF6  0850               	movf	_fround$3244+2,w
  5020  0FF7  00B2               	movwf	?___ftmul+5
  5021  0FF8  0008               	return
  5022  0FF9                     PL27:	
  5023  0FF9  082D               	movf	?___ftmul,w
  5024  0FFA  00CE               	movwf	_fround$3244
  5025  0FFB  082E               	movf	?___ftmul+1,w
  5026  0FFC  00CF               	movwf	_fround$3244+1
  5027  0FFD  082F               	movf	?___ftmul+2,w
  5028  0FFE  00D0               	movwf	_fround$3244+2
  5029  0FFF  0008               	return
  5030                           
  5031                           	psect	text508
  5032  0A32                     __ptext508:	
  5033 ;; =============== function _lcd_write ends ============
  5034                           
  5035                           
  5036 ;; *************** function ___lltoft *****************
  5037 ;; Defined at:
  5038 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lltoft.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;  c               4    8[COMMON] unsigned long 
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;  exp             1   12[COMMON] unsigned char 
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  3    8[COMMON] float 
  5045 ;; Registers used:
  5046 ;;		wreg, status,2, status,0, pclath, cstack
  5047 ;; Tracked objects:
  5048 ;;		On entry : 60/20
  5049 ;;		On exit  : 60/20
  5050 ;;		Unchanged: FFF9F/0
  5051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5052 ;;      Params:         4       0       0       0       0
  5053 ;;      Locals:         1       0       0       0       0
  5054 ;;      Temps:          0       0       0       0       0
  5055 ;;      Totals:         5       0       0       0       0
  5056 ;;Total ram usage:        5 bytes
  5057 ;; Hardware stack levels used:    1
  5058 ;; Hardware stack levels required when called:    1
  5059 ;; This function calls:
  5060 ;;		___ftpack
  5061 ;; This function is called by:
  5062 ;;		_sprintf
  5063 ;; This function uses a non-reentrant model
  5064 ;;
  5065  0A32                     ___lltoft:	
  5066                           
  5067                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5068  0A32  308E               	movlw	142
  5069  0A33  00FC               	movwf	___lltoft@exp
  5070  0A34                     l6053:	
  5071  0A34  30FF               	movlw	255
  5072  0A35  057B               	andwf	___lltoft@c+3,w
  5073  0A36  1903               	btfsc	3,2
  5074  0A37  2A3F               	goto	l6055
  5075  0A38  1003               	clrc
  5076  0A39  0CFB               	rrf	___lltoft@c+3,f
  5077  0A3A  0CFA               	rrf	___lltoft@c+2,f
  5078  0A3B  0CF9               	rrf	___lltoft@c+1,f
  5079  0A3C  0CF8               	rrf	___lltoft@c,f
  5080  0A3D  0AFC               	incf	___lltoft@exp,f
  5081  0A3E  2A34               	goto	l6053
  5082  0A3F                     l6055:	
  5083  0A3F  0878               	movf	___lltoft@c,w
  5084  0A40  00F0               	movwf	?___ftpack
  5085  0A41  0879               	movf	___lltoft@c+1,w
  5086  0A42  00F1               	movwf	?___ftpack+1
  5087  0A43  087A               	movf	___lltoft@c+2,w
  5088  0A44  00F2               	movwf	?___ftpack+2
  5089  0A45  087C               	movf	___lltoft@exp,w
  5090  0A46  00F3               	movwf	?___ftpack+3
  5091  0A47  01F4               	clrf	?___ftpack+4
  5092  0A48  120A  118A  264C   	fcall	___ftpack
  5093  0A4B  0870               	movf	?___ftpack,w
  5094  0A4C  00F8               	movwf	?___lltoft
  5095  0A4D  0871               	movf	?___ftpack+1,w
  5096  0A4E  00F9               	movwf	?___lltoft+1
  5097  0A4F  0872               	movf	?___ftpack+2,w
  5098  0A50  00FA               	movwf	?___lltoft+2
  5099  0A51  0008               	return
  5100  0A52                     __end_of___lltoft:	
  5101                           
  5102                           	psect	text509
  5103  0A07                     __ptext509:	
  5104 ;; =============== function ___lltoft ends ============
  5105                           
  5106                           
  5107 ;; *************** function ___lwtoft *****************
  5108 ;; Defined at:
  5109 ;;		line 29 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwtoft.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;  c               2    8[COMMON] unsigned int 
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;		None
  5114 ;; Return value:  Size  Location     Type
  5115 ;;                  3    8[COMMON] float 
  5116 ;; Registers used:
  5117 ;;		wreg, status,2, status,0, pclath, cstack
  5118 ;; Tracked objects:
  5119 ;;		On entry : 60/0
  5120 ;;		On exit  : 60/0
  5121 ;;		Unchanged: FFF9F/0
  5122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5123 ;;      Params:         3       0       0       0       0
  5124 ;;      Locals:         0       0       0       0       0
  5125 ;;      Temps:          0       0       0       0       0
  5126 ;;      Totals:         3       0       0       0       0
  5127 ;;Total ram usage:        3 bytes
  5128 ;; Hardware stack levels used:    1
  5129 ;; Hardware stack levels required when called:    1
  5130 ;; This function calls:
  5131 ;;		___ftpack
  5132 ;; This function is called by:
  5133 ;;		_main
  5134 ;; This function uses a non-reentrant model
  5135 ;;
  5136  0A07                     ___lwtoft:	
  5137                           
  5138                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  5139  0A07  0878               	movf	___lwtoft@c,w
  5140  0A08  00F0               	movwf	?___ftpack
  5141  0A09  0879               	movf	___lwtoft@c+1,w
  5142  0A0A  00F1               	movwf	?___ftpack+1
  5143  0A0B  308E               	movlw	142
  5144  0A0C  01F2               	clrf	?___ftpack+2
  5145  0A0D  00F3               	movwf	?___ftpack+3
  5146  0A0E  01F4               	clrf	?___ftpack+4
  5147  0A0F  120A  118A  264C   	fcall	___ftpack
  5148  0A12  0870               	movf	?___ftpack,w
  5149  0A13  00F8               	movwf	?___lwtoft
  5150  0A14  0871               	movf	?___ftpack+1,w
  5151  0A15  00F9               	movwf	?___lwtoft+1
  5152  0A16  0872               	movf	?___ftpack+2,w
  5153  0A17  00FA               	movwf	?___lwtoft+2
  5154  0A18  0008               	return
  5155  0A19                     __end_of___lwtoft:	
  5156                           
  5157                           	psect	text514
  5158  0A90                     __ptext514:	
  5159 ;; =============== function ___awmod ends ============
  5160                           
  5161                           
  5162 ;; *************** function ___lldiv *****************
  5163 ;; Defined at:
  5164 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lldiv.c"
  5165 ;; Parameters:    Size  Location     Type
  5166 ;;  divisor         4    0[COMMON] unsigned long 
  5167 ;;  dividend        4    4[COMMON] unsigned long 
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;  quotient        4    8[COMMON] unsigned long 
  5170 ;;  counter         1   12[COMMON] unsigned char 
  5171 ;; Return value:  Size  Location     Type
  5172 ;;                  4    0[COMMON] unsigned long 
  5173 ;; Registers used:
  5174 ;;		wreg, status,2, status,0
  5175 ;; Tracked objects:
  5176 ;;		On entry : 60/20
  5177 ;;		On exit  : 60/20
  5178 ;;		Unchanged: FFF9F/0
  5179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5180 ;;      Params:         8       0       0       0       0
  5181 ;;      Locals:         5       0       0       0       0
  5182 ;;      Temps:          0       0       0       0       0
  5183 ;;      Totals:        13       0       0       0       0
  5184 ;;Total ram usage:       13 bytes
  5185 ;; Hardware stack levels used:    1
  5186 ;; This function calls:
  5187 ;;		Nothing
  5188 ;; This function is called by:
  5189 ;;		_sprintf
  5190 ;; This function uses a non-reentrant model
  5191 ;;
  5192  0A90                     ___lldiv:	
  5193                           
  5194                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5195  0A90  01F8               	clrf	___lldiv@quotient
  5196  0A91  01F9               	clrf	___lldiv@quotient+1
  5197  0A92  01FA               	clrf	___lldiv@quotient+2
  5198  0A93  01FB               	clrf	___lldiv@quotient+3
  5199  0A94  0873               	movf	___lldiv@divisor+3,w
  5200  0A95  0472               	iorwf	___lldiv@divisor+2,w
  5201  0A96  0471               	iorwf	___lldiv@divisor+1,w
  5202  0A97  0470               	iorwf	___lldiv@divisor,w
  5203  0A98  1903               	skipnz
  5204  0A99  2ACF               	goto	l5863
  5205  0A9A  01FC               	clrf	___lldiv@counter
  5206  0A9B                     L9:	
  5207  0A9B  0AFC               	incf	___lldiv@counter,f
  5208  0A9C  1BF3               	btfsc	___lldiv@divisor+3,7
  5209  0A9D  2AA4               	goto	l5851
  5210  0A9E  1003               	clrc
  5211  0A9F  0DF0               	rlf	___lldiv@divisor,f
  5212  0AA0  0DF1               	rlf	___lldiv@divisor+1,f
  5213  0AA1  0DF2               	rlf	___lldiv@divisor+2,f
  5214  0AA2  0DF3               	rlf	___lldiv@divisor+3,f
  5215  0AA3  2A9B               	goto	L9
  5216  0AA4                     l5851:	
  5217  0AA4  1003               	clrc
  5218  0AA5  0DF8               	rlf	___lldiv@quotient,f
  5219  0AA6  0DF9               	rlf	___lldiv@quotient+1,f
  5220  0AA7  0DFA               	rlf	___lldiv@quotient+2,f
  5221  0AA8  0DFB               	rlf	___lldiv@quotient+3,f
  5222  0AA9  0873               	movf	___lldiv@divisor+3,w
  5223  0AAA  0277               	subwf	___lldiv@dividend+3,w
  5224  0AAB  1D03               	skipz
  5225  0AAC  2AB7               	goto	u2115
  5226  0AAD  0872               	movf	___lldiv@divisor+2,w
  5227  0AAE  0276               	subwf	___lldiv@dividend+2,w
  5228  0AAF  1D03               	skipz
  5229  0AB0  2AB7               	goto	u2115
  5230  0AB1  0871               	movf	___lldiv@divisor+1,w
  5231  0AB2  0275               	subwf	___lldiv@dividend+1,w
  5232  0AB3  1D03               	skipz
  5233  0AB4  2AB7               	goto	u2115
  5234  0AB5  0870               	movf	___lldiv@divisor,w
  5235  0AB6  0274               	subwf	___lldiv@dividend,w
  5236  0AB7                     u2115:	
  5237  0AB7  1C03               	skipc
  5238  0AB8  2AC9               	goto	L10
  5239  0AB9  0870               	movf	___lldiv@divisor,w
  5240  0ABA  02F4               	subwf	___lldiv@dividend,f
  5241  0ABB  0871               	movf	___lldiv@divisor+1,w
  5242  0ABC  1C03               	skipc
  5243  0ABD  0F71               	incfsz	___lldiv@divisor+1,w
  5244  0ABE  02F5               	subwf	___lldiv@dividend+1,f
  5245  0ABF  0872               	movf	___lldiv@divisor+2,w
  5246  0AC0  1C03               	skipc
  5247  0AC1  0F72               	incfsz	___lldiv@divisor+2,w
  5248  0AC2  02F6               	subwf	___lldiv@dividend+2,f
  5249  0AC3  0873               	movf	___lldiv@divisor+3,w
  5250  0AC4  1C03               	skipc
  5251  0AC5  0F73               	incfsz	___lldiv@divisor+3,w
  5252  0AC6  02F7               	subwf	___lldiv@dividend+3,f
  5253  0AC7  1478               	bsf	___lldiv@quotient,0
  5254  0AC8  1003               	clrc
  5255  0AC9                     L10:	
  5256  0AC9  0CF3               	rrf	___lldiv@divisor+3,f
  5257  0ACA  0CF2               	rrf	___lldiv@divisor+2,f
  5258  0ACB  0CF1               	rrf	___lldiv@divisor+1,f
  5259  0ACC  0CF0               	rrf	___lldiv@divisor,f
  5260  0ACD  0BFC               	decfsz	___lldiv@counter,f
  5261  0ACE  2AA4               	goto	l5851
  5262  0ACF                     l5863:	
  5263  0ACF  087B               	movf	___lldiv@quotient+3,w
  5264  0AD0  00F3               	movwf	?___lldiv+3
  5265  0AD1  087A               	movf	___lldiv@quotient+2,w
  5266  0AD2  00F2               	movwf	?___lldiv+2
  5267  0AD3  0879               	movf	___lldiv@quotient+1,w
  5268  0AD4  00F1               	movwf	?___lldiv+1
  5269  0AD5  0878               	movf	___lldiv@quotient,w
  5270  0AD6  00F0               	movwf	?___lldiv
  5271  0AD7  0008               	return
  5272  0AD8                     __end_of___lldiv:	
  5273                           
  5274                           	psect	text517
  5275  0A52                     __ptext517:	
  5276 ;; =============== function ___ftneg ends ============
  5277                           
  5278                           
  5279 ;; *************** function ___llmod *****************
  5280 ;; Defined at:
  5281 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\llmod.c"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;  divisor         4    0[BANK0 ] unsigned long 
  5284 ;;  dividend        4    4[BANK0 ] unsigned long 
  5285 ;; Auto vars:     Size  Location     Type
  5286 ;;  counter         1   13[COMMON] unsigned char 
  5287 ;; Return value:  Size  Location     Type
  5288 ;;                  4    0[BANK0 ] unsigned long 
  5289 ;; Registers used:
  5290 ;;		wreg, status,2, status,0
  5291 ;; Tracked objects:
  5292 ;;		On entry : 60/0
  5293 ;;		On exit  : 60/0
  5294 ;;		Unchanged: FFF9F/0
  5295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5296 ;;      Params:         0       8       0       0       0
  5297 ;;      Locals:         1       0       0       0       0
  5298 ;;      Temps:          0       0       0       0       0
  5299 ;;      Totals:         1       8       0       0       0
  5300 ;;Total ram usage:        9 bytes
  5301 ;; Hardware stack levels used:    1
  5302 ;; This function calls:
  5303 ;;		Nothing
  5304 ;; This function is called by:
  5305 ;;		_sprintf
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308  0A52                     ___llmod:	
  5309                           
  5310                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5311  0A52  0823               	movf	___llmod@divisor+3,w
  5312  0A53  0422               	iorwf	___llmod@divisor+2,w
  5313  0A54  0421               	iorwf	___llmod@divisor+1,w
  5314  0A55  0420               	iorwf	___llmod@divisor,w
  5315  0A56  1903               	skipnz
  5316  0A57  2A87               	goto	l5809
  5317  0A58  01FD               	clrf	___llmod@counter
  5318  0A59                     L12:	
  5319  0A59  0AFD               	incf	___llmod@counter,f
  5320  0A5A  1BA3               	btfsc	___llmod@divisor+3,7
  5321  0A5B  2A62               	goto	l5801
  5322  0A5C  1003               	clrc
  5323  0A5D  0DA0               	rlf	___llmod@divisor,f
  5324  0A5E  0DA1               	rlf	___llmod@divisor+1,f
  5325  0A5F  0DA2               	rlf	___llmod@divisor+2,f
  5326  0A60  0DA3               	rlf	___llmod@divisor+3,f
  5327  0A61  2A59               	goto	L12
  5328  0A62                     l5801:	
  5329  0A62  0823               	movf	___llmod@divisor+3,w
  5330  0A63  0227               	subwf	___llmod@dividend+3,w
  5331  0A64  1D03               	skipz
  5332  0A65  2A70               	goto	u2035
  5333  0A66  0822               	movf	___llmod@divisor+2,w
  5334  0A67  0226               	subwf	___llmod@dividend+2,w
  5335  0A68  1D03               	skipz
  5336  0A69  2A70               	goto	u2035
  5337  0A6A  0821               	movf	___llmod@divisor+1,w
  5338  0A6B  0225               	subwf	___llmod@dividend+1,w
  5339  0A6C  1D03               	skipz
  5340  0A6D  2A70               	goto	u2035
  5341  0A6E  0820               	movf	___llmod@divisor,w
  5342  0A6F  0224               	subwf	___llmod@dividend,w
  5343  0A70                     u2035:	
  5344  0A70  1C03               	skipc
  5345  0A71  2A81               	goto	L13
  5346  0A72  0820               	movf	___llmod@divisor,w
  5347  0A73  02A4               	subwf	___llmod@dividend,f
  5348  0A74  0821               	movf	___llmod@divisor+1,w
  5349  0A75  1C03               	skipc
  5350  0A76  0F21               	incfsz	___llmod@divisor+1,w
  5351  0A77  02A5               	subwf	___llmod@dividend+1,f
  5352  0A78  0822               	movf	___llmod@divisor+2,w
  5353  0A79  1C03               	skipc
  5354  0A7A  0F22               	incfsz	___llmod@divisor+2,w
  5355  0A7B  02A6               	subwf	___llmod@dividend+2,f
  5356  0A7C  0823               	movf	___llmod@divisor+3,w
  5357  0A7D  1C03               	skipc
  5358  0A7E  0F23               	incfsz	___llmod@divisor+3,w
  5359  0A7F  02A7               	subwf	___llmod@dividend+3,f
  5360  0A80  1003               	clrc
  5361  0A81                     L13:	
  5362  0A81  0CA3               	rrf	___llmod@divisor+3,f
  5363  0A82  0CA2               	rrf	___llmod@divisor+2,f
  5364  0A83  0CA1               	rrf	___llmod@divisor+1,f
  5365  0A84  0CA0               	rrf	___llmod@divisor,f
  5366  0A85  0BFD               	decfsz	___llmod@counter,f
  5367  0A86  2A62               	goto	l5801
  5368  0A87                     l5809:	
  5369  0A87  0827               	movf	___llmod@dividend+3,w
  5370  0A88  00A3               	movwf	?___llmod+3
  5371  0A89  0826               	movf	___llmod@dividend+2,w
  5372  0A8A  00A2               	movwf	?___llmod+2
  5373  0A8B  0825               	movf	___llmod@dividend+1,w
  5374  0A8C  00A1               	movwf	?___llmod+1
  5375  0A8D  0824               	movf	___llmod@dividend,w
  5376  0A8E  00A0               	movwf	?___llmod
  5377  0A8F  0008               	return
  5378  0A90                     __end_of___llmod:	
  5379                           
  5380                           	psect	text523
  5381  0A19                     __ptext523:	
  5382 ;; =============== function ___lbdiv ends ============
  5383                           
  5384                           
  5385 ;; *************** function ___wmul *****************
  5386 ;; Defined at:
  5387 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\wmul.c"
  5388 ;; Parameters:    Size  Location     Type
  5389 ;;  multiplier      2    0[COMMON] unsigned int 
  5390 ;;  multiplicand    2    2[COMMON] unsigned int 
  5391 ;; Auto vars:     Size  Location     Type
  5392 ;;  product         2    4[COMMON] unsigned int 
  5393 ;; Return value:  Size  Location     Type
  5394 ;;                  2    0[COMMON] unsigned int 
  5395 ;; Registers used:
  5396 ;;		wreg, status,2, status,0
  5397 ;; Tracked objects:
  5398 ;;		On entry : 60/20
  5399 ;;		On exit  : 60/20
  5400 ;;		Unchanged: FFF9F/0
  5401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5402 ;;      Params:         4       0       0       0       0
  5403 ;;      Locals:         2       0       0       0       0
  5404 ;;      Temps:          0       0       0       0       0
  5405 ;;      Totals:         6       0       0       0       0
  5406 ;;Total ram usage:        6 bytes
  5407 ;; Hardware stack levels used:    1
  5408 ;; This function calls:
  5409 ;;		Nothing
  5410 ;; This function is called by:
  5411 ;;		_fround
  5412 ;;		_scale
  5413 ;;		_sprintf
  5414 ;; This function uses a non-reentrant model
  5415 ;;
  5416  0A19                     ___wmul:	
  5417                           
  5418                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5419  0A19  01F4               	clrf	___wmul@product
  5420  0A1A  01F5               	clrf	___wmul@product+1
  5421  0A1B                     l5627:	
  5422  0A1B  1C70               	btfss	___wmul@multiplier,0
  5423  0A1C  2A23               	goto	l5631
  5424  0A1D  0872               	movf	___wmul@multiplicand,w
  5425  0A1E  07F4               	addwf	___wmul@product,f
  5426  0A1F  1803               	skipnc
  5427  0A20  0AF5               	incf	___wmul@product+1,f
  5428  0A21  0873               	movf	___wmul@multiplicand+1,w
  5429  0A22  07F5               	addwf	___wmul@product+1,f
  5430  0A23                     l5631:	
  5431  0A23  1003               	clrc
  5432  0A24  0DF2               	rlf	___wmul@multiplicand,f
  5433  0A25  0DF3               	rlf	___wmul@multiplicand+1,f
  5434  0A26  1003               	clrc
  5435  0A27  0CF1               	rrf	___wmul@multiplier+1,f
  5436  0A28  0CF0               	rrf	___wmul@multiplier,f
  5437  0A29  0871               	movf	___wmul@multiplier+1,w
  5438  0A2A  0470               	iorwf	___wmul@multiplier,w
  5439  0A2B  1D03               	skipz
  5440  0A2C  2A1B               	goto	l5627
  5441  0A2D  0875               	movf	___wmul@product+1,w
  5442  0A2E  00F1               	movwf	?___wmul+1
  5443  0A2F  0874               	movf	___wmul@product,w
  5444  0A30  00F0               	movwf	?___wmul
  5445  0A31  0008               	return
  5446  0A32                     __end_of___wmul:	
  5447                           
  5448                           	psect	text525
  5449  0BEC                     __ptext525:	
  5450 ;; =============== function ___bmul ends ============
  5451                           
  5452                           
  5453 ;; *************** function __div_to_l_ *****************
  5454 ;; Defined at:
  5455 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\fldivl.c"
  5456 ;; Parameters:    Size  Location     Type
  5457 ;;  f1              3    0[COMMON] unsigned char 
  5458 ;;  f2              3    3[COMMON] unsigned char 
  5459 ;; Auto vars:     Size  Location     Type
  5460 ;;  quot            4    0[BANK0 ] unsigned long 
  5461 ;;  exp1            1    5[BANK0 ] unsigned char 
  5462 ;;  cntr            1    4[BANK0 ] unsigned char 
  5463 ;; Return value:  Size  Location     Type
  5464 ;;                  4    0[COMMON] unsigned long 
  5465 ;; Registers used:
  5466 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5467 ;; Tracked objects:
  5468 ;;		On entry : 0/0
  5469 ;;		On exit  : 60/0
  5470 ;;		Unchanged: FFF9F/0
  5471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5472 ;;      Params:         6       0       0       0       0
  5473 ;;      Locals:         0       6       0       0       0
  5474 ;;      Temps:          8       0       0       0       0
  5475 ;;      Totals:        14       6       0       0       0
  5476 ;;Total ram usage:       20 bytes
  5477 ;; Hardware stack levels used:    1
  5478 ;; This function calls:
  5479 ;;		Nothing
  5480 ;; This function is called by:
  5481 ;;		_sprintf
  5482 ;; This function uses a non-reentrant model
  5483 ;;
  5484  0BEC                     __div_to_l_:	
  5485                           
  5486                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  5487  0BEC  3070               	movlw	low __div_to_l_@f1
  5488  0BED  24A1  120A  158A   	fcall	PL2	;call to abstracted procedure
  5489  0BF0  1003               	clrc
  5490  0BF1  0D78               	rlf	??__div_to_l_+2,w
  5491  0BF2  0D79               	rlf	??__div_to_l_+3,w
  5492  0BF3  1283               	bcf	3,5	;RP0=0, select bank0
  5493  0BF4  1303               	bcf	3,6	;RP1=0, select bank0
  5494  0BF5  00A5               	movwf	__div_to_l_@exp1
  5495  0BF6  08A5               	movf	__div_to_l_@exp1,f
  5496  0BF7  1D03               	skipz
  5497  0BF8  2BFE               	goto	l5567
  5498  0BF9                     l5565:	
  5499  0BF9  01F0               	clrf	?__div_to_l_
  5500  0BFA  01F1               	clrf	?__div_to_l_+1
  5501  0BFB  01F2               	clrf	?__div_to_l_+2
  5502  0BFC  01F3               	clrf	?__div_to_l_+3
  5503  0BFD  0008               	return
  5504  0BFE                     l5567:	
  5505  0BFE  3073               	movlw	low __div_to_l_@f2
  5506  0BFF  24A1  120A  158A   	fcall	PL2	;call to abstracted procedure
  5507  0C02  1003               	clrc
  5508  0C03  0D78               	rlf	??__div_to_l_+2,w
  5509  0C04  0D79               	rlf	??__div_to_l_+3,w
  5510  0C05  00A4               	movwf	__div_to_l_@cntr
  5511  0C06  08A4               	movf	__div_to_l_@cntr,f
  5512  0C07  1903               	btfsc	3,2
  5513  0C08  2BF9               	goto	l5565
  5514  0C09  3070               	movlw	low __div_to_l_@f1
  5515  0C0A  0084               	movwf	4
  5516  0C0B  3080               	movlw	128
  5517  0C0C  0A84               	incf	4,f
  5518  0C0D  0A84               	incf	4,f
  5519  0C0E  0480               	iorwf	0,f
  5520  0C0F  3070               	movlw	low __div_to_l_@f1
  5521  0C10  0A84               	incf	4,f
  5522  0C11  0084               	movwf	4
  5523  0C12  3073               	movlw	low __div_to_l_@f2
  5524  0C13  0A84               	incf	4,f
  5525  0C14  0A84               	incf	4,f
  5526  0C15  0A84               	incf	4,f
  5527  0C16  0180               	clrf	0
  5528  0C17  0084               	movwf	4
  5529  0C18  3080               	movlw	128
  5530  0C19  0A84               	incf	4,f
  5531  0C1A  0A84               	incf	4,f
  5532  0C1B  0480               	iorwf	0,f
  5533  0C1C  3073               	movlw	low __div_to_l_@f2
  5534  0C1D  0A84               	incf	4,f
  5535  0C1E  0084               	movwf	4
  5536  0C1F  307F               	movlw	127
  5537  0C20  0A84               	incf	4,f
  5538  0C21  0A84               	incf	4,f
  5539  0C22  0A84               	incf	4,f
  5540  0C23  0180               	clrf	0
  5541  0C24  01A0               	clrf	__div_to_l_@quot
  5542  0C25  01A1               	clrf	__div_to_l_@quot+1
  5543  0C26  01A2               	clrf	__div_to_l_@quot+2
  5544  0C27  01A3               	clrf	__div_to_l_@quot+3
  5545  0C28  02A5               	subwf	__div_to_l_@exp1,f
  5546  0C29  30A0               	movlw	160
  5547  0C2A  0724               	addwf	__div_to_l_@cntr,w
  5548  0C2B  00F6               	movwf	??__div_to_l_
  5549  0C2C  02A5               	subwf	__div_to_l_@exp1,f
  5550  0C2D  3020               	movlw	32
  5551  0C2E  00A4               	movwf	__div_to_l_@cntr
  5552  0C2F                     l5581:	
  5553  0C2F  3073               	movlw	low __div_to_l_@f2
  5554  0C30  1003               	clrc
  5555  0C31  0DA0               	rlf	__div_to_l_@quot,f
  5556  0C32  0DA1               	rlf	__div_to_l_@quot+1,f
  5557  0C33  0DA2               	rlf	__div_to_l_@quot+2,f
  5558  0C34  0DA3               	rlf	__div_to_l_@quot+3,f
  5559  0C35  24A1  120A  158A   	fcall	PL2	;call to abstracted procedure
  5560  0C38  3070               	movlw	low __div_to_l_@f1
  5561  0C39  0084               	movwf	4
  5562  0C3A  0800               	movf	0,w
  5563  0C3B  00FA               	movwf	??__div_to_l_+4
  5564  0C3C  0A84               	incf	4,f
  5565  0C3D  0800               	movf	0,w
  5566  0C3E  00FB               	movwf	??__div_to_l_+5
  5567  0C3F  0A84               	incf	4,f
  5568  0C40  0800               	movf	0,w
  5569  0C41  00FC               	movwf	??__div_to_l_+6
  5570  0C42  0A84               	incf	4,f
  5571  0C43  0800               	movf	0,w
  5572  0C44  00FD               	movwf	??__div_to_l_+7
  5573  0C45  0879               	movf	??__div_to_l_+3,w
  5574  0C46  027D               	subwf	??__div_to_l_+7,w
  5575  0C47  1D03               	skipz
  5576  0C48  2C53               	goto	u1615
  5577  0C49  0878               	movf	??__div_to_l_+2,w
  5578  0C4A  027C               	subwf	??__div_to_l_+6,w
  5579  0C4B  1D03               	skipz
  5580  0C4C  2C53               	goto	u1615
  5581  0C4D  0877               	movf	??__div_to_l_+1,w
  5582  0C4E  027B               	subwf	??__div_to_l_+5,w
  5583  0C4F  1D03               	skipz
  5584  0C50  2C53               	goto	u1615
  5585  0C51  0876               	movf	??__div_to_l_,w
  5586  0C52  027A               	subwf	??__div_to_l_+4,w
  5587  0C53                     u1615:	
  5588  0C53  1C03               	skipc
  5589  0C54  2C6F               	goto	l3303
  5590  0C55  3073               	movlw	low __div_to_l_@f2
  5591  0C56  24A1  120A  158A   	fcall	PL2	;call to abstracted procedure
  5592  0C59  3070               	movlw	low __div_to_l_@f1
  5593  0C5A  0084               	movwf	4
  5594  0C5B  0876               	movf	??__div_to_l_,w
  5595  0C5C  0280               	subwf	0,f
  5596  0C5D  0A84               	incf	4,f
  5597  0C5E  0877               	movf	??__div_to_l_+1,w
  5598  0C5F  1C03               	skipc
  5599  0C60  0F77               	incfsz	??__div_to_l_+1,w
  5600  0C61  0280               	subwf	0,f
  5601  0C62  0A84               	incf	4,f
  5602  0C63  0878               	movf	??__div_to_l_+2,w
  5603  0C64  1C03               	skipc
  5604  0C65  0F78               	incfsz	??__div_to_l_+2,w
  5605  0C66  0280               	subwf	0,f
  5606  0C67  0A84               	incf	4,f
  5607  0C68  0879               	movf	??__div_to_l_+3,w
  5608  0C69  1C03               	skipc
  5609  0C6A  0A79               	incf	??__div_to_l_+3,w
  5610  0C6B  0280               	subwf	0,f
  5611  0C6C  3003               	movlw	3
  5612  0C6D  0284               	subwf	4,f
  5613  0C6E  1420               	bsf	__div_to_l_@quot,0
  5614  0C6F                     l3303:	
  5615  0C6F  3070               	movlw	low __div_to_l_@f1
  5616  0C70  0084               	movwf	4
  5617  0C71  1003               	clrc
  5618  0C72  0D80               	rlf	0,f
  5619  0C73  0A84               	incf	4,f
  5620  0C74  0D80               	rlf	0,f
  5621  0C75  0A84               	incf	4,f
  5622  0C76  0D80               	rlf	0,f
  5623  0C77  0A84               	incf	4,f
  5624  0C78  0D80               	rlf	0,f
  5625  0C79  0BA4               	decfsz	__div_to_l_@cntr,f
  5626  0C7A  2C2F               	goto	l5581
  5627  0C7B  1FA5               	btfss	__div_to_l_@exp1,7
  5628  0C7C  2C8A               	goto	l5599
  5629  0C7D  0825               	movf	__div_to_l_@exp1,w
  5630  0C7E  3A80               	xorlw	128
  5631  0C7F  3E9F               	addlw	159
  5632  0C80  1C03               	btfss	3,0
  5633  0C81  2BF9               	goto	l5565
  5634  0C82                     l5595:	
  5635  0C82  1003               	clrc
  5636  0C83  0CA3               	rrf	__div_to_l_@quot+3,f
  5637  0C84  0CA2               	rrf	__div_to_l_@quot+2,f
  5638  0C85  0CA1               	rrf	__div_to_l_@quot+1,f
  5639  0C86  0CA0               	rrf	__div_to_l_@quot,f
  5640  0C87  0FA5               	incfsz	__div_to_l_@exp1,f
  5641  0C88  2C82               	goto	l5595
  5642  0C89  2C98               	goto	l5605
  5643  0C8A                     l5599:	
  5644  0C8A  3020               	movlw	32
  5645  0C8B  0225               	subwf	__div_to_l_@exp1,w
  5646  0C8C  1803               	btfsc	3,0
  5647  0C8D  2BF9               	goto	l5565
  5648  0C8E                     l3311:	
  5649  0C8E  08A5               	movf	__div_to_l_@exp1,f
  5650  0C8F  1903               	btfsc	3,2
  5651  0C90  2C98               	goto	l5605
  5652  0C91  1003               	clrc
  5653  0C92  0DA0               	rlf	__div_to_l_@quot,f
  5654  0C93  0DA1               	rlf	__div_to_l_@quot+1,f
  5655  0C94  0DA2               	rlf	__div_to_l_@quot+2,f
  5656  0C95  0DA3               	rlf	__div_to_l_@quot+3,f
  5657  0C96  03A5               	decf	__div_to_l_@exp1,f
  5658  0C97  2C8E               	goto	l3311
  5659  0C98                     l5605:	
  5660  0C98  0823               	movf	__div_to_l_@quot+3,w
  5661  0C99  00F3               	movwf	?__div_to_l_+3
  5662  0C9A  0822               	movf	__div_to_l_@quot+2,w
  5663  0C9B  00F2               	movwf	?__div_to_l_+2
  5664  0C9C  0821               	movf	__div_to_l_@quot+1,w
  5665  0C9D  00F1               	movwf	?__div_to_l_+1
  5666  0C9E  0820               	movf	__div_to_l_@quot,w
  5667  0C9F  00F0               	movwf	?__div_to_l_
  5668  0CA0  0008               	return
  5669  0CA1                     __end_of__div_to_l_:	
  5670  0CA1                     PL2:	
  5671  0CA1  0084               	movwf	4
  5672  0CA2  0800               	movf	0,w
  5673  0CA3  00F6               	movwf	??__div_to_l_
  5674  0CA4  0A84               	incf	4,f
  5675  0CA5  0800               	movf	0,w
  5676  0CA6  00F7               	movwf	??__div_to_l_+1
  5677  0CA7  0A84               	incf	4,f
  5678  0CA8  0800               	movf	0,w
  5679  0CA9  00F8               	movwf	??__div_to_l_+2
  5680  0CAA  0A84               	incf	4,f
  5681  0CAB  0800               	movf	0,w
  5682  0CAC  00F9               	movwf	??__div_to_l_+3
  5683  0CAD  0008               	return
  5684                           
  5685                           	psect	text526
  5686  0AD8                     __ptext526:	
  5687 ;; =============== function __div_to_l_ ends ============
  5688                           
  5689                           
  5690 ;; *************** function __tdiv_to_l_ *****************
  5691 ;; Defined at:
  5692 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftdivl.c"
  5693 ;; Parameters:    Size  Location     Type
  5694 ;;  f1              3    0[COMMON] float 
  5695 ;;  f2              3    3[COMMON] float 
  5696 ;; Auto vars:     Size  Location     Type
  5697 ;;  quot            4    0[BANK0 ] unsigned long 
  5698 ;;  exp1            1    5[BANK0 ] unsigned char 
  5699 ;;  cntr            1    4[BANK0 ] unsigned char 
  5700 ;; Return value:  Size  Location     Type
  5701 ;;                  4    0[COMMON] unsigned long 
  5702 ;; Registers used:
  5703 ;;		wreg, status,2, status,0
  5704 ;; Tracked objects:
  5705 ;;		On entry : 60/20
  5706 ;;		On exit  : 60/0
  5707 ;;		Unchanged: FFF9F/0
  5708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5709 ;;      Params:         6       0       0       0       0
  5710 ;;      Locals:         0       6       0       0       0
  5711 ;;      Temps:          3       0       0       0       0
  5712 ;;      Totals:         9       6       0       0       0
  5713 ;;Total ram usage:       15 bytes
  5714 ;; Hardware stack levels used:    1
  5715 ;; This function calls:
  5716 ;;		Nothing
  5717 ;; This function is called by:
  5718 ;;		_sprintf
  5719 ;; This function uses a non-reentrant model
  5720 ;;
  5721  0AD8                     __tdiv_to_l_:	
  5722                           
  5723                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5724  0AD8  0870               	movf	__tdiv_to_l_@f1,w
  5725  0AD9  00F6               	movwf	??__tdiv_to_l_
  5726  0ADA  0871               	movf	__tdiv_to_l_@f1+1,w
  5727  0ADB  00F7               	movwf	??__tdiv_to_l_+1
  5728  0ADC  0872               	movf	__tdiv_to_l_@f1+2,w
  5729  0ADD  00F8               	movwf	??__tdiv_to_l_+2
  5730  0ADE  1003               	clrc
  5731  0ADF  0D77               	rlf	??__tdiv_to_l_+1,w
  5732  0AE0  0D78               	rlf	??__tdiv_to_l_+2,w
  5733  0AE1  1283               	bcf	3,5	;RP0=0, select bank0
  5734  0AE2  00A5               	movwf	__tdiv_to_l_@exp1
  5735  0AE3  08A5               	movf	__tdiv_to_l_@exp1,f
  5736  0AE4  1D03               	skipz
  5737  0AE5  2AEB               	goto	l5519
  5738  0AE6                     l5517:	
  5739  0AE6  01F0               	clrf	?__tdiv_to_l_
  5740  0AE7  01F1               	clrf	?__tdiv_to_l_+1
  5741  0AE8  01F2               	clrf	?__tdiv_to_l_+2
  5742  0AE9  01F3               	clrf	?__tdiv_to_l_+3
  5743  0AEA  0008               	return
  5744  0AEB                     l5519:	
  5745  0AEB  0873               	movf	__tdiv_to_l_@f2,w
  5746  0AEC  00F6               	movwf	??__tdiv_to_l_
  5747  0AED  0874               	movf	__tdiv_to_l_@f2+1,w
  5748  0AEE  00F7               	movwf	??__tdiv_to_l_+1
  5749  0AEF  0875               	movf	__tdiv_to_l_@f2+2,w
  5750  0AF0  00F8               	movwf	??__tdiv_to_l_+2
  5751  0AF1  1003               	clrc
  5752  0AF2  0D77               	rlf	??__tdiv_to_l_+1,w
  5753  0AF3  0D78               	rlf	??__tdiv_to_l_+2,w
  5754  0AF4  00A4               	movwf	__tdiv_to_l_@cntr
  5755  0AF5  08A4               	movf	__tdiv_to_l_@cntr,f
  5756  0AF6  1903               	btfsc	3,2
  5757  0AF7  2AE6               	goto	l5517
  5758  0AF8  307F               	movlw	127
  5759  0AF9  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5760  0AFA  01F2               	clrf	__tdiv_to_l_@f1+2
  5761  0AFB  17F4               	bsf	__tdiv_to_l_@f2+1,7
  5762  0AFC  01F5               	clrf	__tdiv_to_l_@f2+2
  5763  0AFD  01A0               	clrf	__tdiv_to_l_@quot
  5764  0AFE  01A1               	clrf	__tdiv_to_l_@quot+1
  5765  0AFF  01A2               	clrf	__tdiv_to_l_@quot+2
  5766  0B00  01A3               	clrf	__tdiv_to_l_@quot+3
  5767  0B01  02A5               	subwf	__tdiv_to_l_@exp1,f
  5768  0B02  3098               	movlw	152
  5769  0B03  0724               	addwf	__tdiv_to_l_@cntr,w
  5770  0B04  00F6               	movwf	??__tdiv_to_l_
  5771  0B05  02A5               	subwf	__tdiv_to_l_@exp1,f
  5772  0B06  3018               	movlw	24
  5773  0B07  00A4               	movwf	__tdiv_to_l_@cntr
  5774  0B08                     l5533:	
  5775  0B08  1003               	clrc
  5776  0B09  0DA0               	rlf	__tdiv_to_l_@quot,f
  5777  0B0A  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5778  0B0B  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5779  0B0C  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5780  0B0D  0875               	movf	__tdiv_to_l_@f2+2,w
  5781  0B0E  0272               	subwf	__tdiv_to_l_@f1+2,w
  5782  0B0F  1D03               	skipz
  5783  0B10  2B17               	goto	u1525
  5784  0B11  0874               	movf	__tdiv_to_l_@f2+1,w
  5785  0B12  0271               	subwf	__tdiv_to_l_@f1+1,w
  5786  0B13  1D03               	skipz
  5787  0B14  2B17               	goto	u1525
  5788  0B15  0873               	movf	__tdiv_to_l_@f2,w
  5789  0B16  0270               	subwf	__tdiv_to_l_@f1,w
  5790  0B17                     u1525:	
  5791  0B17  1C03               	skipc
  5792  0B18  2B25               	goto	L18
  5793  0B19  0873               	movf	__tdiv_to_l_@f2,w
  5794  0B1A  02F0               	subwf	__tdiv_to_l_@f1,f
  5795  0B1B  0874               	movf	__tdiv_to_l_@f2+1,w
  5796  0B1C  1C03               	skipc
  5797  0B1D  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  5798  0B1E  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5799  0B1F  0875               	movf	__tdiv_to_l_@f2+2,w
  5800  0B20  1C03               	skipc
  5801  0B21  0A75               	incf	__tdiv_to_l_@f2+2,w
  5802  0B22  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5803  0B23  1420               	bsf	__tdiv_to_l_@quot,0
  5804  0B24  1003               	clrc
  5805  0B25                     L18:	
  5806  0B25  0DF0               	rlf	__tdiv_to_l_@f1,f
  5807  0B26  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5808  0B27  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5809  0B28  0BA4               	decfsz	__tdiv_to_l_@cntr,f
  5810  0B29  2B08               	goto	l5533
  5811  0B2A  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5812  0B2B  2B39               	goto	l5553
  5813  0B2C  0825               	movf	__tdiv_to_l_@exp1,w
  5814  0B2D  3A80               	xorlw	128
  5815  0B2E  3E97               	addlw	151
  5816  0B2F  1C03               	btfss	3,0
  5817  0B30  2AE6               	goto	l5517
  5818  0B31                     l5549:	
  5819  0B31  1003               	clrc
  5820  0B32  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5821  0B33  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5822  0B34  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5823  0B35  0CA0               	rrf	__tdiv_to_l_@quot,f
  5824  0B36  0FA5               	incfsz	__tdiv_to_l_@exp1,f
  5825  0B37  2B31               	goto	l5549
  5826  0B38  2B47               	goto	l5559
  5827  0B39                     l5553:	
  5828  0B39  3018               	movlw	24
  5829  0B3A  0225               	subwf	__tdiv_to_l_@exp1,w
  5830  0B3B  1803               	btfsc	3,0
  5831  0B3C  2AE6               	goto	l5517
  5832  0B3D                     l3268:	
  5833  0B3D  08A5               	movf	__tdiv_to_l_@exp1,f
  5834  0B3E  1903               	btfsc	3,2
  5835  0B3F  2B47               	goto	l5559
  5836  0B40  1003               	clrc
  5837  0B41  0DA0               	rlf	__tdiv_to_l_@quot,f
  5838  0B42  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5839  0B43  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5840  0B44  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5841  0B45  03A5               	decf	__tdiv_to_l_@exp1,f
  5842  0B46  2B3D               	goto	l3268
  5843  0B47                     l5559:	
  5844  0B47  0823               	movf	__tdiv_to_l_@quot+3,w
  5845  0B48  00F3               	movwf	?__tdiv_to_l_+3
  5846  0B49  0822               	movf	__tdiv_to_l_@quot+2,w
  5847  0B4A  00F2               	movwf	?__tdiv_to_l_+2
  5848  0B4B  0821               	movf	__tdiv_to_l_@quot+1,w
  5849  0B4C  00F1               	movwf	?__tdiv_to_l_+1
  5850  0B4D  0820               	movf	__tdiv_to_l_@quot,w
  5851  0B4E  00F0               	movwf	?__tdiv_to_l_
  5852  0B4F  0008               	return
  5853  0B50                     __end_of__tdiv_to_l_:	
  5854                           
  5855                           	psect	text529
  5856  0000                     __ptext529:	
  5857 ;; =============== function _msecbase ends ============
  5858                           
  5859  007E                     btemp	set	126	;btemp
  5860  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Wed Nov 16 19:50:27 2022

                    pc 0002         ___bmul@product 007A           ___awdiv@sign 007B                     fsr 0004  
  ___wmul@multiplicand 0072           ___ftadd@exp1 0047           ___ftadd@exp2 0046           ___ftadd@sign 0045  
                  _RD1 0041                    _RD2 0042                    _RD4 0044                    _VAD 005E  
                  _num 005B                    fsr0 0004                    indf 0000           ___awmod@sign 0075  
          lcd_goto@pos 0075                   l1050 0E5E                   l1044 0DCC                   l1061 0000  
                 l2015 0000                   l1047 0E15                   l1064 0BD7                   l3000 0000  
                 l3010 0000                   l1067 0000                   l3016 0000                   l3130 07D8  
                 l3043 0FBF                   l3052 0000                   l3046 0000                   l3311 0C8E  
                 l3303 0C6F                   l3231 0000                   l3304 0000                   l3074 0D40  
                 l3163 0000                   l3236 0000                   l3261 0000                   l3173 0000  
                 l3253 0000                   l3192 0000                   l1904 0000                   l3096 0000  
                 l3177 0000                   l6001 05F1                   l1913 0000                   l1922 0000  
                 l6011 0000                   l6003 0000                   l1907 0000                   l3268 0B3D  
                 l6013 0000                   l6005 0000                   l6031 0618                   l6023 060C  
                 l6015 0000                   l6007 0000                   l1919 0000                   l6041 0000  
                 l6025 0000                   l6017 0000                   l6009 0000                   l6113 0470  
                 l6201 00C1                   l6035 0622                   l6027 0000                   l6019 0602  
                 l6131 0536                   l6107 042B                   l6211 0000                   l6203 0000  
                 l5501 0000                   l6037 0000                   l6029 0000                   l6045 0000  
                 l6053 0A34                   l6061 0000                   l6125 04F1                   l6117 0487  
                 l6141 0000                   l6221 0113                   l6213 0000                   l5511 06C2  
                 l5503 0000                   l6039 0000                   l6055 0A3F                   l6071 0000  
                 l6063 0000                   l6135 0000                   l6143 0000                   l6151 0B57  
                 l6311 02FC                   l6303 02C7                   l6223 0000                   l6215 0000  
                 l6207 0000                   l1968 0071                   l5505 0000                   l6049 0000  
                 l6065 0000                   l6073 0000                   l6137 0000                   l6145 0000  
                 l6321 0000                   l6313 0000                   l6305 0000                   l6225 0000  
                 l6217 0000                   l6209 0000                   l6233 015A                   l6161 0021  
                 l6153 0000                   l6401 0000                   l5531 0000                   l5523 0000  
                 l5515 0000                   l5611 0640                   l6067 0000                   l6059 0000  
                 l6091 0F8D                   l6083 0F39                   l6323 0000                   l6315 0000  
                 l6307 0000                   l6163 0000                   l6403 0000                   l6411 0000  
                 l5533 0B08                   l5525 0000                   l5517 0AE6                   l5605 0C98  
                 l5701 0676                   l6069 0000                   l6077 0000                   l6149 0000  
                 l6341 03AA                   l6333 0383                   l6325 036A                   l6309 02DD  
                 l6261 01F8                   l6245 01B9                   l6237 018E                   l6229 014A  
                 l6173 0000                   l6405 0000                   l6421 0000                   l6413 0000  
                 l5551 0000                   l5543 0000                   l5535 0000                   l5527 0000  
                 l5519 0AEB                   l5631 0A23                   l5711 0000                   l6087 0000  
                 l6095 0000                   l6335 0000                   l6271 0237                   l6263 0000  
                 l6255 0000                   l6191 0095                   l6327 0376                   l6183 0073  
                 l6175 0035                   l6167 0000                   l6431 0000                   l6423 0000  
                 l6415 0000                   l6407 0000                   l5553 0B39                   l5529 0000  
                 l5617 0000                   l5609 0000                   l5633 0000                   l5625 0000  
                 l5641 0000                   l5705 0000                   l5721 0000                   l5713 07A8  
                 l5801 0A62                   l6265 0235                   l6257 0000                   l6249 01CA  
                 l6193 0000                   l6185 0085                   l6169 0000                   l6177 006C  
                 l6353 0000                   l6361 0000                   l6441 0000                   l6433 0000  
                 l6425 0000                   l6417 0000                   l6409 0000                   l5539 0000  
                 l5563 0000                   l5619 0000                   l5635 0000                   l5627 0A1B  
                 l5651 0000                   l5643 0000                   l5707 0000                   l5731 07CC  
                 l5723 0000                   l5715 07AD                   l6099 0000                   l6339 0000  
                 l6259 0000                   l6195 0000                   l6179 0000                   l6347 000B  
                 l6355 0000                   l6371 0000                   l6363 0000                   l6443 0000  
                 l6435 0DC7                   l6427 0000                   l6419 0000                   l5549 0B31  
                 l5581 0C2F                   l5573 0000                   l5565 0BF9                   l5645 0000  
                 l5661 0FCC                   l5709 0000                   l5741 07E2                   l5733 0000  
                 l5725 0000                   l5717 0000                   l5813 0000                   l5821 0000  
                 l6293 0000                   l6285 0273                   l6277 0000                   l6349 03B6  
                 l6381 0000                   l6373 0000                   l6365 0000                   l6357 0000  
                 l6461 0000                   l6453 0000                   l6445 0000                   l6437 0000  
                 l6429 0000                   l5559 0B47                   l5583 0000                   l5575 0000  
                 l5567 0BFE                   l5655 0000                   l5647 0FB9                   l5671 0000  
                 l5743 0000                   l5735 07D4                   l5719 0000                   l5751 0000  
                 l5807 0000                   l5831 0000                   l5903 0BAD                   l5911 0000  
                 l6295 0000                   l6279 026B                   l6199 0000                   l6391 0000  
                 l6383 0000                   l6375 0000                   l6367 0000                   l6359 0000  
                 l6471 0000                   l6455 0000                   l6447 0000                   l5577 0000  
                 l5673 0000                   l5665 0000                   l5745 07F0                   l5761 0000  
                 l5809 0A87                   l5833 0000                   l5825 0699                   l5841 0000  
                 l5913 0000                   l6297 02A4                   l6289 02A1                   l6393 0000  
                 l6385 0000                   l6377 0000                   l6369 0000                   l6473 0000  
                 l6465 0000                   l6457 0000                   l6449 0000                   l5595 0C82  
                 l5587 0000                   l5579 0000                   l5659 0000                   l5667 0000  
                 l5691 0658                   l5683 0000                   l5763 0560                   l5755 0000  
                 l5851 0AA4                   l5843 0000                   l5907 0000                   l5931 0000  
                 l5923 0CEE                   l5915 0000                   l6299 02B8                   l6395 0000  
                 l6387 0000                   l6379 0000                   l6467 0000                   l6459 0000  
                 l5597 0000                   l5589 0000                   l5677 0FE6                   l5669 0FD2  
                 l5693 065D                   l5685 0000                   l5773 056E                   l5765 0000  
                 l5757 0557                   l5749 0000                   l5829 06A8                   l5861 0000  
                 l5853 0000                   l5909 0BAF                   l5941 0D0B                   l5925 0000  
                 l6397 0000                   l6389 0000                   l6469 0000                   l5599 0C8A  
                 l5679 0000                   l5695 0662                   l5687 0654                   l5783 0000  
                 l5775 0000                   l5863 0ACF                   l5943 0000                   l5951 0D24  
                 l5919 0CE7                   l6399 0000                   l5697 066C                   l5785 0585  
                 l5793 0000                   l5857 0000                   l5873 0000                   l5961 0D3C  
                 l5953 0D28                   l5937 0000                   l5929 0CFD                   l5699 0671  
                 l5787 0000                   l5779 0000                   l5875 059C                   l5867 0000  
                 l5971 0000                   l5955 0000                   l5947 0D1A                   l5939 0000  
                 l5789 058D                   l5893 0000                   l5869 0000                   l5981 0000  
                 l5973 0D56                   l5965 0000                   l5949 0D1F                   l5887 05AF  
                 l5895 05C2                   l5879 05A3                   l5983 0000                   l5975 0000  
                 l5967 0D4B                   l5959 0D37                   l5897 0000                   l5985 0D72  
                 l5977 0000                   l5899 05CA                   l5995 05E0                   l5989 0000  
                 STR_1 088B                   STR_2 088F                   STR_3 0893                   STR_4 0886  
                 STR_5 0886                   STR_6 0886                   _T0IF 005A                   u2035 0A70  
                 u2115 0AB7                   u2205 0BB5                   u1525 0B17                   u1615 0C53  
                 u2175 05B5                   u2705 0198                   u2650 0000                   u2805 02C2  
                 u1870 0000                   u2735 01B7                   u2655 00D7                   u1875 07B1  
                 u2755 0264                   u2695 0163                   u1985 0577                   u2865 0397  
                 u2795 02AD                   _TMR0 0001                   _main 0D86           ___ftpack@arg 0070  
         ___ftpack@exp 0073                   btemp 007E                   start 0000           _sprintf$2306 00A0  
    ___bmul@multiplier 007B           ___ftmul@cntr 003A           ___ftmul@sign 003B           ___fttol@exp1 002C  
         ___fttol@lval 0028                  ?_main 0070        __end_of___awdiv 0592        __end_of___lbdiv 0FCE  
      __end_of___ftadd 0D86        __end_of___awmod 05CF        __end_of___lbmod 0FEA        __end_of___ftneg 06CC  
                _ANSEL 0188        __end_of___lldiv 0AD8        __end_of___ftmul 063E        ___awdiv@divisor 0076  
      __end_of___llmod 0A90        __end_of___ftsub 0CC4        __end_of___fttol 07F9        ___awdiv@counter 007A  
                _PORTC 0007                  _TRISA 0085                  _TRISB 0086                  _TRISC 0087  
                _TRISD 0088                  _TRISE 0089           ___lltoft@exp 007C                  _carac 0060  
                _scale 03BB        __end_of_isdigit 06C4                  _pause 0BAD          ___ftpack@sign 0074  
                pclath 000A                  status 0003                  wtemp0 007E        __end_of_sprintf 03BB  
      ___lbdiv@divisor 0075        ___lbdiv@counter 0077           __end_of_main 0EAE                 ??_main 007E  
        ___fttol@sign1 0027   __size_of__tdiv_to_l_ 0078                 _ADCON0 001F                 _ADCON1 009F  
     ___llmod@dividend 0024                 ?_scale 003C                 _ADRESH 001E                 _ADRESL 009E  
               ?_pause 0070       ___awdiv@dividend 0078       __end_of___ftpack 068A                 _ANSELH 0189  
     __end_of___lltoft 0A52       __end_of___lwtoft 0A19       __end_of_lcd_init 0BAD       __end_of_lcd_goto 0B56  
               ___bmul 063E       __end_of_lcd_puts 0B73                 ___ftge 068A                 ___wmul 0A19  
            ??___awdiv 007A              ??___lbdiv 0076              ??___ftadd 0042              ??___awmod 0074  
            ??___lbmod 0071              ??___ftneg 0073              ??___lldiv 0078              ??___ftmul 0033  
            ??___llmod 007D              ??___ftsub 007E              ??___fttol 0024                 _fround 0EAE  
     ___awdiv@quotient 007C        ___awmod@divisor 0070        ___awmod@counter 0074       __end_of_msecbase 0BDB  
___ftmul@f3_as_product 0037              ??_isdigit 0070                 pause@x 0072              ??_sprintf 0056  
     ___lbdiv@dividend 0076        ___lbmod@divisor 0070        ___lbmod@counter 0073             ___ftadd@f1 003C  
           ___ftadd@f2 003F             ___ftge@ff1 0070             ___ftge@ff2 0073             ___ftneg@f1 0070  
  ___bmul@multiplicand 0079             ___ftmul@f1 002D             ___ftmul@f2 0030             ___ftsub@f1 004B  
           ___ftsub@f2 0048             ___fttol@f1 0020         __pcstackCOMMON 0070             ___lltoft@c 0078  
        __end_of_scale 054D          __end_of_pause 0BBE       ___lbdiv@quotient 0078             ___lwtoft@c 0078  
           __div_to_l_ 0BEC     __size_of_lcd_clear 0009        __div_to_l_@exp1 0025     __size_of_lcd_write 0012  
      __div_to_l_@cntr 0024           sprintf@integ 00A7                ??_scale 003F                ??_pause 0072  
      __div_to_l_@quot 0020             __pbssBANK0 005B          __div_to_l_@f1 0070          __div_to_l_@f2 0073  
           __pmaintext 0D86                ?___bmul 0079                ?___ftge 0070                ?___wmul 0070  
              ?_fround 0048              ?___ftpack 0070              ?___lltoft 0078              ?___lwtoft 0078  
              _GO_DONE 00F9              ?_lcd_init 0070              ?_lcd_goto 0070              ?_lcd_puts 0075  
            ?_msecbase 0070             _scale$3246 0043      __end_of_lcd_clear 0BE4        __size_of___bmul 000E  
      __size_of___ftge 002C                ___awdiv 054D                ___lbdiv 0FB3                ___ftadd 0CC4  
              ___awmod 0592                ___lbmod 0FCE      __end_of_lcd_write 0BD0                ___ftneg 06C4  
              ___lldiv 0A90        __size_of___wmul 0019                ___ftmul 05CF                ___llmod 0A52  
              ___ftsub 0CAE                ___fttol 079E             ??___ftpack 0075        __size_of_fround 0105  
           ??___lltoft 007C             ??___lwtoft 007B            ?__div_to_l_ 0070                _dpowers 085E  
              _isdigit 06B6       ___awmod@dividend 0072                _sprintf 0007             ??_lcd_init 0075  
           ??_lcd_goto 0075             ??_lcd_puts 0077   end_of_initialization 0A03             ??_msecbase 0070  
      ___lldiv@divisor 0070        ___lldiv@counter 007C         __tdiv_to_l_@f1 0070         __tdiv_to_l_@f2 0073  
        ??__tdiv_to_l_ 0076       ___lbmod@dividend 0072            ___lbmod@rem 0074    __size_of__div_to_l_ 00B5  
           lcd_write@c 0074            ___ftmul@exp 0036         __end_of___bmul 064C         __end_of___ftge 06B6  
       __end_of___wmul 0A32         __end_of_fround 0FB3    start_initialization 09F9    __end_of__tdiv_to_l_ 0B50  
      ___llmod@divisor 0020        ___llmod@counter 007D               ??___bmul 007A               ??___ftge 0076  
             ??___wmul 0074               ??_fround 007E             fround@prec 0051      __size_of___ftpack 003E  
         pause@usvalue 0070      __size_of___lltoft 0020      __size_of___lwtoft 0012          __pcstackBANK0 0020  
        __pcstackBANK1 00A0           _isdigit$2814 0070      __size_of_lcd_init 003A      __size_of_lcd_goto 0006  
          sprintf@_val 00AA            sprintf@flag 00A5      __size_of_lcd_puts 001D            sprintf@fval 00B3  
          sprintf@prec 00B1      __size_of_msecbase 000B               ?___awdiv 0076               ?___lbdiv 0075  
             ?___ftadd 003C              __ptext500 0BDB              __ptext501 0007              __ptext510 05CF  
            __ptext502 0B56              __ptext511 0CC4              __ptext503 0B50              __ptext520 064C  
            __ptext512 0BAD              __ptext504 0CAE              __ptext521 0FCE              __ptext513 0592  
            __ptext505 03BB              __ptext522 0FB3              __ptext514 0A90              __ptext506 0EAE  
            __ptext523 0A19              __ptext515 068A              __ptext507 0BBE               ?___awmod 0070  
            __ptext524 063E              __ptext516 06C4              __ptext508 0A32              __ptext525 0BEC  
            __ptext517 0A52              __ptext509 0A07              __ptext526 0AD8              __ptext518 054D  
            __ptext527 06B6              __ptext519 079E              __ptext528 0BD0              __ptext529 0000  
             ?___lbmod 0070              __ptext499 0B73               ?___ftneg 0070               ?___lldiv 0070  
             ?___ftmul 002D               ?___llmod 0020               ?___ftsub 0048              __npowers_ 0810  
             ?___fttol 0020              _lcd_clear 0BDB              __pstrings 0800            __tdiv_to_l_ 0AD8  
            _lcd_write 0BBE           ??__div_to_l_ 0076               ?_isdigit 0070               ?_sprintf 0052  
       __size_of_scale 0192         __size_of_pause 0011         ___wmul@product 0074     __end_of__div_to_l_ 0CA1  
           ?_lcd_clear 0070            __stringbase 080F             ?_lcd_write 0070      ___wmul@multiplier 0070  
            lcd_puts@s 0075       __size_of___awdiv 0045       __size_of___lbdiv 001B       __size_of___ftadd 00C2  
     __size_of___awmod 003D       __size_of___lbmod 001C       __size_of___ftneg 0008       __size_of___lldiv 0048  
     __size_of___ftmul 006F       __size_of___llmod 003E       __size_of___ftsub 0016       __size_of___fttol 005B  
             ___ftpack 064C            _fround$3244 004E            _fround$3245 004B               ___lltoft 0A32  
             ___lwtoft 0A07             sprintf@exp 00AF       __size_of_isdigit 000E               __powers_ 0837  
             _lcd_init 0B73               _lcd_goto 0B50               _lcd_puts 0B56       __size_of_sprintf 03B4  
        __size_of_main 0128               _msecbase 0BD0            ??_lcd_clear 0075            ??_lcd_write 0074  
             isdigit@c 0071               scale@scl 0046              sprintf@ap 00A4       __tdiv_to_l_@exp1 0025  
     __tdiv_to_l_@cntr 0024              sprintf@sp 00AE       __tdiv_to_l_@quot 0020       ___lldiv@dividend 0074  
            stringcode 080A           ?__tdiv_to_l_ 0070             _OPTION_REG 0081               sprintf@c 00B6  
             sprintf@f 0052       ___lldiv@quotient 0078               stringdir 080A               stringtab 0800  
